{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":13,\"max\":13},\"skills\":{\"hacking\":8878,\"strength\":48,\"defense\":30,\"dexterity\":13,\"agility\":10,\"charisma\":920,\"intelligence\":0},\"exp\":{\"hacking\":506465501.89911216,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":4448.792648088119,\"intelligence\":0},\"mults\":{\"hacking_chance\":5.623391566677575,\"hacking_speed\":4.957959925043833,\"hacking_money\":29.798169058438667,\"hacking_grow\":6.459248060989,\"hacking\":20.114738580493835,\"strength\":47.70386421906839,\"defense\":30.41985544404363,\"dexterity\":13.652979277684608,\"agility\":10.782086907309774,\"charisma\":12.702450251933929,\"hacking_exp\":41.12464143338398,\"strength_exp\":7.144416157867397,\"defense_exp\":7.144416157867397,\"dexterity_exp\":7.144416157867397,\"agility_exp\":7.144416157867397,\"charisma_exp\":15.399074586667389,\"company_rep\":11.397865765493991,\"faction_rep\":6.038284469958667,\"crime_money\":3.500454765193435,\"crime_success\":3.9777895059016304,\"hacknet_node_money\":2.952799113594974,\"hacknet_node_purchase_cost\":0.33866171098328385,\"hacknet_node_ram_cost\":0.33866171098328385,\"hacknet_node_core_cost\":0.33866171098328385,\"hacknet_node_level_cost\":0.33866171098328385,\"work_money\":6.9262037128129155,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Neuregen Gene Modification\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Augmented Targeting II\"},{\"level\":84,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"SmartJaw\"},{\"level\":1,\"name\":\"Enhanced Social Interaction Implant\"},{\"level\":1,\"name\":\"FocusWire\"},{\"level\":1,\"name\":\"ADR-V2 Pheromone Gene\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"PCMatrix\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Synfibril Muscle\"},{\"level\":1,\"name\":\"Power Recirculation Core\"},{\"level\":1,\"name\":\"Neurotrainer III\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"DermaForce Particle Barrier\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V3 Upgrade\"},{\"level\":1,\"name\":\"Embedded Netburner Module Direct Memory Access Upgrade\"},{\"level\":1,\"name\":\"Embedded Netburner Module Analyze Engine\"},{\"level\":1,\"name\":\"NEMEAN Subdermal Weave\"},{\"level\":1,\"name\":\"Synthetic Heart\"},{\"level\":1,\"name\":\"NutriGen Implant\"},{\"level\":1,\"name\":\"The Red Pill\"},{\"level\":1,\"name\":\"Hydroflame Left Arm\"},{\"level\":1,\"name\":\"Xanipher\"},{\"level\":1,\"name\":\"PC Direct-Neural Interface\"},{\"level\":1,\"name\":\"Bionic Legs\"},{\"level\":1,\"name\":\"Bionic Spine\"},{\"level\":1,\"name\":\"Combat Rib III\"},{\"level\":1,\"name\":\"Augmented Targeting III\"},{\"level\":1,\"name\":\"INFRARET Enhancement\"},{\"level\":1,\"name\":\"OmniTek InfoLoad\"},{\"level\":1,\"name\":\"HyperSight Corneal Implant\"}],\"queuedAugmentations\":[],\"city\":\"Chongqing\",\"bitNodeN\":4,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"Daedalus\",\"Bachman & Associates\",\"Blade Industries\",\"NWO\",\"OmniTek Incorporated\",\"BitRunners\",\"The Black Hand\",\"NiteSec\",\"Sector-12\",\"Tian Di Hui\",\"CyberSec\"],\"factionInvitations\":[],\"hacknetNodes\":[],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0,\"Company Favor\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{\"Bachman & Associates\":\"Software Engineering Intern\",\"NWO\":\"Software Engineering Intern\",\"OmniTek Incorporated\":\"Software Engineering Intern\",\"Blade Industries\":\"Software Engineering Intern\",\"ECorp\":\"Lead Software Developer\"},\"karma\":0,\"numPeopleKilled\":0,\"location\":\"ECorp\",\"money\":70479604038.97406,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":1313031326341.857,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-1236600640797.4739,\"total\":70478604038.97406,\"work\":1000970.1122331517,\"servers\":-672682475.5199999,\"other\":-5280400000,\"augmentations\":0}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-46434719.99986809,\"codingcontract\":2175000000,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":688821214511517.8,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":64216292908869.44,\"total\":113616101604353.27,\"work\":23969457.02196745,\"servers\":-198150107467422.78,\"other\":-7117597200000,\"augmentations\":-434155853683324.3}},\"playtimeSinceLastAug\":564800,\"playtimeSinceLastBitnode\":305997200,\"lastAugReset\":1689109459388,\"lastNodeReset\":1688804025839,\"purchasedServers\":[\"CLOUD-000\"],\"scriptProdSinceLastAug\":1315194236974.7544,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":{\"ctor\":\"JSONMap\",\"data\":[[1,3],[4,2]]},\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1686525459069},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1686525759083},{\"ID\":\"WORKOUT\",\"unlockedOn\":1686528279088},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1686532892094},{\"ID\":\"TRAVEL\",\"unlockedOn\":1686563653859},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1686567073861},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1686654552271},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1686667992269},{\"ID\":\"NITESEC\",\"unlockedOn\":1686679931301},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1686687177835},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1686697617844},{\"ID\":\"FROZE\",\"unlockedOn\":1686704316676},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1686746667786},{\"ID\":\"TOR\",\"unlockedOn\":1686746787787},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1686746893212},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1686762613218},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1686764833216},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1686767653216},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1686860173219},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1686862933218},{\"ID\":\"4S\",\"unlockedOn\":1686863833212},{\"ID\":\"DONATION\",\"unlockedOn\":1687005871880},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1687008391895},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1687017151898},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1687131964898},{\"ID\":\"SF1.1\",\"unlockedOn\":1687262446639},{\"ID\":\"MAX_CORES\",\"unlockedOn\":1688063566853},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1688088406853},{\"ID\":\"THE_COVENANT\",\"unlockedOn\":1688429201871},{\"ID\":\"ILLUMINATI\",\"unlockedOn\":1688468232306},{\"ID\":\"SF4.1\",\"unlockedOn\":1688489952298},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1688562948355},{\"ID\":\"DISCOUNT\",\"unlockedOn\":1688694948374},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1688720088407}],\"terminalCommandHistory\":[\"home\",\"rm data/stockHistory.txt \",\"nano data/stockMarketReserveMoney.txt \",\"home\",\"nano data/stockHistory.txt \",\"nano data/stockMarketReserveMoney.txt \",\"rm data/stockMarketReserveMoney.txt \",\"nano data/stockMarketReserveMoney.txt \",\"rm data/stockMarketReserveMoney.txt \",\"nano data/stockMarketReserveMoney.txt \",\"rm data/stockMarketReserveMoney.txt \",\"nano data/stockMarketReserveMoney.txt \",\"home\",\"nano data/stockMarketReserveMoney.txt \",\"nano data/stockm\",\"nano data/stockMarketReserveMoney.txt \",\"free\",\"nano scripts/test.js \",\"run scripts/precalculate-important-data.js \",\"nano data/ramToReserveOnHome.txt \",\"run scripts/precalculate-important-data.js \",\"nano data/ramToReserveOnHome.txt \",\"nano data/stockMarketReserveMoney.txt \",\"free\",\"nano data/batchQueue.txt \",\"free\",\"home\",\"nano scripts/test.js \",\"home\",\"run scripts/test.js\",\"home\",\"run scripts/test.js \",\"home\",\"run scripts/test.js \",\"home\",\"run scripts/test.js \",\"home\",\"run scripts/test.js \",\"home\",\"run scripts/test.js \",\"home\",\"nano data/ramObservations.txt \",\"home\",\"nano analytics/2023-07-11-07-24-BitRunners-end-round.txt \",\"nano scripts/test.js \",\"run scripts/test.js \",\"run scripts/coordinator.js \",\"nano data/enviroment.txt \",\"free\",\"nano data/enviroment.txt \"],\"lastUpdate\":1689110023135,\"lastSave\":1689109983946,\"totalPlaytime\":2588847800,\"currentWork\":{\"ctor\":\"CompanyWork\",\"data\":{\"type\":\"COMPANY\",\"singularity\":true,\"cyclesWorked\":2680,\"companyName\":\"ECorp\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"40a77882039c0\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"43.3.1.6\",\"isConnectedTo\":true,\"maxRam\":1048576,\"messages\":[\"hackers-starting-handbook.lit\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"DeepscanV1.exe\",\"AutoLink.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\",\"Formulas.exe\"],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/contracts/coding-contracts.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let savedContractsFileNameForHuman;\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const solverRegistry = [\\r\\n        new LzDecompression2Handler(),\\r\\n        new AlgorithmicStockTrading4Handler(),\\r\\n        new AlgorithmicStockTrading3Handler(),\\r\\n        new AlgorithmicStockTrading1Handler(),\\r\\n        new AlgorithmicStockTrading2Handler(),\\r\\n        new SpiralizeMatrixHandler(),\\r\\n        new Encryption1Handler(),\\r\\n    ]\\r\\n\\r\\n    const allContracts = [];\\r\\n\\r\\n    JSON\\r\\n        .parse(ns.read('../../data/enviroment.txt'))\\r\\n        .map(server => {\\r\\n            const hostName = server.name;\\r\\n            ns\\r\\n                .ls(hostName)\\r\\n                .filter(file => file.endsWith('.cct'))\\r\\n                .map(contract => {\\r\\n                    const cont = new Contract(\\r\\n                        hostName,\\r\\n                        contract,\\r\\n                        ns.codingcontract.getContractType(contract, hostName),\\r\\n                        ns.codingcontract.getNumTriesRemaining(contract, hostName),\\r\\n                        // ns.codingcontract.getData(contract, hostName),\\r\\n                        // ns.codingcontract.getDescription(contract, hostName),\\r\\n                    );\\r\\n\\r\\n                    allContracts.push(cont);\\r\\n                });\\r\\n        });\\r\\n    \\r\\n    const thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \\r\\n    ns.rm(thisRoundsContractsFileName);\\r\\n    ns.write(thisRoundsContractsFileName, JSON.stringify(allContracts), \\\"W\\\");\\r\\n\\r\\n    let savedContracts;\\r\\n\\r\\n    if(savedContractsFileNameForHuman){\\r\\n        savedContracts = JSON.parse(ns.read(savedContractsFileNameForHuman));\\r\\n    }\\r\\n\\r\\n    if (!savedContracts || allContracts.length === 0 && savedContracts.length > 0){\\r\\n        const now = new Date();\\r\\n        savedContractsFileNameForHuman = `contracts/${now.toISOString().split('T')[0]}-${String(now.getHours()).padStart(2, 0)}-${String(now.getMinutes()).padStart(2, 0)}.txt`\\r\\n    }\\r\\n\\r\\n    ns.rm(savedContractsFileNameForHuman);\\r\\n    ns.write(savedContractsFileNameForHuman, JSON.stringify(allContracts), \\\"W\\\");\\r\\n\\r\\n    // allContracts\\r\\n    //     .forEach(contract => {\\r\\n    //         if (contract.attemptsLeft === 10 || contract.attemptsLeft === 5) {\\r\\n    //             const solver = solverRegistry.find(x => x.type === contract.type);\\r\\n    //             if (solver) {\\r\\n    //                 const result = solver.solve(contract.input);\\r\\n    //                 const success = ns.codingcontract.attempt(result, contract.name, contract.server);\\r\\n    //                 if (success === \\\"\\\") {\\r\\n    //                     const failuresContractsFileName = `contracts/failure/${contract.server}-${contract.name}-${contract.type.replaceAll(\\\" \\\", \\\"\\\")}.txt`;\\r\\n\\r\\n    //                     const saveThis = {contract, wrongResult: result};\\r\\n                        \\r\\n    //                     ns.rm(failuresContractsFileName);\\r\\n    //                     ns.write(failuresContractsFileName, JSON.stringify(saveThis), \\\"W\\\");\\r\\n\\r\\n\\r\\n    //                     ns.alert(`${contract.name} on ${contract.server} had a problem solving. You need to figure this out. Type: ${contract.type}`);\\r\\n    //                 } else {\\r\\n    //                     ns.toast(`Contract completed: ${success} Type: ${contract.type}`, \\\"success\\\", null);\\r\\n    //                 }\\r\\n    //             }\\r\\n    //         }\\r\\n    //     });\\r\\n\\r\\n}\\r\\n\\r\\nclass Contract {\\r\\n    constructor(server, name, type, attemptsLeft, input, description) {\\r\\n        this.server = server;\\r\\n        this.name = name;\\r\\n        this.type = type;\\r\\n        this.attemptsLeft = attemptsLeft;\\r\\n        this.input = input;\\r\\n        this.description = description;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass LzDecompression2Handler {\\r\\n    type = 'Compression II: LZ Decompression';\\r\\n\\r\\n    solve(input) {\\r\\n        return this.lzDecompression(input);\\r\\n    }\\r\\n\\r\\n    /// all need to be worked on in tests. These are just copies.\\r\\n    lzDecompression(stringToDecode) {\\r\\n        let decompressedString = '';\\r\\n        let startOfNextChunk = 0\\r\\n        let nextSectionCompressed = false;\\r\\n\\r\\n\\r\\n        while (startOfNextChunk < stringToDecode.length) {\\r\\n            const chunkLength = Number(stringToDecode[startOfNextChunk]);\\r\\n\\r\\n\\r\\n            if (chunkLength === 0) {\\r\\n                startOfNextChunk++;\\r\\n                nextSectionCompressed = !nextSectionCompressed;\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            if (nextSectionCompressed) {\\r\\n                const nextCharacterInEncoded = parseInt(stringToDecode[startOfNextChunk + 1]);\\r\\n\\r\\n                const placesBack = nextCharacterInEncoded;\\r\\n                const startText = decompressedString.length - placesBack;\\r\\n                const endOfText = startText + chunkLength;\\r\\n\\r\\n                if (chunkLength <= nextCharacterInEncoded) {\\r\\n                    decompressedString += decompressedString.slice(startText, endOfText);\\r\\n                } else {\\r\\n                    let nextChunk = \\\"\\\";\\r\\n                    const partialChunk = decompressedString.slice(startText, endOfText);\\r\\n\\r\\n                    while (nextChunk.length < chunkLength) {\\r\\n                        if (nextChunk.length + partialChunk.length > chunkLength) {\\r\\n                            const howMuchLeftInChunk = chunkLength - nextChunk.length;\\r\\n                            nextChunk += partialChunk.slice(0, howMuchLeftInChunk)\\r\\n                        } else {\\r\\n                            nextChunk += partialChunk;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    decompressedString += nextChunk;\\r\\n                }\\r\\n\\r\\n                startOfNextChunk += 2;\\r\\n                nextSectionCompressed = false;\\r\\n            } else {\\r\\n                const startText = startOfNextChunk + 1;\\r\\n                const endOfText = startText + chunkLength;\\r\\n                decompressedString += stringToDecode.slice(startText, endOfText);\\r\\n                startOfNextChunk = endOfText;\\r\\n                nextSectionCompressed = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        return decompressedString;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading1Handler {\\r\\n    type = 'Algorithmic Stock Trader I';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 1;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading2Handler {\\r\\n    type = 'Algorithmic Stock Trader II';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input.length;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading3Handler {\\r\\n    type = 'Algorithmic Stock Trader III';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 2;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading4Handler {\\r\\n    type = 'Algorithmic Stock Trader IV';\\r\\n\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input[0];\\r\\n        const stockPricesByDay = input[1];\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return this.tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n\\r\\n    tradeStock(maxNumberOfTrades, stockPricesByDay) {\\r\\n        if (maxNumberOfTrades === 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        let profitsPerTransaction = []\\r\\n\\r\\n        for (let i = stockPricesByDay.length - 1; i >= 1; i--) {\\r\\n            const priceToSeeIfHasNoVolitility = stockPricesByDay[i];\\r\\n\\r\\n            const yesterdaysPrice = stockPricesByDay[i - 1]\\r\\n            const tomorrowsPrice = stockPricesByDay[i + 1]\\r\\n\\r\\n            if (\\r\\n                (yesterdaysPrice <= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility <= tomorrowsPrice) || // rising prices filter\\r\\n                (!tomorrowsPrice && yesterdaysPrice >= priceToSeeIfHasNoVolitility) || // end price\\r\\n                (yesterdaysPrice >= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility >= tomorrowsPrice)) { // falling price filter\\r\\n                stockPricesByDay.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < stockPricesByDay.length; i++) {\\r\\n            const price = stockPricesByDay[i];\\r\\n            const potentialBuyPrice = stockPricesByDay[i - 1];\\r\\n            let potentialProfit = 0;\\r\\n\\r\\n            if (potentialBuyPrice) {\\r\\n                potentialProfit = price - potentialBuyPrice;\\r\\n            }\\r\\n\\r\\n            if (potentialProfit < 0) {\\r\\n                potentialProfit = 0;\\r\\n            }\\r\\n\\r\\n\\r\\n            profitsPerTransaction.push({ price, potentialProfit });\\r\\n        }\\r\\n\\r\\n        if (maxNumberOfTrades >= profitsPerTransaction.filter(x => x.potentialProfit > 0).length) {\\r\\n            return profitsPerTransaction\\r\\n                .reduce((acc, x) => acc + x.potentialProfit, 0);\\r\\n        }\\r\\n\\r\\n        const minProfit = Math.min(...profitsPerTransaction.filter(x => x.potentialProfit !== 0).map(x => x.potentialProfit));\\r\\n        const countOfMinProfits = profitsPerTransaction.filter(x => x.potentialProfit === minProfit).length;\\r\\n        const maxPrice = Math.max(...stockPricesByDay);\\r\\n        const arraysToWorkWith = [];\\r\\n\\r\\n        for (let i = 0; i < profitsPerTransaction.length; i++) {\\r\\n            const profitPerTranaction = profitsPerTransaction[i];\\r\\n\\r\\n            if (profitPerTranaction.potentialProfit === minProfit) {\\r\\n\\r\\n                const copyOfProfitsPerTransaction = profitsPerTransaction.map(x => x)\\r\\n                if (profitPerTranaction.price === maxPrice) {\\r\\n                    copyOfProfitsPerTransaction.splice(i - 1, 1);\\r\\n                } else {\\r\\n                    copyOfProfitsPerTransaction.splice(i, 1); // if there is a bigger price in the future, splice sell price. \\r\\n                }\\r\\n\\r\\n                arraysToWorkWith.push(copyOfProfitsPerTransaction.map(x => x.price));\\r\\n            }\\r\\n\\r\\n            if (arraysToWorkWith.length === countOfMinProfits) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const potentialProfitsForAllTrades = []\\r\\n        for (const newArrayOfPrices of arraysToWorkWith) {\\r\\n            potentialProfitsForAllTrades.push(this.tradeStock(maxNumberOfTrades, newArrayOfPrices))\\r\\n        }\\r\\n\\r\\n        return Math.max(...potentialProfitsForAllTrades);\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass SpiralizeMatrixHandler {\\r\\n    type = \\\"Spiralize Matrix\\\";\\r\\n\\r\\n    solve(matrix) {\\r\\n        return this.solveRecursively(matrix);\\r\\n    }\\r\\n\\r\\n    solveRecursively(matrix, spiralOrderResult = []){\\r\\n\\r\\n        if(matrix.length === 0){\\r\\n            return spiralOrderResult;\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < matrix.length; i++) {\\r\\n            if (i === 0 || i === matrix.length - 1) {\\r\\n                let rowToEmpty = matrix[i];\\r\\n\\r\\n                if(i === matrix.length - 1 && i !== 0){\\r\\n                    rowToEmpty.reverse()\\r\\n                }\\r\\n\\r\\n                for (let x = 0; x < rowToEmpty.length; x++) {\\r\\n                    const number = rowToEmpty[x];\\r\\n                    spiralOrderResult.push(number);\\r\\n                }\\r\\n\\r\\n                rowToEmpty.length = 0\\r\\n            } else {\\r\\n                let rowBeingUsed = matrix[i];\\r\\n\\r\\n                spiralOrderResult.push(rowBeingUsed.pop());\\r\\n            }\\r\\n        }      \\r\\n\\r\\n        \\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            if(matrix[i].length === 0){\\r\\n                matrix.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            const row = matrix[i];\\r\\n            row.reverse();\\r\\n            spiralOrderResult.push(row.pop());\\r\\n            row.reverse();            \\r\\n        }\\r\\n\\r\\n        return this.solveRecursively(matrix, spiralOrderResult)\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Encryption1Handler {\\r\\n    type = 'Encryption I: Caesar Cipher';\\r\\n\\r\\n    solve([string, shift]) {\\r\\n\\r\\n        let returnString = \\\"\\\";\\r\\n\\r\\n        if (string) {\\r\\n            for (const character of string) {\\r\\n                if (character === \\\" \\\") {\\r\\n                    returnString += \\\" \\\";\\r\\n                }\\r\\n                else {\\r\\n                    const charCode = character.charCodeAt(0);\\r\\n\\r\\n                    if (charCode) {\\r\\n                        let newCharCode = charCode - shift;\\r\\n\\r\\n                        if (newCharCode < 65) {\\r\\n                            const amountLessThan65 = 65 - newCharCode;\\r\\n                            newCharCode = 91 - amountLessThan65;\\r\\n                        }\\r\\n\\r\\n                        returnString += String.fromCharCode(newCharCode);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return returnString;\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/contracts/coding-contracts.js\",\"server\":\"home\"}}],[\"scripts/hacking/advanced-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const nameOfrecordOfWhoIsBeingHacked = 'data/recordOfWhoIsBeingHacked.txt';\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\";\\r\\n\\r\\n    const hackScript = 'scripts/hacking/hack-until-worked.js';\\r\\n    const growScript = 'scripts/hacking/grow.js';\\r\\n    const weakenScript = 'scripts/hacking/weaken.js';\\r\\n\\r\\n    let memoryLimited = false;\\r\\n    if(ns.fileExists('data/ramObservations.txt') || ns.fileExists('buyOrUpgradeServerFlag.txt')){\\r\\n        memoryLimited = true;\\r\\n    }\\r\\n\\r\\n    const homeMemoryLimitations = JSON.parse(ns.read(\\\"data/ramToReserveOnHome.txt\\\"));\\r\\n\\r\\n    let batchTargets = [];\\r\\n\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        const batchQueue = JSON.parse(ns.read(batchQueuesFileName));\\r\\n        batchTargets = batchQueue.map(x => x[0]);\\r\\n    }\\r\\n\\r\\n    let recordOfWhoIsBeingHacked = new Map();\\r\\n\\r\\n    if (ns.fileExists(nameOfrecordOfWhoIsBeingHacked)) {\\r\\n        recordOfWhoIsBeingHacked = new Map(JSON.parse(ns.read(nameOfrecordOfWhoIsBeingHacked)));\\r\\n    }\\r\\n\\r\\n    for (const recordKey of recordOfWhoIsBeingHacked.keys()) {\\r\\n        const record = recordOfWhoIsBeingHacked.get(recordKey);\\r\\n        if (record.pid === 0) {\\r\\n            recordOfWhoIsBeingHacked.delete(recordKey);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n\\r\\n    const allHackedMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    let allMachinesByOrderOfValue = allHackedMachines\\r\\n        .filter(x => !x.server.purchasedByPlayer && !batchTargets.includes(x.name) && x.server.moneyMax > 0)\\r\\n        .sort((a, b) => b.server.moneyMax - a.server.moneyMax)\\r\\n        .map(x => new HackedRecord(\\r\\n            x.name,\\r\\n            x.server.moneyMax,\\r\\n            x.server.minDifficulty,\\r\\n            x.server.hackDifficulty,\\r\\n            x.server.moneyAvailable,\\r\\n        ))\\r\\n\\r\\n    if(memoryLimited){\\r\\n        allMachinesByOrderOfValue = allMachinesByOrderOfValue.slice(0, 15);\\r\\n    }\\r\\n\\r\\n    cleanProcessesAttackingBatchTarget(ns, recordOfWhoIsBeingHacked, batchTargets);\\r\\n    \\r\\n    cleanRecordOfWhoIsBeingHacked(ns, recordOfWhoIsBeingHacked);\\r\\n\\r\\n    const machinesNextInQueueToHack = getMachinesToHack(allMachinesByOrderOfValue, recordOfWhoIsBeingHacked, ns);\\r\\n\\r\\n    const hackQueue = [];\\r\\n    const growAndWeakenQueue = [];\\r\\n\\r\\n    machinesNextInQueueToHack.forEach(machineInQuestion => {\\r\\n        if (machineInQuestion.needsWeakening() || machineInQuestion.needsGrowing()) {\\r\\n            growAndWeakenQueue.push(machineInQuestion);\\r\\n        } else {\\r\\n            hackQueue.push(machineInQuestion);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    const ramNeededForOneHackThread = ns.getScriptRam(hackScript);\\r\\n\\r\\n    hackQueue.forEach(target => {\\r\\n\\r\\n        let numberOfThreads = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable));\\r\\n        const ramNeeded = ramNeededForOneHackThread * numberOfThreads;\\r\\n        let machineToRunOn = getMachineWithEnoughRam(ns, ramNeeded, enviroment, homeMemoryLimitations);\\r\\n\\r\\n        if (machineToRunOn && numberOfThreads > 0) {\\r\\n            ns.scp(hackScript, machineToRunOn.hostname);\\r\\n            const pid = ns.exec(hackScript, machineToRunOn.hostname, numberOfThreads, target.name);\\r\\n            if (pid !== 0) {\\r\\n                target.hacking();\\r\\n                target.machineRunningOn = machineToRunOn.hostname;\\r\\n                target.pid = pid;\\r\\n                recordOfWhoIsBeingHacked.set(target.name, target);\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n\\r\\n\\r\\n    const ramNeededForWeaken = ns.getScriptRam(weakenScript);\\r\\n    const ramNeededForGrow = ns.getScriptRam(growScript);\\r\\n    growAndWeakenQueue.map(target => {\\r\\n        let machineToRunOn;\\r\\n        let threadsNeeded;\\r\\n        let script;\\r\\n\\r\\n        if (target.needsGrowing()) {\\r\\n            target.growing();\\r\\n\\r\\n            script = growScript;\\r\\n            const serverToHack = getServer(ns, target.name, homeMemoryLimitations);\\r\\n            const player = ns.getPlayer();\\r\\n\\r\\n            if (ns.fileExists('Formulas.exe')) {\\r\\n                threadsNeeded = Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, 1));\\r\\n            } else {\\r\\n                threadsNeeded = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable)) * 5;\\r\\n\\r\\n                if (threadsNeeded === 0) {\\r\\n                    threadsNeeded = 5000;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            machineToRunOn = getMachineWithEnoughRam(ns, threadsNeeded * ramNeededForGrow, enviroment, homeMemoryLimitations);\\r\\n\\r\\n            if (!machineToRunOn) {\\r\\n                [threadsNeeded, machineToRunOn] = getMachineWithNumberOfThreads(ns, enviroment, threadsNeeded, ramNeededForGrow, homeMemoryLimitations);\\r\\n            }\\r\\n\\r\\n            if (machineToRunOn && machineToRunOn.cpuCores > 1 && ns.fileExists('Formulas.exe')) {\\r\\n                threadsNeeded = Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, machineToRunOn.cpuCores));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (target.needsWeakening()) {\\r\\n            target.weakening();\\r\\n\\r\\n            script = weakenScript;\\r\\n            const amountToWeaken = target.hackDifficulty - target.minDifficulty;\\r\\n\\r\\n            threadsNeeded = getNumberOfThreadsToWeaken(ns, 1, amountToWeaken);\\r\\n\\r\\n            machineToRunOn = getMachineWithEnoughRam(ns, threadsNeeded * ramNeededForWeaken, enviroment, homeMemoryLimitations);\\r\\n\\r\\n            if (!machineToRunOn) {\\r\\n                [threadsNeeded, machineToRunOn] = getMachineWithNumberOfThreads(ns, enviroment, threadsNeeded, ramNeededForWeaken, homeMemoryLimitations);\\r\\n            }\\r\\n\\r\\n            if (machineToRunOn && machineToRunOn.cpuCores > 1) {\\r\\n                threadsNeeded = getNumberOfThreadsToWeaken(ns, machineToRunOn.cpuCores, amountToWeaken);\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n\\r\\n        if (machineToRunOn && threadsNeeded > 0) {\\r\\n            ns.scp(script, machineToRunOn.hostname);\\r\\n            const pid = ns.exec(script, machineToRunOn.hostname, threadsNeeded, target.name);\\r\\n\\r\\n            if (pid !== 0) {\\r\\n                target.machineRunningOn = machineToRunOn.hostname;\\r\\n                target.pid = pid;\\r\\n\\r\\n                recordOfWhoIsBeingHacked.set(target.name, target);\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfrecordOfWhoIsBeingHacked);\\r\\n    ns.write(nameOfrecordOfWhoIsBeingHacked, JSON.stringify(Array.from(recordOfWhoIsBeingHacked.entries()), \\\"W\\\"));\\r\\n\\r\\n    function cleanProcessesAttackingBatchTarget(ns, recordOfWhoIsBeingHacked, batchTargets) {\\r\\n        for (const machineHackin of recordOfWhoIsBeingHacked) {\\r\\n            const whoTheyHackin = machineHackin[0];\\r\\n\\r\\n            if (batchTargets.includes(whoTheyHackin)) {\\r\\n                ns.kill(recordOfWhoIsBeingHacked.get(whoTheyHackin).pid);\\r\\n                recordOfWhoIsBeingHacked.delete(whoTheyHackin);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getMachineWithNumberOfThreads(ns, enviroment, threads, ramCostPerThread, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n    const buyOrUpgradeServerFlag = 'buyOrUpgradeServerFlag.txt';\\r\\n    let originalAmountNeeded = ramCostPerThread * threads;\\r\\n\\r\\n    let globalMaxAmountNeeded = 0;\\r\\n\\r\\n    if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n        globalMaxAmountNeeded = JSON.parse(ns.read(buyOrUpgradeServerFlag));\\r\\n    }\\r\\n\\r\\n    if (originalAmountNeeded > globalMaxAmountNeeded) {\\r\\n        globalMaxAmountNeeded = originalAmountNeeded;\\r\\n        ns.rm(buyOrUpgradeServerFlag);\\r\\n        ns.write(buyOrUpgradeServerFlag, globalMaxAmountNeeded, \\\"W\\\");\\r\\n    }\\r\\n\\r\\n    while (threads > 0 && !machineToRunOn) {\\r\\n        threads--;\\r\\n\\r\\n        machineToRunOn = getMachineWithEnoughRam(ns, threads * ramCostPerThread, enviroment, homeMemoryLimitations)\\r\\n    }\\r\\n\\r\\n    return [threads, machineToRunOn];\\r\\n}\\r\\n\\r\\nfunction getMachineWithEnoughRam(ns, ramNeeded, enviroment, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\", homeMemoryLimitations);\\r\\n\\r\\n    allHackableMachines.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const machinesWithRamAvailable = allHackableMachines\\r\\n        .filter(x => x.server.ramUsed < x.server.maxRam && x.server.maxRam !== 0);\\r\\n\\r\\n    const serversWithEnoughRam = machinesWithRamAvailable\\r\\n        .filter(x => (x.server.maxRam - x.server.ramUsed) > ramNeeded)\\r\\n        .sort((b, a) => b.server.maxRam - a.server.maxRam);\\r\\n\\r\\n    for (const potentialServerToRun of serversWithEnoughRam) {\\r\\n        const server = getServer(ns, potentialServerToRun.name, homeMemoryLimitations);\\r\\n        const freeRam = server.maxRam - server.ramUsed;\\r\\n        if (freeRam > ramNeeded) {\\r\\n            machineToRunOn = server;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machineToRunOn;\\r\\n}\\r\\n\\r\\n\\r\\nfunction getServer(ns, serverName, homeMemoryLimitations) {\\r\\n    const server = ns.getServer(serverName);\\r\\n\\r\\n    if (serverName === \\\"home\\\") {\\r\\n\\r\\n        let ramToReserve = homeMemoryLimitations.ramToReserve;\\r\\n\\r\\n        if(server.maxRam < ramToReserve){\\r\\n            ramToReserve = homeMemoryLimitations.ramToReserveInLimitedEnvironment;\\r\\n        }\\r\\n\\r\\n        server.maxRam -= ramToReserve;\\r\\n        server.ramUsed -= ramToReserve;\\r\\n\\r\\n        if (server.ramUsed < 0) {\\r\\n            server.ramUsed = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction getMachinesToHack(hackableMachinesInTheEnvironment, recordOfWhoIsBeingHacked, ns) {\\r\\n    const machinesNextInQueueToHack = [];\\r\\n    const namesOfMachinesBeingHacked = Array.from(recordOfWhoIsBeingHacked.keys());\\r\\n\\r\\n    for (const hackableMachine of hackableMachinesInTheEnvironment) {\\r\\n        if (!namesOfMachinesBeingHacked.includes(hackableMachine.name)) {\\r\\n            machinesNextInQueueToHack.push(hackableMachine);\\r\\n        } else {\\r\\n            const recordOfHackin = recordOfWhoIsBeingHacked.get(hackableMachine.name);\\r\\n            const moneyChange = recordOfHackin.moneyAvailable - hackableMachine.moneyAvailable;\\r\\n            const difficultyChange = recordOfHackin.hackDifficulty - hackableMachine.hackDifficulty;\\r\\n\\r\\n            if (moneyChange !== 0 || difficultyChange !== 0) {\\r\\n                machinesNextInQueueToHack.push(hackableMachine);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machinesNextInQueueToHack;\\r\\n}\\r\\n\\r\\nexport class HackedRecord {\\r\\n    constructor(name, maxMoney, minDifficulty, hackDifficulty, moneyAvailable) {\\r\\n        this.name = name;\\r\\n        this.moneyThreshhold = maxMoney * 0.75;\\r\\n        this.securityThreshholdTarget = minDifficulty + 5;\\r\\n        this.hackDifficulty = hackDifficulty;\\r\\n        this.moneyAvailable = moneyAvailable;\\r\\n        this.minDifficulty = minDifficulty;\\r\\n        this.machineRunningOn;\\r\\n        this.pid;\\r\\n\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    needsWeakening() {\\r\\n        return this.hackDifficulty > this.securityThreshholdTarget;\\r\\n    }\\r\\n\\r\\n    needsGrowing() {\\r\\n        return this.moneyAvailable < this.moneyThreshhold;\\r\\n    }\\r\\n\\r\\n    weakening() {\\r\\n        this.isWeakening = true;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    growing() {\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = true;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    hacking() {\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = true;\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getNumberOfThreadsToWeaken(ns, cpuCores, amountToWeaken) {\\r\\n    let numberOfThreadsToWeaken = 0;\\r\\n    let foundNumberOfThreads = false;\\r\\n    while (!foundNumberOfThreads) {\\r\\n        numberOfThreadsToWeaken++;\\r\\n\\r\\n        const amountNumberOfThreadsWillWeaken = Math.ceil(ns.weakenAnalyze(numberOfThreadsToWeaken, cpuCores));\\r\\n        if (amountNumberOfThreadsWillWeaken > amountToWeaken) {\\r\\n            foundNumberOfThreads = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //add a small margin\\r\\n    numberOfThreadsToWeaken += 20;\\r\\n    return numberOfThreadsToWeaken;\\r\\n}\\r\\n\\r\\nfunction cleanRecordOfWhoIsBeingHacked(ns, recordOfWhoIsBeingHacked) {\\r\\n    for (const key of recordOfWhoIsBeingHacked.keys()) {\\r\\n        const record = recordOfWhoIsBeingHacked.get(key);\\r\\n        \\r\\n        if(!ns.isRunning(record.pid)){\\r\\n            recordOfWhoIsBeingHacked.delete(key);\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/advanced-dispatch.js\",\"server\":\"home\"}}],[\"scripts/hacking/batch-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let failuresThisRun = 0;\\r\\nlet successesThisRun = 0;\\r\\n\\r\\nlet lastTimeVisited = new Date();\\r\\nlet secondsBetweenVisits = [];\\r\\nlet lastRecordedToConsole = new Date();\\r\\n\\r\\nlet visitsToFunction = 0;\\r\\n\\r\\nlet countOfSuccesses = [];\\r\\nlet countOfFailures = [];\\r\\nlet averageErrorRateOver10Minutes = 1;\\r\\nlet errorRateAtWhichWeAllowNewThings = 0.1;\\r\\n\\r\\nexport async function main(ns) {\\r\\n    visitsToFunction++;\\r\\n\\r\\n    const buyOrUpgradeServerFlagFile = 'buyOrUpgradeServerFlag.txt';\\r\\n    const memoryConstrained = ns.fileExists('data/ramObservations.txt') || ns.fileExists(buyOrUpgradeServerFlagFile);\\r\\n\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\"\\r\\n\\r\\n    let batchQueueForDifferentTargets = new Map();\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        batchQueueForDifferentTargets = new Map(JSON.parse(ns.read(batchQueuesFileName)));\\r\\n    }\\r\\n\\r\\n    const homeMemoryLimitations = JSON.parse(ns.read(\\\"data/ramToReserveOnHome.txt\\\"));\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n\\r\\n    const playerServers = enviroment\\r\\n        .filter(x => x.server.purchasedByPlayer);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\", homeMemoryLimitations);\\r\\n\\r\\n    playerServers.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const totalBoughtMemory = playerServers.reduce((acc, x) => acc + x.server.maxRam, 0);\\r\\n\\r\\n    const ramNeededForBatchesFile = \\\"data/ramNeededToStartBatches.txt\\\";\\r\\n    const memoryNeededForBatches = 105_000;\\r\\n\\r\\n    if (totalBoughtMemory < memoryNeededForBatches) {\\r\\n        const ramNeededToStartBatches = Math.round(memoryNeededForBatches - totalBoughtMemory);\\r\\n        ns.rm(ramNeededForBatchesFile);\\r\\n        ns.write(ramNeededForBatchesFile, ramNeededToStartBatches, \\\"W\\\");\\r\\n\\r\\n        if (visitsToFunction > 100) {\\r\\n            visitsToFunction = 0;\\r\\n            ns.toast(`Ram Needed to Start Batches: ${ramNeededToStartBatches}`, \\\"warning\\\", 180000)\\r\\n        }\\r\\n\\r\\n        ns.run('scripts/hacking/memory-starved-dispatch.js');\\r\\n        return;\\r\\n    } else {\\r\\n        ns.rm(ramNeededForBatchesFile);\\r\\n    }\\r\\n\\r\\n    const targetNames = Array.from(batchQueueForDifferentTargets.keys());\\r\\n    const player = ns.getPlayer();\\r\\n\\r\\n    giveBatchQueueStructure(targetNames, batchQueueForDifferentTargets);\\r\\n    cleanFinishedAndPoisonedJobsFromQueue(targetNames, batchQueueForDifferentTargets, ns);\\r\\n\\r\\n    const noMoreInvestingForEndGame = ns.fileExists(\\\"stopInvesting.txt\\\");\\r\\n\\r\\n    const anyBatchNotPrepping = targetNames\\r\\n        .map(x => batchQueueForDifferentTargets.get(x))\\r\\n        .filter(x => !x.prepStage)\\r\\n        .length > 0;\\r\\n\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const targetServer = ns.getServer(nameOfTarget);\\r\\n        const batchForTarget = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n\\r\\n        if (!noMoreInvestingForEndGame) {\\r\\n            prepServerForBatching(targetServer, batchForTarget, ns, player, nameOfTarget, anyBatchNotPrepping);\\r\\n        }\\r\\n\\r\\n        createBatchesOfJobs(batchForTarget, ns, targetServer, player);\\r\\n    }\\r\\n\\r\\n    await executeJobs(ns, targetNames, batchQueueForDifferentTargets, player, enviroment, homeMemoryLimitations);\\r\\n    addNewTargetsToQueueIfNeeded(batchQueueForDifferentTargets, targetNames, ns, enviroment, player, noMoreInvestingForEndGame, homeMemoryLimitations);\\r\\n    adjustTimingsOrOutrightDeleteDependingOnReliability(ns, batchQueueForDifferentTargets, targetNames);\\r\\n\\r\\n    ns.rm(batchQueuesFileName);\\r\\n    ns.write(batchQueuesFileName, JSON.stringify(Array.from(batchQueueForDifferentTargets.entries()), \\\"W\\\"));\\r\\n\\r\\n    const total = failuresThisRun + successesThisRun;\\r\\n    const now = new Date();\\r\\n    const secondsSinceLastVisit = Math.abs(now.getTime() - lastTimeVisited.getTime()) / 1000;\\r\\n    lastTimeVisited = now;\\r\\n    if (secondsSinceLastVisit !== 0) {\\r\\n        secondsBetweenVisits.push(secondsSinceLastVisit);\\r\\n    }\\r\\n\\r\\n\\r\\n    const moneyWeHaveNow = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (now.getMinutes() !== lastRecordedToConsole.getMinutes() && total > 0) {\\r\\n        const timeStamp = `[${String(now.getHours()).padStart(2, 0)}:${String(now.getMinutes()).padStart(2, 0)}]`\\r\\n\\r\\n        const errorRate = 1 - (successesThisRun / total);\\r\\n\\r\\n        if (errorRate > 0.03) {\\r\\n            ns.toast(`${timeStamp} Error Rate in batches ${errorRate.toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 })}`, \\\"error\\\", 60000);\\r\\n        }\\r\\n\\r\\n        const averageTimeBetweenVisits = secondsBetweenVisits.reduce((acc, b) => acc + b, 0) / secondsBetweenVisits.length;\\r\\n\\r\\n        if (averageTimeBetweenVisits > 2.1) {\\r\\n            ns.toast(`${timeStamp} Average of ${averageTimeBetweenVisits.toFixed(2)} seconds between visits`, \\\"warning\\\", null)\\r\\n        }\\r\\n\\r\\n        const formatter = new Intl.NumberFormat('en-US', {\\r\\n            style: 'currency',\\r\\n            currency: 'USD',\\r\\n        });\\r\\n\\r\\n        const moneyFormatted = formatter.format(moneyWeHaveNow);\\r\\n\\r\\n        let consoleUpdate = `${timeStamp} Money we have now: ${moneyFormatted} | Number of targeted server: ${String(targetNames.length).padStart(2, 0)}`;\\r\\n\\r\\n        if (memoryConstrained) {\\r\\n            consoleUpdate += \\\" | Memory Constrained\\\";\\r\\n        }\\r\\n\\r\\n        ns.tprint(consoleUpdate);\\r\\n\\r\\n        const reliabilityForBatchFile = 'data/reliabilityForEvery100Batches.txt';\\r\\n        let batchReliability = [];\\r\\n\\r\\n        if (ns.fileExists(reliabilityForBatchFile)) {\\r\\n            batchReliability = JSON.parse(ns.read(reliabilityForBatchFile));\\r\\n        }\\r\\n\\r\\n        batchReliability.push({ errorRate, averageTimeBetweenVisits, now, moneyWeHaveNow, numberOfTargetedServers: targetNames.length });\\r\\n\\r\\n\\r\\n        ns.rm(reliabilityForBatchFile);\\r\\n        ns.write(reliabilityForBatchFile, JSON.stringify(batchReliability), \\\"W\\\");\\r\\n\\r\\n\\r\\n        countOfFailures.push(failuresThisRun);\\r\\n        countOfSuccesses.push(successesThisRun);\\r\\n\\r\\n        if (countOfFailures.length > 10) {\\r\\n            countOfFailures.shift();\\r\\n        }\\r\\n\\r\\n        if (countOfSuccesses.length > 10) {\\r\\n            countOfSuccesses.shift();\\r\\n        }\\r\\n\\r\\n        const successesIn10Minutes = countOfSuccesses.reduce((acc, b) => acc + b, 0);\\r\\n        const failuresIn10Minutes = countOfFailures.reduce((acc, b) => acc + b, 0);\\r\\n        const totalIn10Minutes = successesIn10Minutes + failuresIn10Minutes;\\r\\n\\r\\n        averageErrorRateOver10Minutes = 1 - (successesIn10Minutes / totalIn10Minutes);\\r\\n\\r\\n        if (averageErrorRateOver10Minutes > errorRateAtWhichWeAllowNewThings) {\\r\\n            ns.toast(`${timeStamp} Error Rate over 10 minutes is: ${averageErrorRateOver10Minutes.toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 })}`, \\\"error\\\", 15000);\\r\\n        }\\r\\n\\r\\n\\r\\n        failuresThisRun = 0;\\r\\n        successesThisRun = 0;\\r\\n        secondsBetweenVisits.length = 0;\\r\\n        lastRecordedToConsole = now;\\r\\n    }\\r\\n\\r\\n    if (moneyWeHaveNow > 1_000_000_000_000 ||\\r\\n        homeServer.maxRam - homeServer.ramUsed > 300000 ||\\r\\n        targetNames\\r\\n            .map(x => batchQueueForDifferentTargets.get(x))\\r\\n            .every(x => !x.targetMachineSaturatedWithAttacks)) {\\r\\n        if (!memoryConstrained) {\\r\\n            ns.run('scripts/hacking/advanced-dispatch.js');\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nclass BatchQueueForTarget {\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    targetMachineSaturatedWithAttacks = false;\\r\\n\\r\\n    prepStage = true;\\r\\n    weakeningDoneAfter;\\r\\n    successfulWeakening = false;\\r\\n    growDoneAfter;\\r\\n    successfulGrowing = false;\\r\\n    hackDoneAfter;\\r\\n    successfulHacking = false;\\r\\n\\r\\n    securityWeNeedToReduceAfterFullHack;\\r\\n    securityWeNeedToReduceAfterFullGrowth;\\r\\n    originalNumberOfThreadsForFullMoney;\\r\\n\\r\\n    successes = 0;\\r\\n    failures = 0;\\r\\n    successesInTheLastHour = 0;\\r\\n    failuresInTheLastHour = 0;\\r\\n    lastResetHour = 0\\r\\n\\r\\n    executionWindowSizeInSeconds = 4;\\r\\n\\r\\n    batchesQueue = [];\\r\\n\\r\\n    lastFailure;\\r\\n\\r\\n    getAllocatedMemory(machineRunningOn) {\\r\\n        return this.batchesQueue\\r\\n            .reduce((acc, x) => acc.concat(x.jobs), [])\\r\\n            .filter(x => x.machineRunningOn === machineRunningOn)\\r\\n            .reduce((acc, x) => acc + x, 0);\\r\\n    }\\r\\n\\r\\n    thereAreNoJobsRunningAfter() {\\r\\n        return Math.max(...this.batchesQueue.map(x => x.wholeBatchFinishsBefore()));\\r\\n    }\\r\\n}\\r\\n\\r\\nclass BatchOfJobs {\\r\\n    jobs = [];\\r\\n    //6 second window? 2 cycles seems like enough for each step.\\r\\n\\r\\n    startTime;\\r\\n    poisonedBatch = false;\\r\\n\\r\\n    wholeBatchFinishsBefore() {\\r\\n        return Math.max(...this.jobs.map(x => new Date(x.endBefore)))\\r\\n    }\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass JobHasTo {\\r\\n    executing = false;\\r\\n    ramCost = 0;\\r\\n    machineRunningOn;\\r\\n    pid;\\r\\n    executedAt;\\r\\n    expectedEndTime;\\r\\n\\r\\n    firstLookStartedNowEndAt;\\r\\n\\r\\n    lastMissForDoneBeforeWindow;\\r\\n    firstMissForAfterWindow;\\r\\n\\r\\n    constructor(endAfter, endBefore, type) {\\r\\n        this.endAfter = endAfter;\\r\\n        this.endBefore = endBefore;\\r\\n        this.type = type;\\r\\n        // this.types = [\\\"grow\\\", \\\"hack\\\", \\\"weaken-after-hack\\\", \\\"weaken-after-grow\\\",\\r\\n        //     \\\"weaken-dynamic\\\", \\\"grow-dynamic\\\", \\\"hack-dynamic\\\"]\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction adjustTimingsOrOutrightDeleteDependingOnReliability(ns, batchQueueForDifferentTargets, targetNames) {\\r\\n    const currentTime = new Date();\\r\\n    let countOfDeleted = 0;\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const queueOfBatches = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n        const currentHour = currentTime.getHours()\\r\\n\\r\\n        if (currentHour !== queueOfBatches.lastResetHour) {\\r\\n            if (queueOfBatches.failuresInTheLastHour === 0 && queueOfBatches.successesInTheLastHour > 0 && queueOfBatches.executionWindowSizeInSeconds > 2) {\\r\\n                queueOfBatches.executionWindowSizeInSeconds--;\\r\\n            }\\r\\n\\r\\n            const totalRunsThisHour = queueOfBatches.successesInTheLastHour + queueOfBatches.failuresInTheLastHour;\\r\\n            const ratioOfFailuresThisHour = 1 - (queueOfBatches.successesInTheLastHour / totalRunsThisHour);\\r\\n\\r\\n            if (ratioOfFailuresThisHour > 0.1) {\\r\\n                queueOfBatches.executionWindowSizeInSeconds++;\\r\\n            }\\r\\n\\r\\n\\r\\n            queueOfBatches.lastResetHour = currentHour;\\r\\n            queueOfBatches.successesInTheLastHour = 0;\\r\\n            queueOfBatches.failuresInTheLastHour = 0;\\r\\n\\r\\n            if (ratioOfFailuresThisHour > 0.9 && totalRunsThisHour > 10 && countOfDeleted < 2 && targetNames.length > 2) {\\r\\n                for (const batch of queueOfBatches.batchesQueue) {\\r\\n                    batch.jobs.map(x => {\\r\\n                        if (x.pid) {\\r\\n                            ns.kill(x.pid);\\r\\n                        }\\r\\n                    });\\r\\n\\r\\n                }\\r\\n\\r\\n                batchQueueForDifferentTargets.delete(nameOfTarget);\\r\\n                ns.tprint(`Deleted ${nameOfTarget} from batchQueue for failing too often. Ratio of Failure: ${ratioOfFailuresThisHour}. Total Runs: ${totalRunsThisHour}`);\\r\\n                countOfDeleted++;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction createBatchesOfJobs(batchForTarget, ns, targetServer, player) {\\r\\n    if (batchForTarget.prepStage === false) {\\r\\n\\r\\n        if (batchForTarget.batchesQueue.length === 0 || batchForTarget.batchesQueue.every(x => new Date() > new Date(x.startTime))) {\\r\\n            const batch = new BatchOfJobs();\\r\\n\\r\\n            const secondsToPadEndTime = batchForTarget.executionWindowSizeInSeconds;\\r\\n            const msToPadStartTime = 1;\\r\\n\\r\\n            const noJobsRunningAfter = batchForTarget.thereAreNoJobsRunningAfter();\\r\\n\\r\\n            let noMoreJobsAfter = new Date(noJobsRunningAfter);\\r\\n\\r\\n            const defaultStartTime = getWeakenEndDate(ns, targetServer, player, batchForTarget.securityWeNeedToReduceAfterFullGrowth);\\r\\n\\r\\n            if (noJobsRunningAfter < 0 || defaultStartTime > noMoreJobsAfter) {\\r\\n\\r\\n                addSecondsToDate(defaultStartTime, secondsToPadEndTime);\\r\\n                const defaultEndTime = new Date(defaultStartTime);\\r\\n\\r\\n                noMoreJobsAfter = defaultEndTime;\\r\\n            }\\r\\n\\r\\n            const hackStart = createNewDataFromOldDateAndAddMilliseconds(noMoreJobsAfter, msToPadStartTime);\\r\\n            const hackEnd = createNewDataFromOldDateAndAddSeconds(hackStart, secondsToPadEndTime);\\r\\n\\r\\n            const weakenAfterhackStart = createNewDataFromOldDateAndAddMilliseconds(hackEnd, msToPadStartTime);\\r\\n            const weakenAfterHackEnd = createNewDataFromOldDateAndAddSeconds(weakenAfterhackStart, secondsToPadEndTime);\\r\\n\\r\\n            const growStart = createNewDataFromOldDateAndAddMilliseconds(weakenAfterHackEnd, msToPadStartTime);\\r\\n            const growEnd = createNewDataFromOldDateAndAddSeconds(growStart, secondsToPadEndTime);\\r\\n\\r\\n            const weakenAfterGrowStart = createNewDataFromOldDateAndAddMilliseconds(growEnd, msToPadStartTime);\\r\\n            const weakenAfterGrowEnd = createNewDataFromOldDateAndAddSeconds(weakenAfterGrowStart, secondsToPadEndTime);\\r\\n\\r\\n            // get them in the order they are executed. \\r\\n            batch.jobs.push(new JobHasTo(weakenAfterGrowStart, weakenAfterGrowEnd, \\\"weaken-after-grow\\\"));\\r\\n            batch.jobs.push(new JobHasTo(weakenAfterhackStart, weakenAfterHackEnd, \\\"weaken-after-hack\\\"));\\r\\n            batch.jobs.push(new JobHasTo(growStart, growEnd, \\\"grow\\\"));\\r\\n            batch.jobs.push(new JobHasTo(hackStart, hackEnd, \\\"hack\\\"));\\r\\n\\r\\n            batchForTarget.batchesQueue.push(batch);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nasync function executeJobs(ns, targetNames, batchQueueForDifferentTargets, player, environment, homeMemoryLimitations) {\\r\\n    const hackScript = 'scripts/hacking/hack.js';\\r\\n    const growScript = 'scripts/hacking/grow.js';\\r\\n    const weakenScript = 'scripts/hacking/weaken.js';\\r\\n\\r\\n    const ramNeededForWeaken = ns.getScriptRam(weakenScript);\\r\\n    const ramNeededForGrow = ns.getScriptRam(growScript);\\r\\n    const ramNeededForHack = ns.getScriptRam(hackScript);\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const batchForTarget = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n\\r\\n        for (let i = 0; i < batchForTarget.batchesQueue.length; i++) {\\r\\n            const batchOfJobs = batchForTarget.batchesQueue[i];\\r\\n\\r\\n            for (let y = 0; y < batchOfJobs.jobs.length; y++) {\\r\\n                const job = batchOfJobs.jobs[y];\\r\\n\\r\\n                if (job.executing === false) {\\r\\n\\r\\n                    const targetServer = ns.getServer(nameOfTarget);\\r\\n\\r\\n                    let machineToRunOn;\\r\\n                    let script;\\r\\n                    let numberOfThreads;\\r\\n                    let ramCost;\\r\\n                    let shouldExecute = false;\\r\\n\\r\\n                    if (job.type.startsWith(\\\"weaken\\\")) {\\r\\n                        let amountToWeaken = targetServer.hackDifficulty - targetServer.minDifficulty;\\r\\n\\r\\n                        if (job.type === \\\"weaken-after-hack\\\") {\\r\\n                            amountToWeaken = batchForTarget.securityWeNeedToReduceAfterFullHack;\\r\\n                        }\\r\\n\\r\\n                        if (job.type === \\\"weaken-after-grow\\\") {\\r\\n                            amountToWeaken = batchForTarget.securityWeNeedToReduceAfterFullGrowth;\\r\\n                        }\\r\\n\\r\\n                        const ifStartedNowWeakenDoneAt = getWeakenEndDate(ns, targetServer, player, amountToWeaken);\\r\\n                        shouldExecute = shouldWeExecute(job, ifStartedNowWeakenDoneAt, batchOfJobs, ns);\\r\\n\\r\\n                        if (shouldExecute === false) {\\r\\n                            continue;\\r\\n                        }\\r\\n\\r\\n                        script = weakenScript;\\r\\n\\r\\n\\r\\n                        numberOfThreads = getNumberOfThreadsToWeaken(ns, 1, amountToWeaken);\\r\\n                        ramCost = ramNeededForWeaken * numberOfThreads;\\r\\n\\r\\n                        machineToRunOn = getMachineWithEnoughRam(ns, ramCost, environment, homeMemoryLimitations);\\r\\n\\r\\n                        if (machineToRunOn && machineToRunOn.cpuCores > 1) {\\r\\n                            numberOfThreads = getNumberOfThreadsToWeaken(ns, machineToRunOn.cpuCores, amountToWeaken);\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (job.type.startsWith(\\\"grow\\\")) {\\r\\n                        const ifStartedNowGrowDoneAt = getGrowEndDate(ns, targetServer, player);\\r\\n                        shouldExecute = shouldWeExecute(job, ifStartedNowGrowDoneAt, batchOfJobs, ns);\\r\\n\\r\\n                        if (shouldExecute === false) {\\r\\n                            continue;\\r\\n                        }\\r\\n\\r\\n                        script = growScript;\\r\\n\\r\\n                        if (job.type !== \\\"grow-dynamic\\\") {\\r\\n                            targetServer.moneyAvailable = 0;\\r\\n                        }\\r\\n\\r\\n                        numberOfThreads = getGrowThreads(ns, targetServer, player, 1);\\r\\n                        ramCost = ramNeededForGrow * numberOfThreads;\\r\\n\\r\\n                        machineToRunOn = getMachineWithEnoughRam(ns, ramCost, environment, homeMemoryLimitations);\\r\\n\\r\\n                        if (machineToRunOn && machineToRunOn.cpuCores > 1) {\\r\\n                            numberOfThreads = getGrowThreads(ns, targetServer, player, machineToRunOn.cpuCores);\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (job.type.startsWith(\\\"hack\\\")) {\\r\\n                        const ifStartedNowHackDoneAt = getHackEndDate(ns, targetServer, player);\\r\\n                        shouldExecute = shouldWeExecute(job, ifStartedNowHackDoneAt, batchOfJobs, ns);\\r\\n\\r\\n                        if (shouldExecute === false) {\\r\\n                            continue;\\r\\n                        }\\r\\n\\r\\n                        script = hackScript;\\r\\n\\r\\n                        if (job.type === \\\"hack\\\") {\\r\\n                            targetServer.moneyAvailable = targetServer.moneyMax;\\r\\n                        }\\r\\n\\r\\n\\r\\n                        numberOfThreads = getHackThreadsForTotalStealing(ns, nameOfTarget, targetServer);\\r\\n\\r\\n                        if (numberOfThreads === -1) {\\r\\n                            numberOfThreads = batchForTarget.originalNumberOfThreadsForFullMoney;\\r\\n                        }\\r\\n\\r\\n                        ramCost = ramNeededForHack * numberOfThreads;\\r\\n\\r\\n                        machineToRunOn = getMachineWithEnoughRam(ns, ramCost, environment, homeMemoryLimitations);\\r\\n                    }\\r\\n\\r\\n                    if (shouldExecute && machineToRunOn) {\\r\\n                        ns.scp(script, machineToRunOn.hostname);\\r\\n                        const pid = ns.exec(script, machineToRunOn.hostname, numberOfThreads, nameOfTarget);\\r\\n\\r\\n                        if (pid === 0) {\\r\\n                            ns.tprint(\\\"failed exec\\\")\\r\\n                        }\\r\\n\\r\\n                        job.ramCost = ramCost;\\r\\n                        job.executing = true;\\r\\n                        job.machineRunningOn = machineToRunOn.hostname;\\r\\n                        job.pid = pid;\\r\\n                        job.executedAt = new Date();\\r\\n\\r\\n                        if (!batchOfJobs.startTime) {\\r\\n                            batchOfJobs.startTime = new Date();\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction shouldWeExecute(job, ifStartedNowWeWouldBeDoneAtString, batchOfJobs, ns) {\\r\\n\\r\\n    const endBeforeDate = new Date(job.endBefore);\\r\\n    const endAfterDate = new Date(job.endAfter);\\r\\n    const ifStartedNowWeWouldBeDoneAt = new Date(ifStartedNowWeWouldBeDoneAtString)\\r\\n\\r\\n    if (!job.firstLookStartedNowEndAt) {\\r\\n        job.firstLookStartedNowEndAt = ifStartedNowWeWouldBeDoneAt;\\r\\n    }\\r\\n\\r\\n    if (endAfterDate > ifStartedNowWeWouldBeDoneAt) {\\r\\n        job.lastMissForDoneBeforeWindow = ifStartedNowWeWouldBeDoneAt;\\r\\n    }\\r\\n\\r\\n    if (ifStartedNowWeWouldBeDoneAt > endBeforeDate) {\\r\\n        if (!job.firstMissForAfterWindow) {\\r\\n            job.firstMissForAfterWindow = ifStartedNowWeWouldBeDoneAt;\\r\\n            batchOfJobs.poisonedBatch = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (endAfterDate < ifStartedNowWeWouldBeDoneAt && ifStartedNowWeWouldBeDoneAt < endBeforeDate) {\\r\\n        job.expectedEndTime = ifStartedNowWeWouldBeDoneAt;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n}\\r\\n\\r\\nfunction getMachineWithEnoughRam(ns, ramNeeded, enviroment, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n\\r\\n    const allHackedMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\", homeMemoryLimitations);\\r\\n\\r\\n    allHackedMachines.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const machinesWithRamAvailable = allHackedMachines\\r\\n        .filter(x => x.server.ramUsed < x.server.maxRam && x.server.maxRam !== 0);\\r\\n\\r\\n    const serversWithEnoughRam = machinesWithRamAvailable\\r\\n        .filter(x => (x.server.maxRam - x.server.ramUsed) > ramNeeded)\\r\\n        .sort((b, a) => b.server.maxRam - a.server.maxRam);\\r\\n\\r\\n    for (const potentialServerToRun of serversWithEnoughRam) {\\r\\n        const server = getServer(ns, potentialServerToRun.name, homeMemoryLimitations);\\r\\n        const freeRam = server.maxRam - server.ramUsed;\\r\\n        if (freeRam > ramNeeded) {\\r\\n            machineToRunOn = server;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (machineToRunOn === undefined) {\\r\\n        const buyOrUpgradeServerFlag = 'buyOrUpgradeServerFlag.txt';\\r\\n\\r\\n        let maxAmountNeeded = 0;\\r\\n        if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n            maxAmountNeeded = ns.read(buyOrUpgradeServerFlag);\\r\\n        }\\r\\n\\r\\n        if (maxAmountNeeded < ramNeeded) {\\r\\n            maxAmountNeeded = ramNeeded;\\r\\n            ns.rm(buyOrUpgradeServerFlag);\\r\\n            ns.write(buyOrUpgradeServerFlag, maxAmountNeeded, \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machineToRunOn;\\r\\n}\\r\\n\\r\\nfunction getServer(ns, serverName, homeMemoryLimitations) {\\r\\n    const server = ns.getServer(serverName);\\r\\n\\r\\n    if (serverName === \\\"home\\\") {\\r\\n\\r\\n        let ramToReserve = homeMemoryLimitations.ramToReserve;\\r\\n\\r\\n        if (server.maxRam < ramToReserve) {\\r\\n            ramToReserve = homeMemoryLimitations.ramToReserveInLimitedEnvironment;\\r\\n        }\\r\\n\\r\\n        server.maxRam -= ramToReserve;\\r\\n\\r\\n        const freeRam = server.maxRam - server.ramUsed\\r\\n\\r\\n        if (freeRam < 0) {\\r\\n            server.ramUsed = server.maxRam;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction prepServerForBatching(targetServer, batchForTarget, ns, player, nameOfTarget, anyBatchNotPrepping) {\\r\\n    const amountToWeaken = targetServer.hackDifficulty - targetServer.minDifficulty;\\r\\n    const serverHasMaxMoney = targetServer.moneyMax === targetServer.moneyAvailable;\\r\\n    const currentTime = new Date();\\r\\n\\r\\n    if (amountToWeaken === 0 && serverHasMaxMoney && batchForTarget.securityWeNeedToReduceAfterFullHack && batchForTarget.securityWeNeedToReduceAfterFullGrowth && batchForTarget.prepStage && batchForTarget.originalNumberOfThreadsForFullMoney) {\\r\\n\\r\\n        if (averageErrorRateOver10Minutes < errorRateAtWhichWeAllowNewThings || !anyBatchNotPrepping) {\\r\\n            batchForTarget.prepStage = false;\\r\\n            batchForTarget.targetMachineSaturatedWithAttacks = false;\\r\\n            ns.toast(`Added ${nameOfTarget} to in process batch attack.`, 'success')\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (batchForTarget.prepStage) {\\r\\n        batchForTarget.targetMachineSaturatedWithAttacks = false;\\r\\n\\r\\n        if (batchForTarget.successfulWeakening === false) {\\r\\n            if (currentTime > new Date(batchForTarget.weakeningDoneAfter) || !batchForTarget.weakeningDoneAfter) {\\r\\n                if (amountToWeaken !== 0) {\\r\\n                    let endDate = new Date();\\r\\n                    endDate = getWeakenEndDate(ns, targetServer, player, targetServer.hackDifficulty - targetServer.minDifficulty);\\r\\n                    addSecondsToDate(endDate, 10);\\r\\n\\r\\n                    const job = new JobHasTo(new Date(), endDate, \\\"weaken-dynamic\\\");\\r\\n                    const batchOfJobs = new BatchOfJobs();\\r\\n                    batchOfJobs.jobs.push(job);\\r\\n\\r\\n                    batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                    batchForTarget.weakeningDoneAfter = endDate;\\r\\n                } else if (amountToWeaken === 0) {\\r\\n                    batchForTarget.successfulWeakening = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (batchForTarget.successfulWeakening && batchForTarget.successfulGrowing === false) {\\r\\n            if (currentTime > new Date(batchForTarget.growDoneAfter) || !batchForTarget.growDoneAfter) {\\r\\n\\r\\n                if (serverHasMaxMoney === false) {\\r\\n\\r\\n                    if (targetServer.moneyAvailable === 0) {\\r\\n                        const growThreads = getGrowThreads(ns, targetServer, player, 1);\\r\\n                        batchForTarget.securityWeNeedToReduceAfterFullGrowth = ns.growthAnalyzeSecurity(growThreads, nameOfTarget, 1);\\r\\n                    }\\r\\n\\r\\n                    let endDate = getGrowEndDate(ns, targetServer, player);\\r\\n                    addSecondsToDate(endDate, 10);\\r\\n\\r\\n                    const job = new JobHasTo(new Date(), endDate, \\\"grow-dynamic\\\");\\r\\n                    const batchOfJobs = new BatchOfJobs();\\r\\n                    batchOfJobs.jobs.push(job);\\r\\n\\r\\n                    batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                    batchForTarget.growDoneAfter = endDate;\\r\\n                }\\r\\n\\r\\n\\r\\n                if (serverHasMaxMoney) {\\r\\n                    batchForTarget.successfulGrowing = true;\\r\\n                    batchForTarget.successfulWeakening = false;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (batchForTarget.successfulGrowing && batchForTarget.successfulHacking === false && batchForTarget.successfulWeakening) {\\r\\n\\r\\n            if (currentTime > new Date(batchForTarget.hackDoneAfter) || !batchForTarget.hackDoneAfter) {\\r\\n                if (serverHasMaxMoney) {\\r\\n                    if (currentTime > new Date(batchForTarget.hackDoneAfter)) {\\r\\n\\r\\n                        batchForTarget.successfulWeakening = false;\\r\\n                        batchForTarget.successfulGrowing = false;\\r\\n                        batchForTarget.successfulHacking = false;\\r\\n                        batchForTarget.hackDoneAfter = undefined;\\r\\n\\r\\n                    } else {\\r\\n                        const hackThreads = getHackThreadsForTotalStealing(ns, nameOfTarget, targetServer);\\r\\n                        batchForTarget.securityWeNeedToReduceAfterFullHack = ns.hackAnalyzeSecurity(hackThreads, nameOfTarget);\\r\\n                        batchForTarget.originalNumberOfThreadsForFullMoney = hackThreads;\\r\\n\\r\\n                        let endDate = getHackEndDate(ns, targetServer, player);\\r\\n                        addSecondsToDate(endDate, 100);\\r\\n\\r\\n                        const job = new JobHasTo(new Date(), endDate, \\\"hack-dynamic\\\");\\r\\n                        const batchOfJobs = new BatchOfJobs();\\r\\n                        batchOfJobs.jobs.push(job);\\r\\n\\r\\n                        batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                        batchForTarget.hackDoneAfter = endDate;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (targetServer.moneyAvailable === 0) {\\r\\n                    batchForTarget.successfulGrowing = false;\\r\\n                    batchForTarget.successfulWeakening = false;\\r\\n                    batchForTarget.successfulHacking = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nfunction giveBatchQueueStructure(targetNames, batchQueue) {\\r\\n    for (const target of targetNames) {\\r\\n        let targetObject = batchQueue.get(target);\\r\\n        targetObject = new BatchQueueForTarget(targetObject);\\r\\n\\r\\n        for (let i = 0; i < targetObject.batchesQueue.length; i++) {\\r\\n            targetObject.batchesQueue[i] = new BatchOfJobs(targetObject.batchesQueue[i]);\\r\\n        }\\r\\n\\r\\n        batchQueue.set(target, targetObject);\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction cleanFinishedAndPoisonedJobsFromQueue(targetNames, batchQueue, ns) {\\r\\n\\r\\n    for (const target of targetNames) {\\r\\n        const batches = batchQueue.get(target);\\r\\n        const currentTime = new Date();\\r\\n\\r\\n        for (let i = batches.batchesQueue.length - 1; i > -1; i--) {\\r\\n            const batch = batches.batchesQueue[i];\\r\\n            let remove = false;\\r\\n\\r\\n            if (batch.wholeBatchFinishsBefore() < currentTime) {\\r\\n\\r\\n                if (batch.jobs.every(x => x.executing) === false) {\\r\\n                    batches.failures++;\\r\\n                    batches.failuresInTheLastHour++;\\r\\n                    batches.lastFailure = batch;\\r\\n                    failuresThisRun++;\\r\\n                } else {\\r\\n                    batches.successes++;\\r\\n                    batches.successesInTheLastHour++;\\r\\n                    successesThisRun++;\\r\\n                }\\r\\n\\r\\n                remove = true;\\r\\n                batches.targetMachineSaturatedWithAttacks = true;\\r\\n            }\\r\\n\\r\\n            if (batch.poisonedBatch) {\\r\\n                batches.failures++;\\r\\n                batches.failuresInTheLastHour++;\\r\\n                batches.lastFailure = batch;\\r\\n                failuresThisRun++;\\r\\n\\r\\n                remove = true;\\r\\n\\r\\n                batch.jobs.map(x => {\\r\\n                    if (x.pid) {\\r\\n                        ns.kill(x.pid);\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n\\r\\n            if (remove) {\\r\\n                batches.batchesQueue.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction addNewTargetsToQueueIfNeeded(batchQueue, targetNames, ns, enviroment, player, noMoreInvestingForEndGame, homeMemoryLimitations) {\\r\\n    const batchesAreSaturated = targetNames.map(x => batchQueue.get(x)).every(x => x.targetMachineSaturatedWithAttacks);\\r\\n    const over2andAHalfTrillionDollars = ns.getServerMoneyAvailable(\\\"home\\\") > 2_500_000_000_000;\\r\\n    const massiveRamOnHome = getServer(ns, \\\"home\\\", homeMemoryLimitations).maxRam > 400_000;\\r\\n\\r\\n    let addNewServerToAttack = false;\\r\\n\\r\\n    if (batchQueue.size < 15 && batchesAreSaturated && averageErrorRateOver10Minutes < errorRateAtWhichWeAllowNewThings && !noMoreInvestingForEndGame) {\\r\\n        addNewServerToAttack = true;\\r\\n    }\\r\\n\\r\\n    if (over2andAHalfTrillionDollars && batchQueue.size < 20) {\\r\\n        addNewServerToAttack = true;\\r\\n    }\\r\\n\\r\\n    if (over2andAHalfTrillionDollars && batchesAreSaturated && batchQueue.size < 50) {\\r\\n        addNewServerToAttack = true;\\r\\n    }\\r\\n\\r\\n    if(massiveRamOnHome && batchQueue.size < 50){\\r\\n        addNewServerToAttack = true;\\r\\n    }\\r\\n\\r\\n    if (batchQueue.size < 2 || addNewServerToAttack) {\\r\\n\\r\\n        const allHackedMachines = enviroment\\r\\n            .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n        const allMachinesByOrderOfValue = allHackedMachines\\r\\n            .filter(x => !x.server.purchasedByPlayer && x.server.moneyMax !== 0 && !targetNames.includes(x.name))\\r\\n            .sort((a, b) => b.server.moneyMax - a.server.moneyMax);\\r\\n\\r\\n        // only add machine if 90%+ chances of successfully hacking at minDifficulty. \\r\\n        let mostValuableMachine;\\r\\n        for (const hackPossibility of allMachinesByOrderOfValue) {\\r\\n            const server = ns.getServer(hackPossibility.name);\\r\\n            server.hackDifficulty = server.minDifficulty;\\r\\n            const chanceOfHackingAtMinDif = ns.formulas.hacking.hackChance(server, player);\\r\\n\\r\\n            if (chanceOfHackingAtMinDif > 0.8) {\\r\\n                mostValuableMachine = hackPossibility;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (mostValuableMachine) {\\r\\n            batchQueue.set(mostValuableMachine.name, new BatchQueueForTarget());\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getHackThreadsForTotalStealing(ns, theTarget, targetServer) {\\r\\n    return Math.ceil(ns.hackAnalyzeThreads(theTarget, targetServer.moneyAvailable));\\r\\n}\\r\\n\\r\\nfunction getGrowThreads(ns, serverToHack, player, cpuCores) {\\r\\n    return Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, cpuCores));\\r\\n}\\r\\n\\r\\nfunction createNewDataFromOldDateAndAddSeconds(date, secondsToAdd) {\\r\\n    const newDate = new Date(date);\\r\\n    addSecondsToDate(newDate, secondsToAdd);\\r\\n    return newDate;\\r\\n}\\r\\n\\r\\nfunction createNewDataFromOldDateAndAddMilliseconds(date, secondsToAdd) {\\r\\n    const newDate = new Date(date);\\r\\n    addMillisecondsToDate(newDate, secondsToAdd);\\r\\n    return newDate;\\r\\n}\\r\\n\\r\\n\\r\\nfunction addSecondsToDate(date, secondsToAdd) {\\r\\n    date.setSeconds(date.getSeconds() + secondsToAdd);\\r\\n}\\r\\n\\r\\nfunction addMillisecondsToDate(date, msToAdd) {\\r\\n    date.setMilliseconds(date.getMilliseconds() + msToAdd);\\r\\n}\\r\\n\\r\\nfunction getWeakenEndDate(ns, targetServer, player, difficultyToWeaken) {\\r\\n    let endDate = new Date();\\r\\n    targetServer.hackDifficulty = targetServer.minDifficulty + difficultyToWeaken;\\r\\n\\r\\n    const howLongToWeaken = ns.formulas.hacking.weakenTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToWeaken);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getGrowEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    targetServer.moneyAvailable = 0;\\r\\n    targetServer.hackDifficulty = targetServer.minDifficulty;\\r\\n\\r\\n    const howLongToGrow = ns.formulas.hacking.growTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToGrow);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getHackEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    targetServer.moneyAvailable = targetServer.moneyMax;\\r\\n    targetServer.hackDifficulty = targetServer.minDifficulty;\\r\\n\\r\\n    const howLongToHack = ns.formulas.hacking.hackTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToHack);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getNumberOfThreadsToWeaken(ns, cpuCores, amountToWeaken) {\\r\\n    let numberOfThreadsToWeaken = 0;\\r\\n    let foundNumberOfThreads = false;\\r\\n    while (!foundNumberOfThreads) {\\r\\n        numberOfThreadsToWeaken++;\\r\\n\\r\\n        const amountNumberOfThreadsWillWeaken = Math.ceil(ns.weakenAnalyze(numberOfThreadsToWeaken, cpuCores));\\r\\n        if (amountNumberOfThreadsWillWeaken > amountToWeaken) {\\r\\n            foundNumberOfThreads = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //add a small margin\\r\\n    numberOfThreadsToWeaken += 20;\\r\\n    return numberOfThreadsToWeaken;\\r\\n}\\r\\n\",\"filename\":\"scripts/hacking/batch-dispatch.js\",\"server\":\"home\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"home\"}}],[\"scripts/hacking/hack-all-machines.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const helpers = new Helpers(ns);\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n\\r\\n    const portsWeCanPop = helpers.numberOfPortsWeCanPop();\\r\\n    const currentHackingLevel = ns.getHackingLevel();\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.requiredHackingSkill < currentHackingLevel)\\r\\n        .filter(x => x.server.numOpenPortsRequired <= portsWeCanPop || x.server.purchasedByPlayer);\\r\\n\\r\\n    allHackableMachines\\r\\n        .filter(x => !x.server.hasAdminRights)\\r\\n        .map(x => helpers.hackMachine(x.name));\\r\\n}\\r\\n\\r\\nexport class Helpers {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    hackMachine(hostname) {\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            this.ns.brutessh(hostname);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            this.ns.ftpcrack(hostname);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            this.ns.relaysmtp(hostname)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            this.ns.httpworm(hostname)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            this.ns.sqlinject(hostname)\\r\\n        }\\r\\n\\r\\n        this.ns.nuke(hostname);\\r\\n        this.ns.killall(hostname);\\r\\n    }\\r\\n\\r\\n    numberOfPortsWeCanPop() {\\r\\n        let portsWeCanPop = 0;\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        return portsWeCanPop;\\r\\n    }\\r\\n\\r\\n    fileExists(fileName) {\\r\\n        return this.ns.fileExists(fileName, \\\"home\\\");\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-all-machines.js\",\"server\":\"home\"}}],[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"home\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"home\"}}],[\"scripts/hacking/memory-starved-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"const hackScript = 'scripts/hacking/hack.js';\\r\\nconst growScript = 'scripts/hacking/grow.js';\\r\\nconst weakenScript = 'scripts/hacking/weaken.js';\\r\\n\\r\\nlet ranOnHomeThisTime = false;\\r\\n\\r\\nexport async function main(ns) {\\r\\n\\r\\n    const memoryStarvedQueueFileName = 'data/memoryStarvedQueue.txt';\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\";\\r\\n    ranOnHomeThisTime = false;\\r\\n\\r\\n\\r\\n    const homeMemoryLimitations = JSON.parse(ns.read(\\\"data/ramToReserveOnHome.txt\\\"));\\r\\n\\r\\n\\r\\n    let batchTargets = [];\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        const batchQueue = JSON.parse(ns.read(batchQueuesFileName));\\r\\n        batchTargets = batchQueue.map(x => x[0]);\\r\\n    }\\r\\n\\r\\n\\r\\n    let memoryStarvedQueue = new Map();\\r\\n    if (ns.fileExists(memoryStarvedQueueFileName)) {\\r\\n        memoryStarvedQueue = new Map(JSON.parse(ns.read(memoryStarvedQueueFileName)));\\r\\n    }\\r\\n\\r\\n    cleanProcessesAttackingBatchTarget(ns, memoryStarvedQueue, batchTargets);\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n    const allHackedMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    let allMachinesByOrderOfValue = allHackedMachines\\r\\n        .filter(x => !x.server.purchasedByPlayer && !batchTargets.includes(x.name) && x.server.moneyMax > 0)\\r\\n        .sort((a, b) => b.server.moneyMax - a.server.moneyMax)\\r\\n        .map(x => new HackedRecord(\\r\\n            x.name,\\r\\n            x.server.moneyMax,\\r\\n            x.server.minDifficulty,\\r\\n            x.server.hackDifficulty,\\r\\n            x.server.moneyAvailable,\\r\\n        ))\\r\\n\\r\\n    seeIfWeNeedToDoNextStep(ns, memoryStarvedQueue);\\r\\n\\r\\n    const machinesNextInQueueToHack = getMachinesToHack(allMachinesByOrderOfValue, memoryStarvedQueue, ns);\\r\\n\\r\\n    const hackQueue = [];\\r\\n    const growAndWeakenQueue = [];\\r\\n\\r\\n    machinesNextInQueueToHack.forEach(machineInQuestion => {\\r\\n        if (machineInQuestion.needsWeakening() || machineInQuestion.needsGrowing()) {\\r\\n            growAndWeakenQueue.push(machineInQuestion);\\r\\n        } else {\\r\\n            hackQueue.push(machineInQuestion);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    for (const target of hackQueue) {\\r\\n        let numberOfThreads = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable));\\r\\n\\r\\n        await executeScriptAcrossFleet(ns, hackScript, enviroment, homeMemoryLimitations, numberOfThreads, target, memoryStarvedQueue);\\r\\n    }\\r\\n\\r\\n    for (const target of growAndWeakenQueue) {\\r\\n        let threadsNeeded;\\r\\n        let script;\\r\\n\\r\\n        if (target.needsGrowing()) {\\r\\n            script = growScript;\\r\\n            const serverToHack = getServer(ns, target.name, homeMemoryLimitations);\\r\\n            const player = ns.getPlayer();\\r\\n\\r\\n            if (ns.fileExists('Formulas.exe')) {\\r\\n                threadsNeeded = Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, 1));\\r\\n            } else {\\r\\n                threadsNeeded = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable)) * 5;\\r\\n            }\\r\\n\\r\\n            // if (machineToRunOn && machineToRunOn.cpuCores > 1 && ns.fileExists('Formulas.exe')) {\\r\\n            //     threadsNeeded = Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, machineToRunOn.cpuCores));\\r\\n            // }\\r\\n        }\\r\\n\\r\\n        if (target.needsWeakening()) {\\r\\n            script = weakenScript;\\r\\n            const amountToWeaken = target.hackDifficulty - target.minDifficulty;\\r\\n\\r\\n            threadsNeeded = getNumberOfThreadsToWeaken(ns, 1, amountToWeaken);\\r\\n\\r\\n\\r\\n\\r\\n            // if (machineToRunOn && machineToRunOn.cpuCores > 1) {\\r\\n            //     threadsNeeded = getNumberOfThreadsToWeaken(ns, machineToRunOn.cpuCores, amountToWeaken);\\r\\n            // }\\r\\n        }\\r\\n\\r\\n        await executeScriptAcrossFleet(ns, script, enviroment, homeMemoryLimitations, threadsNeeded, target, memoryStarvedQueue);\\r\\n    }\\r\\n\\r\\n    ns.rm(memoryStarvedQueueFileName);\\r\\n    ns.write(memoryStarvedQueueFileName, JSON.stringify(Array.from(memoryStarvedQueue.entries()), \\\"W\\\"));\\r\\n}\\r\\n\\r\\nasync function executeScriptAcrossFleet(ns, script, enviroment, homeMemoryLimitations, numberOfThreadsWanted, target, memoryStarvedQueue) {\\r\\n    const ramNeededForOneThread = ns.getScriptRam(script);\\r\\n\\r\\n    let numberOfThreadsLeft = numberOfThreadsWanted;\\r\\n    let serversExausted = false;\\r\\n\\r\\n    while (numberOfThreadsLeft > 0 && serversExausted === false) {\\r\\n        const result = getMachineWithNumberOfThreads(ns, enviroment, numberOfThreadsLeft, ramNeededForOneThread, homeMemoryLimitations);\\r\\n\\r\\n        if (!result.machineToRunOn || result.threads <= 0) {\\r\\n            serversExausted = true;\\r\\n        } else {\\r\\n            const machineToRunOn = result.machineToRunOn.hostname;\\r\\n            const threads = result.threads\\r\\n\\r\\n            ns.scp(script, machineToRunOn);\\r\\n            const pid = ns.exec(script, machineToRunOn, threads, target.name);\\r\\n\\r\\n            if (pid !== 0) {\\r\\n                if (machineToRunOn === \\\"home\\\") {\\r\\n                    ranOnHomeThisTime = true;\\r\\n                }\\r\\n                target.pids.push(pid);\\r\\n                target.runningOn.push({ machineToRunOn, threads })\\r\\n            }\\r\\n\\r\\n            numberOfThreadsLeft -= threads;\\r\\n\\r\\n            memoryStarvedQueue.set(target.name, target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getMachineWithNumberOfThreads(ns, enviroment, threads, ramCostPerThread, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n    const buyOrUpgradeServerFlag = 'buyOrUpgradeServerFlag.txt';\\r\\n    let originalAmountNeeded = ramCostPerThread * threads;\\r\\n\\r\\n    let globalMaxAmountNeeded = 0;\\r\\n\\r\\n    if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n        globalMaxAmountNeeded = JSON.parse(ns.read(buyOrUpgradeServerFlag));\\r\\n    }\\r\\n\\r\\n    if (originalAmountNeeded > globalMaxAmountNeeded) {\\r\\n        globalMaxAmountNeeded = originalAmountNeeded;\\r\\n        ns.rm(buyOrUpgradeServerFlag);\\r\\n        ns.write(buyOrUpgradeServerFlag, globalMaxAmountNeeded, \\\"W\\\");\\r\\n    }\\r\\n\\r\\n    machineToRunOn = getMachineWithEnoughRam(ns, threads * ramCostPerThread, enviroment, homeMemoryLimitations);\\r\\n\\r\\n    while (threads > 0 && !machineToRunOn) {\\r\\n        threads--;\\r\\n\\r\\n        machineToRunOn = getMachineWithEnoughRam(ns, threads * ramCostPerThread, enviroment, homeMemoryLimitations);\\r\\n    }\\r\\n\\r\\n    return { threads, machineToRunOn };\\r\\n}\\r\\n\\r\\nfunction getMachineWithEnoughRam(ns, ramNeeded, enviroment, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\", homeMemoryLimitations);\\r\\n\\r\\n    allHackableMachines.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const machinesWithRamAvailable = allHackableMachines\\r\\n        .filter(x => x.server.ramUsed < x.server.maxRam && x.server.maxRam !== 0);\\r\\n\\r\\n    const serversWithEnoughRam = machinesWithRamAvailable\\r\\n        .filter(x => (x.server.maxRam - x.server.ramUsed) > ramNeeded)\\r\\n        .sort((b, a) => b.server.maxRam - a.server.maxRam);\\r\\n\\r\\n    for (const potentialServerToRun of serversWithEnoughRam) {\\r\\n        const server = getServer(ns, potentialServerToRun.name, homeMemoryLimitations);\\r\\n        const freeRam = server.maxRam - server.ramUsed;\\r\\n        if (freeRam > ramNeeded) {\\r\\n            machineToRunOn = server;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machineToRunOn;\\r\\n}\\r\\n\\r\\n\\r\\nfunction getServer(ns, serverName, homeMemoryLimitations) {\\r\\n    const server = ns.getServer(serverName);\\r\\n\\r\\n    if (serverName === \\\"home\\\") {\\r\\n\\r\\n        let ramToReserve = homeMemoryLimitations.ramToReserve;\\r\\n\\r\\n        if (server.maxRam < ramToReserve) {\\r\\n            ramToReserve = homeMemoryLimitations.ramToReserveInLimitedEnvironment;\\r\\n        }\\r\\n\\r\\n        server.maxRam -= ramToReserve;\\r\\n\\r\\n        const freeRam = server.maxRam - server.ramUsed\\r\\n\\r\\n        if (freeRam < 0) {\\r\\n            server.ramUsed = server.maxRam;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction cleanProcessesAttackingBatchTarget(ns, memoryStarvedQueue, batchTargets) {\\r\\n    for (const machineBeingHacked of memoryStarvedQueue) {\\r\\n        const whoTheyHackin = machineBeingHacked[0];\\r\\n\\r\\n        if (batchTargets.includes(whoTheyHackin)) {\\r\\n            const hackinRecord = memoryStarvedQueue.get(whoTheyHackin);\\r\\n            for (const pid of hackinRecord.pids) {\\r\\n                ns.kill(pid);\\r\\n            }\\r\\n\\r\\n            memoryStarvedQueue.delete(whoTheyHackin);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nfunction getMachinesToHack(hackableMachinesInTheEnvironment, memoryStarvedQueue, ns) {\\r\\n    const machinesNextInQueueToHack = [];\\r\\n    const doNotAdd = [];\\r\\n\\r\\n    for (const hackableMachine of hackableMachinesInTheEnvironment) {\\r\\n        if (memoryStarvedQueue.has(hackableMachine.name)) {\\r\\n            const record = memoryStarvedQueue.get(hackableMachine.name);\\r\\n            if (record.readyForNextProcess) {\\r\\n                machinesNextInQueueToHack.push(hackableMachine);\\r\\n            }\\r\\n\\r\\n            doNotAdd.push(hackableMachine);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    for (const hackableMachine of hackableMachinesInTheEnvironment) {\\r\\n        if (!doNotAdd.find(x => x.name === hackableMachine.name)) {\\r\\n            machinesNextInQueueToHack.push(hackableMachine);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machinesNextInQueueToHack;\\r\\n}\\r\\n\\r\\nexport class HackedRecord {\\r\\n    constructor(name, maxMoney, minDifficulty, hackDifficulty, moneyAvailable) {\\r\\n        this.name = name;\\r\\n        this.moneyThreshhold = maxMoney * 0.75;\\r\\n        this.securityThreshholdTarget = minDifficulty + 5;\\r\\n        this.hackDifficulty = hackDifficulty;\\r\\n        this.moneyAvailable = moneyAvailable;\\r\\n        this.minDifficulty = minDifficulty;\\r\\n        this.pids = [];\\r\\n\\r\\n        this.runningOn = [];\\r\\n\\r\\n        this.isHacking = false;\\r\\n        this.readyForNextProcess = false;\\r\\n    }\\r\\n\\r\\n    needsWeakening() {\\r\\n        return this.hackDifficulty > this.securityThreshholdTarget;\\r\\n    }\\r\\n\\r\\n    needsGrowing() {\\r\\n        return this.moneyAvailable < this.moneyThreshhold;\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getNumberOfThreadsToWeaken(ns, cpuCores, amountToWeaken) {\\r\\n    let numberOfThreadsToWeaken = 0;\\r\\n    let foundNumberOfThreads = false;\\r\\n    while (!foundNumberOfThreads) {\\r\\n        numberOfThreadsToWeaken++;\\r\\n\\r\\n        const amountNumberOfThreadsWillWeaken = Math.ceil(ns.weakenAnalyze(numberOfThreadsToWeaken, cpuCores));\\r\\n        if (amountNumberOfThreadsWillWeaken > amountToWeaken) {\\r\\n            foundNumberOfThreads = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //add a small margin\\r\\n    numberOfThreadsToWeaken += 20;\\r\\n    return numberOfThreadsToWeaken;\\r\\n}\\r\\n\\r\\nfunction seeIfWeNeedToDoNextStep(ns, recordOfWhoIsBeingHacked) {\\r\\n    for (const companyBeingHacked of recordOfWhoIsBeingHacked.keys()) {\\r\\n        const record = recordOfWhoIsBeingHacked.get(companyBeingHacked);\\r\\n\\r\\n        if (record.pids.every(x => !ns.isRunning(x))) {\\r\\n            if (record.isHacking) {\\r\\n                recordOfWhoIsBeingHacked.delete(companyBeingHacked)\\r\\n            } else {\\r\\n                record.readyForNextProcess = true;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/memory-starved-dispatch.js\",\"server\":\"home\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"home\"}}],[\"scripts/investments/invest-in-nodes.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//take an hours until payoff numberz\\r\\n\\r\\n//hacknet\\r\\n\\r\\n/** @param {NS} ns */\\r\\n//run scripts/invest-in-nodes.js endDate\\r\\nexport async function main(ns) {\\r\\n    const endDate = ns.args[0];\\r\\n\\r\\n    if (endDate === undefined){\\r\\n        ns.tprint(\\\"need inputs\\\");\\r\\n    } else {\\r\\n        const timeLeftInSeconds = (new Date(endDate) - new Date()) / 1000;\\r\\n        const conservativeTimeLeft = timeLeftInSeconds / 2;\\r\\n    \\r\\n        let numberPurchased = 0\\r\\n    \\r\\n        while(buyHacknetNodeIfAboveBreakeven(ns, conservativeTimeLeft)){\\r\\n            numberPurchased++;\\r\\n        }\\r\\n\\r\\n        if(numberPurchased != 0){\\r\\n            ns.tprint(\\\"Total nodes purchase: \\\", numberPurchased);\\r\\n        }        \\r\\n    }\\r\\n}\\r\\n\\r\\nfunction buyHacknetNodeIfAboveBreakeven(ns, secondsLeft) {\\r\\n    const productionMultiplier = 2.8991;\\r\\n    const upgradeCostMultiplier = 0.8700;\\r\\n\\r\\n    const fixedCostOfFullyUpgradedNode = 409_194_200 * upgradeCostMultiplier;\\r\\n    const variableCost = ns.hacknet.getPurchaseNodeCost();\\r\\n    const totalCost = variableCost + fixedCostOfFullyUpgradedNode;\\r\\n\\r\\n    const moneyToInvest = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (totalCost > moneyToInvest) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    const revPerSecond = 9172 * productionMultiplier;\\r\\n    const expectedValue = secondsLeft * revPerSecond;\\r\\n\\r\\n    if (expectedValue < totalCost) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    const indexOfNode = ns.hacknet.purchaseNode();\\r\\n    ns.hacknet.upgradeLevel(indexOfNode, 199);\\r\\n    ns.hacknet.upgradeRam(indexOfNode, 6);\\r\\n    ns.hacknet.upgradeCore(indexOfNode, 15);\\r\\n\\r\\n    return true;\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/investments/invest-in-nodes.js\",\"server\":\"home\"}}],[\"scripts/investments/invest-in-stocks.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"\\r\\n/** @param {NS} ns */\\r\\n//run scripts/invest-in-stocks.js\\r\\nexport async function main(ns) {\\r\\n\\r\\n    let historicalData = new Map();\\r\\n\\r\\n    const nameOfStockHistoricalData = \\\"../../data/stockHistory.txt\\\";\\r\\n    if (ns.fileExists(nameOfStockHistoricalData)) {\\r\\n        historicalData = new Map(JSON.parse(ns.read(nameOfStockHistoricalData)));\\r\\n    }\\r\\n\\r\\n    const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n    let stockMarketReserveMoney = new ReserveForTrading();\\r\\n    if (ns.fileExists(stockMarketReserveMoneyFile)) {\\r\\n        stockMarketReserveMoney = new ReserveForTrading(JSON.parse(ns.read(stockMarketReserveMoneyFile)));\\r\\n    }\\r\\n\\r\\n    const stockRecords = ns.stock\\r\\n        .getSymbols()\\r\\n        .map(x => new Stock(\\r\\n            x,\\r\\n            ns.stock.getBidPrice(x),\\r\\n            ns.stock.getAskPrice(x),\\r\\n            ns.stock.getPrice(x),\\r\\n            ns.stock.getMaxShares(x),\\r\\n            ns.stock.getPosition(x),\\r\\n        ));\\r\\n\\r\\n    if (ns.stock.has4SDataTIXAPI()) {\\r\\n        for (const stockRecord of stockRecords) {\\r\\n            stockRecord.volatility = ns.stock.getVolatility(stockRecord.symbol);\\r\\n            stockRecord.forecast = ns.stock.getForecast(stockRecord.symbol);\\r\\n            stockRecord.bias = Math.abs(stockRecord.forecast - .5);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    SaveHistoricData(stockRecords, historicalData, ns, nameOfStockHistoricalData);\\r\\n    stockMarketReserveMoney.setMoneyInvested(stockRecords.reduce((sum, record) => sum += record.price * record.investedShares, 0), ns);\\r\\n\\r\\n    const nameOfLedger = \\\"../../data/salesLedger.txt\\\"\\r\\n    let ledger = [];\\r\\n\\r\\n    if (ns.fileExists(nameOfLedger)) {\\r\\n        ledger = JSON.parse(ns.read(nameOfLedger));\\r\\n    }\\r\\n\\r\\n    stockMarketReserveMoney.moneyRequested = new Map(Array.from(stockMarketReserveMoney.moneyRequested));\\r\\n    const reserveMoneyKeys = stockMarketReserveMoney.moneyRequested.keys();\\r\\n    let moneyRequested = 0;\\r\\n\\r\\n    for (const requestKey of reserveMoneyKeys) {\\r\\n        moneyRequested += stockMarketReserveMoney.moneyRequested.get(requestKey);\\r\\n    }\\r\\n\\r\\n    if (moneyRequested === 0) {\\r\\n        stockMarketReserveMoney.countOfVisitedWithoutFillingRequest = 0;\\r\\n    }\\r\\n\\r\\n    let sellSharesToSatisfyMoneyDemands = false;\\r\\n    if (stockMarketReserveMoney.countOfVisitedWithoutFillingRequest > 90) {\\r\\n        sellSharesToSatisfyMoneyDemands = true;\\r\\n    }\\r\\n\\r\\n    const commission = 100_001;\\r\\n\\r\\n    const stopTradingExists = ns.fileExists(\\\"../../stopTrading.txt\\\");\\r\\n    stockRecords.map(stock => {\\r\\n        let sharesToSell = stock.investedShares;\\r\\n\\r\\n        if (sellSharesToSatisfyMoneyDemands) {\\r\\n            if(stockMarketReserveMoney.canSellAmountAndStillHaveReserve(moneyRequested)){\\r\\n                sharesToSell = Math.ceil(moneyRequested / stock.bid)\\r\\n\\r\\n                if (sharesToSell > stock.investedShares) {\\r\\n                    sharesToSell = stock.investedShares;\\r\\n                }\\r\\n            } else {\\r\\n                sellSharesToSatisfyMoneyDemands = false;\\r\\n                stockMarketReserveMoney.countOfVisitedWithoutFillingRequest = 0;\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        if (sharesToSell > 0) {\\r\\n            if (stock.sellTrend || stopTradingExists || sellSharesToSatisfyMoneyDemands) {\\r\\n                const salePrice = ns.stock.sellStock(stock.symbol, sharesToSell);\\r\\n                ledger.push(new LedgerItem(\\r\\n                    stock.symbol,\\r\\n                    salePrice,\\r\\n                    stock.averagePrice,\\r\\n                    sharesToSell,\\r\\n                    \\\"Short-Term Long Sale\\\",\\r\\n                    stock.forecast\\r\\n                ))\\r\\n\\r\\n                if (sellSharesToSatisfyMoneyDemands) {\\r\\n                    sellSharesToSatisfyMoneyDemands = false;\\r\\n                    ns.toast(`Sold $${moneyRequested} for money request.`, \\\"success\\\", null)\\r\\n                }\\r\\n\\r\\n                if (stopTradingExists) {\\r\\n                    ns.toast(\\\"Stopped trading\\\", \\\"success\\\", null)\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfLedger);\\r\\n    ns.write(nameOfLedger, JSON.stringify(ledger), \\\"W\\\");\\r\\n\\r\\n\\r\\n    let moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\") - commission - moneyRequested;\\r\\n\\r\\n    if (moneyAvailable > 30_000_000_000 && !ns.stock.has4SDataTIXAPI()) {\\r\\n        ns.stock.purchase4SMarketData();\\r\\n        ns.stock.purchase4SMarketDataTixApi();\\r\\n    }\\r\\n\\r\\n    if (moneyAvailable > 1_000_000_000 && !ns.stock.has4SDataTIXAPI()) {\\r\\n        moneyAvailable = 1_000_000_000;\\r\\n    }\\r\\n\\r\\n    let onlyInvestIfWeHaveMoreThan = 30_000_000;\\r\\n    if (ns.fileExists('../../stopInvesting.txt')) {\\r\\n        onlyInvestIfWeHaveMoreThan = 30_000_000;\\r\\n    }\\r\\n\\r\\n    if (moneyAvailable > onlyInvestIfWeHaveMoreThan && !stopTradingExists) {\\r\\n        const stocksToGoLong = stockRecords\\r\\n            .filter(stock => stock.investedShares !== stock.maxShares && stock.buyTrend)\\r\\n            .sort((a, b) => b.volatility - a.volatility);\\r\\n\\r\\n        if (stocksToGoLong.length > 0) {\\r\\n            const stockToLookAt = stocksToGoLong[0];\\r\\n\\r\\n            let sharesToBuy = Math.round(moneyAvailable / stockToLookAt.ask);\\r\\n\\r\\n            const totalSharesAfterBuy = sharesToBuy + stockToLookAt.investedShares;\\r\\n\\r\\n            if (stockToLookAt.maxShares < totalSharesAfterBuy) {\\r\\n                sharesToBuy = stockToLookAt.maxShares - stockToLookAt.investedShares;\\r\\n            }\\r\\n\\r\\n            const ticker = stockToLookAt.symbol;\\r\\n\\r\\n            if (!ns.stock.has4SDataTIXAPI() && stockToLookAt.investedShares > 0) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            // ns.toast(`${ticker} SHARES: ${sharesToBuy} FORECAST: ${stockToLookAt.forecast}`, \\\"success\\\", null)\\r\\n            ns.stock.buyStock(ticker, sharesToBuy);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ns.rm(stockMarketReserveMoneyFile);\\r\\n    ns.write(stockMarketReserveMoneyFile, JSON.stringify(stockMarketReserveMoney), \\\"W\\\");\\r\\n}\\r\\n\\r\\n\\r\\nclass ReserveForTrading {\\r\\n    stockMarketReserveMoneyLimit = 1_000_000_000_000;\\r\\n    capitalToReserveForTrading = 0;\\r\\n    moneyInvested = 0;\\r\\n    moneyRequested = new Map();\\r\\n    countOfVisitedWithoutFillingRequest = 0;\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    canSellAmountAndStillHaveReserve(amountToSell) {\\r\\n        return (this.moneyInvested - amountToSell) > this.capitalToReserveForTrading;\\r\\n    }\\r\\n\\r\\n    setMoneyInvested(moneyInvested, ns) {\\r\\n        this.moneyInvested = moneyInvested;\\r\\n\\r\\n        const potentialCapitalReserve = moneyInvested / 2;\\r\\n\\r\\n        this.capitalToReserveForTrading = Math.max(...[potentialCapitalReserve, this.capitalToReserveForTrading]);\\r\\n\\r\\n        if (this.capitalToReserveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            this.capitalToReserveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        this.countOfVisitedWithoutFillingRequest++;\\r\\n    }\\r\\n\\r\\n    canSpend(ns, moneyNeeded) {\\r\\n        const moneyOnHome = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        let moneyToSaveForTrading = this.capitalToReserveForTrading - this.moneyInvested;\\r\\n\\r\\n        if (moneyToSaveForTrading < 0) {\\r\\n            moneyToSaveForTrading = 0;\\r\\n        }\\r\\n\\r\\n        if (moneyToSaveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            moneyToSaveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        const canSpend = moneyNeeded < moneyOnHome - moneyToSaveForTrading\\r\\n\\r\\n        if (canSpend === false) {\\r\\n            this.requestMoney(ns, moneyNeeded);\\r\\n        } else {\\r\\n            this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n            const nameOfRequest = \\\"purchase-server\\\";\\r\\n            this.moneyRequested.delete(nameOfRequest);\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        return canSpend;\\r\\n    }\\r\\n\\r\\n    requestMoney(ns, amount) {\\r\\n        const nameOfRequest = \\\"purchase-server\\\";\\r\\n        this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n        const moneyRequestedPreviously = this.moneyRequested.get(nameOfRequest);\\r\\n        if (moneyRequestedPreviously) {\\r\\n            if (moneyRequestedPreviously < amount) {\\r\\n                this.moneyRequested.set(nameOfRequest, amount);\\r\\n                this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n                const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n                ns.rm(stockMarketReserveMoneyFile);\\r\\n                ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n            }\\r\\n        } else {\\r\\n            this.moneyRequested.set(nameOfRequest, amount);\\r\\n            this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nclass LedgerItem {\\r\\n\\r\\n    constructor(symbol, price, averagePurchasePrice, shares, type, forecastAtSale) {\\r\\n        const formatter = new Intl.NumberFormat('en-US', {\\r\\n            style: 'currency',\\r\\n            currency: 'USD',\\r\\n        });\\r\\n\\r\\n        const numberProfit = (price - averagePurchasePrice) * shares\\r\\n\\r\\n        this.date = new Date().toLocaleString();\\r\\n        this.symbol = symbol;\\r\\n        this.price = price;\\r\\n        this.averagePurchasePrice = averagePurchasePrice;\\r\\n        this.profit = formatter.format(numberProfit);\\r\\n        this.profitPercent = (numberProfit / (shares * averagePurchasePrice)).toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 });\\r\\n        this.shares = shares;\\r\\n        this.type = type;\\r\\n        this.forecastAtSale = forecastAtSale;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass StockHistoricData {\\r\\n    shortTermRecords = [];\\r\\n    longTermRecords = [];\\r\\n    recentTicksOfPrices = [];\\r\\n\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    addRecord(record, ns) {\\r\\n        this.shortTermRecords.push(record);\\r\\n        this.recentTicksOfPrices.push(record.price);\\r\\n\\r\\n        if (this.recentTicksOfPrices.length === 11) {\\r\\n            record.countOfNegative = 0;\\r\\n            record.countOfPositive = 0;\\r\\n\\r\\n            let lastPrice;\\r\\n            for (const price of this.recentTicksOfPrices) {\\r\\n                if (lastPrice) {\\r\\n                    if (lastPrice < price) {\\r\\n                        record.countOfPositive++;\\r\\n                    }\\r\\n\\r\\n                    if (lastPrice > price) {\\r\\n                        record.countOfNegative++;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                lastPrice = price;\\r\\n            }\\r\\n\\r\\n            this.recentTicksOfPrices.shift();\\r\\n        }\\r\\n\\r\\n        const hasOracle = ns.stock.has4SDataTIXAPI();\\r\\n\\r\\n\\r\\n        if (!hasOracle) {\\r\\n            if (record.countOfPositive >= 8) {\\r\\n                record.buyTrend = true;\\r\\n            }\\r\\n\\r\\n            if (record.countOfPositive <= 6) {\\r\\n                record.sellTrend = true;\\r\\n            }\\r\\n\\r\\n            if (record.countOfNegative >= 8) {\\r\\n                record.sellShortTrend = true;\\r\\n            }\\r\\n\\r\\n            if (record.countOfNegative <= 6) {\\r\\n                record.coverShortTrend = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (hasOracle) {\\r\\n            if (record.forecast > 0.6) {\\r\\n                record.buyTrend = true;\\r\\n            }\\r\\n\\r\\n            if (record.forecast < .5) {\\r\\n                record.sellTrend = true;\\r\\n            }\\r\\n\\r\\n            if (0.4 > record.forecast) {\\r\\n                record.sellShortTrend = true;\\r\\n            }\\r\\n\\r\\n            if (0.5 < record.forecast) {\\r\\n                record.coverShortTrend = true;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    storeLongTerm() {\\r\\n        const newLongTermStock = new Stock(\\r\\n            this.shortTermRecords[0].symbol,\\r\\n            this.shortTermRecords.map(x => x.bid).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.ask).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.price).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords[0].maxShares,\\r\\n            [\\r\\n                this.shortTermRecords.map(x => x.investedShares).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.averagePrice).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.sharesShort).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.averageShortPrice).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            ]\\r\\n        );\\r\\n\\r\\n        newLongTermStock.volatility = this.shortTermRecords[0].volatility;\\r\\n        newLongTermStock.forecast = this.shortTermRecords.map(x => x.forecast).reduce((a, b) => a + b) / this.shortTermRecords.length;\\r\\n\\r\\n        newLongTermStock.bias = Math.max(...this.shortTermRecords.map(x => x.bias));\\r\\n\\r\\n        this.longTermRecords.push(newLongTermStock);\\r\\n\\r\\n        this.shortTermRecords.length = 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Stock {\\r\\n    constructor(symbol, bid, ask, price, maxShares, position = {}, dateObserved = new Date()) {\\r\\n        this.symbol = symbol;\\r\\n        this.bid = bid;\\r\\n        this.ask = ask;\\r\\n        this.price = price;\\r\\n        this.maxShares = maxShares;\\r\\n        this.investedShares = position[0];\\r\\n        this.averagePrice = position[1];\\r\\n        this.sharesShort = position[2];\\r\\n        this.averageShortPrice = position[3];\\r\\n        this.dateObserved = dateObserved.toLocaleString();\\r\\n    }\\r\\n\\r\\n    volatility;\\r\\n    forecast;\\r\\n\\r\\n    buyTrend = false;\\r\\n    sellTrend = false;\\r\\n    sellShortTrend = false;\\r\\n    coverShortTrend = false;\\r\\n\\r\\n}\\r\\n\\r\\nfunction SaveHistoricData(stockRecords, historicalData, ns, nameOfStockHistoricalData) {\\r\\n    stockRecords.map(x => {\\r\\n        if (historicalData.has(x.symbol)) {\\r\\n            const data = historicalData.get(x.symbol);\\r\\n\\r\\n            if (data.shortTermRecords[data.shortTermRecords.length - 1]?.price !== x.price) {\\r\\n                const record = new StockHistoricData(data);\\r\\n                record.addRecord(x, ns);\\r\\n\\r\\n                if (record.shortTermRecords.length >= 100) {\\r\\n                    record.storeLongTerm();\\r\\n                }\\r\\n\\r\\n                historicalData.set(x.symbol, record);\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n            const stockHistoryData = new StockHistoricData();\\r\\n            stockHistoryData.addRecord(x, ns);\\r\\n            historicalData.set(x.symbol, stockHistoryData);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfStockHistoricalData);\\r\\n    ns.write(nameOfStockHistoricalData, JSON.stringify(Array.from(historicalData.entries()), \\\"W\\\"));\\r\\n}\\r\\n\",\"filename\":\"scripts/investments/invest-in-stocks.js\",\"server\":\"home\"}}],[\"scripts/investments/investments-coordinator.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const ramObservationsTextFile = '../../data/ramObservations.txt';\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n    \\r\\n    const stopInvestingFileName = \\\"stopInvesting.txt\\\";\\r\\n    if (ns.fileExists(stopInvestingFileName)) {\\r\\n        if (ns.fileExists(ramObservationsTextFile)) {\\r\\n            ns.rm(ramObservationsTextFile);\\r\\n        }\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n    let stockMarketReserveMoney = new ReserveForTrading();\\r\\n    if (ns.fileExists(stockMarketReserveMoneyFile)) {\\r\\n        stockMarketReserveMoney = new ReserveForTrading(JSON.parse(ns.read(stockMarketReserveMoneyFile)));\\r\\n    }\\r\\n\\r\\n    \\r\\n    if (stockMarketReserveMoney.moneyInvested > 7_000_000_000) {\\r\\n        if (!ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n            checkTor(ns);\\r\\n            const formulasCost = ns.singularity.getDarkwebProgramCost(\\\"Formulas.exe\\\")\\r\\n            if(stockMarketReserveMoney.canSpend(ns, formulasCost)){\\r\\n                ns.singularity.purchaseProgram(\\\"Formulas.exe\\\");\\r\\n                ns.rm(ramObservationsTextFile);\\r\\n                ns.rm('../../buyOrUpgradeServerFlag.txt');\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ns.run('scripts/investments/purchase-server.js');\\r\\n    \\r\\n    purchaseProgram(ns, 50, \\\"BruteSSH.exe\\\", stockMarketReserveMoney);\\r\\n    purchaseProgram(ns, 100, \\\"FTPCrack.exe\\\", stockMarketReserveMoney);\\r\\n    purchaseProgram(ns, 250, \\\"relaySMTP.exe\\\", stockMarketReserveMoney);\\r\\n    purchaseProgram(ns, 500, \\\"HTTPWorm.exe\\\", stockMarketReserveMoney);\\r\\n    purchaseProgram(ns, 750, \\\"SQLInject.exe\\\", stockMarketReserveMoney);\\r\\n\\r\\n\\r\\n    if (moneyAvailable > 1_000_000_000_000) {\\r\\n        const endDate = new Date();\\r\\n        endDate.setHours(endDate.getHours() + 6);\\r\\n        ns.run('scripts/investments/invest-in-nodes.js', 1, endDate.toISOString())\\r\\n    }\\r\\n  \\r\\n}\\r\\n\\r\\nfunction purchaseProgram(ns, atWhatHackingLevelToBuy, programToBuy, stockMarketReserveMoney) {\\r\\n    const playerHackingLevel = ns.getHackingLevel();\\r\\n    if (!ns.fileExists(programToBuy) && playerHackingLevel > atWhatHackingLevelToBuy) {\\r\\n\\r\\n        const cost = ns.singularity.getDarkwebProgramCost(programToBuy)\\r\\n        \\r\\n        if(stockMarketReserveMoney.canSpend(ns, cost)){\\r\\n            checkTor(ns);\\r\\n            ns.singularity.purchaseProgram(programToBuy);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction checkTor(ns) {\\r\\n    if (!ns.hasTorRouter()) {\\r\\n        ns.singularity.purchaseTor()\\r\\n    }\\r\\n}\\r\\n\\r\\nclass ReserveForTrading {\\r\\n    stockMarketReserveMoneyLimit = 1_000_000_000_000;\\r\\n    capitalToReserveForTrading = 0;\\r\\n    moneyInvested = 0;\\r\\n    moneyRequested = new Map();\\r\\n    countOfVisitedWithoutFillingRequest = 0;\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    setMoneyInvested(moneyInvested, ns){\\r\\n        this.moneyInvested = moneyInvested;\\r\\n\\r\\n        const potentialCapitalReserve = moneyInvested / 2;\\r\\n        \\r\\n        this.capitalToReserveForTrading = Math.max(...[potentialCapitalReserve, this.capitalToReserveForTrading]);\\r\\n\\r\\n        if(this.capitalToReserveForTrading > this.stockMarketReserveMoneyLimit){\\r\\n            this.capitalToReserveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        this.countOfVisitedWithoutFillingRequest++;\\r\\n    }\\r\\n\\r\\n    canSpend(ns, moneyNeeded){\\r\\n        const moneyOnHome = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        let moneyToSaveForTrading = this.capitalToReserveForTrading - this.moneyInvested;\\r\\n\\r\\n        if(moneyToSaveForTrading < 0){\\r\\n            moneyToSaveForTrading = 0;\\r\\n        }\\r\\n\\r\\n        if(moneyToSaveForTrading > this.stockMarketReserveMoneyLimit){\\r\\n            moneyToSaveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        const canSpend = moneyNeeded < moneyOnHome - moneyToSaveForTrading\\r\\n\\r\\n        if(canSpend === false){\\r\\n            this.requestMoney(ns, moneyNeeded);\\r\\n        } else {\\r\\n            this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n            const nameOfRequest = \\\"investments-coordinator\\\";\\r\\n            this.moneyRequested.delete(nameOfRequest);\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        return canSpend;\\r\\n    }\\r\\n\\r\\n    requestMoney(ns, amount){\\r\\n        const nameOfRequest = \\\"investments-coordinator\\\";\\r\\n        this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n        const moneyRequestedPreviously = this.moneyRequested.get(nameOfRequest);\\r\\n        if(moneyRequestedPreviously){\\r\\n            if(moneyRequestedPreviously < amount){\\r\\n                this.moneyRequested.set(nameOfRequest, amount);\\r\\n                this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n                const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n                ns.rm(stockMarketReserveMoneyFile);\\r\\n                ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n            }\\r\\n        } else {\\r\\n            this.moneyRequested.set(nameOfRequest, amount);\\r\\n            this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/investments/investments-coordinator.js\",\"server\":\"home\"}}],[\"scripts/investments/purchase-server.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let countOfTriesToBuyServers = 0;\\r\\nlet countOfVisitsWithoutTryingToBuy = 0;\\r\\nconst beforeFormulasServerSpendFile = \\\"data/beforeFormulasServerSpend.txt\\\";\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const buyOrUpgradeServerFlag = \\\"../../buyOrUpgradeServerFlag.txt\\\";\\r\\n    const ramObservationsTextFile = '../../data/ramObservations.txt';\\r\\n    const typeRecord = \\\"../../data/typeOfServerPurchase.txt\\\";\\r\\n\\r\\n    let additionalRamNeeded = 0;\\r\\n    let ramObservations = [];\\r\\n    let type = new TypeOfPurchase();\\r\\n\\r\\n    if (ns.fileExists(ramObservationsTextFile)) {\\r\\n        countOfVisitsWithoutTryingToBuy++;\\r\\n    } else {\\r\\n        countOfVisitsWithoutTryingToBuy = 0;\\r\\n    }\\r\\n\\r\\n    if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n        countOfVisitsWithoutTryingToBuy = 0;\\r\\n    }\\r\\n\\r\\n    let tryToBuy = ns.fileExists(buyOrUpgradeServerFlag);\\r\\n\\r\\n    if (tryToBuy === false && countOfVisitsWithoutTryingToBuy < 300) {\\r\\n        tryToBuy = true;\\r\\n    }\\r\\n\\r\\n    if (tryToBuy === false) {\\r\\n        return;\\r\\n    } else {\\r\\n        countOfTriesToBuyServers++;\\r\\n\\r\\n        if (ns.fileExists(typeRecord)) {\\r\\n            const tempType = JSON.parse(ns.read(typeRecord));\\r\\n            type = new TypeOfPurchase(tempType);\\r\\n        }\\r\\n\\r\\n        if (!type.lastPurchaseDate) {\\r\\n            type.lastPurchaseDate = new Date();\\r\\n        }\\r\\n\\r\\n        if (ns.fileExists(ramObservationsTextFile)) {\\r\\n            ramObservations = JSON.parse(ns.read(ramObservationsTextFile));\\r\\n\\r\\n        }\\r\\n\\r\\n        if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n            const latestRamNeeded = JSON.parse(ns.read(buyOrUpgradeServerFlag));\\r\\n\\r\\n            ramObservations.push(latestRamNeeded);\\r\\n\\r\\n            ns.rm(buyOrUpgradeServerFlag);\\r\\n\\r\\n            ns.rm(ramObservationsTextFile);\\r\\n            ns.write(ramObservationsTextFile, JSON.stringify(ramObservations), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        if (ramObservations.length === 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (ramObservations.length > 10 || countOfTriesToBuyServers > 300) {\\r\\n\\r\\n            additionalRamNeeded = Math.min(...ramObservations);\\r\\n\\r\\n            if (type.average) {\\r\\n                additionalRamNeeded = ramObservations.reduce((a, b) => a + b) / ramObservations.length;\\r\\n            }\\r\\n\\r\\n            if (ns.fileExists('Formulas.exe')) {\\r\\n                if (type.max) {\\r\\n                    additionalRamNeeded = Math.max(...ramObservations);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            const ramNeededForBatchesFile = \\\"data/ramNeededToStartBatches.txt\\\";\\r\\n            if (ns.fileExists(ramNeededForBatchesFile)) {\\r\\n                const ramNeededToStartBatches = Number(ns.read(ramNeededForBatchesFile));\\r\\n\\r\\n                if (ramNeededToStartBatches < additionalRamNeeded) {\\r\\n                    additionalRamNeeded = ramNeededToStartBatches;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if(additionalRamNeeded === 0){\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        let maxRam = 1048576;\\r\\n\\r\\n        const enviroment = JSON.parse(ns.read('../../data/enviroment.txt'));\\r\\n\\r\\n        const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n        let stockMarketReserveMoney = new ReserveForTrading();\\r\\n        if (ns.fileExists(stockMarketReserveMoneyFile)) {\\r\\n            stockMarketReserveMoney = new ReserveForTrading(JSON.parse(ns.read(stockMarketReserveMoneyFile)));\\r\\n        }\\r\\n\\r\\n\\r\\n        const playerPurchasedServers = enviroment\\r\\n            .filter(x => x.server.purchasedByPlayer && x.server.maxRam < maxRam)\\r\\n            .sort((b, a) => a.server.maxRam - b.server.maxRam)\\r\\n\\r\\n        let upgradedOrPurchased = false;\\r\\n        if (playerPurchasedServers.length === 0) {\\r\\n            upgradedOrPurchased = purchaseServer(ns, maxRam, additionalRamNeeded, stockMarketReserveMoney);\\r\\n        } else {\\r\\n            const smallestPlayerPurchasedServer = playerPurchasedServers.pop();\\r\\n            upgradedOrPurchased = upgradeSmallMachine(ns, smallestPlayerPurchasedServer, maxRam, additionalRamNeeded, stockMarketReserveMoney);\\r\\n        }\\r\\n\\r\\n        if (upgradedOrPurchased) {\\r\\n            ns.rm(ramObservationsTextFile);\\r\\n            type.changeType();\\r\\n            const now = new Date();\\r\\n            const timeStamp = `[${String(now.getHours()).padStart(2, 0)}:${String(now.getMinutes()).padStart(2, 0)}]`\\r\\n            ns.toast(`${timeStamp} More than ${Math.round(additionalRamNeeded)} GB bought for server`, \\\"success\\\", 300000);\\r\\n        }\\r\\n\\r\\n        ns.rm(typeRecord);\\r\\n        ns.write(typeRecord, JSON.stringify(type), \\\"W\\\");\\r\\n        if (countOfTriesToBuyServers > 100) {\\r\\n            countOfTriesToBuyServers = 0;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction purchaseServer(ns, maxRam, additionalRamNeeded, stockMarketReserveMoney) {\\r\\n    let currentNumberOfPurchasedServers = ns.getPurchasedServers().length;\\r\\n    let ramToBuy = 64;\\r\\n\\r\\n    if (currentNumberOfPurchasedServers < ns.getPurchasedServerLimit()) {\\r\\n\\r\\n        let purchaseCost = ns.getPurchasedServerCost(ramToBuy);\\r\\n        let moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        if (moneyAvailable > purchaseCost) {\\r\\n\\r\\n            while (moneyAvailable > purchaseCost && ramToBuy < additionalRamNeeded) {\\r\\n\\r\\n                ramToBuy = ramToBuy * 2;\\r\\n\\r\\n                purchaseCost = ns.getPurchasedServerCost(ramToBuy);\\r\\n            }\\r\\n\\r\\n            if (ramToBuy > maxRam) {\\r\\n                ramToBuy = maxRam;\\r\\n            }\\r\\n\\r\\n            const canBuy = canSpendThatMoney(ns, stockMarketReserveMoney, purchaseCost);\\r\\n\\r\\n            if (canBuy && ramToBuy > additionalRamNeeded) {\\r\\n                const hostname = \\\"CLOUD-\\\" + String(currentNumberOfPurchasedServers).padStart(3, '0')\\r\\n                ns.purchaseServer(hostname, ramToBuy);\\r\\n                updateMoneySpent(ns, purchaseCost);\\r\\n\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            if (countOfTriesToBuyServers > 100) {\\r\\n                ns.toast(\\\"Not enough money to buy new server\\\", \\\"warning\\\", 3000)\\r\\n                countOfTriesToBuyServers = 0;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n}\\r\\n\\r\\nfunction upgradeSmallMachine(ns, smallestPlayerPurchasedServer, maxRam, additionalRamNeeded, stockMarketReserveMoney) {\\r\\n\\r\\n    let ramToBuy = smallestPlayerPurchasedServer.server.maxRam * 2;\\r\\n\\r\\n    while (!(ramToBuy - smallestPlayerPurchasedServer.server.maxRam > additionalRamNeeded)) {\\r\\n        ramToBuy = ramToBuy * 2;\\r\\n    }\\r\\n\\r\\n    if (ramToBuy >= maxRam) {\\r\\n        ramToBuy = maxRam;\\r\\n    }\\r\\n\\r\\n    const costOfRamToBuy = ns.getPurchasedServerUpgradeCost(smallestPlayerPurchasedServer.name, ramToBuy);\\r\\n    const canSpendMoney = canSpendThatMoney(ns, stockMarketReserveMoney, costOfRamToBuy);\\r\\n\\r\\n    if (canSpendMoney) {\\r\\n        ns.upgradePurchasedServer(smallestPlayerPurchasedServer.name, ramToBuy);\\r\\n        updateMoneySpent(ns, costOfRamToBuy);\\r\\n        return true;\\r\\n    } else {\\r\\n        if (countOfTriesToBuyServers > 100) {\\r\\n            const now = new Date();\\r\\n            const timeStamp = `[${String(now.getHours()).padStart(2, 0)}:${String(now.getMinutes()).padStart(2, 0)}]`\\r\\n            ns.toast(`${timeStamp} Too expensive to buy ${ramToBuy} $${Number((costOfRamToBuy).toFixed(2)).toLocaleString()}`, \\\"warning\\\", 300000);\\r\\n            countOfTriesToBuyServers = 0;\\r\\n        }\\r\\n\\r\\n        return purchaseServer(ns, maxRam, additionalRamNeeded, stockMarketReserveMoney);\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction updateMoneySpent(ns, moneySpent) {\\r\\n    if (!ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n        let moneyLeftToSpendOnServers = 2_000_000_000;\\r\\n\\r\\n        if (ns.fileExists(beforeFormulasServerSpendFile)) {\\r\\n            moneyLeftToSpendOnServers = ns.read(beforeFormulasServerSpendFile);\\r\\n        }\\r\\n\\r\\n        moneyLeftToSpendOnServers -= moneySpent;\\r\\n\\r\\n        ns.rm(beforeFormulasServerSpendFile);\\r\\n        ns.write(beforeFormulasServerSpendFile, JSON.stringify(moneyLeftToSpendOnServers), \\\"W\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction canSpendThatMoney(ns, stockMarketReserveMoney, costOfRamToBuy) {\\r\\n    let moneyToSpend = costOfRamToBuy;\\r\\n\\r\\n    if (!ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n        let moneyLeftToSpendOnServers = 2_000_000_000;\\r\\n\\r\\n        if (ns.fileExists(beforeFormulasServerSpendFile)) {\\r\\n            moneyLeftToSpendOnServers = JSON.parse(ns.read(beforeFormulasServerSpendFile));\\r\\n        }\\r\\n\\r\\n        if (moneyToSpend > moneyLeftToSpendOnServers) {\\r\\n            moneyToSpend = moneyLeftToSpendOnServers;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (moneyToSpend !== costOfRamToBuy) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    return stockMarketReserveMoney.canSpend(ns, costOfRamToBuy);\\r\\n}\\r\\n\\r\\n\\r\\nclass TypeOfPurchase {\\r\\n\\r\\n    max = false;\\r\\n    min = true;\\r\\n    average = false;\\r\\n    lastPurchaseDate = new Date();\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n\\r\\n    changeType() {\\r\\n\\r\\n        if (this.min) {\\r\\n            this.min = false;\\r\\n            this.average = true;\\r\\n            this.max = false;\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.average) {\\r\\n            this.min = false;\\r\\n            this.average = false;\\r\\n            this.max = true;\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.max) {\\r\\n            this.min = true;\\r\\n            this.average = false;\\r\\n            this.max = false;\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.lastPurchaseDate = new Date();\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass ReserveForTrading {\\r\\n    stockMarketReserveMoneyLimit = 1_000_000_000_000;\\r\\n    capitalToReserveForTrading = 0;\\r\\n    moneyInvested = 0;\\r\\n    moneyRequested = new Map();\\r\\n    countOfVisitedWithoutFillingRequest = 0;\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    setMoneyInvested(moneyInvested, ns) {\\r\\n        this.moneyInvested = moneyInvested;\\r\\n\\r\\n        const potentialCapitalReserve = moneyInvested / 2;\\r\\n\\r\\n        this.capitalToReserveForTrading = Math.max(...[potentialCapitalReserve, this.capitalToReserveForTrading]);\\r\\n\\r\\n        if (this.capitalToReserveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            this.capitalToReserveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        this.countOfVisitedWithoutFillingRequest++;\\r\\n    }\\r\\n\\r\\n    canSpend(ns, moneyNeeded) {\\r\\n        const moneyOnHome = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        let moneyToSaveForTrading = this.capitalToReserveForTrading - this.moneyInvested;\\r\\n\\r\\n        if (moneyToSaveForTrading < 0) {\\r\\n            moneyToSaveForTrading = 0;\\r\\n        }\\r\\n\\r\\n        if (moneyToSaveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            moneyToSaveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        const canSpend = moneyNeeded < moneyOnHome - moneyToSaveForTrading\\r\\n\\r\\n        if (canSpend === false) {\\r\\n            this.requestMoney(ns, moneyNeeded);\\r\\n        } else {\\r\\n            this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n            const nameOfRequest = \\\"purchase-server\\\";\\r\\n            this.moneyRequested.delete(nameOfRequest);\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        return canSpend;\\r\\n    }\\r\\n\\r\\n    requestMoney(ns, amount) {\\r\\n        const nameOfRequest = \\\"purchase-server\\\";\\r\\n        this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n        const moneyRequestedPreviously = this.moneyRequested.get(nameOfRequest);\\r\\n        if (moneyRequestedPreviously) {\\r\\n            if (moneyRequestedPreviously < amount) {\\r\\n                this.moneyRequested.set(nameOfRequest, amount);\\r\\n                this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n                const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n                ns.rm(stockMarketReserveMoneyFile);\\r\\n                ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n            }\\r\\n        } else {\\r\\n            this.moneyRequested.set(nameOfRequest, amount);\\r\\n            this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/investments/purchase-server.js\",\"server\":\"home\"}}],[\"scripts/singularity/backdoor-all-machines.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"\\r\\nlet backdooring = false;\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n    if(backdooring){\\r\\n        return;\\r\\n    }\\r\\n    \\r\\n    const machinesToBackdoorFirst = [\\\"CSEC\\\", \\\"avmnite-02h\\\", \\\"I.I.I.I.\\\", \\\"run4theh111z\\\"]\\r\\n\\r\\n    for(const machineName of machinesToBackdoorFirst){\\r\\n        if(await backdoorMachine(machineName, enviroment, ns)){\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    for (const machineName of enviroment.map(x => x.name)) {\\r\\n        if(await backdoorMachine(machineName, enviroment, ns)){\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nasync function backdoorMachine (machineName, enviroment, ns){\\r\\n    const serverWithLineage = enviroment.find(x => x.name === machineName)\\r\\n\\r\\n    if (serverWithLineage && !serverWithLineage.server.backdoorInstalled && serverWithLineage.server.hasAdminRights && !serverWithLineage.server.purchasedByPlayer) {\\r\\n        backdooring = true;\\r\\n        for (const server of serverWithLineage.lineage) {\\r\\n            await ns.singularity.connect(server);\\r\\n        }\\r\\n\\r\\n        await ns.singularity.connect(serverWithLineage.name);\\r\\n        await ns.singularity.installBackdoor();\\r\\n        await ns.singularity.connect(\\\"home\\\");\\r\\n\\r\\n        backdooring = false;\\r\\n        return true;\\r\\n    } \\r\\n\\r\\n    return false;\\r\\n\\r\\n}\",\"filename\":\"scripts/singularity/backdoor-all-machines.js\",\"server\":\"home\"}}],[\"scripts/singularity/buy-rep.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (moneyAvailable > 10_000_000_000_000){\\r\\n        const ownedAugmentations = ns.singularity.getOwnedAugmentations(true);\\r\\n        const player = ns.getPlayer();\\r\\n\\r\\n        const mostRepExpensiveForEachFaction = [];\\r\\n\\r\\n        for (const faction of player.factions) {\\r\\n            const maximumAugRep = Math.max(...ns\\r\\n                .singularity\\r\\n                .getAugmentationsFromFaction(faction)\\r\\n                .filter(x => x !== \\\"NeuroFlux Governor\\\")\\r\\n                .filter(x => !ownedAugmentations.includes(x))\\r\\n                .filter(x => {\\r\\n                    const prereqs = ns.singularity.getAugmentationPrereq(x);\\r\\n                    return prereqs.every(y => ownedAugmentations.includes(y));\\r\\n                })\\r\\n                .map(x => ns.singularity.getAugmentationRepReq(x)));\\r\\n    \\r\\n            const favor = ns.singularity.getFactionFavor(faction);\\r\\n    \\r\\n            if (maximumAugRep > 0 && favor > 150) {\\r\\n                mostRepExpensiveForEachFaction.push({ faction, maximumAugRep });\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if(mostRepExpensiveForEachFaction.length > 0){\\r\\n            for (const factionWithRep of mostRepExpensiveForEachFaction) {\\r\\n                \\r\\n                const currentFactionRep = ns.singularity.getFactionRep(factionWithRep.faction);\\r\\n                const repNeeded = factionWithRep.maximumAugRep - currentFactionRep;\\r\\n\\r\\n                if(repNeeded < 0){\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                let purchasedRep = 0;\\r\\n                let dollarsDonated = 0;\\r\\n\\r\\n                while(repNeeded > purchasedRep){\\r\\n                    dollarsDonated += 10_000_000;\\r\\n                    purchasedRep = ns.formulas.reputation.repFromDonation(dollarsDonated, player);\\r\\n                }\\r\\n\\r\\n                ns.singularity.donateToFaction(factionWithRep.faction, dollarsDonated);\\r\\n                \\r\\n                const fileToIndicateWeDonatedToFaction = \\\"data/factionDonatation.txt\\\";\\r\\n                ns.rm(fileToIndicateWeDonatedToFaction);\\r\\n                ns.write(fileToIndicateWeDonatedToFaction, factionWithRep.faction, \\\"W\\\");\\r\\n            }\\r\\n        }\\r\\n    }   \\r\\n}\",\"filename\":\"scripts/singularity/buy-rep.js\",\"server\":\"home\"}}],[\"scripts/singularity/create-early-programs.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (!currentWork || currentWork.type !== \\\"CREATE_PROGRAM\\\") {\\r\\n        if (!ns.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n           ns.singularity.createProgram(\\\"BruteSSH.exe\\\", true);\\r\\n\\r\\n        }\\r\\n\\r\\n        if (!ns.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n           ns.singularity.createProgram(\\\"FTPCrack.exe\\\", true);\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/singularity/create-early-programs.js\",\"server\":\"home\"}}],[\"scripts/singularity/do-job.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const organizations = JSON.parse(ns.read(\\\"data/organizations.txt\\\"));\\r\\n    const companiesWeWantToBecomePartOf = organizations.companiesWeWantToBecomePartOf;\\r\\n    const orderedFactions = organizations.toJoinInOrderInWhichIWantToComplete;\\r\\n\\r\\n    for (const companyName of companiesWeWantToBecomePartOf) {\\r\\n        ns.singularity.applyToCompany(companyName, \\\"software\\\");\\r\\n    }\\r\\n\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (currentWork && currentWork.type === \\\"CREATE_PROGRAM\\\") {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    let factionWeAreWorkingAtNow;\\r\\n    if (currentWork && currentWork.type === \\\"FACTION\\\") {\\r\\n        factionWeAreWorkingAtNow = currentWork.factionName;\\r\\n    }\\r\\n\\r\\n    if (currentWork && currentWork.type === \\\"COMPANY\\\") {\\r\\n        factionWeAreWorkingAtNow = currentWork.companyName;\\r\\n    }\\r\\n\\r\\n    const player = ns.getPlayer();\\r\\n    let company;\\r\\n\\r\\n    for (const potentialCompany of companiesWeWantToBecomePartOf) {\\r\\n        if (!player.factions.includes(potentialCompany)) {\\r\\n\\r\\n            if (!factionWeAreWorkingAtNow) {\\r\\n                company = potentialCompany;\\r\\n                break;\\r\\n            }\\r\\n\\r\\n            for (const faction of orderedFactions) {\\r\\n                if (faction === potentialCompany) {\\r\\n                    company = potentialCompany;\\r\\n                    break;\\r\\n                }\\r\\n\\r\\n                if (faction === factionWeAreWorkingAtNow) {\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (!company) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n\\r\\n    const positionInCompany = player.jobs[company];\\r\\n\\r\\n    if(!positionInCompany){\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const currentPositionInfo = ns.singularity.getCompanyPositionInfo(company, positionInCompany);\\r\\n    const nextPositionInfo = ns.singularity.getCompanyPositionInfo(company, currentPositionInfo.nextPosition);\\r\\n    const companyRep = ns.singularity.getCompanyRep(company);\\r\\n\\r\\n    if (nextPositionInfo.requiredReputation < companyRep && nextPositionInfo.requiredSkills.charisma > player.skills.charisma) {\\r\\n        if (!currentWork || currentWork.type !== \\\"CLASS\\\") {\\r\\n            ns.singularity.travelToCity(\\\"Sector-12\\\");\\r\\n            ns.singularity.universityCourse(\\\"Rothman University\\\", \\\"Leadership\\\", true);\\r\\n            return;\\r\\n        }\\r\\n    } else {\\r\\n        if (!currentWork || currentWork.type !== \\\"COMPANY\\\") {\\r\\n            ns.singularity.workForCompany(company, true);\\r\\n        }\\r\\n        return;\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/do-job.js\",\"server\":\"home\"}}],[\"scripts/singularity/do-work.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const player = ns.getPlayer();\\r\\n\\r\\n    const factionToMaxFile = \\\"data/factionToMax.txt\\\";\\r\\n\\r\\n    let factionToMax;\\r\\n\\r\\n    if (ns.fileExists(factionToMaxFile)) {\\r\\n        factionToMax = ns.read(factionToMaxFile);\\r\\n    }\\r\\n\\r\\n    const ownedAugmentations = JSON.parse(ns.read(\\\"data/ownedAugs.txt\\\"));\\r\\n    const organizations = JSON.parse(ns.read(\\\"data/organizations.txt\\\"));\\r\\n    const organizationsToJoinInTheOrderWeWantToComplete = organizations.toJoinInOrderInWhichIWantToComplete;\\r\\n    const doNoWorkFor = organizations.doNoWorkFor;\\r\\n    const stopAtAugments = organizations.stopAtAugments;\\r\\n\\r\\n    const factionsWithAugsToBuyAndNotEnoughtFavor = [];\\r\\n\\r\\n    for (const faction of organizationsToJoinInTheOrderWeWantToComplete) {\\r\\n        if (player.factions.includes(faction) && !doNoWorkFor.includes(faction)) {\\r\\n\\r\\n            let augmentsForFaction = ns\\r\\n                .singularity\\r\\n                .getAugmentationsFromFaction(faction);\\r\\n\\r\\n            let stopAtAugmentForFaction = stopAtAugments\\r\\n                .find(x => x.faction === faction);\\r\\n\\r\\n            if (stopAtAugmentForFaction) {\\r\\n                if (ownedAugmentations.includes(stopAtAugmentForFaction.augmentToStopAt) && stopAtAugmentForFaction.final) {\\r\\n                    augmentsForFaction = [];\\r\\n                } else if (ownedAugmentations.includes(stopAtAugmentForFaction.augmentToStopAt) && !stopAtAugmentForFaction.final) {\\r\\n                    augmentsForFaction = augmentsForFaction;\\r\\n                } else {\\r\\n                    augmentsForFaction = augmentsForFaction.filter(x => x === stopAtAugmentForFaction.augmentToStopAt);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            const maximumAugRep = Math.max(...augmentsForFaction\\r\\n                .filter(x => x !== \\\"NeuroFlux Governor\\\")\\r\\n                .filter(x => !ownedAugmentations.includes(x))\\r\\n                .map(x => ns.singularity.getAugmentationRepReq(x)));\\r\\n\\r\\n            const favor = ns.singularity.getFactionFavor(faction);\\r\\n\\r\\n            if (maximumAugRep > 0 && favor < 150) {\\r\\n                factionsWithAugsToBuyAndNotEnoughtFavor.push({ faction, maximumAugRep });\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    for (const faction of organizationsToJoinInTheOrderWeWantToComplete) {\\r\\n        const factionInAugsMix = factionsWithAugsToBuyAndNotEnoughtFavor.find(x => x.faction === faction);\\r\\n\\r\\n        if (factionInAugsMix) {\\r\\n\\r\\n            const newFactionToMax = factionInAugsMix.faction;\\r\\n\\r\\n            if (factionToMax !== newFactionToMax) {\\r\\n                factionToMax = newFactionToMax;\\r\\n                ns.rm(factionToMaxFile);\\r\\n                ns.write(factionToMaxFile, factionToMax, \\\"W\\\");\\r\\n            }\\r\\n\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (currentWork && currentWork.type === \\\"CREATE_PROGRAM\\\") {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    for (const faction of organizationsToJoinInTheOrderWeWantToComplete) {\\r\\n\\r\\n        if (currentWork &&\\r\\n            currentWork.type === \\\"COMPANY\\\" &&\\r\\n            currentWork.companyName === faction &&\\r\\n            !player.factions.includes(faction)) {\\r\\n\\r\\n            break;\\r\\n        }\\r\\n\\r\\n        if (currentWork &&\\r\\n            currentWork.type === \\\"CLASS\\\" &&\\r\\n            currentWork.classType === \\\"Leadership\\\") {\\r\\n\\r\\n            break;\\r\\n        }\\r\\n\\r\\n        const factionsAugs = factionsWithAugsToBuyAndNotEnoughtFavor.find(x => x.faction === faction);\\r\\n\\r\\n        if (!factionsAugs) {\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        const maxRepNeeded = factionsAugs.maximumAugRep;\\r\\n        const factionRep = ns.singularity.getFactionRep(faction);\\r\\n\\r\\n        if (maxRepNeeded > factionRep) {\\r\\n\\r\\n            if (!currentWork || currentWork.factionName !== faction) {\\r\\n                await ns.singularity.workForFaction(faction, \\\"hacking\\\", true);\\r\\n            }\\r\\n\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/do-work.js\",\"server\":\"home\"}}],[\"scripts/singularity/finish-bitnode.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const ownedAugmentations = ns.singularity.getOwnedAugmentations(false);\\r\\n    const includesRedPill = ownedAugmentations.includes(\\\"The Red Pill\\\");\\r\\n    const currentHackingLevel = ns.getHackingLevel();\\r\\n    const orgServerName = \\\"w0r1d_d43m0n\\\";\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n    const serverWithLineage = enviroment.find(x => x.name === orgServerName);\\r\\n\\r\\n    if (includesRedPill && currentHackingLevel > serverWithLineage.server.requiredHackingSkill) {\\r\\n        if (serverWithLineage && serverWithLineage.server.hasAdminRights) {\\r\\n            for (const server of serverWithLineage.lineage) {\\r\\n                await ns.singularity.connect(server);\\r\\n            }\\r\\n\\r\\n            await ns.singularity.connect(orgServerName);\\r\\n            await ns.singularity.installBackdoor();\\r\\n        }\\r\\n\\r\\n\\r\\n        ns.singularity.destroyW0r1dD43m0n(8, 'scripts/coordinator-for-8.js'); // 3 (corps) - 5.1 (formula.exe + int passive) - 10 (new) \\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/finish-bitnode.js\",\"server\":\"home\"}}],[\"scripts/singularity/finish-round.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let incomePerHourEstimate;\\r\\nlet updatedMoneyEstimate = false;\\r\\n\\r\\nexport async function main(ns) {\\r\\n\\r\\n    const factionToMaxFile = \\\"data/factionToMax.txt\\\";\\r\\n    const factionDonationFile = 'data/factionDonatation.txt'\\r\\n    const incomeEveryMinuteObservationsFile = 'data/incomeEveryMinuteForTheLast30Minutes.txt'\\r\\n\\r\\n    let factionToMax;\\r\\n\\r\\n    let incomeObservations = [];\\r\\n    const lastObservation = new Date();\\r\\n    let lastObservationRecordedMoney = new Date();\\r\\n\\r\\n    const formatter = new Intl.NumberFormat('en-US', {\\r\\n        style: 'currency',\\r\\n        currency: 'USD',\\r\\n    });\\r\\n\\r\\n    if (ns.fileExists(incomeEveryMinuteObservationsFile)) {\\r\\n        const incomePlusDateFromFile = JSON.parse(ns.read(incomeEveryMinuteObservationsFile));\\r\\n        incomeObservations = incomePlusDateFromFile.incomeObservations;\\r\\n        lastObservationRecordedMoney = new Date(incomePlusDateFromFile.lastObservation);\\r\\n    } else {\\r\\n        ns.write(incomeEveryMinuteObservationsFile, JSON.stringify({ incomeObservations, lastObservation }), \\\"W\\\");\\r\\n    }\\r\\n\\r\\n    if (lastObservationRecordedMoney.getMinutes() !== lastObservation.getMinutes()) {\\r\\n        let totalIncomeSinceAugInstall = 0\\r\\n\\r\\n        const moneySources = ns.getMoneySources();\\r\\n\\r\\n        for (let [key, value] of Object.entries(moneySources.sinceInstall)) {\\r\\n            if (key !== \\\"total\\\" && value > 0 && key !== \\\"stock\\\") {\\r\\n                totalIncomeSinceAugInstall += value;\\r\\n            }\\r\\n        }\\r\\n        incomeObservations.push(totalIncomeSinceAugInstall);\\r\\n\\r\\n        const totalIncome30MinutesAgo = incomeObservations[0];\\r\\n\\r\\n        const incomePerMinute = (totalIncomeSinceAugInstall - totalIncome30MinutesAgo) / incomeObservations.length;\\r\\n        incomePerHourEstimate = incomePerMinute * 60;\\r\\n        updatedMoneyEstimate = true;\\r\\n\\r\\n        if (incomeObservations.length > 30) {\\r\\n            incomeObservations.shift();\\r\\n        }\\r\\n\\r\\n        ns.rm(incomeEveryMinuteObservationsFile);\\r\\n        ns.write(incomeEveryMinuteObservationsFile, JSON.stringify({ incomeObservations, lastObservation }), \\\"W\\\");\\r\\n    } else {\\r\\n        updatedMoneyEstimate = false;\\r\\n    }\\r\\n\\r\\n    let analytics = new EndOfRoundAnalytics();\\r\\n    const endOfRoundAnalyticsFile = \\\"analytics/end-round.txt\\\";\\r\\n    if (ns.fileExists(endOfRoundAnalyticsFile)) {\\r\\n        analytics = JSON.parse(ns.read(endOfRoundAnalyticsFile));\\r\\n    }\\r\\n\\r\\n    if (ns.fileExists(factionToMaxFile) || ns.fileExists(factionDonationFile)) {\\r\\n        if (ns.fileExists(factionToMaxFile)) {\\r\\n            factionToMax = ns.read(factionToMaxFile);\\r\\n\\r\\n            if (!analytics.firstAssignFactionToMax) {\\r\\n                analytics.firstAssignFactionToMax = new Date();\\r\\n            }\\r\\n        } else {\\r\\n            factionToMax = ns.read(factionDonationFile);\\r\\n\\r\\n            if (!analytics.firstAssignFactionToMaxViaDonation) {\\r\\n                analytics.firstAssignFactionToMaxViaDonation = new Date();\\r\\n            }\\r\\n        }\\r\\n    } else {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    if (!analytics.factionsToMax.find(x => x.factionToMax === factionToMax)) {\\r\\n        const firstTime = new Date();\\r\\n        analytics.factionsToMax.push({ factionToMax, firstTime });\\r\\n    }\\r\\n\\r\\n    saveAnalytics(ns, analytics);\\r\\n\\r\\n    const player = ns.getPlayer();\\r\\n\\r\\n    const ownedAugmentations = ns.singularity.getOwnedAugmentations(true);\\r\\n\\r\\n    const mostRepExpensiveForEachFaction = [];\\r\\n    for (const faction of player.factions) {\\r\\n        const maximumAugRep = Math.max(...ns\\r\\n            .singularity\\r\\n            .getAugmentationsFromFaction(faction)\\r\\n            .filter(x => x !== \\\"NeuroFlux Governor\\\")\\r\\n            .filter(x => !ownedAugmentations.includes(x))\\r\\n            .map(x => ns.singularity.getAugmentationRepReq(x)));\\r\\n\\r\\n        if (maximumAugRep > 0) {\\r\\n            mostRepExpensiveForEachFaction.push({ faction, maximumAugRep });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const targetFaction = mostRepExpensiveForEachFaction\\r\\n        .filter(x => x.faction === factionToMax)\\r\\n        .pop();\\r\\n\\r\\n    setGoalAugment(ownedAugmentations, factionToMax, targetFaction, ns);\\r\\n\\r\\n    const currentFactionRep = ns.singularity.getFactionRep(targetFaction.faction);\\r\\n    const currentFactionFavor = ns.singularity.getFactionFavor(targetFaction.faction);\\r\\n\\r\\n    let targetRepForGettingToFavor = 700_000;\\r\\n    if (ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n        const favorGain = ns.singularity.getFactionFavorGain(targetFaction.faction);\\r\\n        if (favorGain + currentFactionFavor > 150) {\\r\\n            targetRepForGettingToFavor = currentFactionFavor;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (!analytics.firstEncounterOfRepTrigger) {\\r\\n        const repTrigger = populateRepTrigger(targetFaction, currentFactionRep, targetRepForGettingToFavor, ns, factionDonationFile, factionToMaxFile);\\r\\n        analytics.firstEncounterOfRepTrigger = repTrigger;\\r\\n        saveAnalytics(ns, analytics);\\r\\n    }\\r\\n\\r\\n    if (targetFaction.maximumAugRep < currentFactionRep || targetRepForGettingToFavor < currentFactionRep || (ns.fileExists(factionDonationFile) && !ns.fileExists(factionToMaxFile))) {\\r\\n\\r\\n        if (!analytics.repTrigger) {\\r\\n            const repTrigger = populateRepTrigger(targetFaction, currentFactionRep, targetRepForGettingToFavor, ns, factionDonationFile, factionToMaxFile);\\r\\n            analytics.repTrigger = repTrigger;\\r\\n            saveAnalytics(ns, analytics);\\r\\n        }\\r\\n\\r\\n        const factionsWithAugmentsToBuy =\\r\\n            mostRepExpensiveForEachFaction\\r\\n                .map(x => {\\r\\n                    {\\r\\n                        const faction = x.faction;\\r\\n                        const factionRep = ns.singularity.getFactionRep(faction);\\r\\n                        const factionAugmentsThatIDontOwnAndCanAfford = ns\\r\\n                            .singularity\\r\\n                            .getAugmentationsFromFaction(faction)\\r\\n                            .filter(y => y !== \\\"NeuroFlux Governor\\\")\\r\\n                            .filter(y => !ownedAugmentations.includes(y))\\r\\n                            .map(y => {\\r\\n                                return {\\r\\n                                    augmentName: y,\\r\\n                                    augmentationRepCost: ns.singularity.getAugmentationRepReq(y),\\r\\n                                    price: ns.singularity.getAugmentationPrice(y),\\r\\n                                    prereqs: ns.singularity.getAugmentationPrereq(y)\\r\\n                                }\\r\\n                            })\\r\\n                            .filter(y => y.augmentationRepCost < factionRep)\\r\\n                            .sort((a, b) => b.price - a.price);\\r\\n\\r\\n                        return {\\r\\n                            faction,\\r\\n                            factionRep,\\r\\n                            factionAugmentsThatIDontOwnAndCanAfford\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n\\r\\n        const priceOfMostExpensiveAugment = Math.max(...factionsWithAugmentsToBuy.find(x => x.faction === targetFaction.faction).factionAugmentsThatIDontOwnAndCanAfford.map(x => x.price));\\r\\n\\r\\n\\r\\n        if (priceOfMostExpensiveAugment < 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // --------\\r\\n        // My augment script ranks every augment that hasn't been purchased by price, and then calculates how many of them I can buy (taking into account the 1.9x price increase per augment, and the additional 1.14x increase per NeuroFlux Governor level). \\r\\n\\r\\n        const purchasableAugments = new Map();\\r\\n\\r\\n        for (const factionWithAugments of factionsWithAugmentsToBuy) {\\r\\n            for (const augment of factionWithAugments.factionAugmentsThatIDontOwnAndCanAfford) {\\r\\n                if (purchasableAugments.has(augment.augmentName) === false) {\\r\\n                    const item = {\\r\\n                        augmentationRepCost: augment.augmentationRepCost,\\r\\n                        price: augment.price,\\r\\n                        prereqs: augment.prereqs,\\r\\n                        faction: factionWithAugments.faction\\r\\n                    }\\r\\n                    purchasableAugments.set(augment.augmentName, item)\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const augmentsLeft = Array.from(purchasableAugments.entries()).sort((a, b) => b[1].price - a[1].price);\\r\\n\\r\\n        const orderedAugments = []; // { factionName, augmentName, basePrice, multipledPrice}\\r\\n\\r\\n        function addPrereqs(prereqName) {\\r\\n            const augment = purchasableAugments.get(prereqName);\\r\\n\\r\\n            if (augment && !ownedAugmentations.includes(prereqName) && !orderedAugments.includes(x => x.augmentName === prereqName)) {\\r\\n\\r\\n                if (augment.prereqs.length > 0) {//it has prereqs, pass it into this. \\r\\n                    for (const prereq of augment.prereqs) {\\r\\n                        addPrereqs(prereq)\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                orderedAugments.push({ faction: augment.faction, augmentName: prereqName, basePrice: augment.price });\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (const augmentData of augmentsLeft) {\\r\\n            const augmentName = augmentData[0];\\r\\n            const augment = augmentData[1];\\r\\n\\r\\n            if (augment.prereqs.length > 0) {\\r\\n                for (const prereqName of augment.prereqs) {\\r\\n                    addPrereqs(prereqName);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            orderedAugments.push( {faction: augment.faction, augmentName: augmentName, basePrice: augment.price, multipledPrice: 0})\\r\\n        }\\r\\n\\r\\n        let priceMultipler = 1;\\r\\n\\r\\n        for (const augment of orderedAugments) {\\r\\n            augment.multipledPrice = augment.basePrice * priceMultipler;\\r\\n            priceMultipler *= 1.9;\\r\\n        }\\r\\n\\r\\n        const moneyNeededForAugments = orderedAugments.reduce((acc, x) => acc + x.multipledPrice, 0);\\r\\n\\r\\n        // make a pass for multiplied price\\r\\n\\r\\n        // (faction, augmentName)\\r\\n        // arrange with prereqs in mind\\r\\n        // then 1.9X the cost every purchase\\r\\n        // then figure out how many NeuroFlux governors we can buy with the rep, and then figure out how much that would cost. \\r\\n\\r\\n        // new order ->\\r\\n        // augments\\r\\n        // neuroflux\\r\\n        // computer\\r\\n        // if we have extra money, then we buy more neuroflux with purchased rep\\r\\n\\r\\n\\r\\n\\r\\n        /// ------\\r\\n\\r\\n        \\r\\n        let buyAugmentsWhenWeHaveMoreThanThisMuchMoney = moneyNeededForAugments;\\r\\n\\r\\n        const estimatedIncomeForTheNextFourHours = incomePerHourEstimate * 4;\\r\\n\\r\\n        const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        const moneyFormatted = formatter.format(incomePerHourEstimate);\\r\\n\\r\\n        if (moneyFormatted !== \\\"$NaN\\\") {\\r\\n            const hoursTillInstall = Math.floor(buyAugmentsWhenWeHaveMoreThanThisMuchMoney / incomePerHourEstimate);\\r\\n            if (updatedMoneyEstimate) {\\r\\n                const now = new Date();\\r\\n                const timeStamp = `[${String(now.getHours()).padStart(2, 0)}:${String(now.getMinutes()).padStart(2, 0)}]`\\r\\n\\r\\n                ns.toast(`${timeStamp} Income Per Hour Estimate: ${moneyFormatted}. ~Hours to install: ${hoursTillInstall}`, \\\"success\\\", 60000)\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (!analytics.firstEncoundedMoneyTrigger) {\\r\\n            const moneyTrigger = createMoneyTrigger(estimatedIncomeForTheNextFourHours, buyAugmentsWhenWeHaveMoreThanThisMuchMoney, moneyAvailable, formatter);\\r\\n\\r\\n            analytics.firstEncoundedMoneyTrigger = moneyTrigger;\\r\\n            saveAnalytics(ns, analytics);\\r\\n        }\\r\\n\\r\\n        if (estimatedIncomeForTheNextFourHours > buyAugmentsWhenWeHaveMoreThanThisMuchMoney || moneyAvailable > buyAugmentsWhenWeHaveMoreThanThisMuchMoney) {\\r\\n\\r\\n            const stopInvestingFileName = \\\"stopInvesting.txt\\\";\\r\\n            if (!ns.fileExists(stopInvestingFileName)) {\\r\\n                ns.write(stopInvestingFileName, buyAugmentsWhenWeHaveMoreThanThisMuchMoney, \\\"W\\\")\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            if (moneyAvailable > buyAugmentsWhenWeHaveMoreThanThisMuchMoney) {\\r\\n                const stopStockTradingFileName = \\\"stopTrading.txt\\\";\\r\\n                if (!ns.fileExists(stopStockTradingFileName)) {\\r\\n                    ns.write(stopStockTradingFileName, \\\"\\\", \\\"W\\\")\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                if (!analytics.moneyTrigger) {\\r\\n                    const moneyTrigger = createMoneyTrigger(estimatedIncomeForTheNextFourHours, buyAugmentsWhenWeHaveMoreThanThisMuchMoney, moneyAvailable, formatter);\\r\\n\\r\\n                    analytics.moneyTrigger = moneyTrigger;\\r\\n                    saveAnalytics(ns, analytics);\\r\\n                }\\r\\n\\r\\n                for (const augment of orderedAugments) {\\r\\n                    purchaseAug(ns, augment, analytics);\\r\\n                }\\r\\n\\r\\n                upgradeHomeMachine(ns, analytics);\\r\\n\\r\\n                const factionsByRating = factionsWithAugmentsToBuy.sort((a, b) => b.factionRep - a.factionRep);\\r\\n\\r\\n                purchaseNeuroFluxGovernors(ns, factionsByRating[0].faction, analytics);\\r\\n\\r\\n                analytics.moneyLeft = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n                saveAnalytics(ns, analytics, true);\\r\\n\\r\\n                ns.singularity.installAugmentations('scripts/coordinator.js')\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    saveAnalytics(ns, analytics);\\r\\n}\\r\\n\\r\\nfunction createMoneyTrigger(estimatedIncomeForTheNextFourHours, buyAugmentsWhenWeHaveMoreThanThisMuchMoney, moneyAvailable, formatter) {\\r\\n    const moneyTrigger = new MoneyTrigger();\\r\\n    moneyTrigger.estimatedIncomeTriggered = estimatedIncomeForTheNextFourHours > buyAugmentsWhenWeHaveMoreThanThisMuchMoney;\\r\\n    moneyTrigger.moneyIsGreaterThanTriggered = moneyAvailable > buyAugmentsWhenWeHaveMoreThanThisMuchMoney;\\r\\n\\r\\n    moneyTrigger.estimatedIncomeForTheNextFourHours = formatter.format(estimatedIncomeForTheNextFourHours);\\r\\n    moneyTrigger.moneyRightNow = formatter.format(moneyAvailable);\\r\\n    moneyTrigger.buyArgumentsWhenWeHave = formatter.format(buyAugmentsWhenWeHaveMoreThanThisMuchMoney);\\r\\n    return moneyTrigger;\\r\\n}\\r\\n\\r\\nfunction populateRepTrigger(targetFaction, currentFactionRep, targetRepForGettingToFavor, ns, factionDonationFile, factionToMaxFile) {\\r\\n    const repTrigger = new RepTrigger();\\r\\n    repTrigger.factionRepGreaterThanMaximumAug = targetFaction.maximumAugRep < currentFactionRep;\\r\\n    repTrigger.factionRepGreaterThanTargetToGetToFavorNeeded = targetRepForGettingToFavor < currentFactionRep;\\r\\n    repTrigger.factionDonationTrigger = ns.fileExists(factionDonationFile) && !ns.fileExists(factionToMaxFile);\\r\\n\\r\\n    repTrigger.maximumAugRepNeeded = targetFaction.maximumAugRep;\\r\\n    repTrigger.currentFactionRep = currentFactionRep;\\r\\n    repTrigger.targetRepForGettingToFavor = targetRepForGettingToFavor;\\r\\n    return repTrigger;\\r\\n}\\r\\n\\r\\nfunction saveAnalytics(ns, analytics, final = false) {\\r\\n    let endOfRoundAnalyticsFile = \\\"analytics/end-round.txt\\\";\\r\\n    ns.rm(endOfRoundAnalyticsFile);\\r\\n\\r\\n    if (final) {\\r\\n        const now = new Date()\\r\\n        const factionToMax = analytics.factionsToMax[analytics.factionsToMax.length - 1].factionToMax.replaceAll(' ', '');\\r\\n        endOfRoundAnalyticsFile = `analytics/${now.toISOString().split('T')[0]}-${String(now.getHours()).padStart(2, 0)}-${String(now.getMinutes()).padStart(2, 0)}-${factionToMax}-end-round.txt`;\\r\\n    }\\r\\n\\r\\n    analytics.lastSaved = new Date();\\r\\n    ns.write(endOfRoundAnalyticsFile, JSON.stringify(analytics), \\\"W\\\");\\r\\n}\\r\\n\\r\\nfunction setGoalAugment(ownedAugmentations, factionToMax, targetFaction, ns) {\\r\\n    const organizations = JSON.parse(ns.read(\\\"data/organizations.txt\\\"));\\r\\n\\r\\n    for (const stopAtAugment of organizations.stopAtAugments) {\\r\\n        const goalAugment = stopAtAugment.augmentToStopAt;\\r\\n        const goalFaction = stopAtAugment.faction;\\r\\n\\r\\n        if (!ownedAugmentations.includes(goalAugment) && factionToMax === goalFaction) {\\r\\n            targetFaction.maximumAugRep = ns.singularity.getAugmentationRepReq(goalAugment);\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction purchaseNeuroFluxGovernors(ns, faction, analytics) {\\r\\n    const augmentName = \\\"NeuroFlux Governor\\\"\\r\\n    const price = ns.singularity.getAugmentationPrice(augmentName);\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    const augmentRepPrice = ns.singularity.getAugmentationRepReq(augmentName);\\r\\n    let factionRep = ns.singularity.getFactionRep(faction);\\r\\n\\r\\n    if (moneyAvailable > price) {\\r\\n        if (factionRep < augmentRepPrice && ns.singularity.getFactionFavor(faction) > 150) {\\r\\n            if (ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n                const repNeeded = augmentRepPrice - factionRep;\\r\\n                let dollarsDonated = 0;\\r\\n                let purchasedRep = 0;\\r\\n                const player = ns.getPlayer();\\r\\n                while (repNeeded > purchasedRep) {\\r\\n                    dollarsDonated += 1_000_000;\\r\\n                    purchasedRep = ns.formulas.reputation.repFromDonation(dollarsDonated, player);\\r\\n                }\\r\\n\\r\\n                analytics.moneySpent.repPurchased += dollarsDonated;\\r\\n                ns.singularity.donateToFaction(faction, dollarsDonated);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        factionRep = ns.singularity.getFactionRep(faction);\\r\\n\\r\\n        if (factionRep > augmentRepPrice) {\\r\\n            analytics.moneySpent.fluxGovernors += price;\\r\\n            ns.singularity.purchaseAugmentation(faction, augmentName);\\r\\n        }\\r\\n    } else {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    purchaseNeuroFluxGovernors(ns, faction, analytics);\\r\\n}\\r\\n\\r\\nfunction upgradeHomeMachine(ns, analytics) {\\r\\n    const home = \\\"home\\\";\\r\\n    const ramCost = ns.singularity.getUpgradeHomeRamCost();\\r\\n    const coreCost = ns.singularity.getUpgradeHomeCoresCost();\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(home);\\r\\n    const orginalSpecs = ns.getServer(home);\\r\\n\\r\\n    if (ramCost > moneyAvailable && coreCost > moneyAvailable) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    if (ramCost > coreCost) {\\r\\n        analytics.moneySpent.homeCores += coreCost;\\r\\n        ns.singularity.upgradeHomeCores();\\r\\n    } else {\\r\\n        analytics.moneySpent.homeRam += ramCost;\\r\\n        ns.singularity.upgradeHomeRam();\\r\\n    }\\r\\n\\r\\n    const upgradedServer = ns.getServer(home);\\r\\n\\r\\n    analytics.amountOfRamIncrease += upgradedServer.maxRam - orginalSpecs.maxRam;\\r\\n    analytics.amountOfCoresIncrease += upgradedServer.cpuCores - orginalSpecs.cpuCores;\\r\\n\\r\\n    return upgradeHomeMachine(ns, analytics);\\r\\n}\\r\\n\\r\\nfunction purchaseAug(ns, augment, analytics) {\\r\\n    const ownedAugments = ns.singularity.getOwnedAugmentations(true);\\r\\n    const augmentName = augment.augmentName;\\r\\n\\r\\n    if (ownedAugments.includes(augmentName) === false) {\\r\\n        const augmentPrice = ns.singularity.getAugmentationPrice(augmentName);\\r\\n        const amountOfMoneyWeHave = ns.getServerMoneyAvailable(\\\"home\\\")\\r\\n\\r\\n        if (augmentPrice < amountOfMoneyWeHave) {\\r\\n            analytics.moneySpent.augments += augmentPrice;\\r\\n            if (!analytics.augsBought) {\\r\\n                analytics.augsBought = [];\\r\\n            }\\r\\n            analytics.augsBought.push(augmentName)\\r\\n\\r\\n            ns.singularity.purchaseAugmentation(augment.faction, augmentName);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass EndOfRoundAnalytics {\\r\\n    firstStarted = new Date();\\r\\n\\r\\n\\r\\n    firstAssignFactionToMax;\\r\\n    firstAssignFactionToMaxViaDonation;\\r\\n\\r\\n    factionsToMax = [];\\r\\n\\r\\n    firstEncounterOfRepTrigger;\\r\\n    repTrigger;\\r\\n\\r\\n\\r\\n    firstEncoundedMoneyTrigger;\\r\\n    moneyTrigger;\\r\\n\\r\\n    augsBought = [];\\r\\n\\r\\n    amountOfRamIncrease\\r\\n    amountOfCoresIncrease\\r\\n\\r\\n    moneySpent = new MoneySpent();\\r\\n\\r\\n    moneyLeft = 0;\\r\\n    lastSaved;\\r\\n}\\r\\n\\r\\nclass MoneyTrigger {\\r\\n    estimatedIncomeTriggered;\\r\\n    moneyIsGreaterThanTriggered;\\r\\n\\r\\n    estimatedIncomeForTheNextFourHours;\\r\\n    moneyRightNow;\\r\\n    buyArgumentsWhenWeHave;\\r\\n\\r\\n    time = new Date();\\r\\n}\\r\\n\\r\\nclass MoneySpent {\\r\\n\\r\\n    augments = 0;\\r\\n    homeCores = 0;\\r\\n    homeRam = 0;\\r\\n    fluxGovernors = 0;\\r\\n    repPurchased = 0;\\r\\n}\\r\\n\\r\\nclass RepTrigger {\\r\\n\\r\\n    factionRepGreaterThanMaximumAug;\\r\\n    factionRepGreaterThanTargetToGetToFavorNeeded;\\r\\n    factionDonationTrigger;\\r\\n\\r\\n\\r\\n    maximumAugRepNeeded;\\r\\n    currentFactionRep;\\r\\n    targetRepForGettingToFavor;\\r\\n\\r\\n    time = new Date();\\r\\n}\",\"filename\":\"scripts/singularity/finish-round.js\",\"server\":\"home\"}}],[\"scripts/singularity/join-organziations.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const toJoinInOrderInWhichIWantToComplete = [\\r\\n        \\\"CyberSec\\\",\\r\\n        \\\"NiteSec\\\",\\r\\n        \\\"Chongqing\\\",\\r\\n        \\\"The Black Hand\\\",\\r\\n        \\\"Bachman & Associates\\\",\\r\\n        \\\"BitRunners\\\",\\r\\n        \\\"Daedalus\\\",\\r\\n        \\\"NWO\\\",\\r\\n        \\\"OmniTek Incorporated\\\",\\r\\n        \\\"Blade Industries\\\",\\r\\n        \\\"ECorp\\\",\\r\\n    // \\\"The Covenant\\\",\\r\\n        \\\"Illuminati\\\",\\r\\n        \\\"Aevum\\\",\\r\\n        \\\"Volhaven\\\",\\r\\n        \\\"New Tokyo\\\",\\r\\n        \\\"Ishima\\\",\\r\\n        \\\"Tian Di Hui\\\",\\r\\n        \\\"Netburners\\\",\\r\\n    ];\\r\\n\\r\\n    const companiesWeWantToBecomePartOf = [\\r\\n        \\\"Bachman & Associates\\\", \\r\\n        \\\"NWO\\\", \\r\\n        \\\"OmniTek Incorporated\\\", \\r\\n        \\\"Blade Industries\\\", \\r\\n        \\\"ECorp\\\"\\r\\n    ]; \\r\\n\\r\\n    const doNoWorkFor = [\\r\\n        \\\"Aevum\\\",\\r\\n        \\\"Volhaven\\\",\\r\\n        \\\"New Tokyo\\\",\\r\\n        \\\"Ishima\\\",\\r\\n        \\\"Tian Di Hui\\\",\\r\\n        \\\"Netburners\\\"\\r\\n    ];\\r\\n\\r\\n    const stopAtAugments = [\\r\\n        { final: true, faction: \\\"Chongqing\\\", augmentToStopAt: \\\"Neuregen Gene Modification\\\" }\\r\\n    ]\\r\\n\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n    if (moneyAvailable > 150_000_000) {\\r\\n        toJoinInOrderInWhichIWantToComplete.push(\\\"Sector-12\\\");\\r\\n        doNoWorkFor.push(\\\"Sector-12\\\");\\r\\n    }\\r\\n\\r\\n    const factionInvitations = ns.singularity.checkFactionInvitations();\\r\\n\\r\\n    const organzations = { toJoinInOrderInWhichIWantToComplete, companiesWeWantToBecomePartOf, doNoWorkFor, stopAtAugments };\\r\\n\\r\\n    const organizationTextFileName = \\\"data/organizations.txt\\\";\\r\\n    ns.rm(organizationTextFileName);\\r\\n    ns.write(organizationTextFileName, JSON.stringify(organzations), \\\"W\\\");\\r\\n\\r\\n    for (const name of toJoinInOrderInWhichIWantToComplete) {\\r\\n        if (factionInvitations.includes(name)) {\\r\\n            await ns.singularity.joinFaction(name);\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/singularity/join-organziations.js\",\"server\":\"home\"}}],[\"scripts/singularity/study-computer-science.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const player = ns.getPlayer();\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (player.factions.length === 0 && !currentWork) {\\r\\n        ns.singularity.universityCourse(\\\"Rothman University\\\", \\\"Computer Science\\\", true);\\r\\n        return;\\r\\n    }\\r\\n}\",\"filename\":\"scripts/singularity/study-computer-science.js\",\"server\":\"home\"}}],[\"scripts/singularity/travel-to-get-augs.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const ownedAugmentations = JSON.parse(ns.read(\\\"data/ownedAugs.txt\\\"));\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (moneyAvailable > 10_000_000 && notInAnyCityFaction(ns)) {\\r\\n\\r\\n        if (travelToGetUniqueAugments(ns, \\\"Neuregen Gene Modification\\\", \\\"Chongqing\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, 'PCMatrix', \\\"Aevum\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, 'CashRoot Starter Kit', \\\"Sector-12\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, \\\"DermaForce Particle Barrier\\\", \\\"Volhaven\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, \\\"NutriGen Implant\\\", \\\"New Tokyo\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, \\\"INFRARET Enhancement\\\", \\\"Ishima\\\", ownedAugmentations)) { return; }\\r\\n    }\\r\\n\\r\\n    const playersLocation = ns.getPlayer().city\\r\\n    if (moneyAvailable > 250_000_000) {\\r\\n        if (ns.singularity.getFactionRep(\\\"Tian Di Hui\\\") === 0 && playersLocation !== \\\"Chongqing\\\") {\\r\\n            ns.singularity.travelToCity(\\\"Chongqing\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction notInAnyCityFaction(ns){\\r\\n    const cityFactions = [\\\"Chongqing\\\", \\\"Aevum\\\", \\\"Sector-12\\\", \\\"Volhaven\\\", \\\"New Tokyo\\\", \\\"Ishima\\\"];\\r\\n\\r\\n    for (const city of cityFactions) {\\r\\n        if(ns.singularity.getFactionRep(city)){\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return true;\\r\\n}\\r\\n\\r\\nfunction travelToGetUniqueAugments(ns, augmentWanted, city, ownedAugmentations) {\\r\\n    if (!ownedAugmentations.includes(augmentWanted)) {\\r\\n\\r\\n        const playersLocation = ns.getPlayer().city\\r\\n        if (ns.singularity.getFactionRep(city) === 0 && playersLocation !== city) {\\r\\n            ns.singularity.travelToCity(city);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n    return false;\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/singularity/travel-to-get-augs.js\",\"server\":\"home\"}}],[\"scripts/singularity/upgade-home-machine.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let visitedBefore = false;\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const ramObservationsTextFile = '../../data/ramObservations.txt';\\r\\n    const stopInvestingFileName = \\\"stopInvesting.txt\\\";\\r\\n    if (ns.fileExists(stopInvestingFileName)) {\\r\\n        if (ns.fileExists(ramObservationsTextFile)) {\\r\\n            ns.rm(ramObservationsTextFile);\\r\\n        }\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    visitedBefore = false;\\r\\n\\r\\n    await upgradeHomeRamOrCpu(ns, 11_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 100_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 30_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 100_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 1_000_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 10_000_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 100_000_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 1_000_000_000_000_000);\\r\\n}\\r\\n\\r\\nasync function upgradeHomeRamOrCpu(ns, moneyLimit) {\\r\\n    if (visitedBefore) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const ramUpgradeCost = ns.singularity.getUpgradeHomeRamCost();\\r\\n    const coreUpgradeCost = ns.singularity.getUpgradeHomeCoresCost();\\r\\n\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (moneyLimit < coreUpgradeCost && moneyLimit < ramUpgradeCost) {\\r\\n        return;\\r\\n    } else {\\r\\n        visitedBefore = true;\\r\\n    }\\r\\n\\r\\n    const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n    let stockMarketReserveMoney = new ReserveForTrading();\\r\\n    if (ns.fileExists(stockMarketReserveMoneyFile)) {\\r\\n        stockMarketReserveMoney = new ReserveForTrading(JSON.parse(ns.read(stockMarketReserveMoneyFile)));\\r\\n    }\\r\\n\\r\\n    if (ramUpgradeCost < coreUpgradeCost) {\\r\\n\\r\\n        const moneyLeftOverForRam = moneyAvailable - ramUpgradeCost;\\r\\n\\r\\n        if (moneyLeftOverForRam > moneyLimit) {\\r\\n            if (stockMarketReserveMoney.canSpend(ns, ramUpgradeCost)) {\\r\\n                ns.singularity.upgradeHomeRam();\\r\\n                ns.toast(`Upgraded home ram`, \\\"success\\\", null);\\r\\n                await ns.sleep(100);\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } else {\\r\\n\\r\\n        const moneyLeftOverForCores = moneyAvailable - coreUpgradeCost;\\r\\n\\r\\n        if (moneyLeftOverForCores > moneyLimit) {\\r\\n            if (stockMarketReserveMoney.canSpend(ns, coreUpgradeCost)) {\\r\\n                ns.singularity.upgradeHomeCores()\\r\\n                ns.toast(`Upgraded home core`, \\\"success\\\", null);\\r\\n                await ns.sleep(100);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass ReserveForTrading {\\r\\n    stockMarketReserveMoneyLimit = 1_000_000_000_000;\\r\\n    capitalToReserveForTrading = 0;\\r\\n    moneyInvested = 0;\\r\\n    moneyRequested = new Map();\\r\\n    countOfVisitedWithoutFillingRequest = 0;\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    setMoneyInvested(moneyInvested, ns) {\\r\\n        this.moneyInvested = moneyInvested;\\r\\n\\r\\n        const potentialCapitalReserve = moneyInvested / 2;\\r\\n\\r\\n        this.capitalToReserveForTrading = Math.max(...[potentialCapitalReserve, this.capitalToReserveForTrading]);\\r\\n\\r\\n        if (this.capitalToReserveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            this.capitalToReserveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        this.countOfVisitedWithoutFillingRequest++;\\r\\n    }\\r\\n\\r\\n    canSpend(ns, moneyNeeded) {\\r\\n        const moneyOnHome = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        let moneyToSaveForTrading = this.capitalToReserveForTrading - this.moneyInvested;\\r\\n\\r\\n        if (moneyToSaveForTrading < 0) {\\r\\n            moneyToSaveForTrading = 0;\\r\\n        }\\r\\n\\r\\n        if (moneyToSaveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            moneyToSaveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        const canSpend = moneyNeeded < moneyOnHome - moneyToSaveForTrading\\r\\n\\r\\n        if (canSpend === false) {\\r\\n            this.requestMoney(ns, moneyNeeded);\\r\\n        } else {\\r\\n            this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n            const nameOfRequest = \\\"upgrade-home-machine\\\";\\r\\n            this.moneyRequested.delete(nameOfRequest);\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        return canSpend;\\r\\n    }\\r\\n\\r\\n    requestMoney(ns, amount) {\\r\\n        const nameOfRequest = \\\"upgrade-home-machine\\\";\\r\\n        this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n        const moneyRequestedPreviously = this.moneyRequested.get(nameOfRequest);\\r\\n        if (moneyRequestedPreviously) {\\r\\n            if (moneyRequestedPreviously < amount) {\\r\\n                this.moneyRequested.set(nameOfRequest, amount);\\r\\n                this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n                const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n                ns.rm(stockMarketReserveMoneyFile);\\r\\n                ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n            }\\r\\n        } else {\\r\\n            this.moneyRequested.set(nameOfRequest, amount);\\r\\n            this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/upgade-home-machine.js\",\"server\":\"home\"}}],[\"scripts/singularity/workout.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const ownedAugmentations = ns.singularity.getOwnedAugmentations(false);\\r\\n    const includesHVMind = ownedAugmentations.includes(\\\"ECorp HVMind Implant\\\");\\r\\n\\r\\n    if (!includesHVMind) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // if(getBuffForFaction(ns, \\\"The Covenant\\\", 850)){\\r\\n    //     return;\\r\\n    // } \\r\\n\\r\\n    if(getBuffForFaction(ns, \\\"Illuminati\\\", 1200)){\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n    if(currentWork && currentWork.type === \\\"CLASS\\\"){\\r\\n        ns.singularity.stopAction();\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\nfunction getBuffForFaction(ns, faction, targetForAttributes){\\r\\n    const player = ns.getPlayer();\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (!player.factions.includes(faction) && (!currentWork || currentWork.type === \\\"CLASS\\\")) {\\r\\n        \\r\\n        if(doExersizeIfAppropriate(player.skills.agility, currentWork, ns, 'agi', targetForAttributes)){\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        if(doExersizeIfAppropriate(player.skills.defense, currentWork, ns, 'def', targetForAttributes)){\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        if(doExersizeIfAppropriate(player.skills.strength, currentWork, ns, 'str', targetForAttributes)){\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        if(doExersizeIfAppropriate(player.skills.dexterity, currentWork, ns, 'dex', targetForAttributes)){\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction doExersizeIfAppropriate(skill, currentWork, ns, type, targetForAttributes) {\\r\\n    if (skill < targetForAttributes) {\\r\\n        if (!currentWork || currentWork.classType !== type) {\\r\\n            ns.singularity.travelToCity(\\\"Sector-12\\\");\\r\\n            ns.singularity.gymWorkout(\\\"powerhouse gym\\\", type, true);\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/workout.js\",\"server\":\"home\"}}],[\"scripts/tools/delete-all-js.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    \\r\\n    const doNoDeleteFolders = [];\\r\\n\\r\\n    for (const textFile of ns.ls(\\\"home\\\", \\\".js\\\")) {\\r\\n        if(!doNoDeleteFolders.find(x => textFile.startsWith(x))){\\r\\n            ns.rm(textFile);\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\",\"filename\":\"scripts/tools/delete-all-js.js\",\"server\":\"home\"}}],[\"scripts/tools/delete-job-from-batch-queue.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\nexport async function main(ns) {\\r\\n\\r\\n    const targetName = ns.args[0];\\r\\n\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\"\\r\\n\\r\\n    let batchQueueForDifferentTargets = new Map();\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        batchQueueForDifferentTargets = new Map(JSON.parse(ns.read(batchQueuesFileName)));\\r\\n    }\\r\\n\\r\\n    const target = batchQueueForDifferentTargets.get(targetName);\\r\\n\\r\\n    for (const batch of target.batchesQueue) {\\r\\n        batch.jobs.map(x => {\\r\\n            if (x.pid) {\\r\\n                ns.kill(x.pid);\\r\\n            }\\r\\n        });\\r\\n    };\\r\\n\\r\\n    batchQueueForDifferentTargets.delete(targetName);\\r\\n\\r\\n    ns.rm(batchQueuesFileName);\\r\\n    ns.write(batchQueuesFileName, JSON.stringify(Array.from(batchQueueForDifferentTargets.entries()), \\\"W\\\"));\\r\\n\\r\\n}\\r\\n\",\"filename\":\"scripts/tools/delete-job-from-batch-queue.js\",\"server\":\"home\"}}],[\"scripts/clean.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/clean.js \\r\\nexport async function main(ns) {\\r\\n    let newMachine = false;\\r\\n\\r\\n    if (ns.args[0] === \\\"new\\\") {\\r\\n        newMachine = true;\\r\\n    }\\r\\n\\r\\n    \\r\\n    if (!newMachine) {\\r\\n        ns.killall(\\\"home\\\", true);\\r\\n\\r\\n        const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n        enviroment\\r\\n            .filter(x => x.server.hasAdminRights)\\r\\n            .map(target => {\\r\\n                ns.killall(target.name);\\r\\n            })\\r\\n    }\\r\\n\\r\\n    const doNoDeleteFolders = [\\\"analytics\\\", \\\"contracts\\\"]\\r\\n\\r\\n\\r\\n    for (const textFile of ns.ls(\\\"home\\\", \\\".txt\\\")) {\\r\\n        if(!doNoDeleteFolders.find(x => textFile.startsWith(x))){\\r\\n            ns.rm(textFile);\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/clean.js\",\"server\":\"home\"}}],[\"scripts/coordinator.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/coordinator.js 1000 564 5.629 BitRunners\\r\\nexport async function main(ns) {\\r\\n    const loopEveryXSeconds = 2;\\r\\n    const sleepTotalOfXMS = loopEveryXSeconds * 1000;\\r\\n    const numberOfDifferentSleeps = 6;\\r\\n    const individualSleepAmount = sleepTotalOfXMS / numberOfDifferentSleeps;\\r\\n    let dispatchScript = 'scripts/hacking/memory-starved-dispatch.js';\\r\\n\\r\\n    let runClean = true;\\r\\n    if (ns.args[0] === 'old') {\\r\\n        runClean = false;\\r\\n    }\\r\\n\\r\\n    if (runClean) {\\r\\n        ns.run('scripts/clean.js', 1, \\\"new\\\");\\r\\n        await ns.sleep(1000);\\r\\n    }\\r\\n\\r\\n    ns.run('scripts/precalculate-important-data.js')\\r\\n\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    while (true) {\\r\\n\\r\\n        if (ns.fileExists('Formulas.exe')) {\\r\\n            dispatchScript = 'scripts/hacking/batch-dispatch.js'\\r\\n        }\\r\\n\\r\\n        ns.run(\\\"scripts/scan.js\\\", 1, dispatchScript); \\r\\n        await ns.sleep(individualSleepAmount); \\r\\n\\r\\n\\r\\n        ns.run('scripts/hacking/hack-all-machines.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        ns.run('scripts/contracts/contract-coordinator.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        if(ns.stock.hasTIXAPIAccess()){\\r\\n            ns.run('scripts/investments/invest-in-stocks.js');\\r\\n        }\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n\\r\\n        ns.run('scripts/investments/investments-coordinator.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n\\r\\n        await singularityStuff(ns);\\r\\n    }\\r\\n\\r\\n\\r\\n    async function singularityStuff(ns) { \\r\\n        await doSingularityWork(ns, 'backdoor-all-machines')\\r\\n        await doSingularityWork(ns, 'join-organziations');\\r\\n        await doSingularityWork(ns, 'do-work');\\r\\n        await doSingularityWork(ns, 'finish-round');\\r\\n        await doSingularityWork(ns, 'finish-bitnode');\\r\\n        await doSingularityWork(ns, 'study-computer-science');\\r\\n        await doSingularityWork(ns, 'create-early-programs');\\r\\n        await doSingularityWork(ns, 'do-job');\\r\\n        await doSingularityWork(ns, 'buy-rep');\\r\\n        await doSingularityWork(ns, 'workout');\\r\\n        await doSingularityWork(ns, 'upgade-home-machine');\\r\\n        await doSingularityWork(ns, 'travel-to-get-augs');\\r\\n    }\\r\\n    \\r\\n    async function doSingularityWork(ns, script){\\r\\n        ns.run(`scripts/singularity/${script}.js`);\\r\\n    \\r\\n        await ns.sleep(individualSleepAmount / 12);\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/coordinator.js\",\"server\":\"home\"}}],[\"scripts/precalculate-important-data.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\nexport async function main(ns) {\\r\\n\\r\\n  const notImportantScriptsForEarlyGame = [\\r\\n    \\\"scripts/singularity/finish-bitnode.js\\\", \\r\\n    \\\"scripts/singularity/finish-round.js\\\", \\r\\n    \\\"scripts/singularity/buy-rep.js\\\",\\r\\n    \\\"scripts/hacking/batch-dispatch.js\\\",\\r\\n  ];\\r\\n\\r\\n  const orderedScriptsByRamUsage = ns.ls(\\\"home\\\")\\r\\n    .filter(x => x.endsWith(\\\".js\\\"))\\r\\n    .map(x => new ScriptRam(ns.getScriptRam(x), x))\\r\\n    .sort((a, b) => b.ram - a.ram);\\r\\n\\r\\n  const mostExpensiveScript = orderedScriptsByRamUsage[0];\\r\\n  const coordinator = orderedScriptsByRamUsage.find(x => x.name === \\\"scripts/coordinator.js\\\")\\r\\n  const contractCoordinator = orderedScriptsByRamUsage.find(x => x.name === \\\"scripts/contracts/contract-coordinator.js\\\")\\r\\n  const ramToReserve = coordinator.ram + mostExpensiveScript.ram + contractCoordinator.ram;\\r\\n\\r\\n  const earlyGameScriptsUsage = orderedScriptsByRamUsage\\r\\n    .filter(x => !notImportantScriptsForEarlyGame.includes(x.name));\\r\\n\\r\\n  const mostExpensiveEarlyGame = earlyGameScriptsUsage[0];\\r\\n  const ramToReserveInLimitedEnvironment = coordinator.ram + mostExpensiveEarlyGame.ram;\\r\\n  const earlyGameLimiter = mostExpensiveEarlyGame.name;\\r\\n\\r\\n  const ramReserveFile = 'data/ramToReserveOnHome.txt';\\r\\n\\r\\n\\r\\n  ns.rm(ramReserveFile);\\r\\n  ns.write(ramReserveFile, JSON.stringify({ramToReserve, ramToReserveInLimitedEnvironment, earlyGameLimiter}), \\\"W\\\");\\r\\n\\r\\n  const ownedAugmentations = ns.singularity.getOwnedAugmentations(true);\\r\\n\\r\\n  const ownedAugsTextFileName = \\\"data/ownedAugs.txt\\\";\\r\\n  ns.rm(ownedAugsTextFileName);\\r\\n  ns.write(ownedAugsTextFileName, JSON.stringify(ownedAugmentations), \\\"W\\\");\\r\\n  \\r\\n}\\r\\n\\r\\nclass ScriptRam {\\r\\n  constructor(ram, name) {\\r\\n    this.ram = ram;\\r\\n    this.name = name;\\r\\n  }\\r\\n}\",\"filename\":\"scripts/precalculate-important-data.js\",\"server\":\"home\"}}],[\"scripts/scan.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n/// run scripts/scan.js dispatchScript\\r\\nexport async function main(ns) {\\r\\n    const dispatchScript = ns.args[0];\\r\\n\\r\\n    if (dispatchScript === undefined){\\r\\n        ns.tprint(\\\"Must define dispatch script for scan.\\\")\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const result = new dataMonger(ns).scanEnvironment();\\r\\n\\r\\n    ns.rm('data/enviroment.txt')\\r\\n    ns.write('data/enviroment.txt', JSON.stringify(result), \\\"W\\\")\\r\\n\\r\\n    ns.run(dispatchScript)\\r\\n}\\r\\n\\r\\nexport class dataMonger {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    scanEnvironment(machineToScan = \\\"home\\\", serversToScan = [], scannedServers = [], result = []) {\\r\\n        if (serversToScan.length === 0 && machineToScan !== \\\"home\\\") {\\r\\n            return result;\\r\\n        }\\r\\n\\r\\n        let lineage = result\\r\\n            .find(x => x.name === machineToScan)\\r\\n            ?.lineage\\r\\n            .map(x => x); // so we aren't using a reference\\r\\n\\r\\n        const scan = this.ns\\r\\n            .scan(machineToScan)\\r\\n            .map(x => new ServerNode(\\r\\n                machineToScan,\\r\\n                this.ns.getServer(x),\\r\\n                lineage\\r\\n            ));\\r\\n\\r\\n        scan.forEach(x => {\\r\\n            if (!scannedServers.includes(x.name) && !serversToScan.includes(x.name)) {\\r\\n                serversToScan.push(x.name);\\r\\n                result.push(x);\\r\\n            }\\r\\n        });\\r\\n\\r\\n        scannedServers.push(machineToScan);\\r\\n        machineToScan = serversToScan.pop();\\r\\n        return this.scanEnvironment(machineToScan, serversToScan, scannedServers, result);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass ServerNode {\\r\\n    constructor(parentsName, server, lineage = []) {\\r\\n        this.name = server.hostname;\\r\\n        this.lineage = lineage\\r\\n        if (parentsName !== \\\"home\\\" && this.lineage !== undefined) {\\r\\n            if (!this.lineage.includes(parentsName)) {\\r\\n                this.lineage.push(parentsName)\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.server = server;\\r\\n    }\\r\\n}\",\"filename\":\"scripts/scan.js\",\"server\":\"home\"}}],[\"scripts/contracts/get.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// let savedContractsFileNameForHuman;\\r\\n\\r\\nconst thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \\r\\n\\r\\nexport async function main(ns) {\\r\\n    const allContracts = [];\\r\\n\\r\\n    JSON\\r\\n        .parse(ns.read('../../data/enviroment.txt'))\\r\\n        .map(server => {\\r\\n            const hostName = server.name;\\r\\n            ns\\r\\n                .ls(hostName)\\r\\n                .filter(file => file.endsWith('.cct'))\\r\\n                .map(contract => {\\r\\n                    const cont = new Contract(\\r\\n                        hostName,\\r\\n                        contract,\\r\\n                        ns.codingcontract.getContractType(contract, hostName),\\r\\n                        ns.codingcontract.getNumTriesRemaining(contract, hostName)\\r\\n                    );\\r\\n\\r\\n                    allContracts.push(cont);\\r\\n                });\\r\\n        });\\r\\n    \\r\\n\\r\\n    ns.rm(thisRoundsContractsFileName);\\r\\n    ns.write(thisRoundsContractsFileName, JSON.stringify(allContracts), \\\"W\\\");\\r\\n}\\r\\n\\r\\nclass Contract {\\r\\n    constructor(server, name, type, attemptsLeft, input, description) {\\r\\n        this.server = server;\\r\\n        this.name = name;\\r\\n        this.type = type;\\r\\n        this.attemptsLeft = attemptsLeft;\\r\\n        this.input = input;\\r\\n        this.description = description;\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/contracts/get.js\",\"server\":\"home\"}}],[\"scripts/contracts/do.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const solverRegistry = [\\r\\n        new LzDecompression2Handler(),\\r\\n        new AlgorithmicStockTrading4Handler(),\\r\\n        new AlgorithmicStockTrading3Handler(),\\r\\n        new AlgorithmicStockTrading1Handler(),\\r\\n        new AlgorithmicStockTrading2Handler(),\\r\\n        new SpiralizeMatrixHandler(),\\r\\n        new Encryption1Handler(),\\r\\n        new Encryption2Handler(),\\r\\n    ]\\r\\n\\r\\n    const contracts = JSON.parse(ns.read(thisRoundsContractsFileName));\\r\\n    contracts\\r\\n        .forEach(contract => {\\r\\n            if (contract.attemptsLeft === 10 || contract.attemptsLeft === 5) {\\r\\n                const solver = solverRegistry.find(x => x.type === contract.type);\\r\\n                if (solver) {\\r\\n                    const result = solver.solve(contract.input);\\r\\n                    const success = ns.codingcontract.attempt(result, contract.name, contract.server);\\r\\n                    if (success === \\\"\\\") {\\r\\n                        const failuresContractsFileName = `contracts/failure/${contract.server}-${contract.name}-${contract.type.replaceAll(\\\" \\\", \\\"\\\")}.txt`;\\r\\n\\r\\n                        const saveThis = { contract, wrongResult: result };\\r\\n\\r\\n                        ns.write(failuresContractsFileName, JSON.stringify(saveThis), \\\"W\\\");\\r\\n\\r\\n                        ns.alert(`${contract.name} on ${contract.server} had a problem solving. You need to figure this out. Type: ${contract.type}`);\\r\\n                    } else {\\r\\n                        ns.toast(`Contract completed: ${success} Type: ${contract.type}`, \\\"success\\\", null);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        });\\r\\n}\\r\\n\\r\\nconst thisRoundsContractsFileName = \\\"data/contracts.txt\\\";\\r\\n\\r\\nclass LzDecompression2Handler {\\r\\n    type = 'Compression II: LZ Decompression';\\r\\n\\r\\n    solve(input) {\\r\\n        return this.lzDecompression(input);\\r\\n    }\\r\\n\\r\\n    /// all need to be worked on in tests. These are just copies.\\r\\n    lzDecompression(stringToDecode) {\\r\\n        let decompressedString = '';\\r\\n        let startOfNextChunk = 0\\r\\n        let nextSectionCompressed = false;\\r\\n\\r\\n\\r\\n        while (startOfNextChunk < stringToDecode.length) {\\r\\n            const chunkLength = Number(stringToDecode[startOfNextChunk]);\\r\\n\\r\\n\\r\\n            if (chunkLength === 0) {\\r\\n                startOfNextChunk++;\\r\\n                nextSectionCompressed = !nextSectionCompressed;\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            if (nextSectionCompressed) {\\r\\n                const nextCharacterInEncoded = parseInt(stringToDecode[startOfNextChunk + 1]);\\r\\n\\r\\n                const placesBack = nextCharacterInEncoded;\\r\\n                const startText = decompressedString.length - placesBack;\\r\\n                const endOfText = startText + chunkLength;\\r\\n\\r\\n                if (chunkLength <= nextCharacterInEncoded) {\\r\\n                    decompressedString += decompressedString.slice(startText, endOfText);\\r\\n                } else {\\r\\n                    let nextChunk = \\\"\\\";\\r\\n                    const partialChunk = decompressedString.slice(startText, endOfText);\\r\\n\\r\\n                    while (nextChunk.length < chunkLength) {\\r\\n                        if (nextChunk.length + partialChunk.length > chunkLength) {\\r\\n                            const howMuchLeftInChunk = chunkLength - nextChunk.length;\\r\\n                            nextChunk += partialChunk.slice(0, howMuchLeftInChunk)\\r\\n                        } else {\\r\\n                            nextChunk += partialChunk;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    decompressedString += nextChunk;\\r\\n                }\\r\\n\\r\\n                startOfNextChunk += 2;\\r\\n                nextSectionCompressed = false;\\r\\n            } else {\\r\\n                const startText = startOfNextChunk + 1;\\r\\n                const endOfText = startText + chunkLength;\\r\\n                decompressedString += stringToDecode.slice(startText, endOfText);\\r\\n                startOfNextChunk = endOfText;\\r\\n                nextSectionCompressed = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        return decompressedString;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading1Handler {\\r\\n    type = 'Algorithmic Stock Trader I';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 1;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading2Handler {\\r\\n    type = 'Algorithmic Stock Trader II';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input.length;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading3Handler {\\r\\n    type = 'Algorithmic Stock Trader III';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 2;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading4Handler {\\r\\n    type = 'Algorithmic Stock Trader IV';\\r\\n\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input[0];\\r\\n        const stockPricesByDay = input[1];\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return this.tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n\\r\\n    tradeStock(maxNumberOfTrades, stockPricesByDay) {\\r\\n        if (maxNumberOfTrades === 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        let profitsPerTransaction = []\\r\\n\\r\\n        for (let i = stockPricesByDay.length - 1; i >= 1; i--) {\\r\\n            const priceToSeeIfHasNoVolitility = stockPricesByDay[i];\\r\\n\\r\\n            const yesterdaysPrice = stockPricesByDay[i - 1]\\r\\n            const tomorrowsPrice = stockPricesByDay[i + 1]\\r\\n\\r\\n            if (\\r\\n                (yesterdaysPrice <= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility <= tomorrowsPrice) || // rising prices filter\\r\\n                (!tomorrowsPrice && yesterdaysPrice >= priceToSeeIfHasNoVolitility) || // end price\\r\\n                (yesterdaysPrice >= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility >= tomorrowsPrice)) { // falling price filter\\r\\n                stockPricesByDay.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < stockPricesByDay.length; i++) {\\r\\n            const price = stockPricesByDay[i];\\r\\n            const potentialBuyPrice = stockPricesByDay[i - 1];\\r\\n            let potentialProfit = 0;\\r\\n\\r\\n            if (potentialBuyPrice) {\\r\\n                potentialProfit = price - potentialBuyPrice;\\r\\n            }\\r\\n\\r\\n            if (potentialProfit < 0) {\\r\\n                potentialProfit = 0;\\r\\n            }\\r\\n\\r\\n\\r\\n            profitsPerTransaction.push({ price, potentialProfit });\\r\\n        }\\r\\n\\r\\n        if (maxNumberOfTrades >= profitsPerTransaction.filter(x => x.potentialProfit > 0).length) {\\r\\n            return profitsPerTransaction\\r\\n                .reduce((acc, x) => acc + x.potentialProfit, 0);\\r\\n        }\\r\\n\\r\\n        const minProfit = Math.min(...profitsPerTransaction.filter(x => x.potentialProfit !== 0).map(x => x.potentialProfit));\\r\\n        const countOfMinProfits = profitsPerTransaction.filter(x => x.potentialProfit === minProfit).length;\\r\\n        const maxPrice = Math.max(...stockPricesByDay);\\r\\n        const arraysToWorkWith = [];\\r\\n\\r\\n        for (let i = 0; i < profitsPerTransaction.length; i++) {\\r\\n            const profitPerTranaction = profitsPerTransaction[i];\\r\\n\\r\\n            if (profitPerTranaction.potentialProfit === minProfit) {\\r\\n\\r\\n                const copyOfProfitsPerTransaction = profitsPerTransaction.map(x => x)\\r\\n                if (profitPerTranaction.price === maxPrice) {\\r\\n                    copyOfProfitsPerTransaction.splice(i - 1, 1);\\r\\n                } else {\\r\\n                    copyOfProfitsPerTransaction.splice(i, 1); // if there is a bigger price in the future, splice sell price. \\r\\n                }\\r\\n\\r\\n                arraysToWorkWith.push(copyOfProfitsPerTransaction.map(x => x.price));\\r\\n            }\\r\\n\\r\\n            if (arraysToWorkWith.length === countOfMinProfits) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const potentialProfitsForAllTrades = []\\r\\n        for (const newArrayOfPrices of arraysToWorkWith) {\\r\\n            potentialProfitsForAllTrades.push(this.tradeStock(maxNumberOfTrades, newArrayOfPrices))\\r\\n        }\\r\\n\\r\\n        return Math.max(...potentialProfitsForAllTrades);\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass SpiralizeMatrixHandler {\\r\\n    type = \\\"Spiralize Matrix\\\";\\r\\n\\r\\n    solve(matrix) {\\r\\n        return this.solveRecursively(JSON.parse(JSON.stringify(matrix)));\\r\\n    }\\r\\n\\r\\n    solveRecursively(matrix, spiralOrderResult = []) {\\r\\n\\r\\n        if (matrix.length === 0) {\\r\\n            return spiralOrderResult;\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < matrix.length; i++) {\\r\\n            if (i === 0 || i === matrix.length - 1) {\\r\\n                let rowToEmpty = matrix[i];\\r\\n\\r\\n                if (i === matrix.length - 1 && i !== 0) {\\r\\n                    rowToEmpty.reverse()\\r\\n                }\\r\\n\\r\\n                for (let x = 0; x < rowToEmpty.length; x++) {\\r\\n                    const number = rowToEmpty[x];\\r\\n                    \\r\\n                    spiralOrderResult.push(number);\\r\\n                }\\r\\n\\r\\n                rowToEmpty.length = 0\\r\\n            } else {\\r\\n                let rowBeingUsed = matrix[i];\\r\\n                const number = rowBeingUsed.pop()\\r\\n\\r\\n                if(number){\\r\\n                    spiralOrderResult.push(number);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            if (matrix[i].length === 0) {\\r\\n                matrix.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            const row = matrix[i];\\r\\n            row.reverse();\\r\\n            spiralOrderResult.push(row.pop());\\r\\n            row.reverse();\\r\\n        }\\r\\n\\r\\n        return this.solveRecursively(matrix, spiralOrderResult)\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Encryption1Handler {\\r\\n    type = 'Encryption I: Caesar Cipher';\\r\\n\\r\\n    solve([string, shift]) {\\r\\n\\r\\n        let returnString = \\\"\\\";\\r\\n\\r\\n        if (string) {\\r\\n            for (const character of string) {\\r\\n                if (character === \\\" \\\") {\\r\\n                    returnString += \\\" \\\";\\r\\n                }\\r\\n                else {\\r\\n                    const charCode = character.charCodeAt(0);\\r\\n\\r\\n                    if (charCode) {\\r\\n                        let newCharCode = charCode - shift;\\r\\n\\r\\n                        if (newCharCode < 65) {\\r\\n                            const amountLessThan65 = 65 - newCharCode;\\r\\n                            newCharCode = 91 - amountLessThan65;\\r\\n                        }\\r\\n\\r\\n                        returnString += String.fromCharCode(newCharCode);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return returnString;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass Encryption2Handler {\\r\\n    type = 'Encryption II: Vigenère Cipher';\\r\\n\\r\\n    solve([plainText, key]) {\\r\\n\\r\\n        let encryptedText = \\\"\\\";\\r\\n\\r\\n        if(plainText){\\r\\n            let keyIndex = 0;\\r\\n\\r\\n            for (let i = 0; i < plainText.length; i++) {\\r\\n                const plainTextCharacter = plainText[i];\\r\\n\\r\\n                if(plainTextCharacter === \\\" \\\"){\\r\\n                    encryptedText += \\\" \\\";\\r\\n                } else {\\r\\n                    const keyCharCode = key[keyIndex].charCodeAt(0);\\r\\n                    const shift = keyCharCode - 65;\\r\\n\\r\\n                    const plainTextCode = plainTextCharacter.charCodeAt(0);\\r\\n                    let encryptedCharacterCode = plainTextCode + shift;\\r\\n\\r\\n                    if (encryptedCharacterCode > 90) {\\r\\n                        const amountMoreThan91 = encryptedCharacterCode - 91;\\r\\n                        encryptedCharacterCode = amountMoreThan91 + 65;\\r\\n                    }\\r\\n\\r\\n                    encryptedText += String.fromCharCode(encryptedCharacterCode);\\r\\n                }\\r\\n\\r\\n                \\r\\n                keyIndex++;\\r\\n                if(keyIndex >= key.length){\\r\\n                    keyIndex = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return encryptedText;\\r\\n    }\\r\\n}\",\"filename\":\"scripts/contracts/do.js\",\"server\":\"home\"}}],[\"scripts/contracts/save-contracts-for-thomas.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"const thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \\r\\nlet savedContractsFileNameForHuman;\\r\\n\\r\\nexport async function main(ns) {\\r\\n\\r\\n    let savedContracts;\\r\\n\\r\\n    const contractsFromThisRound = JSON.parse(ns.read(thisRoundsContractsFileName));\\r\\n\\r\\n    if(savedContractsFileNameForHuman){\\r\\n        savedContracts = JSON.parse(ns.read(savedContractsFileNameForHuman));\\r\\n    }\\r\\n\\r\\n    if (!savedContracts || contractsFromThisRound.length === 0 && savedContracts.length > 0){\\r\\n        const now = new Date();\\r\\n        savedContractsFileNameForHuman = `contracts/${now.toISOString()}.txt`\\r\\n    }\\r\\n\\r\\n    ns.rm(savedContractsFileNameForHuman);\\r\\n    ns.write(savedContractsFileNameForHuman, JSON.stringify(contractsFromThisRound), \\\"W\\\");\\r\\n\\r\\n}\",\"filename\":\"scripts/contracts/save-contracts-for-thomas.js\",\"server\":\"home\"}}],[\"scripts/contracts/populate-input.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const contracts = JSON.parse(ns.read(thisRoundsContractsFileName))\\r\\n\\r\\n    for (const contract of contracts) {\\r\\n        const hostName = contract.server;\\r\\n        const contractName = contract.name;\\r\\n        contract.input = ns.codingcontract.getData(contractName, hostName);\\r\\n    }\\r\\n\\r\\n    ns.rm(thisRoundsContractsFileName);\\r\\n    ns.write(thisRoundsContractsFileName, JSON.stringify(contracts), \\\"W\\\");\\r\\n}\\r\\n\\r\\nconst thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \",\"filename\":\"scripts/contracts/populate-input.js\",\"server\":\"home\"}}],[\"scripts/contracts/populate-description.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const contracts = JSON.parse(ns.read(thisRoundsContractsFileName))\\r\\n\\r\\n    for (const contract of contracts) {\\r\\n        const hostName = contract.server;\\r\\n        const contractName = contract.name;\\r\\n        contract.description = ns.codingcontract.getDescription(contractName, hostName);\\r\\n    }\\r\\n\\r\\n    ns.rm(thisRoundsContractsFileName);\\r\\n    ns.write(thisRoundsContractsFileName, JSON.stringify(contracts), \\\"W\\\");\\r\\n}\\r\\n\\r\\nconst thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \",\"filename\":\"scripts/contracts/populate-description.js\",\"server\":\"home\"}}],[\"scripts/contracts/contract-coordinator.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    ns.run('scripts/contracts/get.js');\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    ns.run('scripts/contracts/populate-input.js')\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    ns.run('scripts/contracts/populate-description.js')\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    ns.run('scripts/contracts/do.js')\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    ns.run('scripts/contracts/save-contracts-for-thomas.js')\\r\\n}\",\"filename\":\"scripts/contracts/contract-coordinator.js\",\"server\":\"home\"}}],[\"scripts/test.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\n  ns.toast(ns.singularity.)\\n\\n}\",\"filename\":\"scripts/test.js\",\"server\":\"home\"}}],[\"scripts/coordinator-for-8.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/coordinator.js 1000 564 5.629 BitRunners\\r\\nexport async function main(ns) {\\r\\n    const loopEveryXSeconds = 2;\\r\\n    const sleepTotalOfXMS = loopEveryXSeconds * 1000;\\r\\n    const numberOfDifferentSleeps = 5;\\r\\n    const individualSleepAmount = sleepTotalOfXMS / numberOfDifferentSleeps;\\r\\n    let dispatchScript = 'scripts/hacking/memory-starved-dispatch.js';\\r\\n\\r\\n    let runClean = true;\\r\\n    if (ns.args[0] === 'old') {\\r\\n        runClean = false;\\r\\n    }\\r\\n\\r\\n    if (runClean) {\\r\\n        ns.run('scripts/clean.js', 1, \\\"new\\\");\\r\\n        await ns.sleep(1000);\\r\\n    }\\r\\n\\r\\n    ns.run('scripts/precalculate-important-data.js')\\r\\n\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    while (true) {\\r\\n\\r\\n        if (ns.fileExists('Formulas.exe')) {\\r\\n            dispatchScript = 'scripts/hacking/batch-dispatch.js'\\r\\n        }\\r\\n\\r\\n        ns.run(\\\"scripts/scan.js\\\", 1, dispatchScript); \\r\\n        await ns.sleep(individualSleepAmount); \\r\\n\\r\\n\\r\\n        ns.run('scripts/hacking/hack-all-machines.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        ns.run('scripts/contracts/contract-coordinator.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        if(ns.stock.hasTIXAPIAccess()){\\r\\n            ns.run('scripts/investments/invest-in-stocks.js');\\r\\n        }\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n        await singularityStuff(ns);\\r\\n    }\\r\\n\\r\\n\\r\\n    async function singularityStuff(ns) { \\r\\n        await doSingularityWork(ns, 'backdoor-all-machines')\\r\\n        await doSingularityWork(ns, 'join-organziations');\\r\\n        await doSingularityWork(ns, 'do-work');\\r\\n        await doSingularityWork(ns, 'finish-round');\\r\\n        await doSingularityWork(ns, 'finish-bitnode');\\r\\n        await doSingularityWork(ns, 'study-computer-science');\\r\\n        await doSingularityWork(ns, 'create-early-programs');\\r\\n        await doSingularityWork(ns, 'do-job');\\r\\n        await doSingularityWork(ns, 'buy-rep');\\r\\n        await doSingularityWork(ns, 'workout');\\r\\n        await doSingularityWork(ns, 'upgade-home-machine');\\r\\n        await doSingularityWork(ns, 'travel-to-get-augs');\\r\\n    }\\r\\n    \\r\\n    async function doSingularityWork(ns, script){\\r\\n        ns.run(`scripts/singularity/${script}.js`);\\r\\n    \\r\\n        await ns.sleep(individualSleepAmount / 12);\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/coordinator-for-8.js\",\"server\":\"home\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"CLOUD-000\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[[\"analytics/2023-07-07-11-15-Bachman&Associates-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-07-11-15-Bachman&Associates-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-07T15:01:39.037Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-07T15:01:39.037Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"Bachman & Associates\\\",\\\"firstTime\\\":\\\"2023-07-07T15:01:39.037Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":375000,\\\"currentFactionRep\\\":333650.9080521832,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-07T15:01:39.037Z\\\"},\\\"moneySpent\\\":{\\\"augments\\\":0,\\\"homeCores\\\":23730468750000,\\\"homeRam\\\":31587660778186.953,\\\"fluxGovernors\\\":0,\\\"augment\\\":null},\\\"lastSaved\\\":\\\"2023-07-07T16:15:57.700Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":true,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":375000,\\\"currentFactionRep\\\":375000.40990502154,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-07T16:10:26.619Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$108,452,850,558,874.11\\\",\\\"moneyRightNow\\\":\\\"$103,101,209,025,358.40\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$275,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T16:10:26.620Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$108,452,850,558,874.11\\\",\\\"moneyRightNow\\\":\\\"$103,681,640,147,085.58\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$275,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T16:10:30.684Z\\\"},\\\"augsBought\\\":[\\\"SmartJaw\\\",\\\"Enhanced Social Interaction Implant\\\",\\\"FocusWire\\\",\\\"ADR-V2 Pheromone Gene\\\",\\\"CashRoot Starter Kit\\\",\\\"Nanofiber Weave\\\",\\\"Augmented Targeting I\\\",\\\"Augmented Targeting II\\\"]}\"}}],[\"analytics/2023-07-07-14-03-BitRunners-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-07-14-03-BitRunners-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-07T16:19:40.262Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-07T16:19:40.262Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-07T16:19:40.262Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":275000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-07T16:19:40.262Z\\\"},\\\"augsBought\\\":[\\\"Neural Accelerator\\\"],\\\"moneySpent\\\":{\\\"augments\\\":0,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":0,\\\"augment\\\":null},\\\"lastSaved\\\":\\\"2023-07-07T19:03:34.187Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":275000,\\\"currentFactionRep\\\":207528.18490936968,\\\"targetRepForGettingToFavor\\\":207510.3723,\\\"time\\\":\\\"2023-07-07T19:03:30.139Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$11,781,091,031,741.60\\\",\\\"moneyRightNow\\\":\\\"$1,303,091,345,518.27\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$175,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T19:03:30.139Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$11,781,091,031,741.60\\\",\\\"moneyRightNow\\\":\\\"$2,544,403,997,543.49\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$175,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T19:03:34.186Z\\\"}}\"}}],[\"analytics/2023-07-08-19-48-Daedalus-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-19-48-Daedalus-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-07T19:06:59.469Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-07T19:06:59.469Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-07T19:06:59.470Z\\\"},{\\\"factionToMax\\\":\\\"Daedalus\\\",\\\"firstTime\\\":\\\"2023-07-07T21:55:21.354Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":275000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-07T19:06:59.470Z\\\"},\\\"augsBought\\\":[\\\"PCMatrix\\\",\\\"Synfibril Muscle\\\"],\\\"moneySpent\\\":{\\\"augments\\\":4137500000,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":0},\\\"lastSaved\\\":\\\"2023-07-08T00:48:28.885Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":275000,\\\"currentFactionRep\\\":32865.1277346334,\\\"targetRepForGettingToFavor\\\":21865.9969,\\\"time\\\":\\\"2023-07-07T19:21:42.026Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$20,200,143,877,934.50\\\",\\\"moneyRightNow\\\":\\\"$3,911,461,428,002.28\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$225,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T20:39:02.138Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$20,200,143,877,934.50\\\",\\\"moneyRightNow\\\":\\\"$4,117,056,489,229.67\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$225,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T20:39:06.169Z\\\"},\\\"moneyLeft\\\":7852910581520.66}\"}}],[\"analytics/2023-07-08-22-54-NWO-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-22-54-NWO-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T01:27:34.503Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T01:27:34.503Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NWO\\\",\\\"firstTime\\\":\\\"2023-07-08T01:27:34.503Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T01:27:34.503Z\\\"},\\\"augsBought\\\":[\\\"Embedded Netburner Module Core V2 Upgrade\\\",\\\"Embedded Netburner Module Core V3 Upgrade\\\",\\\"Embedded Netburner Module Direct Memory Access Upgrade\\\",\\\"Embedded Netburner Module Analyze Engine\\\",\\\"BitRunners Neurolink\\\",\\\"NEMEAN Subdermal Weave\\\",\\\"Synthetic Heart\\\",\\\"Power Recirculation Core\\\",\\\"Neurotrainer III\\\",\\\"Combat Rib I\\\",\\\"Combat Rib II\\\",\\\"DermaForce Particle Barrier\\\",\\\"The Red Pill\\\"],\\\"moneySpent\\\":{\\\"augments\\\":501848779077.36707,\\\"homeCores\\\":0,\\\"homeRam\\\":99817008059070.77,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":75733371162620.36,\\\"lastSaved\\\":\\\"2023-07-08T03:54:59.353Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":462501.05086586776,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T03:54:55.304Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$526,824,656,393,874.44\\\",\\\"moneyRightNow\\\":\\\"$251,999,971,224,510.60\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$18,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T03:54:55.304Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$526,824,656,393,874.44\\\",\\\"moneyRightNow\\\":\\\"$253,602,470,575,079.72\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$18,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T03:54:59.351Z\\\"}}\"}}],[\"analytics/2023-07-08-00-56-OmniTekIncorporated-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-00-56-OmniTekIncorporated-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T04:26:57.384Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T04:26:57.384Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"OmniTek Incorporated\\\",\\\"firstTime\\\":\\\"2023-07-08T04:26:57.384Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":625000,\\\"currentFactionRep\\\":15.124617264295333,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T04:26:57.384Z\\\"},\\\"augsBought\\\":[\\\"Hydroflame Left Arm\\\",\\\"Xanipher\\\",\\\"PC Direct-Neural Interface\\\",\\\"Bionic Legs\\\",\\\"Bionic Spine\\\",\\\"Combat Rib III\\\",\\\"Augmented Targeting III\\\",\\\"NutriGen Implant\\\"],\\\"moneySpent\\\":{\\\"augments\\\":2534418700549.75,\\\"homeCores\\\":177978515625000,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":280042565488.5333,\\\"lastSaved\\\":\\\"2023-07-08T05:56:46.954Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":625000,\\\"currentFactionRep\\\":462548.0785199993,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T05:56:42.882Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$505,066,407,135,123.06\\\",\\\"moneyRightNow\\\":\\\"$180,386,298,617,236.44\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$375,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T05:56:42.883Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$505,066,407,135,123.06\\\",\\\"moneyRightNow\\\":\\\"$181,269,916,019,448.78\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$375,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T05:56:46.945Z\\\"}}\"}}],[\"analytics/2023-07-08-02-29-BladeIndustries-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-02-29-BladeIndustries-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T06:21:45.808Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T06:21:45.808Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"Blade Industries\\\",\\\"firstTime\\\":\\\"2023-07-08T06:21:45.808Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":562500,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T06:21:45.809Z\\\"},\\\"augsBought\\\":[\\\"OmniTek InfoLoad\\\",\\\"HyperSight Corneal Implant\\\",\\\"INFRARET Enhancement\\\"],\\\"moneySpent\\\":{\\\"augments\\\":8208300000,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":70843557655495.1,\\\"lastSaved\\\":\\\"2023-07-08T07:29:39.410Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":562500,\\\"currentFactionRep\\\":462652.03280345845,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T07:29:35.219Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$572,996,898,778,520.20\\\",\\\"moneyRightNow\\\":\\\"$140,624,600,817,489.31\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$275,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T07:29:35.219Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$572,996,898,778,520.20\\\",\\\"moneyRightNow\\\":\\\"$143,621,626,658,752.25\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$275,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T07:29:39.320Z\\\"}}\"}}],[\"contracts/2023-07-08T15:46:33.989Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-08T15:46:33.989Z.txt\",\"text\":\"[{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-301865-NiteSec.cct\\\",\\\"type\\\":\\\"Spiralize Matrix\\\",\\\"attemptsLeft\\\":9},{\\\"server\\\":\\\"titan-labs\\\",\\\"name\\\":\\\"contract-605082-ECorp.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3},{\\\"server\\\":\\\"vitalife\\\",\\\"name\\\":\\\"contract-715836-BladeIndustries.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"kuai-gong\\\",\\\"name\\\":\\\"contract-574766-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"blade\\\",\\\"name\\\":\\\"contract-546533.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"defcomm\\\",\\\"name\\\":\\\"contract-207182.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"defcomm\\\",\\\"name\\\":\\\"contract-562846-Chongqing.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"run4theh111z\\\",\\\"name\\\":\\\"contract-147112-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10}]\"}}],[\"analytics/2023-07-08-10-55-CyberSec-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-10-55-CyberSec-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T07:45:28.397Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T07:45:28.397Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"ECorp\\\",\\\"firstTime\\\":\\\"2023-07-08T07:45:28.397Z\\\"},{\\\"factionToMax\\\":\\\"CyberSec\\\",\\\"firstTime\\\":\\\"2023-07-08T15:55:34.597Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1625000,\\\"currentFactionRep\\\":7.83489646900019,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T07:45:28.397Z\\\"},\\\"augsBought\\\":[\\\"Embedded Netburner Module\\\",\\\"Cranial Signal Processors - Gen I\\\",\\\"Cranial Signal Processors - Gen II\\\",\\\"Artificial Synaptic Potentiation\\\",\\\"Neurotrainer II\\\",\\\"BitWire\\\",\\\"Synaptic Enhancement Implant\\\",\\\"Neurotrainer I\\\"],\\\"moneySpent\\\":{\\\"augments\\\":2927417203.1,\\\"homeCores\\\":0,\\\"homeRam\\\":132545749.31540185,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":76065861.37635517,\\\"lastSaved\\\":\\\"2023-07-08T15:55:38.636Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":true,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":18750,\\\"currentFactionRep\\\":19144.520172309567,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-08T15:55:34.597Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$NaN\\\",\\\"moneyRightNow\\\":\\\"$3,136,028,813.79\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$1,250,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T15:55:34.597Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$NaN\\\",\\\"moneyRightNow\\\":\\\"$3,136,028,813.79\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$1,250,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T15:55:38.627Z\\\"}}\"}}],[\"contracts/failure/unitalife-contract-457057-BachmanAssociates.cct-AlgorithmicStockTraderIV.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/failure/unitalife-contract-457057-BachmanAssociates.cct-AlgorithmicStockTraderIV.txt\",\"text\":\"{\\\"contract\\\":{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-457057-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader IV\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[2,[104,1,164,22,87,58,184,182,187,31,33,15,132,75,200,78,154]],\\\"description\\\":\\\"You are given the following array with two elements:\\\\n\\\\n [2, [104,67,1,164,22,87,58,118,184,182,187,31,33,15,132,75,200,78,154,61]]\\\\n\\\\n The first element is an integer k. The second element is an array of stock prices (which are numbers) where the i-th element represents the stock price on day i.\\\\n\\\\n Determine the maximum possible profit you can earn using at most k transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you can buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0.\\\"},\\\"wrongResult\\\":348}\"}}],[\"contracts/2023-07-08T16:02:50.327Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-08T16:02:50.327Z.txt\",\"text\":\"[{\\\"server\\\":\\\"hong-fang-tea\\\",\\\"name\\\":\\\"contract-287914-ECorp.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[3,3,2,4,0,0,3,2,4,3,2,1,4,3,3,1,2,1,5,6,2,4,2,5],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,3,2,4,0,0,3,2,4,3,2,1,4,3,3,1,2,1,5,6,2,4,2,5\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"max-hardware\\\",\\\"name\\\":\\\"contract-489132.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"5ddddddddM0C1ag3juL3juL3jQaVwdNEQdNGShqNEQdNGSrBfBf2rBfBr1OvIK6r1OvIa\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 5ddddddddM0C1ag3juL3juL3jQaVwdNEQdNGShqNEQdNGSrBfBf2rBfBr1OvIK6r1OvIa\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-522441-TianDiHui.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[8,7],\\\"description\\\":\\\"You are in a grid with 8 rows and 7 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [8, 7]\\\"},{\\\"server\\\":\\\"galactic-cyber\\\",\\\"name\\\":\\\"contract-895014-CyberSec.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[2,7,-9,5,4,-8,-10,-5,4,-6,-4,0,6,10,-3,6,2,-8,-1,6,-3,-10,-3,8,6,-2,-8,2,3,-4,0,0,9,-9,-8,5,4,4],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 2,7,-9,5,4,-8,-10,-5,4,-6,-4,0,6,10,-3,6,2,-8,-1,6,-3,-10,-3,8,6,-2,-8,2,3,-4,0,0,9,-9,-8,5,4,4\\\"},{\\\"server\\\":\\\"summit-uni\\\",\\\"name\\\":\\\"contract-875528.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[11,9],\\\"description\\\":\\\"You are in a grid with 11 rows and 9 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [11, 9]\\\"},{\\\"server\\\":\\\"millenium-fitness\\\",\\\"name\\\":\\\"contract-125441.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[147,[1,2,4,5,7,8,10,11,12]],\\\"description\\\":\\\"How many different distinct ways can the number 147 be written as a sum of integers contained in the set:\\\\n\\\\n [1,2,4,5,7,8,10,11,12]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"millenium-fitness\\\",\\\"name\\\":\\\"contract-338676.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[149,[2,3,4,6,9,11,12,13,14]],\\\"description\\\":\\\"How many different distinct ways can the number 149 be written as a sum of integers contained in the set:\\\\n\\\\n [2,3,4,6,9,11,12,13,14]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-265891-TheBlackHand.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0],[1,0,0,0],[0,0,0,0],[1,0,1,0],[0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,\\\\n1,0,0,0,\\\\n0,0,0,0,\\\\n1,0,1,0,\\\\n0,0,1,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-457057-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader IV\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[2,[104,67,1,164,22,87,58,118,184,182,187,31,33,15,132,75,200,78,154,61]],\\\"description\\\":\\\"You are given the following array with two elements:\\\\n\\\\n [2, [104,67,1,164,22,87,58,118,184,182,187,31,33,15,132,75,200,78,154,61]]\\\\n\\\\n The first element is an integer k. The second element is an array of stock prices (which are numbers) where the i-th element represents the stock price on day i.\\\\n\\\\n Determine the maximum possible profit you can earn using at most k transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you can buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0.\\\"},{\\\"server\\\":\\\"applied-energetics\\\",\\\"name\\\":\\\"contract-98816-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[8,[[1,3],[3,5],[6,7],[4,5],[1,7],[4,7],[2,7],[2,5]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [8,[[1,3],[3,5],[6,7],[4,5],[1,7],[4,7],[2,7],[2,5]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 7. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"vitalife\\\",\\\"name\\\":\\\"contract-852569.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,0,\\\\n1,0,0,0,0,0,\\\\n0,1,0,0,0,0,\\\\n0,0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"4sigma\\\",\\\"name\\\":\\\"contract-193066-Chongqing.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[3],[4,8],[1,6,7],[3,8,3,9],[1,3,6,1,2],[4,4,7,8,8,1],[1,4,3,6,1,4,6],[1,9,8,7,9,9,4,3],[3,2,1,2,1,8,4,2,8]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4,8],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,6,7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3,8,3,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,3,6,1,2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4,4,7,8,8,1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[1,4,3,6,1,4,6],\\\\n&nbsp;&nbsp;&nbsp;[1,9,8,7,9,9,4,3],\\\\n&nbsp;&nbsp;[3,2,1,2,1,8,4,2,8]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-774587-TianDiHui.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[8,0,1,5,5],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 8,0,1,5,5\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"clarkinc\\\",\\\"name\\\":\\\"contract-321076.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[12,[[7,11],[1,8],[2,9],[2,8],[1,2],[0,4],[0,3],[2,3],[5,8],[3,5],[4,7],[1,6],[9,10],[4,10],[6,8],[3,10],[0,1],[7,8]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [12,[[7,11],[1,8],[2,9],[2,8],[1,2],[0,4],[0,3],[2,3],[5,8],[3,5],[4,7],[1,6],[9,10],[4,10],[6,8],[3,10],[0,1],[7,8]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 11. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"The-Cave\\\",\\\"name\\\":\\\"contract-885023.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0],[0,1,0,1,0,1,1,1,0],[0,0,1,1,1,1,0,0,1],[0,1,0,0,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,1,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,1,0,1,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,1,1,1,0,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,0,0,0,1,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\".\\\",\\\"name\\\":\\\"contract-450371-NWO.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"zzzzzzzzzzVVVVVVVVVff66666dddddd3Dxjjjjjjjjjjjll3nMIEooooooooooIrrQQ3333333333GGGGG220\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; zzzzzzzzzzVVVVVVVVVff66666dddddd3Dxjjjjjjjjjjjll3nMIEooooooooooIrrQQ3333333333GGGGG220\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"defcomm\\\",\\\"name\\\":\\\"contract-409303-CyberSec.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"koU6koU6koU8koU6ko66SU6ko66Sko66SkoSkoSkoSkXSkoSkoSkXSkoSXSkoSXSuKvMuK5CCCCCCZA\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; koU6koU6koU8koU6ko66SU6ko66Sko66SkoSkoSkoSkXSkoSkoSkXSkoSXSkoSXSuKvMuK5CCCCCCZA\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"defcomm\\\",\\\"name\\\":\\\"contract-741436-TianDiHui.cct\\\",\\\"type\\\":\\\"Spiralize Matrix\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[[41,7],[46,49],[18,23],[1,16],[46,1],[49,27]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a 2D matrix, return the elements of the matrix as an array in spiral order:\\\\n\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[41, 7]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[46,49]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[18,23]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ 1,16]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[46, 1]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[49,27]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;]\\\\n\\\\nHere is an example of what spiral order should be:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1, 2, 3]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4, 5, 6]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7, 8, 9]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;]\\\\n\\\\n Answer: [1, 2, 3, 6, 9, 8 ,7, 4, 5]\\\\n\\\\n Note that the matrix will not always be square:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,&nbsp;&nbsp;2,&nbsp;&nbsp;3,&nbsp;&nbsp;4]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[5,&nbsp;&nbsp;6,&nbsp;&nbsp;7,&nbsp;&nbsp;8]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,&nbsp;10,&nbsp;11,&nbsp;12]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;]\\\\n\\\\n Answer: [1, 2, 3, 4, 8, 12, 11, 10, 9, 5, 6, 7]\\\"},{\\\"server\\\":\\\"snap-fitness\\\",\\\"name\\\":\\\"contract-481575.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[10,10,2,4,4],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 10,10,2,4,4\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"zer0\\\",\\\"name\\\":\\\"contract-926552.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"ppppppppD6ggxxxxxxxxWk88uVVqdddddddHHH811EEE00WWyy333NvvvvvvvWWWWWWWWWA88iii\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; ppppppppD6ggxxxxxxxxWk88uVVqdddddddHHH811EEE00WWyy333NvvvvvvvWWWWWWWWWA88iii\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"CSEC\\\",\\\"name\\\":\\\"contract-550315.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":59,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 59 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"CSEC\\\",\\\"name\\\":\\\"contract-895133.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[2,2,3,1,0,3],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 2,2,3,1,0,3\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-858682.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[197,[1,2,4,5,6,10,12,13]],\\\"description\\\":\\\"How many different distinct ways can the number 197 be written as a sum of integers contained in the set:\\\\n\\\\n [1,2,4,5,6,10,12,13]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-938387.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":8,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 8 be written as a sum of at least two positive integers?\\\"}]\"}}],[\"analytics/2023-07-09-05-42-NiteSec-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-09-05-42-NiteSec-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T16:31:11.237Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T16:31:11.237Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NiteSec\\\",\\\"firstTime\\\":\\\"2023-07-08T16:31:11.237Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":112500,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-08T16:31:11.237Z\\\"},\\\"augsBought\\\":[\\\"Cranial Signal Processors - Gen III\\\",\\\"DataJack\\\",\\\"Neuregen Gene Modification\\\",\\\"Neural-Retention Enhancement\\\",\\\"CRTX42-AA Gene Modification\\\",\\\"Speech Processor Implant\\\",\\\"Social Negotiation Assistant (S.N.A)\\\",\\\"Nuoptimal Nootropic Injector Implant\\\",\\\"ADR-V1 Pheromone Gene\\\",\\\"Speech Enhancement\\\",\\\"Wired Reflexes\\\"],\\\"moneySpent\\\":{\\\"augments\\\":20381378226.862747,\\\"homeCores\\\":7500000000,\\\"homeRam\\\":14539978074.787807,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":12810898749.805788,\\\"lastSaved\\\":\\\"2023-07-09T10:42:24.377Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":true,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":112500,\\\"currentFactionRep\\\":112505.95319020352,\\\"targetRepForGettingToFavor\\\":274320.6381,\\\"time\\\":\\\"2023-07-09T04:32:21.711Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":false,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$25,622,206,359.90\\\",\\\"moneyRightNow\\\":\\\"$5,243,979,923.03\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$55,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-09T04:32:21.712Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$37,197,430,004.03\\\",\\\"moneyRightNow\\\":\\\"$55,232,255,051.46\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$55,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-09T10:42:24.369Z\\\"}}\"}}],[\"contracts/failure/blade-contract-989459-Sector12.cct-AlgorithmicStockTraderIII.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/failure/blade-contract-989459-Sector12.cct-AlgorithmicStockTraderIII.txt\",\"text\":\"{\\\"contract\\\":{\\\"server\\\":\\\"blade\\\",\\\"name\\\":\\\"contract-989459-Sector12.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[179,52,138,20,181,47,87,38,133,124,174,123,169,54,138],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},\\\"wrongResult\\\":256}\"}}],[\"contracts/2023-07-09T10:42:27.655Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-09T10:42:27.655Z.txt\",\"text\":\"[{\\\"server\\\":\\\"n00dles\\\",\\\"name\\\":\\\"contract-306430.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[0,3,0,2,0,0,4,0,5,0,7,9,4,8],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 0,3,0,2,0,0,4,0,5,0,7,9,4,8\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"n00dles\\\",\\\"name\\\":\\\"contract-93220.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":596871453,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 596871453?\\\"},{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-688654.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"557744444444444444NNddzeennnnnnnnnnyyyyyyyyyyyyQH555555AAFU\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 557744444444444444NNddzeennnnnnnnnnyyyyyyyyyyyyQH555555AAFU\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"joesguns\\\",\\\"name\\\":\\\"contract-610288.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[13,[[4,5],[0,6],[7,11],[2,5],[3,7],[1,6],[2,10],[4,10],[5,11],[3,5],[3,10],[0,10],[5,9],[10,11],[7,9],[3,12],[3,8],[1,5],[4,8],[1,8],[0,7],[9,11],[2,12]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [13,[[4,5],[0,6],[7,11],[2,5],[3,7],[1,6],[2,10],[4,10],[5,11],[3,5],[3,10],[0,10],[5,9],[10,11],[7,9],[3,12],[3,8],[1,5],[4,8],[1,8],[0,7],[9,11],[2,12]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 12. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"joesguns\\\",\\\"name\\\":\\\"contract-908915-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0],[0,1,0,0,0],[0,0,0,0,0],[0,0,1,0,0],[1,0,0,0,1],[0,0,0,1,1],[0,0,1,0,0],[0,1,0,1,0],[0,0,0,1,0],[1,0,0,0,0],[0,1,0,0,0],[0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,\\\\n0,1,0,0,0,\\\\n0,0,0,0,0,\\\\n0,0,1,0,0,\\\\n1,0,0,0,1,\\\\n0,0,0,1,1,\\\\n0,0,1,0,0,\\\\n0,1,0,1,0,\\\\n0,0,0,1,0,\\\\n1,0,0,0,0,\\\\n0,1,0,0,0,\\\\n0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"CSEC\\\",\\\"name\\\":\\\"contract-225615.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[3,4,8,4,1,3,1,6,2,7,2,4,2,1,7,2,4,2,5,2,1,2,4,2,0],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,4,8,4,1,3,1,6,2,7,2,4,2,1,7,2,4,2,5,2,1,2,4,2,0\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-876968-BitRunners.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"251150140129\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 251150140129\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"avmnite-02h\\\",\\\"name\\\":\\\"contract-793514-NWO.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[9,[[1,7],[2,5],[6,8],[1,2],[0,3],[0,6],[0,5]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [9,[[1,7],[2,5],[6,8],[1,2],[0,3],[0,6],[0,5]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 8. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-308718.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[5,8],[20,29],[20,27],[19,26],[13,23],[5,12],[6,9],[9,15],[5,9],[4,10],[23,29],[16,24],[1,11]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[5,8],[20,29],[20,27],[19,26],[13,23],[5,12],[6,9],[9,15],[5,9],[4,10],[23,29],[16,24],[1,11]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"aerocorp\\\",\\\"name\\\":\\\"contract-726515.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"KK0aAKKKl2FczHAO1GRoAO1GRoAYvgOCph7xuhN1nQayOiaXZFQayOiTDZDZ0aZ\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; KK0aAKKKl2FczHAO1GRoAO1GRoAYvgOCph7xuhN1nQayOiaXZFQayOiTDZDZ0aZ\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"snap-fitness\\\",\\\"name\\\":\\\"contract-206621.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"(((())(aa\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n (((())(aa\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"run4theh111z\\\",\\\"name\\\":\\\"contract-517629.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,1,1,0,1],[0,0,0,0,1,1,1,1],[1,0,0,0,0,1,1,0],[0,0,0,0,0,0,0,0],[0,1,0,1,1,1,0,0],[0,1,1,0,1,0,0,0],[0,1,0,0,1,0,0,0],[1,0,0,1,0,0,1,0],[1,1,0,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,1,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,1,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,0,0,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,1,1,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[1,1,0,0,0,0,1,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"blade\\\",\\\"name\\\":\\\"contract-989459-Sector12.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-248819.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[7],[3,4],[1,2,9],[1,8,8,1],[4,7,4,6,4],[9,3,4,6,9,3]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,2,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[1,8,8,1],\\\\n&nbsp;&nbsp;&nbsp;[4,7,4,6,4],\\\\n&nbsp;&nbsp;[9,3,4,6,9,3]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-759274-BladeIndustries.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[197,[1,3,4,6,7,8,9,10,13,15,16]],\\\"description\\\":\\\"How many different distinct ways can the number 197 be written as a sum of integers contained in the set:\\\\n\\\\n [1,3,4,6,7,8,9,10,13,15,16]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-755946-Aevum.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"bGhFzdCQddCQdSTdTdTdTSysWjxUGJc2RiRsyfsyfyfyfyfyffyfyfyffyfftLaw0Z\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; bGhFzdCQddCQdSTdTdTdTSysWjxUGJc2RiRsyfsyfyfyfyfyffyfyfyffyfftLaw0Z\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"infocomm\\\",\\\"name\\\":\\\"contract-239892.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1110100011010100\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '1110100011010100' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-650735.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"111111111yyxmmmdddddddddddddNNBBkkJJJJJJJJJJJJ2222222222222h33333333333DDDDDDDF\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 111111111yyxmmmdddddddddddddNNBBkkJJJJJJJJJJJJ2222222222222h33333333333DDDDDDDF\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-923111.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,1,0,0],[0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0],[0,0,1,1,1,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,0,0,1,0,0,\\\\n0,0,0,0,0,1,0,0,0,0,\\\\n0,0,0,0,0,1,0,1,0,0,\\\\n0,0,0,0,0,0,0,0,0,0,\\\\n1,0,0,0,0,0,0,0,0,0,\\\\n0,0,0,0,0,0,0,1,0,0,\\\\n0,0,1,1,1,0,0,0,1,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"computek\\\",\\\"name\\\":\\\"contract-140416.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[8,-5,4,-1,10,5,-8,6,-9,-4,6,6,10,5,3,-7,-5,-10,-5,-3,2,2,-4,2,7,-3,0,0,-6,8,-7,-5,8,8,2,3,10,-9,-5],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 8,-5,4,-1,10,5,-8,6,-9,-4,6,6,10,5,3,-7,-5,-10,-5,-3,2,2,-4,2,7,-3,0,0,-6,8,-7,-5,8,8,2,3,10,-9,-5\\\"},{\\\"server\\\":\\\"nectar-net\\\",\\\"name\\\":\\\"contract-149794.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[17,[4,5,6,7,8,10,11,12,13,14]],\\\"description\\\":\\\"How many different distinct ways can the number 17 be written as a sum of integers contained in the set:\\\\n\\\\n [4,5,6,7,8,10,11,12,13,14]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"rothman-uni\\\",\\\"name\\\":\\\"contract-95536.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":21,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 21 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"deltaone\\\",\\\"name\\\":\\\"contract-389211.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[9,-8,10,-6,-3,-3,10,-7,-5,-6,4,-3,-9,7,-1,-1,-10,4,9,-4,4,-4,-10,-7,9,0,-8,-5],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 9,-8,10,-6,-3,-3,10,-7,-5,-6,4,-3,-9,7,-1,-1,-10,4,9,-4,4,-4,-10,-7,9,0,-8,-5\\\"},{\\\"server\\\":\\\"univ-energy\\\",\\\"name\\\":\\\"contract-80334.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[14,16],[4,10],[21,27],[3,8],[3,13],[20,30]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[14,16],[4,10],[21,27],[3,8],[3,13],[20,30]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-204128.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[3,3,10,0,0,0,4,0,6,0,4,10],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,3,10,0,0,0,4,0,6,0,4,10\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-90930.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[7,11],\\\"description\\\":\\\"You are in a grid with 7 rows and 11 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [7, 11]\\\"},{\\\"server\\\":\\\"vitalife\\\",\\\"name\\\":\\\"contract-693793.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[9,[[0,1],[4,6],[2,7],[0,3],[0,6],[1,4],[6,7],[3,7],[0,5],[5,7],[4,8],[3,4],[1,7],[2,4],[2,3],[4,5],[0,2]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [9,[[0,1],[4,6],[2,7],[0,3],[0,6],[1,4],[6,7],[3,7],[0,5],[5,7],[4,8],[3,4],[1,7],[2,4],[2,3],[4,5],[0,2]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 8. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-188719-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[84,[2,5,6,7,8,9,10,12,15,16]],\\\"description\\\":\\\"How many different distinct ways can the number 84 be written as a sum of integers contained in the set:\\\\n\\\\n [2,5,6,7,8,9,10,12,15,16]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-889582.cct\\\",\\\"type\\\":\\\"HammingCodes: Integer to Encoded Binary\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":42771,\\\"description\\\":\\\"You are given the following decimal Value: \\\\n 42771 \\\\n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\\\\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\\\\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\\\\n The answer should be given as a string containing only 1s and 0s.\\\\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\\\\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\\\\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\\\\n\\\\n Extra rule for encoding:\\\\n There should be no leading zeros in the 'data bit' section\\\"},{\\\"server\\\":\\\"fulcrumassets\\\",\\\"name\\\":\\\"contract-18930.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[5,14],\\\"description\\\":\\\"You are in a grid with 5 rows and 14 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [5, 14]\\\"},{\\\"server\\\":\\\"The-Cave\\\",\\\"name\\\":\\\"contract-53463.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"12010722233\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 12010722233\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"}]\"}}],[\"contracts/2023-07-10T11:30:35.720Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-10T11:30:35.720Z.txt\",\"text\":\"[{\\\"server\\\":\\\"n00dles\\\",\\\"name\\\":\\\"contract-306430.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[0,3,0,2,0,0,4,0,5,0,7,9,4,8],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 0,3,0,2,0,0,4,0,5,0,7,9,4,8\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"n00dles\\\",\\\"name\\\":\\\"contract-93220.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":596871453,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 596871453?\\\"},{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-688654.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"557744444444444444NNddzeennnnnnnnnnyyyyyyyyyyyyQH555555AAFU\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 557744444444444444NNddzeennnnnnnnnnyyyyyyyyyyyyQH555555AAFU\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"joesguns\\\",\\\"name\\\":\\\"contract-610288.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[13,[[4,5],[0,6],[7,11],[2,5],[3,7],[1,6],[2,10],[4,10],[5,11],[3,5],[3,10],[0,10],[5,9],[10,11],[7,9],[3,12],[3,8],[1,5],[4,8],[1,8],[0,7],[9,11],[2,12]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [13,[[4,5],[0,6],[7,11],[2,5],[3,7],[1,6],[2,10],[4,10],[5,11],[3,5],[3,10],[0,10],[5,9],[10,11],[7,9],[3,12],[3,8],[1,5],[4,8],[1,8],[0,7],[9,11],[2,12]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 12. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"joesguns\\\",\\\"name\\\":\\\"contract-908915-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0],[0,1,0,0,0],[0,0,0,0,0],[0,0,1,0,0],[1,0,0,0,1],[0,0,0,1,1],[0,0,1,0,0],[0,1,0,1,0],[0,0,0,1,0],[1,0,0,0,0],[0,1,0,0,0],[0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,\\\\n0,1,0,0,0,\\\\n0,0,0,0,0,\\\\n0,0,1,0,0,\\\\n1,0,0,0,1,\\\\n0,0,0,1,1,\\\\n0,0,1,0,0,\\\\n0,1,0,1,0,\\\\n0,0,0,1,0,\\\\n1,0,0,0,0,\\\\n0,1,0,0,0,\\\\n0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"CSEC\\\",\\\"name\\\":\\\"contract-225615.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[3,4,8,4,1,3,1,6,2,7,2,4,2,1,7,2,4,2,5,2,1,2,4,2,0],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,4,8,4,1,3,1,6,2,7,2,4,2,1,7,2,4,2,5,2,1,2,4,2,0\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-876968-BitRunners.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"251150140129\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 251150140129\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"avmnite-02h\\\",\\\"name\\\":\\\"contract-793514-NWO.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[9,[[1,7],[2,5],[6,8],[1,2],[0,3],[0,6],[0,5]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [9,[[1,7],[2,5],[6,8],[1,2],[0,3],[0,6],[0,5]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 8. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-308718.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[5,8],[20,29],[20,27],[19,26],[13,23],[5,12],[6,9],[9,15],[5,9],[4,10],[23,29],[16,24],[1,11]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[5,8],[20,29],[20,27],[19,26],[13,23],[5,12],[6,9],[9,15],[5,9],[4,10],[23,29],[16,24],[1,11]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"aerocorp\\\",\\\"name\\\":\\\"contract-726515.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"KK0aAKKKl2FczHAO1GRoAO1GRoAYvgOCph7xuhN1nQayOiaXZFQayOiTDZDZ0aZ\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; KK0aAKKKl2FczHAO1GRoAO1GRoAYvgOCph7xuhN1nQayOiaXZFQayOiTDZDZ0aZ\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"snap-fitness\\\",\\\"name\\\":\\\"contract-206621.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"(((())(aa\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n (((())(aa\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"run4theh111z\\\",\\\"name\\\":\\\"contract-517629.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,1,1,0,1],[0,0,0,0,1,1,1,1],[1,0,0,0,0,1,1,0],[0,0,0,0,0,0,0,0],[0,1,0,1,1,1,0,0],[0,1,1,0,1,0,0,0],[0,1,0,0,1,0,0,0],[1,0,0,1,0,0,1,0],[1,1,0,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,1,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,1,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,0,0,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,1,1,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[1,1,0,0,0,0,1,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"blade\\\",\\\"name\\\":\\\"contract-989459-Sector12.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-248819.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[7],[3,4],[1,2,9],[1,8,8,1],[4,7,4,6,4],[9,3,4,6,9,3]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,2,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[1,8,8,1],\\\\n&nbsp;&nbsp;&nbsp;[4,7,4,6,4],\\\\n&nbsp;&nbsp;[9,3,4,6,9,3]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-759274-BladeIndustries.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[197,[1,3,4,6,7,8,9,10,13,15,16]],\\\"description\\\":\\\"How many different distinct ways can the number 197 be written as a sum of integers contained in the set:\\\\n\\\\n [1,3,4,6,7,8,9,10,13,15,16]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-755946-Aevum.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"bGhFzdCQddCQdSTdTdTdTSysWjxUGJc2RiRsyfsyfyfyfyfyffyfyfyffyfftLaw0Z\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; bGhFzdCQddCQdSTdTdTdTSysWjxUGJc2RiRsyfsyfyfyfyfyffyfyfyffyfftLaw0Z\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"infocomm\\\",\\\"name\\\":\\\"contract-239892.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1110100011010100\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '1110100011010100' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-650735.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"111111111yyxmmmdddddddddddddNNBBkkJJJJJJJJJJJJ2222222222222h33333333333DDDDDDDF\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 111111111yyxmmmdddddddddddddNNBBkkJJJJJJJJJJJJ2222222222222h33333333333DDDDDDDF\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-923111.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,1,0,0],[0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0],[0,0,1,1,1,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,0,0,1,0,0,\\\\n0,0,0,0,0,1,0,0,0,0,\\\\n0,0,0,0,0,1,0,1,0,0,\\\\n0,0,0,0,0,0,0,0,0,0,\\\\n1,0,0,0,0,0,0,0,0,0,\\\\n0,0,0,0,0,0,0,1,0,0,\\\\n0,0,1,1,1,0,0,0,1,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"computek\\\",\\\"name\\\":\\\"contract-140416.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[8,-5,4,-1,10,5,-8,6,-9,-4,6,6,10,5,3,-7,-5,-10,-5,-3,2,2,-4,2,7,-3,0,0,-6,8,-7,-5,8,8,2,3,10,-9,-5],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 8,-5,4,-1,10,5,-8,6,-9,-4,6,6,10,5,3,-7,-5,-10,-5,-3,2,2,-4,2,7,-3,0,0,-6,8,-7,-5,8,8,2,3,10,-9,-5\\\"},{\\\"server\\\":\\\"nectar-net\\\",\\\"name\\\":\\\"contract-149794.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[17,[4,5,6,7,8,10,11,12,13,14]],\\\"description\\\":\\\"How many different distinct ways can the number 17 be written as a sum of integers contained in the set:\\\\n\\\\n [4,5,6,7,8,10,11,12,13,14]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"rothman-uni\\\",\\\"name\\\":\\\"contract-95536.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":21,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 21 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"deltaone\\\",\\\"name\\\":\\\"contract-389211.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[9,-8,10,-6,-3,-3,10,-7,-5,-6,4,-3,-9,7,-1,-1,-10,4,9,-4,4,-4,-10,-7,9,0,-8,-5],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 9,-8,10,-6,-3,-3,10,-7,-5,-6,4,-3,-9,7,-1,-1,-10,4,9,-4,4,-4,-10,-7,9,0,-8,-5\\\"},{\\\"server\\\":\\\"univ-energy\\\",\\\"name\\\":\\\"contract-80334.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[14,16],[4,10],[21,27],[3,8],[3,13],[20,30]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[14,16],[4,10],[21,27],[3,8],[3,13],[20,30]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-204128.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[3,3,10,0,0,0,4,0,6,0,4,10],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,3,10,0,0,0,4,0,6,0,4,10\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-90930.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[7,11],\\\"description\\\":\\\"You are in a grid with 7 rows and 11 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [7, 11]\\\"},{\\\"server\\\":\\\"vitalife\\\",\\\"name\\\":\\\"contract-693793.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[9,[[0,1],[4,6],[2,7],[0,3],[0,6],[1,4],[6,7],[3,7],[0,5],[5,7],[4,8],[3,4],[1,7],[2,4],[2,3],[4,5],[0,2]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [9,[[0,1],[4,6],[2,7],[0,3],[0,6],[1,4],[6,7],[3,7],[0,5],[5,7],[4,8],[3,4],[1,7],[2,4],[2,3],[4,5],[0,2]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 8. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-188719-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[84,[2,5,6,7,8,9,10,12,15,16]],\\\"description\\\":\\\"How many different distinct ways can the number 84 be written as a sum of integers contained in the set:\\\\n\\\\n [2,5,6,7,8,9,10,12,15,16]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-889582.cct\\\",\\\"type\\\":\\\"HammingCodes: Integer to Encoded Binary\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":42771,\\\"description\\\":\\\"You are given the following decimal Value: \\\\n 42771 \\\\n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\\\\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\\\\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\\\\n The answer should be given as a string containing only 1s and 0s.\\\\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\\\\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\\\\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\\\\n\\\\n Extra rule for encoding:\\\\n There should be no leading zeros in the 'data bit' section\\\"},{\\\"server\\\":\\\"fulcrumassets\\\",\\\"name\\\":\\\"contract-18930.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[5,14],\\\"description\\\":\\\"You are in a grid with 5 rows and 14 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [5, 14]\\\"},{\\\"server\\\":\\\"The-Cave\\\",\\\"name\\\":\\\"contract-53463.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"12010722233\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 12010722233\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"}]\"}}],[\"contracts/2023-07-10T11:32:16.363Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-10T11:32:16.363Z.txt\",\"text\":\"[{\\\"server\\\":\\\"icarus\\\",\\\"name\\\":\\\"contract-977017-BitRunners.cct\\\",\\\"type\\\":\\\"Encryption II: Vigenère Cipher\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"FLASHMEDIAMOUSELOGINDEBUG\\\",\\\"MACINTOSH\\\"],\\\"description\\\":\\\"Vigenère cipher is a type of polyalphabetic substitution. It uses  the Vigenère square to encrypt and decrypt plaintext with a keyword.\\\\n\\\\n &nbsp;&nbsp;Vigenère square:\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +----------------------------------------------------\\\\n &nbsp;&nbsp;&nbsp;&nbsp; A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp; B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A \\\\n &nbsp;&nbsp;&nbsp;&nbsp; C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\\\n &nbsp;&nbsp;&nbsp;&nbsp; D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\\\n &nbsp;&nbsp;&nbsp;&nbsp; E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\\\n\\\\n For encryption each letter of the plaintext is paired with the corresponding letter of a repeating keyword. For example, the plaintext DASHBOARD is encrypted with the keyword LINUX:\\\\n &nbsp;&nbsp; Plaintext: DASHBOARD\\\\n &nbsp;&nbsp; Keyword:&nbsp;&nbsp;&nbsp;LINUXLINU\\\\n So, the first letter D is paired with the first letter of the key L. Therefore, row D and column L of the  Vigenère square are used to get the first cipher letter O. This must be repeated for the whole ciphertext.\\\\n\\\\n You are given an array with two elements:\\\\n &nbsp;&nbsp;[\\\\\\\"FLASHMEDIAMOUSELOGINDEBUG\\\\\\\", \\\\\\\"MACINTOSH\\\\\\\"]\\\\n The first element is the plaintext, the second element is the keyword.\\\\n\\\\n Return the ciphertext as uppercase string.\\\"}]\"}}],[\"contracts/2023-07-10T12:00:27.917Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-10T12:00:27.917Z.txt\",\"text\":\"[{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-872924-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"11000000100000010111100101110010\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '11000000100000010111100101110010' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-358562-ECorp.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[124,[2,5,6,9,10,11,13,14,15]],\\\"description\\\":\\\"How many different distinct ways can the number 124 be written as a sum of integers contained in the set:\\\\n\\\\n [2,5,6,9,10,11,13,14,15]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-373303.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[1],[3,1],[6,1,7],[2,7,1,4]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[3,1],\\\\n&nbsp;&nbsp;&nbsp;[6,1,7],\\\\n&nbsp;&nbsp;[2,7,1,4]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-959133.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,1,0,0,0,0,0,0],[0,0,1,0,0,1,0,0],[0,0,0,0,1,1,1,0],[0,0,1,0,1,0,1,0],[1,0,0,1,0,0,0,0],[0,0,0,1,0,0,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,0,0,0,1],[1,0,1,0,0,0,0,0],[1,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,1,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-769367.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[9,8],\\\"description\\\":\\\"You are in a grid with 9 rows and 8 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [9, 8]\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-633776.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":915078480,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 915078480?\\\"},{\\\"server\\\":\\\"fulcrumassets\\\",\\\"name\\\":\\\"contract-310837.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[4,-5,6,-8,3,5,-2,7,3,-2,-9,4,5,0,-7,2,-3,-9,-8,-8,3,8,3,7,10,1,9,-3,7,-8],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 4,-5,6,-8,3,5,-2,7,3,-2,-9,4,5,0,-7,2,-3,-9,-8,-8,3,8,3,7,10,1,9,-3,7,-8\\\"},{\\\"server\\\":\\\"syscore\\\",\\\"name\\\":\\\"contract-806259.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0010100000000000100000100000111101001011001001110100101110000010\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0010100000000000100000100000111101001011001001110100101110000010' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-545916-BitRunners.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,1,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,1,0,0,1,1,0,0,0,0,\\\\n0,0,0,0,0,0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-691109-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"Zuijij3IBhPN3IBhPNIBhPSBhPtStlIhPtStlIhRhFG6wwAg5idz8lHb8W28gMMA8W28gMM\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; Zuijij3IBhPN3IBhPNIBhPSBhPtStlIhPtStlIhRhFG6wwAg5idz8lHb8W28gMMA8W28gMM\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"}]\"}}],[\"contracts/failure/fulcrumtech-contract-772507-NiteSec.cct-AlgorithmicStockTraderIII.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/failure/fulcrumtech-contract-772507-NiteSec.cct-AlgorithmicStockTraderIII.txt\",\"text\":\"{\\\"contract\\\":{\\\"server\\\":\\\"fulcrumtech\\\",\\\"name\\\":\\\"contract-772507-NiteSec.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[129,63,116,46,105,9,146,49,190,102,143,96,122,89,173,62,178],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 129,121,121,63,116,108,46,105,9,146,49,190,102,115,143,116,96,122,95,89,173,62,178\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},\\\"wrongResult\\\":278}\"}}],[\"contracts/2023-07-10T22:53:06.799Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-10T22:53:06.799Z.txt\",\"text\":\"[{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-872924-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"11000000100000010111100101110010\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '11000000100000010111100101110010' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"iron-gym\\\",\\\"name\\\":\\\"contract-310546-NiteSec.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0110000000010000\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0110000000010000' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-358562-ECorp.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[124,[2,5,6,9,10,11,13,14,15]],\\\"description\\\":\\\"How many different distinct ways can the number 124 be written as a sum of integers contained in the set:\\\\n\\\\n [2,5,6,9,10,11,13,14,15]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-373303.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[1],[3,1],[6,1,7],[2,7,1,4]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[3,1],\\\\n&nbsp;&nbsp;&nbsp;[6,1,7],\\\\n&nbsp;&nbsp;[2,7,1,4]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-959133.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,1,0,0,0,0,0,0],[0,0,1,0,0,1,0,0],[0,0,0,0,1,1,1,0],[0,0,1,0,1,0,1,0],[1,0,0,1,0,0,0,0],[0,0,0,1,0,0,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,0,0,0,1],[1,0,1,0,0,0,0,0],[1,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,1,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"fulcrumtech\\\",\\\"name\\\":\\\"contract-373990-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0100000000000000100000000000000000111011110101110011000111010001\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0100000000000000100000000000000000111011110101110011000111010001' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"fulcrumtech\\\",\\\"name\\\":\\\"contract-772507-NiteSec.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[129,121,121,63,116,108,46,105,9,146,49,190,102,115,143,116,96,122,95,89,173,62,178],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 129,121,121,63,116,108,46,105,9,146,49,190,102,115,143,116,96,122,95,89,173,62,178\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-769367.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[9,8],\\\"description\\\":\\\"You are in a grid with 9 rows and 8 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [9, 8]\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-633776.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":915078480,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 915078480?\\\"},{\\\"server\\\":\\\"fulcrumassets\\\",\\\"name\\\":\\\"contract-310837.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[4,-5,6,-8,3,5,-2,7,3,-2,-9,4,5,0,-7,2,-3,-9,-8,-8,3,8,3,7,10,1,9,-3,7,-8],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 4,-5,6,-8,3,5,-2,7,3,-2,-9,4,5,0,-7,2,-3,-9,-8,-8,3,8,3,7,10,1,9,-3,7,-8\\\"},{\\\"server\\\":\\\"galactic-cyber\\\",\\\"name\\\":\\\"contract-719753-Sector12.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"2515122107\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 2515122107\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"syscore\\\",\\\"name\\\":\\\"contract-806259.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0010100000000000100000100000111101001011001001110100101110000010\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0010100000000000100000100000111101001011001001110100101110000010' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"summit-uni\\\",\\\"name\\\":\\\"contract-387600-BladeIndustries.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[51,[1,3,4,5,6,7,8,9]],\\\"description\\\":\\\"How many different distinct ways can the number 51 be written as a sum of integers contained in the set:\\\\n\\\\n [1,3,4,5,6,7,8,9]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-545916-BitRunners.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,1,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,1,0,0,1,1,0,0,0,0,\\\\n0,0,0,0,0,0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-691109-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"Zuijij3IBhPN3IBhPNIBhPSBhPtStlIhPtStlIhRhFG6wwAg5idz8lHb8W28gMMA8W28gMM\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; Zuijij3IBhPN3IBhPNIBhPSBhPtStlIhPtStlIhRhFG6wwAg5idz8lHb8W28gMMA8W28gMM\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"}]\"}}],[\"analytics/2023-07-11-02-27-Bachman&Associates-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-02-27-Bachman&Associates-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-09T10:51:29.538Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-09T10:51:29.538Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"The Black Hand\\\",\\\"firstTime\\\":\\\"2023-07-09T10:51:29.539Z\\\"},{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-10T11:30:36.002Z\\\"},{\\\"factionToMax\\\":\\\"Bachman & Associates\\\",\\\"firstTime\\\":\\\"2023-07-10T20:03:02.082Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":175000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-09T10:51:29.539Z\\\"},\\\"augsBought\\\":[\\\"SmartJaw\\\",\\\"Enhanced Social Interaction Implant\\\",\\\"FocusWire\\\",\\\"ADR-V2 Pheromone Gene\\\",\\\"Neuroreceptor Management Implant\\\",\\\"Nanofiber Weave\\\"],\\\"moneySpent\\\":{\\\"augments\\\":22646728750,\\\"homeCores\\\":23730468750000,\\\"homeRam\\\":31587660778186.953,\\\"fluxGovernors\\\":57032927790864.44},\\\"moneyLeft\\\":12203039917625.707,\\\"lastSaved\\\":\\\"2023-07-11T07:27:30.663Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":175000,\\\"currentFactionRep\\\":162129.75593228705,\\\"targetRepForGettingToFavor\\\":162120.6286,\\\"time\\\":\\\"2023-07-09T18:56:46.726Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":false,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$56,926,395,005.04\\\",\\\"moneyRightNow\\\":\\\"$6,976,811,949.53\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$300,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-09T18:56:46.726Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$286,650,154,139.07\\\",\\\"moneyRightNow\\\":\\\"$300,169,387,386.01\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$300,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-10T08:59:23.830Z\\\"},\\\"amountOfRamIncrease\\\":null,\\\"amountOfCoresIncrease\\\":null}\"}}],[\"contracts/2023-07-11T07:27:33.925Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T07:27:33.925Z.txt\",\"text\":\"[{\\\"server\\\":\\\"crush-fitness\\\",\\\"name\\\":\\\"contract-703070-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"(a))()aa)))())))a))\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n (a))()aa)))())))a))\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"zb-institute\\\",\\\"name\\\":\\\"contract-760582-NWO.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[19,26],[5,11],[23,33],[18,24],[16,24],[4,6],[19,23],[19,20],[15,22],[17,24],[23,26],[18,28],[11,14],[3,5],[14,17],[23,24]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[19,26],[5,11],[23,33],[18,24],[16,24],[4,6],[19,23],[19,20],[15,22],[17,24],[23,26],[18,28],[11,14],[3,5],[14,17],[23,24]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"zeus-med\\\",\\\"name\\\":\\\"contract-660870-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[0,-5,1,9,9,0,5,-3],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 0,-5,1,9,9,0,5,-3\\\"},{\\\"server\\\":\\\"run4theh111z\\\",\\\"name\\\":\\\"contract-657153-CyberSec.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\")())()()(\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n )())()()(\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"}]\"}}],[\"analytics/2023-07-11-07-24-BitRunners-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-07-24-BitRunners-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T10:42:16.637Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T10:42:16.638Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NWO\\\",\\\"firstTime\\\":\\\"2023-07-11T10:42:16.638Z\\\"},{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-11T10:46:46.120Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-11T10:42:16.638Z\\\"},\\\"augsBought\\\":[\\\"Neural Accelerator\\\"],\\\"moneySpent\\\":{\\\"augments\\\":1750000000,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":4554283656849.052,\\\"repPurchased\\\":0},\\\"moneyLeft\\\":1755961103764.4956,\\\"lastSaved\\\":\\\"2023-07-11T12:24:47.532Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1000000,\\\"currentFactionRep\\\":78668.58510156769,\\\"targetRepForGettingToFavor\\\":78604.3905,\\\"time\\\":\\\"2023-07-11T11:26:08.909Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$74,796,262,687,719.81\\\",\\\"moneyRightNow\\\":\\\"$5,775,539,522,926.99\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$175,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T12:24:43.465Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$74,796,262,687,719.81\\\",\\\"moneyRightNow\\\":\\\"$6,311,994,760,613.55\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$175,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T12:24:47.531Z\\\"}}\"}}],[\"contracts/2023-07-11T12:24:50.788Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T12:24:50.788Z.txt\",\"text\":\"[{\\\"server\\\":\\\"iron-gym\\\",\\\"name\\\":\\\"contract-294274.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"27278324\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 27278324\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"infocomm\\\",\\\"name\\\":\\\"contract-34323.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[2,1,0,6,4,3,2,1,2],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 2,1,0,6,4,3,2,1,2\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-156862.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[3,3,8,10,9,5,2,0,9,0,5,10,10,8],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,3,8,10,9,5,2,0,9,0,5,10,10,8\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-330757.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0010100001111101\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0010100001111101' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"}]\"}}],[\"analytics/2023-07-11-12-29-Daedalus-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-12-29-Daedalus-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T12:24:51.094Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T12:24:51.094Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NWO\\\",\\\"firstTime\\\":\\\"2023-07-11T12:24:51.094Z\\\"},{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-11T12:29:47.178Z\\\"},{\\\"factionToMax\\\":\\\"Daedalus\\\",\\\"firstTime\\\":\\\"2023-07-11T15:04:35.038Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-11T12:24:51.094Z\\\"},\\\"augsBought\\\":[\\\"Embedded Netburner Module Core V2 Upgrade\\\",\\\"BitRunners Neurolink\\\",\\\"Synfibril Muscle\\\",\\\"Power Recirculation Core\\\",\\\"Neurotrainer III\\\",\\\"Combat Rib I\\\",\\\"Combat Rib II\\\",\\\"DermaForce Particle Barrier\\\"],\\\"moneySpent\\\":{\\\"augments\\\":27917957472.5,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":91422048319347.48,\\\"repPurchased\\\":0},\\\"moneyLeft\\\":41005533440689.86,\\\"lastSaved\\\":\\\"2023-07-11T17:29:31.733Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1000000,\\\"currentFactionRep\\\":45618.14880600499,\\\"targetRepForGettingToFavor\\\":13348.8089,\\\"time\\\":\\\"2023-07-11T12:48:04.959Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$NaN\\\",\\\"moneyRightNow\\\":\\\"$12,712,609,677,232.98\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$300,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T14:27:37.793Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$NaN\\\",\\\"moneyRightNow\\\":\\\"$13,879,516,076,246.31\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$300,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T14:27:41.820Z\\\"}}\"}}],[\"contracts/2023-07-11T17:29:34.923Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T17:29:34.923Z.txt\",\"text\":\"[{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-978804-BladeIndustries.cct\\\",\\\"type\\\":\\\"HammingCodes: Integer to Encoded Binary\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":36677,\\\"description\\\":\\\"You are given the following decimal Value: \\\\n 36677 \\\\n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\\\\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\\\\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\\\\n The answer should be given as a string containing only 1s and 0s.\\\\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\\\\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\\\\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\\\\n\\\\n Extra rule for encoding:\\\\n There should be no leading zeros in the 'data bit' section\\\"}]\"}}],[\"analytics/2023-07-11-13-33-NWO-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-13-33-NWO-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T17:29:35.209Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T17:29:35.209Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NWO\\\",\\\"firstTime\\\":\\\"2023-07-11T17:29:35.209Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-11T17:29:35.209Z\\\"},\\\"augsBought\\\":[\\\"Embedded Netburner Module Core V3 Upgrade\\\",\\\"Embedded Netburner Module Direct Memory Access Upgrade\\\",\\\"Embedded Netburner Module Analyze Engine\\\",\\\"NEMEAN Subdermal Weave\\\",\\\"Synthetic Heart\\\",\\\"NutriGen Implant\\\",\\\"The Red Pill\\\"],\\\"moneySpent\\\":{\\\"augments\\\":102280939975,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":33234729138126.324,\\\"repPurchased\\\":0},\\\"moneyLeft\\\":27397945380899.656,\\\"lastSaved\\\":\\\"2023-07-11T18:33:24.220Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":188501.26059445622,\\\"targetRepForGettingToFavor\\\":125.34820000000002,\\\"time\\\":\\\"2023-07-11T17:53:45.496Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$438,057,836,945,340.10\\\",\\\"moneyRightNow\\\":\\\"$58,736,735,518,839.44\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$102,280,939,975.00\\\",\\\"time\\\":\\\"2023-07-11T18:33:20.148Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$438,057,836,945,340.10\\\",\\\"moneyRightNow\\\":\\\"$60,734,955,459,000.98\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$102,280,939,975.00\\\",\\\"time\\\":\\\"2023-07-11T18:33:24.219Z\\\"}}\"}}],[\"analytics/2023-07-11-15-02-OmniTekIncorporated-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-15-02-OmniTekIncorporated-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T18:52:58.390Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T18:52:58.390Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"OmniTek Incorporated\\\",\\\"firstTime\\\":\\\"2023-07-11T18:52:58.390Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":625000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-11T18:52:58.391Z\\\"},\\\"augsBought\\\":[\\\"Hydroflame Left Arm\\\",\\\"Xanipher\\\",\\\"PC Direct-Neural Interface\\\",\\\"Bionic Legs\\\",\\\"Bionic Spine\\\",\\\"Combat Rib III\\\",\\\"Augmented Targeting III\\\",\\\"INFRARET Enhancement\\\"],\\\"moneySpent\\\":{\\\"augments\\\":2536876847832,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":158008228467501.8,\\\"repPurchased\\\":1011071000000},\\\"moneyLeft\\\":3118364148690.9688,\\\"lastSaved\\\":\\\"2023-07-11T20:02:57.795Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":625000,\\\"currentFactionRep\\\":462635.4572515714,\\\"targetRepForGettingToFavor\\\":0,\\\"time\\\":\\\"2023-07-11T20:02:53.557Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$569,163,675,385,318.20\\\",\\\"moneyRightNow\\\":\\\"$163,160,637,846,968.20\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$2,536,876,847,832.00\\\",\\\"time\\\":\\\"2023-07-11T20:02:53.557Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$569,163,675,385,318.20\\\",\\\"moneyRightNow\\\":\\\"$164,674,540,464,024.78\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$2,536,876,847,832.00\\\",\\\"time\\\":\\\"2023-07-11T20:02:57.609Z\\\"}}\"}}],[\"contracts/2023-07-11T18:33:27.509Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T18:33:27.509Z.txt\",\"text\":\"[{\\\"server\\\":\\\"titan-labs\\\",\\\"name\\\":\\\"contract-315110.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"640193486\\\",65],\\\"description\\\":\\\"You are given the following string which contains only digits between 0 and 9:\\\\n\\\\n 640193486\\\\n\\\\n You are also given a target number of 65. Return all possible ways you can add the +(add), -(subtract), and *(multiply) operators to the string such that it evaluates to the target number. (Normal order of operations applies.)\\\\n\\\\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\\\\n\\\\n [\\\\\\\"640193486\\\\\\\", 65]\\\\n\\\\n NOTE: The order of evaluation expects script operator precedence NOTE: Numbers in the expression cannot have leading 0's. In other words, \\\\\\\"1+01\\\\\\\" is not a valid expression Examples:\\\\n\\\\n Input: digits = \\\\\\\"123\\\\\\\", target = 6\\\\n Output: [1+2+3, 1*2*3]\\\\n\\\\n Input: digits = \\\\\\\"105\\\\\\\", target = 5\\\\n Output: [1*0+5, 10-5]\\\"}]\"}}],[\"analytics/2023-07-11-16-04-BladeIndustries-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-16-04-BladeIndustries-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T20:16:37.898Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T20:16:37.898Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"Blade Industries\\\",\\\"firstTime\\\":\\\"2023-07-11T20:16:37.898Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":562500,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-11T20:16:37.899Z\\\"},\\\"augsBought\\\":[\\\"OmniTek InfoLoad\\\",\\\"HyperSight Corneal Implant\\\"],\\\"moneySpent\\\":{\\\"augments\\\":8100000000,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":85747668719937.4,\\\"repPurchased\\\":4751786000000},\\\"moneyLeft\\\":13842981133569.93,\\\"lastSaved\\\":\\\"2023-07-11T21:04:19.385Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":562500,\\\"currentFactionRep\\\":462578.8960435048,\\\"targetRepForGettingToFavor\\\":0,\\\"time\\\":\\\"2023-07-11T21:04:14.492Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$530,007,418,535,109.50\\\",\\\"moneyRightNow\\\":\\\"$102,174,957,837,653.20\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$8,100,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T21:04:14.492Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$530,007,418,535,109.50\\\",\\\"moneyRightNow\\\":\\\"$104,350,535,853,507.34\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$8,100,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T21:04:18.527Z\\\"}}\"}}],[\"data/ramToReserveOnHome.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/ramToReserveOnHome.txt\",\"text\":\"{\\\"ramToReserve\\\":58.4,\\\"ramToReserveInLimitedEnvironment\\\":32.6,\\\"earlyGameLimiter\\\":\\\"scripts/investments/invest-in-stocks.js\\\"}\"}}],[\"data/ownedAugs.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/ownedAugs.txt\",\"text\":\"[\\\"Embedded Netburner Module\\\",\\\"Cranial Signal Processors - Gen I\\\",\\\"Cranial Signal Processors - Gen II\\\",\\\"Artificial Synaptic Potentiation\\\",\\\"Neurotrainer II\\\",\\\"BitWire\\\",\\\"Synaptic Enhancement Implant\\\",\\\"Neurotrainer I\\\",\\\"Cranial Signal Processors - Gen III\\\",\\\"DataJack\\\",\\\"Neuregen Gene Modification\\\",\\\"Neural-Retention Enhancement\\\",\\\"CRTX42-AA Gene Modification\\\",\\\"Speech Processor Implant\\\",\\\"Social Negotiation Assistant (S.N.A)\\\",\\\"Nuoptimal Nootropic Injector Implant\\\",\\\"ADR-V1 Pheromone Gene\\\",\\\"Speech Enhancement\\\",\\\"Wired Reflexes\\\",\\\"Neuralstimulator\\\",\\\"Embedded Netburner Module Core Implant\\\",\\\"Enhanced Myelin Sheathing\\\",\\\"Cranial Signal Processors - Gen IV\\\",\\\"The Black Hand\\\",\\\"CashRoot Starter Kit\\\",\\\"Augmented Targeting I\\\",\\\"Augmented Targeting II\\\",\\\"NeuroFlux Governor\\\",\\\"SmartJaw\\\",\\\"Enhanced Social Interaction Implant\\\",\\\"FocusWire\\\",\\\"ADR-V2 Pheromone Gene\\\",\\\"Neuroreceptor Management Implant\\\",\\\"Nanofiber Weave\\\",\\\"Neural Accelerator\\\",\\\"Artificial Bio-neural Network Implant\\\",\\\"Cranial Signal Processors - Gen V\\\",\\\"PCMatrix\\\",\\\"Embedded Netburner Module Core V2 Upgrade\\\",\\\"BitRunners Neurolink\\\",\\\"Synfibril Muscle\\\",\\\"Power Recirculation Core\\\",\\\"Neurotrainer III\\\",\\\"Combat Rib I\\\",\\\"Combat Rib II\\\",\\\"DermaForce Particle Barrier\\\",\\\"Embedded Netburner Module Core V3 Upgrade\\\",\\\"Embedded Netburner Module Direct Memory Access Upgrade\\\",\\\"Embedded Netburner Module Analyze Engine\\\",\\\"NEMEAN Subdermal Weave\\\",\\\"Synthetic Heart\\\",\\\"NutriGen Implant\\\",\\\"The Red Pill\\\",\\\"Hydroflame Left Arm\\\",\\\"Xanipher\\\",\\\"PC Direct-Neural Interface\\\",\\\"Bionic Legs\\\",\\\"Bionic Spine\\\",\\\"Combat Rib III\\\",\\\"Augmented Targeting III\\\",\\\"INFRARET Enhancement\\\",\\\"OmniTek InfoLoad\\\",\\\"HyperSight Corneal Implant\\\"]\"}}],[\"data/beforeFormulasServerSpend.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/beforeFormulasServerSpend.txt\",\"text\":\"1327317524.48\"}}],[\"data/typeOfServerPurchase.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/typeOfServerPurchase.txt\",\"text\":\"{\\\"max\\\":false,\\\"min\\\":false,\\\"average\\\":true,\\\"lastPurchaseDate\\\":\\\"2023-07-11T21:04:24.485Z\\\"}\"}}],[\"data/memoryStarvedQueue.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/memoryStarvedQueue.txt\",\"text\":\"[[\\\"joesguns\\\",{\\\"name\\\":\\\"joesguns\\\",\\\"moneyThreshhold\\\":5273437.5,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":5.86,\\\"moneyAvailable\\\":6701953.348860625,\\\"minDifficulty\\\":5,\\\"pids\\\":[718],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":43}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"sigma-cosmetics\\\",{\\\"name\\\":\\\"sigma-cosmetics\\\",\\\"moneyThreshhold\\\":4851562.5,\\\"securityThreshholdTarget\\\":8,\\\"hackDifficulty\\\":4.68,\\\"moneyAvailable\\\":5986275.736996307,\\\"minDifficulty\\\":3,\\\"pids\\\":[556],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":43}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"foodnstuff\\\",{\\\"name\\\":\\\"foodnstuff\\\",\\\"moneyThreshhold\\\":4218750,\\\"securityThreshholdTarget\\\":8,\\\"hackDifficulty\\\":6.4,\\\"moneyAvailable\\\":5284119.789634486,\\\"minDifficulty\\\":3,\\\"pids\\\":[528],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":44}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"n00dles\\\",{\\\"name\\\":\\\"n00dles\\\",\\\"moneyThreshhold\\\":147656.25,\\\"securityThreshholdTarget\\\":6,\\\"hackDifficulty\\\":1.008,\\\"moneyAvailable\\\":196875,\\\"minDifficulty\\\":1,\\\"pids\\\":[322],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":41}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"rho-construction\\\",{\\\"name\\\":\\\"rho-construction\\\",\\\"moneyThreshhold\\\":1195301745,\\\"securityThreshholdTarget\\\":24,\\\"hackDifficulty\\\":19.928,\\\"moneyAvailable\\\":1593735660,\\\"minDifficulty\\\":19,\\\"pids\\\":[2250],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":55}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"catalyst\\\",{\\\"name\\\":\\\"catalyst\\\",\\\"moneyThreshhold\\\":1031511214.6875,\\\"securityThreshholdTarget\\\":27,\\\"hackDifficulty\\\":23.12,\\\"moneyAvailable\\\":868970883.4017336,\\\"minDifficulty\\\":22,\\\"pids\\\":[2306],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"run4theh111z\\\",\\\"threads\\\":285}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"netlink\\\",{\\\"name\\\":\\\"netlink\\\",\\\"moneyThreshhold\\\":580078125,\\\"securityThreshholdTarget\\\":29,\\\"hackDifficulty\\\":25,\\\"moneyAvailable\\\":773437500,\\\"minDifficulty\\\":24,\\\"pids\\\":[2225],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":58}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"millenium-fitness\\\",{\\\"name\\\":\\\"millenium-fitness\\\",\\\"moneyThreshhold\\\":527343750,\\\"securityThreshholdTarget\\\":21,\\\"hackDifficulty\\\":16.996,\\\"moneyAvailable\\\":703125000,\\\"minDifficulty\\\":16,\\\"pids\\\":[1972],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":53}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"rothman-uni\\\",{\\\"name\\\":\\\"rothman-uni\\\",\\\"moneyThreshhold\\\":476878938.046875,\\\"securityThreshholdTarget\\\":23,\\\"hackDifficulty\\\":19.016,\\\"moneyAvailable\\\":635838584.0625,\\\"minDifficulty\\\":18,\\\"pids\\\":[1873],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":54}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"summit-uni\\\",{\\\"name\\\":\\\"summit-uni\\\",\\\"moneyThreshhold\\\":465021738.28125,\\\"securityThreshholdTarget\\\":24,\\\"hackDifficulty\\\":20.08,\\\"moneyAvailable\\\":539779302.9534361,\\\"minDifficulty\\\":19,\\\"pids\\\":[2023],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":55}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"computek\\\",{\\\"name\\\":\\\"computek\\\",\\\"moneyThreshhold\\\":464430984.609375,\\\"securityThreshholdTarget\\\":27,\\\"hackDifficulty\\\":22.752,\\\"moneyAvailable\\\":619241312.8125,\\\"minDifficulty\\\":22,\\\"pids\\\":[1773],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"I.I.I.I\\\",\\\"threads\\\":56}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"the-hub\\\",{\\\"name\\\":\\\"the-hub\\\",\\\"moneyThreshhold\\\":395902257.1875,\\\"securityThreshholdTarget\\\":20,\\\"hackDifficulty\\\":15.616,\\\"moneyAvailable\\\":527869676.25,\\\"minDifficulty\\\":15,\\\"pids\\\":[1232],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":51}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"johnson-ortho\\\",{\\\"name\\\":\\\"johnson-ortho\\\",\\\"moneyThreshhold\\\":166768107.1875,\\\"securityThreshholdTarget\\\":23,\\\"hackDifficulty\\\":19.04,\\\"moneyAvailable\\\":214649522.40096986,\\\"minDifficulty\\\":18,\\\"pids\\\":[1355],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":53}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"omega-net\\\",{\\\"name\\\":\\\"omega-net\\\",\\\"moneyThreshhold\\\":144911381.484375,\\\"securityThreshholdTarget\\\":14,\\\"hackDifficulty\\\":9.772,\\\"moneyAvailable\\\":193215175.3125,\\\"minDifficulty\\\":9,\\\"pids\\\":[820],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":47}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"crush-fitness\\\",{\\\"name\\\":\\\"crush-fitness\\\",\\\"moneyThreshhold\\\":117190966.640625,\\\"securityThreshholdTarget\\\":19,\\\"hackDifficulty\\\":15.344,\\\"moneyAvailable\\\":156254622.1875,\\\"minDifficulty\\\":14,\\\"pids\\\":[1257],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":51}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"silver-helix\\\",{\\\"name\\\":\\\"silver-helix\\\",\\\"moneyThreshhold\\\":94921875,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":10.912,\\\"moneyAvailable\\\":126562500,\\\"minDifficulty\\\":10,\\\"pids\\\":[717],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":47}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"phantasy\\\",{\\\"name\\\":\\\"phantasy\\\",\\\"moneyThreshhold\\\":50625000,\\\"securityThreshholdTarget\\\":12,\\\"hackDifficulty\\\":7.5120000000000005,\\\"moneyAvailable\\\":67500000,\\\"minDifficulty\\\":7,\\\"pids\\\":[555],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":45}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"iron-gym\\\",{\\\"name\\\":\\\"iron-gym\\\",\\\"moneyThreshhold\\\":42187500,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":11.408,\\\"moneyAvailable\\\":56250000,\\\"minDifficulty\\\":10,\\\"pids\\\":[666],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":47}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"max-hardware\\\",{\\\"name\\\":\\\"max-hardware\\\",\\\"moneyThreshhold\\\":21093750,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":5.596,\\\"moneyAvailable\\\":28125000,\\\"minDifficulty\\\":5,\\\"pids\\\":[498],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":44}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"zer0\\\",{\\\"name\\\":\\\"zer0\\\",\\\"moneyThreshhold\\\":15820312.5,\\\"securityThreshholdTarget\\\":13,\\\"hackDifficulty\\\":8.448,\\\"moneyAvailable\\\":21093750,\\\"minDifficulty\\\":8,\\\"pids\\\":[527],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":45}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"neo-net\\\",{\\\"name\\\":\\\"neo-net\\\",\\\"moneyThreshhold\\\":10546875,\\\"securityThreshholdTarget\\\":13,\\\"hackDifficulty\\\":8.716,\\\"moneyAvailable\\\":14062500,\\\"minDifficulty\\\":8,\\\"pids\\\":[499],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":45}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"harakiri-sushi\\\",{\\\"name\\\":\\\"harakiri-sushi\\\",\\\"moneyThreshhold\\\":8437500,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":5.448,\\\"moneyAvailable\\\":11250000,\\\"minDifficulty\\\":5,\\\"pids\\\":[443],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":44}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"hong-fang-tea\\\",{\\\"name\\\":\\\"hong-fang-tea\\\",\\\"moneyThreshhold\\\":6328125,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":5.86,\\\"moneyAvailable\\\":8042190.338124648,\\\"minDifficulty\\\":5,\\\"pids\\\":[444],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":44}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"nectar-net\\\",{\\\"name\\\":\\\"nectar-net\\\",\\\"moneyThreshhold\\\":5800781.25,\\\"securityThreshholdTarget\\\":12,\\\"hackDifficulty\\\":7.716,\\\"moneyAvailable\\\":7734375,\\\"minDifficulty\\\":7,\\\"pids\\\":[445],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"I.I.I.I\\\",\\\"threads\\\":44}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"global-pharm\\\",{\\\"name\\\":\\\"global-pharm\\\",\\\"moneyThreshhold\\\":3621877746.328125,\\\"securityThreshholdTarget\\\":31,\\\"hackDifficulty\\\":26,\\\"moneyAvailable\\\":1287778754.25,\\\"minDifficulty\\\":26,\\\"pids\\\":[2276],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":315}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"nova-med\\\",{\\\"name\\\":\\\"nova-med\\\",\\\"moneyThreshhold\\\":2444894526.796875,\\\"securityThreshholdTarget\\\":30,\\\"hackDifficulty\\\":25,\\\"moneyAvailable\\\":869295831.75,\\\"minDifficulty\\\":25,\\\"pids\\\":[2125],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":310}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"univ-energy\\\",{\\\"name\\\":\\\"univ-energy\\\",\\\"moneyThreshhold\\\":2348953591.640625,\\\"securityThreshholdTarget\\\":32,\\\"hackDifficulty\\\":27,\\\"moneyAvailable\\\":835183499.25,\\\"minDifficulty\\\":27,\\\"pids\\\":[2332],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":320}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"unitalife\\\",{\\\"name\\\":\\\"unitalife\\\",\\\"moneyThreshhold\\\":2239487639.296875,\\\"securityThreshholdTarget\\\":32,\\\"hackDifficulty\\\":27,\\\"moneyAvailable\\\":796262271.75,\\\"minDifficulty\\\":27,\\\"pids\\\":[2277],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":320}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"zb-def\\\",{\\\"name\\\":\\\"zb-def\\\",\\\"moneyThreshhold\\\":2110710860.859375,\\\"securityThreshholdTarget\\\":26,\\\"hackDifficulty\\\":21.788,\\\"moneyAvailable\\\":2814281147.8125,\\\"minDifficulty\\\":21,\\\"pids\\\":[2275],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":60}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"lexo-corp\\\",{\\\"name\\\":\\\"lexo-corp\\\",\\\"moneyThreshhold\\\":1685925011.953125,\\\"securityThreshholdTarget\\\":26,\\\"hackDifficulty\\\":21.928,\\\"moneyAvailable\\\":2247900015.9375,\\\"minDifficulty\\\":21,\\\"pids\\\":[2124],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":59}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"applied-energetics\\\",{\\\"name\\\":\\\"applied-energetics\\\",\\\"moneyThreshhold\\\":1613790436.640625,\\\"securityThreshholdTarget\\\":27,\\\"hackDifficulty\\\":22.848,\\\"moneyAvailable\\\":2151720582.1875,\\\"minDifficulty\\\":22,\\\"pids\\\":[2304],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"fulcrumtech\\\",\\\"threads\\\":60}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"alpha-ent\\\",{\\\"name\\\":\\\"alpha-ent\\\",\\\"moneyThreshhold\\\":1524288923.4375,\\\"securityThreshholdTarget\\\":25,\\\"hackDifficulty\\\":21.052,\\\"moneyAvailable\\\":2032385231.25,\\\"minDifficulty\\\":20,\\\"pids\\\":[1747],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":57}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"syscore\\\",{\\\"name\\\":\\\"syscore\\\",\\\"moneyThreshhold\\\":1128491449.453125,\\\"securityThreshholdTarget\\\":26,\\\"hackDifficulty\\\":21.844,\\\"moneyAvailable\\\":1504655265.9375,\\\"minDifficulty\\\":21,\\\"pids\\\":[1847],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":58}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"snap-fitness\\\",{\\\"name\\\":\\\"snap-fitness\\\",\\\"moneyThreshhold\\\":949218750,\\\"securityThreshholdTarget\\\":25,\\\"hackDifficulty\\\":20.852,\\\"moneyAvailable\\\":1265625000,\\\"minDifficulty\\\":20,\\\"pids\\\":[1923],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":58}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"aevum-police\\\",{\\\"name\\\":\\\"aevum-police\\\",\\\"moneyThreshhold\\\":639837627.890625,\\\"securityThreshholdTarget\\\":28,\\\"hackDifficulty\\\":24.592000000000002,\\\"moneyAvailable\\\":853116837.1875,\\\"minDifficulty\\\":23,\\\"pids\\\":[1772],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":58}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"megacorp\\\",{\\\"name\\\":\\\"megacorp\\\",\\\"moneyThreshhold\\\":88544621249.29688,\\\"securityThreshholdTarget\\\":38,\\\"hackDifficulty\\\":99,\\\"moneyAvailable\\\":31482531999.75,\\\"minDifficulty\\\":33,\\\"pids\\\":[768],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1341}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"ecorp\\\",{\\\"name\\\":\\\"ecorp\\\",\\\"moneyThreshhold\\\":79950943622.10938,\\\"securityThreshholdTarget\\\":38,\\\"hackDifficulty\\\":99,\\\"moneyAvailable\\\":28427002176.75,\\\"minDifficulty\\\":33,\\\"pids\\\":[769],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1341}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"blade\\\",{\\\"name\\\":\\\"blade\\\",\\\"moneyThreshhold\\\":63526222571.484375,\\\"securityThreshholdTarget\\\":36,\\\"hackDifficulty\\\":93,\\\"moneyAvailable\\\":22587101358.75,\\\"minDifficulty\\\":31,\\\"pids\\\":[770],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1261}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"kuai-gong\\\",{\\\"name\\\":\\\"kuai-gong\\\",\\\"moneyThreshhold\\\":63029199243.515625,\\\"securityThreshholdTarget\\\":37,\\\"hackDifficulty\\\":95,\\\"moneyAvailable\\\":22410381953.25,\\\"minDifficulty\\\":32,\\\"pids\\\":[771],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1281}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"nwo\\\",{\\\"name\\\":\\\"nwo\\\",\\\"moneyThreshhold\\\":59811683377.5,\\\"securityThreshholdTarget\\\":38,\\\"hackDifficulty\\\":99,\\\"moneyAvailable\\\":21266376312,\\\"minDifficulty\\\":33,\\\"pids\\\":[772],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1341}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"b-and-a\\\",{\\\"name\\\":\\\"b-and-a\\\",\\\"moneyThreshhold\\\":45960389845.3125,\\\"securityThreshholdTarget\\\":33,\\\"hackDifficulty\\\":85,\\\"moneyAvailable\\\":16341471945,\\\"minDifficulty\\\":28,\\\"pids\\\":[773],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1161}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"4sigma\\\",{\\\"name\\\":\\\"4sigma\\\",\\\"moneyThreshhold\\\":44733192418.125,\\\"securityThreshholdTarget\\\":25,\\\"hackDifficulty\\\":59,\\\"moneyAvailable\\\":15905135082,\\\"minDifficulty\\\":20,\\\"pids\\\":[774],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":801}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"clarkinc\\\",{\\\"name\\\":\\\"clarkinc\\\",\\\"moneyThreshhold\\\":39411784644.609375,\\\"securityThreshholdTarget\\\":24,\\\"hackDifficulty\\\":19,\\\"moneyAvailable\\\":14013078984.75,\\\"minDifficulty\\\":19,\\\"pids\\\":[2331],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":300}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"omnitek\\\",{\\\"name\\\":\\\"omnitek\\\",\\\"moneyThreshhold\\\":38766864247.734375,\\\"securityThreshholdTarget\\\":36,\\\"hackDifficulty\\\":92,\\\"moneyAvailable\\\":13783773954.75,\\\"minDifficulty\\\":31,\\\"pids\\\":[776],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1241}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"fulcrumtech\\\",{\\\"name\\\":\\\"fulcrumtech\\\",\\\"moneyThreshhold\\\":3775062286.40625,\\\"securityThreshholdTarget\\\":33,\\\"hackDifficulty\\\":85,\\\"moneyAvailable\\\":1342244368.5,\\\"minDifficulty\\\":28,\\\"pids\\\":[777],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1161}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"zeus-med\\\",{\\\"name\\\":\\\"zeus-med\\\",\\\"moneyThreshhold\\\":2892896895.234375,\\\"securityThreshholdTarget\\\":34,\\\"hackDifficulty\\\":88,\\\"moneyAvailable\\\":1028585562.75,\\\"minDifficulty\\\":29,\\\"pids\\\":[778],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1201}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"deltaone\\\",{\\\"name\\\":\\\"deltaone\\\",\\\"moneyThreshhold\\\":2816249042.109375,\\\"securityThreshholdTarget\\\":30,\\\"hackDifficulty\\\":25,\\\"moneyAvailable\\\":1001332992.75,\\\"minDifficulty\\\":25,\\\"pids\\\":[2305],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":310}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"aerocorp\\\",{\\\"name\\\":\\\"aerocorp\\\",\\\"moneyThreshhold\\\":2469463162.03125,\\\"securityThreshholdTarget\\\":35,\\\"hackDifficulty\\\":89,\\\"moneyAvailable\\\":878031346.5,\\\"minDifficulty\\\":30,\\\"pids\\\":[780],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1201}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"stormtech\\\",{\\\"name\\\":\\\"stormtech\\\",\\\"moneyThreshhold\\\":2180374786.40625,\\\"securityThreshholdTarget\\\":35,\\\"hackDifficulty\\\":90,\\\"moneyAvailable\\\":775244368.5,\\\"minDifficulty\\\":30,\\\"pids\\\":[781],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1221}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"icarus\\\",{\\\"name\\\":\\\"icarus\\\",\\\"moneyThreshhold\\\":2033979632.578125,\\\"securityThreshholdTarget\\\":34,\\\"hackDifficulty\\\":87,\\\"moneyAvailable\\\":723192758.25,\\\"minDifficulty\\\":29,\\\"pids\\\":[782],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1181}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"omnia\\\",{\\\"name\\\":\\\"omnia\\\",\\\"moneyThreshhold\\\":1898526294.140625,\\\"securityThreshholdTarget\\\":36,\\\"hackDifficulty\\\":94,\\\"moneyAvailable\\\":675031571.25,\\\"minDifficulty\\\":31,\\\"pids\\\":[783],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1281}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"powerhouse-fitness\\\",{\\\"name\\\":\\\"powerhouse-fitness\\\",\\\"moneyThreshhold\\\":1898437500,\\\"securityThreshholdTarget\\\":26,\\\"hackDifficulty\\\":21,\\\"moneyAvailable\\\":675000000,\\\"minDifficulty\\\":21,\\\"pids\\\":[2333],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"CLOUD-000\\\",\\\"threads\\\":305}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"zb-institute\\\",{\\\"name\\\":\\\"zb-institute\\\",\\\"moneyThreshhold\\\":1790497043.4375,\\\"securityThreshholdTarget\\\":27,\\\"hackDifficulty\\\":22.552,\\\"moneyAvailable\\\":2387329391.25,\\\"minDifficulty\\\":22,\\\"pids\\\":[2302],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"I.I.I.I\\\",\\\"threads\\\":59}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"defcomm\\\",{\\\"name\\\":\\\"defcomm\\\",\\\"moneyThreshhold\\\":1785602782.96875,\\\"securityThreshholdTarget\\\":35,\\\"hackDifficulty\\\":91,\\\"moneyAvailable\\\":634880989.5,\\\"minDifficulty\\\":30,\\\"pids\\\":[786],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1241}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"taiyang-digital\\\",{\\\"name\\\":\\\"taiyang-digital\\\",\\\"moneyThreshhold\\\":1765002744.84375,\\\"securityThreshholdTarget\\\":29,\\\"hackDifficulty\\\":71,\\\"moneyAvailable\\\":627556531.5,\\\"minDifficulty\\\":24,\\\"pids\\\":[787],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":961}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"titan-labs\\\",{\\\"name\\\":\\\"titan-labs\\\",\\\"moneyThreshhold\\\":1713460869.140625,\\\"securityThreshholdTarget\\\":31,\\\"hackDifficulty\\\":77,\\\"moneyAvailable\\\":609230531.25,\\\"minDifficulty\\\":26,\\\"pids\\\":[788],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1041}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"vitalife\\\",{\\\"name\\\":\\\"vitalife\\\",\\\"moneyThreshhold\\\":1653293098.828125,\\\"securityThreshholdTarget\\\":35,\\\"hackDifficulty\\\":90,\\\"moneyAvailable\\\":587837546.25,\\\"minDifficulty\\\":30,\\\"pids\\\":[789],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1221}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"galactic-cyber\\\",{\\\"name\\\":\\\"galactic-cyber\\\",\\\"moneyThreshhold\\\":1630380886.171875,\\\"securityThreshholdTarget\\\":24,\\\"hackDifficulty\\\":19.732,\\\"moneyAvailable\\\":2173841181.5625,\\\"minDifficulty\\\":19,\\\"pids\\\":[2303],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"catalyst\\\",\\\"threads\\\":58}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"helios\\\",{\\\"name\\\":\\\"helios\\\",\\\"moneyThreshhold\\\":1543866172.03125,\\\"securityThreshholdTarget\\\":36,\\\"hackDifficulty\\\":92,\\\"moneyAvailable\\\":548930194.5,\\\"minDifficulty\\\":31,\\\"pids\\\":[791],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1241}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"solaris\\\",{\\\"name\\\":\\\"solaris\\\",\\\"moneyThreshhold\\\":1506061803.515625,\\\"securityThreshholdTarget\\\":29,\\\"hackDifficulty\\\":24,\\\"moneyAvailable\\\":535488641.25,\\\"minDifficulty\\\":24,\\\"pids\\\":[2126],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":305}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"infocomm\\\",{\\\"name\\\":\\\"infocomm\\\",\\\"moneyThreshhold\\\":1418533943.90625,\\\"securityThreshholdTarget\\\":32,\\\"hackDifficulty\\\":82,\\\"moneyAvailable\\\":504367624.5,\\\"minDifficulty\\\":27,\\\"pids\\\":[793],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1121}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"microdyne\\\",{\\\"name\\\":\\\"microdyne\\\",\\\"moneyThreshhold\\\":1122656390.859375,\\\"securityThreshholdTarget\\\":27,\\\"hackDifficulty\\\":22,\\\"moneyAvailable\\\":399166716.75,\\\"minDifficulty\\\":22,\\\"pids\\\":[2176],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":300}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"fulcrumassets\\\",{\\\"name\\\":\\\"fulcrumassets\\\",\\\"moneyThreshhold\\\":2109375,\\\"securityThreshholdTarget\\\":38,\\\"hackDifficulty\\\":99,\\\"moneyAvailable\\\":750000,\\\"minDifficulty\\\":33,\\\"pids\\\":[795],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":1341}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}]]\"}}],[\"data/incomeEveryMinuteForTheLast30Minutes.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/incomeEveryMinuteForTheLast30Minutes.txt\",\"text\":\"{\\\"incomeObservations\\\":[69415740.19729763,1236170312.5311148,9064855771.246593,46525350675.1689,94489912745.96028,239846688362.06543,259875323965.3914,560937782817.4327,848273819997.6504],\\\"lastObservation\\\":\\\"2023-07-11T21:13:00.425Z\\\"}\"}}],[\"data/reliabilityForEvery100Batches.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/reliabilityForEvery100Batches.txt\",\"text\":\"[{\\\"errorRate\\\":0,\\\"averageTimeBetweenVisits\\\":23.169444444444444,\\\"now\\\":\\\"2023-07-11T21:07:29.098Z\\\",\\\"moneyWeHaveNow\\\":181471847.99591938,\\\"numberOfTargetedServers\\\":0},{\\\"errorRate\\\":0,\\\"averageTimeBetweenVisits\\\":2.0180800000000003,\\\"now\\\":\\\"2023-07-11T21:08:19.550Z\\\",\\\"moneyWeHaveNow\\\":1169920789.847941,\\\"numberOfTargetedServers\\\":25},{\\\"errorRate\\\":0,\\\"averageTimeBetweenVisits\\\":2.0207619047619048,\\\"now\\\":\\\"2023-07-11T21:09:01.986Z\\\",\\\"moneyWeHaveNow\\\":3331088380.8397527,\\\"numberOfTargetedServers\\\":46},{\\\"errorRate\\\":0,\\\"averageTimeBetweenVisits\\\":2.026586206896552,\\\"now\\\":\\\"2023-07-11T21:10:00.757Z\\\",\\\"moneyWeHaveNow\\\":5238248536.524115,\\\"numberOfTargetedServers\\\":50},{\\\"errorRate\\\":0,\\\"averageTimeBetweenVisits\\\":2.0216000000000007,\\\"now\\\":\\\"2023-07-11T21:11:01.405Z\\\",\\\"moneyWeHaveNow\\\":9210420451.98106,\\\"numberOfTargetedServers\\\":50},{\\\"errorRate\\\":0,\\\"averageTimeBetweenVisits\\\":2.0233793103448274,\\\"now\\\":\\\"2023-07-11T21:12:00.083Z\\\",\\\"moneyWeHaveNow\\\":35454679840.921844,\\\"numberOfTargetedServers\\\":50},{\\\"errorRate\\\":0,\\\"averageTimeBetweenVisits\\\":2.0198666666666667,\\\"now\\\":\\\"2023-07-11T21:13:00.679Z\\\",\\\"moneyWeHaveNow\\\":100850724105.35666,\\\"numberOfTargetedServers\\\":50}]\"}}],[\"data/stockHistory.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/stockHistory.txt\",\"text\":\"[[\\\"ECP\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.69,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22720.633,\\\"ask\\\":22857.367,\\\"price\\\":22789,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.18999999999999995},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6900198819395562,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22723.010527642025,\\\"ask\\\":22859.758835732144,\\\"price\\\":22791.384681687086,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.1900198819395562},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6908545468650624,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22822.82166159149,\\\"ask\\\":22960.170638491738,\\\"price\\\":22891.496150041614,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.19085454686506242},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6911784095267709,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22861.549896744546,\\\"ask\\\":22999.13194226156,\\\"price\\\":22930.340919503054,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.1911784095267709},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6905795069538339,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22933.1680312838,\\\"ask\\\":23071.18107861349,\\\"price\\\":23002.174554948644,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.19057950695383385},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6908312329878147,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22963.459197041364,\\\"ask\\\":23101.654538247225,\\\"price\\\":23032.556867644296,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.19083123298781468},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6901289144411636,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22879.25638682799,\\\"ask\\\":23016.944990961358,\\\"price\\\":22948.100688894676,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.19012891444116364},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6894720909869835,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22800.489323970738,\\\"ask\\\":22937.703903653608,\\\"price\\\":22869.096613812173,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.18947209098698348},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6896505317291178,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22779.036517069002,\\\"ask\\\":22916.121992598,\\\"price\\\":22847.5792548335,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.18965053172911783},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6904093692530177,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22870.180936806904,\\\"ask\\\":23007.81492439049,\\\"price\\\":22938.9979305987,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.19040936925301766},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6911332314260311,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22957.12444665137,\\\"ask\\\":23095.28166498628,\\\"price\\\":23026.203055818827,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.1911332314260311,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6910195865141929,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22943.48260091901,\\\"ask\\\":23081.557721887428,\\\"price\\\":23012.52016140322,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.19101958651419293,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6906598663769763,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22986.688812700937,\\\"ask\\\":23125.023950992014,\\\"price\\\":23055.856381846475,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.1906598663769763,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6912820983117887,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22911.91416321156,\\\"ask\\\":23049.79930361203,\\\"price\\\":22980.856733411798,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.19128209831178866,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6913044293042561,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22914.588986350296,\\\"ask\\\":23052.49022398129,\\\"price\\\":22983.539605165795,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.19130442930425606,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.691465437097228,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22933.874621361312,\\\"ask\\\":23071.891920988357,\\\"price\\\":23002.883271174836,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.19146543709722796,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6908542785547351,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23007.07965303598,\\\"ask\\\":23145.53750450861,\\\"price\\\":23076.308578772296,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.19085427855473514,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6906738770998868,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23028.826666897276,\\\"ask\\\":23167.415393077197,\\\"price\\\":23098.121029987236,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.1906738770998868,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6897958289070487,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23134.873808464847,\\\"ask\\\":23274.1007320865,\\\"price\\\":23204.487270275673,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.1897958289070487,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6898771662666137,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23124.963561822515,\\\"ask\\\":23264.13084504311,\\\"price\\\":23194.547203432812,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.18987716626661366,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6901842581805184,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23087.62351387577,\\\"ask\\\":23226.56608266539,\\\"price\\\":23157.09479827058,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.19018425818051843,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.689958947121263,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23060.303999786385,\\\"ask\\\":23199.082158260524,\\\"price\\\":23129.693079023455,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.18995894712126304,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6900881525069292,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23044.629611706037,\\\"ask\\\":23183.313440863745,\\\"price\\\":23113.97152628489,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.19008815250692923,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6904768384590748,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22997.604871717005,\\\"ask\\\":23136.00570344248,\\\"price\\\":23066.805287579744,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.19047683845907482,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6906222447069823,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23015.160788028443,\\\"ask\\\":23153.667272209153,\\\"price\\\":23084.414030118798,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.1906222447069823,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6899610529403779,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23094.991108165075,\\\"ask\\\":23233.978015536177,\\\"price\\\":23164.484561850626,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.1899610529403779,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6890722689740143,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23203.047246423528,\\\"ask\\\":23342.684441487258,\\\"price\\\":23272.865843955395,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.1890722689740143,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6885094323459362,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23272.11885033552,\\\"ask\\\":23412.17172205268,\\\"price\\\":23342.1452861941,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.1885094323459362,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6892691990966006,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23365.91459254299,\\\"ask\\\":23506.53193211697,\\\"price\\\":23436.223262329982,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.18926919909660056,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6898151090942342,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23298.714007506376,\\\"ask\\\":23438.926930319853,\\\"price\\\":23368.820468913116,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.18981510909423416,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6898444783356379,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23295.10965955757,\\\"ask\\\":23435.300891209867,\\\"price\\\":23365.20527538372,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.1898444783356379,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6900802602284412,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23324.041578445835,\\\"ask\\\":23464.40692395303,\\\"price\\\":23394.224251199434,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.19008026022844116,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.690456465826646,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23277.96997370149,\\\"ask\\\":23418.05805779598,\\\"price\\\":23348.014015748737,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.190456465826646,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.69037292923629,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23267.764440913907,\\\"ask\\\":23407.791107559322,\\\"price\\\":23337.777774236616,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.19037292923629,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6910567073112643,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23351.337180179897,\\\"ask\\\":23491.866792096724,\\\"price\\\":23421.60198613831,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.19105670731126434,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6912891420244349,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23379.745820923305,\\\"ask\\\":23520.44639757881,\\\"price\\\":23450.09610925106,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.19128914202443492,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6904481547257876,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23277.408569861884,\\\"ask\\\":23417.49327539766,\\\"price\\\":23347.450922629774,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.19044815472578758,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6902865396125781,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23257.672010584683,\\\"ask\\\":23397.637940437748,\\\"price\\\":23327.654975511217,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.19028653961257813,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6895168709490168,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23163.978633669863,\\\"ask\\\":23303.380711705988,\\\"price\\\":23233.679672687926,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.1895168709490168,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6890007406845905,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23227.06341529112,\\\"ask\\\":23366.84514095987,\\\"price\\\":23296.954278125497,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.1890007406845905,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6897852387720874,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23131.051802663304,\\\"ask\\\":23270.255725247032,\\\"price\\\":23200.653763955168,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.18978523877208742,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6906734227186103,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23023.30407052321,\\\"ask\\\":23161.859561419034,\\\"price\\\":23092.581815971123,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.19067342271861032,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.690352756511659,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23062.023654419714,\\\"ask\\\":23200.812161868576,\\\"price\\\":23131.417908144147,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.19035275651165895,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6902206547499943,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23078.028329151675,\\\"ask\\\":23216.91315359993,\\\"price\\\":23147.470741375804,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.19022065474999428,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6910308914808587,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23176.32820227947,\\\"ask\\\":23315.80460068837,\\\"price\\\":23246.06640148392,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.19103089148085872,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6911158344921448,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23166.02729176994,\\\"ask\\\":23305.44169874147,\\\"price\\\":23235.734495255707,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.19111583449214475,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6907649325206967,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23208.5617299493,\\\"ask\\\":23348.232111473564,\\\"price\\\":23278.39692071143,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.1907649325206967,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6906016667154392,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23188.71571164016,\\\"ask\\\":23328.266658751334,\\\"price\\\":23258.491185195748,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.1906016667154392,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6911272445354625,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23252.657831679742,\\\"ask\\\":23392.593585932576,\\\"price\\\":23322.62570880616,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.19112724453546248,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.691337705017166,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23278.262583006726,\\\"ask\\\":23418.352428039863,\\\"price\\\":23348.307505523295,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.19133770501716596,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6905486996169202,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23182.665907008755,\\\"ask\\\":23322.18044606798,\\\"price\\\":23252.42317653837,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.19054869961692023,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.689964767311822,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23111.840180363983,\\\"ask\\\":23250.928486364166,\\\"price\\\":23181.384333364076,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.189964767311822,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6904663864452292,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23050.97200588401,\\\"ask\\\":23189.694003913402,\\\"price\\\":23120.333004898708,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.19046638644522917,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6903712240169166,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23062.488927646336,\\\"ask\\\":23201.280235134676,\\\"price\\\":23131.884581390506,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.19037122401691664,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6910028605696099,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23139.008428311474,\\\"ask\\\":23278.260234299305,\\\"price\\\":23208.63433130539,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.1910028605696099,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6902342776772372,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23232.118269553815,\\\"ask\\\":23371.930415609302,\\\"price\\\":23302.02434258156,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.19023427767723722,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6902590722975408,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23229.090652818442,\\\"ask\\\":23368.884578512432,\\\"price\\\":23298.98761566544,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.1902590722975408,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6899615356582706,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23265.417464899896,\\\"ask\\\":23405.430007316543,\\\"price\\\":23335.42373610822,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.18996153565827056,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6901191755926348,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23284.72431493884,\\\"ask\\\":23424.853047024728,\\\"price\\\":23354.788680981786,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.1901191755926348,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6908030066029857,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23201.272713009126,\\\"ask\\\":23340.899228834656,\\\"price\\\":23271.085970921893,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.19080300660298566,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6900570683772865,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23291.977343452985,\\\"ask\\\":23432.149724657316,\\\"price\\\":23362.063534055153,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.19005706837728653,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6896176566200062,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23238.25053082215,\\\"ask\\\":23378.09958115809,\\\"price\\\":23308.175055990123,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.18961765662000618,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.690325410941124,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23324.98808744837,\\\"ask\\\":23465.359129098008,\\\"price\\\":23395.17360827319,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.19032541094112398,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.69090687751583,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23396.248676673964,\\\"ask\\\":23537.048568409213,\\\"price\\\":23466.64862254159,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.19090687751583002,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6900990182921586,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23495.254409409783,\\\"ask\\\":23636.65012300703,\\\"price\\\":23565.95226620841,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.19009901829215858,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6897532889150044,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23452.60162022837,\\\"ask\\\":23593.740647030147,\\\"price\\\":23523.17113362926,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.18975328891500443,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6900578205141403,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23490.24027364063,\\\"ask\\\":23631.60581189724,\\\"price\\\":23560.923042768936,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.19005782051414033,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6892590741756612,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23391.932189627696,\\\"ask\\\":23532.706104510107,\\\"price\\\":23462.3191470689,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.18925907417566123,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6884087260313864,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23497.033021464104,\\\"ask\\\":23638.43943884503,\\\"price\\\":23567.73623015457,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.18840872603138636,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6876818264319516,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23587.68691128639,\\\"ask\\\":23729.638888686306,\\\"price\\\":23658.66289998635,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.18768182643195164,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.687831781159438,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23606.533089576853,\\\"ask\\\":23748.598484298476,\\\"price\\\":23677.565786937666,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.187831781159438,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6876784301121464,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23625.80611435395,\\\"ask\\\":23767.987495182555,\\\"price\\\":23696.896804768254,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.18767843011214635,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6873766759263182,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23663.79229041218,\\\"ask\\\":23806.202274105734,\\\"price\\\":23734.99728225896,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.18737667592631824,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6878443968843265,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23722.860749949454,\\\"ask\\\":23865.626210831793,\\\"price\\\":23794.243480390625,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.18784439688432653,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6884314175955402,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23648.956882074563,\\\"ask\\\":23791.277585477215,\\\"price\\\":23720.11723377589,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.18843141759554016,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31186144103954144,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23685.71190584908,\\\"ask\\\":23828.25380297555,\\\"price\\\":23756.982854412316,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.18813855896045856,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3126769798360535,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23583.482754899025,\\\"ask\\\":23725.409431458094,\\\"price\\\":23654.44609317856,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.18732302016394647,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3125338132475468,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23565.472217480972,\\\"ask\\\":23707.290505650362,\\\"price\\\":23636.38136156567,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.1874661867524532,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3132200137804039,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23479.527841084917,\\\"ask\\\":23620.828911342196,\\\"price\\\":23550.178376213556,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.18677998621959607,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3137519045342579,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23412.85538034555,\\\"ask\\\":23553.755212122953,\\\"price\\\":23483.30529623425,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.18624809546574211,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31319263064210817,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23483.160522109072,\\\"ask\\\":23624.48345403751,\\\"price\\\":23553.82198807329,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.18680736935789183,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3128232248035912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23529.59775118368,\\\"ask\\\":23671.200144871844,\\\"price\\\":23600.398948027763,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.1871767751964088,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31264480555789004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23507.190402965134,\\\"ask\\\":23648.65794801808,\\\"price\\\":23577.924175491607,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.18735519444210996,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3120244108436167,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23429.60726177714,\\\"ask\\\":23570.60790728432,\\\"price\\\":23500.10758453073,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.1879755891563833,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3117075926031695,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23469.096043168167,\\\"ask\\\":23610.334334300573,\\\"price\\\":23539.71518873437,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.1882924073968305,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31255534394796636,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23363.904433601314,\\\"ask\\\":23504.509675929905,\\\"price\\\":23434.20705476561,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.18744465605203364,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31296657005654843,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23415.161416349583,\\\"ask\\\":23556.07512597656,\\\"price\\\":23485.61827116307,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.18703342994345157,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3130888466369901,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23399.863320867167,\\\"ask\\\":23540.684965726945,\\\"price\\\":23470.274143297058,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.1869111533630099,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31358950726228313,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23337.351839052433,\\\"ask\\\":23477.797286428875,\\\"price\\\":23407.574562740654,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.18641049273771687,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31276293912984454,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23234.32783709459,\\\"ask\\\":23374.153280447215,\\\"price\\\":23304.240558770904,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.18723706087015546,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31348111585264454,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23323.446697137355,\\\"ask\\\":23463.808462616613,\\\"price\\\":23393.627579876986,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.18651888414735546,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3139226131277657,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23268.36958355386,\\\"ask\\\":23408.39989198046,\\\"price\\\":23338.384737767163,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.1860773868722343,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31338889856268537,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23201.8211967925,\\\"ask\\\":23341.451013423146,\\\"price\\\":23271.636105107824,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.18661110143731463,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.31272658651599167,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":23119.765525365434,\\\"ask\\\":23258.90152652109,\\\"price\\\":23189.333525943264,\\\"maxShares\\\":21100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.18727341348400833,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[23539.71518873437,23434.20705476561,23485.61827116307,23470.274143297058,23407.574562740654,23304.240558770904,23393.627579876986,23338.384737767163,23271.636105107824,23189.333525943264]}],[\\\"MGCP\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.69,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24074.559,\\\"ask\\\":24219.441,\\\"price\\\":24147,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.18999999999999995},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6899818101404059,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24076.86380446314,\\\"ask\\\":24221.75967490123,\\\"price\\\":24149.311739682187,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.18998181014040594},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6907452867546224,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24173.62108056655,\\\"ask\\\":24319.099241532844,\\\"price\\\":24246.3601610497,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.19074528675462243},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6910414170113213,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24211.150399050497,\\\"ask\\\":24356.85441348811,\\\"price\\\":24284.002406269305,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.19104141701132127},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.690493877501292,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24280.541432859438,\\\"ask\\\":24426.663046296904,\\\"price\\\":24353.602239578173,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.19049387750129199},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6907240765655734,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24251.23544266279,\\\"ask\\\":24397.180691063968,\\\"price\\\":24324.20806686338,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.19072407656557344},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6900818906159044,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24332.891639110752,\\\"ask\\\":24479.328298924855,\\\"price\\\":24406.109969017805,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.19008189061590441},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6906826655776126,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24409.798450145565,\\\"ask\\\":24556.69793931394,\\\"price\\\":24483.248194729753,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.1906826655776126},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.690846962937531,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24430.830594988674,\\\"ask\\\":24577.85665674387,\\\"price\\\":24504.343625866273,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.190846962937531},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6901483275428134,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24341.722606475127,\\\"ask\\\":24488.212411529137,\\\"price\\\":24414.967509002134,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.1901483275428134},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6908096765034852,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24426.384791805845,\\\"ask\\\":24573.38409847669,\\\"price\\\":24499.88444514127,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.19080967650348524,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6907058795070355,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24413.104506611533,\\\"ask\\\":24560.023891806788,\\\"price\\\":24486.564199209162,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.19070587950703555,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6910344446819514,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24371.115764917282,\\\"ask\\\":24517.782459590806,\\\"price\\\":24444.449112254046,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.1910344446819514,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6904640502331232,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24443.88352764825,\\\"ask\\\":24590.98814265917,\\\"price\\\":24517.435835153712,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.19046405023312318,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.690484393341411,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24441.273001080415,\\\"ask\\\":24588.361905801055,\\\"price\\\":24514.817453440737,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.19048439334141098,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6906310669132648,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24460.09285686407,\\\"ask\\\":24607.29502049615,\\\"price\\\":24533.69393868011,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.1906310669132648,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6911877753143436,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24531.52475621331,\\\"ask\\\":24679.1568008846,\\\"price\\\":24605.340778548958,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.1911877753143436,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.691022438771418,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24510.328563182946,\\\"ask\\\":24657.833048016542,\\\"price\\\":24584.080805599744,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.191022438771418,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6902176495727474,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24613.592074058328,\\\"ask\\\":24761.71800429338,\\\"price\\\":24687.655039175854,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.19021764957274745,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6902922299910244,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24603.945374388753,\\\"ask\\\":24752.013250262706,\\\"price\\\":24677.97931232573,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.19029222999102435,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6905738005821708,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24640.35120895136,\\\"ask\\\":24788.63817710954,\\\"price\\\":24714.49469303045,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.19057380058217077,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.690367242717584,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24667.058229081307,\\\"ask\\\":24815.50592153315,\\\"price\\\":24741.28207530723,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.19036724271758398,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6904857059776849,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24651.717759727366,\\\"ask\\\":24800.073132403755,\\\"price\\\":24725.895446065562,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.19048570597768488,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6901293559602167,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24697.834816171104,\\\"ask\\\":24846.46772379099,\\\"price\\\":24772.15126998105,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.19012935596021674,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6902621445224676,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24680.597598624852,\\\"ask\\\":24829.126771735933,\\\"price\\\":24754.862185180395,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.1902621445224676,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6908659219083885,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24758.918941729982,\\\"ask\\\":24907.91945692595,\\\"price\\\":24833.419199327967,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.19086592190838847,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6916829380467684,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24864.90138292208,\\\"ask\\\":25014.53970618941,\\\"price\\\":24939.720544555745,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.1916829380467684,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6911608922881832,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24797.366108614442,\\\"ask\\\":24946.59800094311,\\\"price\\\":24871.98205477878,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.19116089228818323,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.691865774976902,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24706.26474310051,\\\"ask\\\":24854.94838247724,\\\"price\\\":24780.606562788875,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.19186577497690205,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6913594734777189,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24771.460418984625,\\\"ask\\\":24920.536409469983,\\\"price\\\":24845.998414227306,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.19135947347771887,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6913865618254077,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24767.954332004476,\\\"ask\\\":24917.00922266849,\\\"price\\\":24842.481777336485,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.1913865618254077,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6911690942472652,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24796.09751506158,\\\"ask\\\":24945.32177292554,\\\"price\\\":24870.709643993563,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.19116909424726525,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6908229345390382,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24840.997083764276,\\\"ask\\\":24990.49154966456,\\\"price\\\":24915.74431671442,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.1908229345390382,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6907463603877781,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24831.0327927025,\\\"ask\\\":24980.46729295948,\\\"price\\\":24905.75004283099,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.19074636038777815,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6901195490599801,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24912.63001219204,\\\"ask\\\":25062.55556893542,\\\"price\\\":24987.59279056373,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.19011954905998008,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6899079391156044,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24884.932181323413,\\\"ask\\\":25034.691051020443,\\\"price\\\":24959.81161617193,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.18990793911560444,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6891440807558519,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24985.0257506976,\\\"ask\\\":25135.38698891644,\\\"price\\\":25060.206369807023,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.18914408075585187,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6889972325807152,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24965.642859726788,\\\"ask\\\":25115.88745065794,\\\"price\\\":25040.765155192366,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.1889972325807152,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6896966263824595,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25058.02948165892,\\\"ask\\\":25208.83006028475,\\\"price\\\":25133.429770971834,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.18969662638245954,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.689223974215506,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25120.46460325254,\\\"ask\\\":25271.640919821763,\\\"price\\\":25196.052761537154,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.18922397421550596,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6885053941910175,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25215.859830757974,\\\"ask\\\":25367.610240973165,\\\"price\\\":25291.73503586557,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.18850539419101753,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6876982802131809,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25323.825297846655,\\\"ask\\\":25476.225450090464,\\\"price\\\":25400.02537396856,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.1876982802131809,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6879870780415699,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25284.921210242814,\\\"ask\\\":25437.087235580282,\\\"price\\\":25361.00422291155,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.1879870780415699,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.687867721003159,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25300.975150458013,\\\"ask\\\":25453.237789277217,\\\"price\\\":25377.106469867616,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.18786772100315896,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6871356098553855,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25202.761245673802,\\\"ask\\\":25354.432827894503,\\\"price\\\":25278.597036784155,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.18713560985538547,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6870594806871165,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25213.014052465605,\\\"ask\\\":25364.7473366329,\\\"price\\\":25288.880694549254,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.18705948068711653,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6873737047640176,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25170.732046692665,\\\"ask\\\":25322.210875459117,\\\"price\\\":25246.471461075893,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.1873737047640176,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6872269892860363,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25190.44098070783,\\\"ask\\\":25342.038418906668,\\\"price\\\":25266.23969980725,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.18722698928603632,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6876993234796445,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25253.99114872915,\\\"ask\\\":25405.971035281178,\\\"price\\\":25329.981092005164,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.18769932347964446,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6878884190112216,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25228.57491016668,\\\"ask\\\":25380.401840418435,\\\"price\\\":25304.48837529256,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.18788841901122155,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6871795760603595,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25133.75329240131,\\\"ask\\\":25285.00958102158,\\\"price\\\":25209.381436711446,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.1871795760603595,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6877043660837207,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25204.220077587408,\\\"ask\\\":25355.900439137582,\\\"price\\\":25280.060258362497,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.18770436608372065,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6872508987516426,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25265.109926204965,\\\"ask\\\":25417.156726162066,\\\"price\\\":25341.133326183517,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.18725089875164258,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6873364924282949,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25253.566346939784,\\\"ask\\\":25405.543677011636,\\\"price\\\":25329.55501197571,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.18733649242829487,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6879051606169913,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25330.22466186011,\\\"ask\\\":25482.663325823156,\\\"price\\\":25406.443993841633,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.18790516061699125,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6872133931286141,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25423.477161348826,\\\"ask\\\":25576.477023904587,\\\"price\\\":25499.97709262671,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.18721339312861407,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6872357173438282,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25426.5087776566,\\\"ask\\\":25579.526884643496,\\\"price\\\":25503.01783115005,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.18723571734382816,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6875036060316876,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25462.88791604921,\\\"ask\\\":25616.12495466134,\\\"price\\\":25539.506435355277,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.1875036060316876,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6873612483864541,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25482.220006995565,\\\"ask\\\":25635.573387178083,\\\"price\\\":25558.896697086824,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.18736124838645407,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.687977805393738,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25398.63970732372,\\\"ask\\\":25551.4900967359,\\\"price\\\":25475.06490202981,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.18797780539373798,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6886501544845813,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25308.118963449775,\\\"ask\\\":25460.424594122487,\\\"price\\\":25384.271778786133,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.18865015448458133,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6882511154235107,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25254.699386041182,\\\"ask\\\":25406.683534803717,\\\"price\\\":25330.69146042245,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.1882511154235107,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6876082620751371,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25340.940936461524,\\\"ask\\\":25493.44409154554,\\\"price\\\":25417.192514003535,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.18760826207513714,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6870838767416597,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25411.7716004025,\\\"ask\\\":25564.70101825848,\\\"price\\\":25488.236309330492,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.18708387674165972,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6878081810556975,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25510.154508208754,\\\"ask\\\":25663.675999732575,\\\"price\\\":25586.915253970667,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.18780818105569752,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6874956871775183,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25552.600833339064,\\\"ask\\\":25706.37776914652,\\\"price\\\":25629.489301242793,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.1874956871775183,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.687770986365897,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25590.119617777676,\\\"ask\\\":25744.12234366199,\\\"price\\\":25667.120980719836,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.18777098636589695,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6884929614681508,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25688.513036192875,\\\"ask\\\":25843.10789899845,\\\"price\\\":25765.810467595664,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.18849296146815075,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.687718132601027,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25794.10955979193,\\\"ask\\\":25949.339908195892,\\\"price\\\":25871.724733993913,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.187718132601027,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6883807307822267,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25885.15633211578,\\\"ask\\\":26040.934604926904,\\\"price\\\":25963.045468521344,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.18838073078222672,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6885184342939289,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25866.24848927675,\\\"ask\\\":26021.912973665574,\\\"price\\\":25944.080731471164,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.1885184342939289,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6883776215078947,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25885.569138356346,\\\"ask\\\":26041.349895457784,\\\"price\\\":25963.459516907067,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.18837762150789472,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6881005200262496,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25923.646535788415,\\\"ask\\\":26079.656444729968,\\\"price\\\":26001.65149025919,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.18810052002624955,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6885300879988823,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25982.848755346724,\\\"ask\\\":26139.214946452117,\\\"price\\\":26061.03185089942,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.18853008799888227,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6890691099439864,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25908.773589500735,\\\"ask\\\":26064.693992245975,\\\"price\\\":25986.733790873357,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.1890691099439864,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6888002687002364,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25945.613805852863,\\\"ask\\\":26101.755915015463,\\\"price\\\":26023.684860434165,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.18880026870023636,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6880515132124961,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25843.123588331833,\\\"ask\\\":25998.64890581427,\\\"price\\\":25920.886247073053,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.18805151321249614,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6879200216290516,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25861.19392014533,\\\"ask\\\":26016.827985863354,\\\"price\\\":25939.010953004345,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.18792002162905164,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6872907013060915,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25947.79977921705,\\\"ask\\\":26103.955043685757,\\\"price\\\":26025.877411451405,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.1872907013060915,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6868027472692269,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26015.402354047128,\\\"ask\\\":26171.964454472683,\\\"price\\\":26093.683404259908,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.18680274726922685,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6862895473699965,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26086.874010977815,\\\"ask\\\":26243.866231705866,\\\"price\\\":26165.370121341843,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.18628954736999648,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6859525171563464,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26134.06970631073,\\\"ask\\\":26291.345953289525,\\\"price\\\":26212.70782980013,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.18595251715634642,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6857903501881087,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26156.860916221725,\\\"ask\\\":26314.2743219362,\\\"price\\\":26235.567619078964,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.18579035018810874,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6863532046348263,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26077.857684118913,\\\"ask\\\":26234.79564410358,\\\"price\\\":26156.326664111246,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.1863532046348263,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6860658513367096,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26118.069272795543,\\\"ask\\\":26275.249228298824,\\\"price\\\":26196.659250547185,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.1860658513367096,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6852994205328357,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26225.653188299533,\\\"ask\\\":26383.48058963333,\\\"price\\\":26304.566888966434,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.18529942053283566,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6849274981843969,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26278.291812290277,\\\"ask\\\":26436.435995714288,\\\"price\\\":26357.363904002283,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.1849274981843969,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6848168877396722,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26262.583407327125,\\\"ask\\\":26420.63305671926,\\\"price\\\":26341.608232023194,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.1848168877396722,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6852698066672142,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26198.38071113339,\\\"ask\\\":26356.04398522246,\\\"price\\\":26277.212348177927,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.18526980666721415,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6845182122440175,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26304.661152579738,\\\"ask\\\":26462.964028121838,\\\"price\\\":26383.81259035079,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.18451821224401754,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.685165726516358,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26212.675211953352,\\\"ask\\\":26370.424511122575,\\\"price\\\":26291.549861537966,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.185165726516358,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6855667191735039,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26156.032025443626,\\\"ask\\\":26313.4404428485,\\\"price\\\":26234.736234146065,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.18556671917350387,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6850797671852127,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26087.57472642304,\\\"ask\\\":26244.571164094592,\\\"price\\\":26166.072945258817,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.18507976718521268,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0043,\\\"forecast\\\":0.6844787945179506,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26172.283712198045,\\\"ask\\\":26329.789933134038,\\\"price\\\":26251.036822666043,\\\"maxShares\\\":19900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.18447879451795057,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[26196.659250547185,26304.566888966434,26357.363904002283,26341.608232023194,26277.212348177927,26383.81259035079,26291.549861537966,26234.736234146065,26166.072945258817,26251.036822666043]}],[\\\"BLD\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.63,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24757.572,\\\"ask\\\":24956.428,\\\"price\\\":24857,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.13},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6300222864742394,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24761.816299927756,\\\"ask\\\":24960.706390690226,\\\"price\\\":24861.26134530899,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.1300222864742394},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6290866141452274,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24584.8973364707,\\\"ask\\\":24782.36639138211,\\\"price\\\":24683.631863926406,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.12908661414522737},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6294454802550556,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24516.739788982097,\\\"ask\\\":24713.661393712875,\\\"price\\\":24615.200591347486,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.12944548025505564},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6287811300200632,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24642.566521657252,\\\"ask\\\":24840.49878287538,\\\"price\\\":24741.532652266316,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.1287811300200632},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6285024556467217,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24695.891506318272,\\\"ask\\\":24894.252080666207,\\\"price\\\":24795.07179349224,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.1285024556467217},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6292772545105512,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24844.794097977338,\\\"ask\\\":25044.35067707756,\\\"price\\\":24944.57238752745,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.12927725451055117},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6300089248862011,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24985.408159588053,\\\"ask\\\":25186.094168902015,\\\"price\\\":25085.751164245034,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.13000892488620108},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6298083323326581,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25023.958488563003,\\\"ask\\\":25224.954139073547,\\\"price\\\":25124.456313818275,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.1298083323326581},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6289574095114474,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25187.99616605492,\\\"ask\\\":25390.309388272228,\\\"price\\\":25289.152777163574,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.1289574095114474},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6281542408851789,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25032.09204964694,\\\"ask\\\":25233.15302996539,\\\"price\\\":25132.622539806165,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.1281542408851789,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6280294049429902,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25056.47598555406,\\\"ask\\\":25257.732820779398,\\\"price\\\":25157.10440316673,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.1280294049429902,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.627634411902271,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25133.779583455263,\\\"ask\\\":25335.65733111354,\\\"price\\\":25234.7184572844,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.12763441190227098,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6283168349110284,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25268.162382178245,\\\"ask\\\":25471.11950974594,\\\"price\\\":25369.64094596209,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.1283168349110284,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.628292292896789,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25263.33049073493,\\\"ask\\\":25466.248807929587,\\\"price\\\":25364.78964933226,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.128292292896789,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6284691877942392,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25298.164650726154,\\\"ask\\\":25501.36276037054,\\\"price\\\":25399.763705548346,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.12846918779423921,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6291410115317085,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25166.55729125774,\\\"ask\\\":25368.69831367748,\\\"price\\\":25267.62780246761,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.12914101153170854,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6289410275613857,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25127.64535906694,\\\"ask\\\":25329.4738358466,\\\"price\\\":25228.55959745677,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.1289410275613857,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6279682553630355,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25317.21632245691,\\\"ask\\\":25520.567457577046,\\\"price\\\":25418.891890016977,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.12796825536303547,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6278784094094589,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25334.991429540623,\\\"ask\\\":25538.48533660521,\\\"price\\\":25436.738383072916,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.12787840940945894,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6282172424339636,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25402.120288990114,\\\"ask\\\":25606.153383680798,\\\"price\\\":25504.136836335456,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.1282172424339636,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6279683869349271,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25451.422997433227,\\\"ask\\\":25655.85209781422,\\\"price\\\":25553.637547623723,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.12796838693492707,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6281109859171488,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25423.09328792749,\\\"ask\\\":25627.29484044097,\\\"price\\\":25525.19406418423,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.12811098591714876,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6285401496712629,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25508.259053209313,\\\"ask\\\":25713.144668094526,\\\"price\\\":25610.70186065192,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.12854014967126293,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6283793916831183,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25476.397145775696,\\\"ask\\\":25681.0268417257,\\\"price\\\":25578.711993750698,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.1283793916831183,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.629108919805923,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25621.169199466836,\\\"ask\\\":25826.961723157336,\\\"price\\\":25724.065461312086,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.12910891980592298,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6281192717907046,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25817.56104662923,\\\"ask\\\":26024.931014875252,\\\"price\\\":25921.24603075224,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.1281192717907046,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6287441017506049,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25692.261437449946,\\\"ask\\\":25898.62498313228,\\\"price\\\":25795.443210291112,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.1287441017506049,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6278940068580612,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25861.906958517648,\\\"ask\\\":26069.633118827027,\\\"price\\\":25965.770038672337,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.12789400685806118,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6272896629278492,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25740.275152364433,\\\"ask\\\":25947.024350375395,\\\"price\\\":25843.649751369914,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.12728966292784916,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6273219291376849,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25746.799964357746,\\\"ask\\\":25953.60157049717,\\\"price\\\":25850.200767427457,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.12732192913768492,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6270628642486612,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25799.187576771867,\\\"ask\\\":26006.40996694674,\\\"price\\\":25902.798771859303,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.1270628642486612,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6266508618502662,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25882.84165793182,\\\"ask\\\":26090.735968437297,\\\"price\\\":25986.788813184558,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.1266508618502662,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6267418703679144,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25901.440497429627,\\\"ask\\\":26109.48419620416,\\\"price\\\":26005.462346816894,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.1267418703679144,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6274876713620821,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26053.855165268127,\\\"ask\\\":26263.12307824217,\\\"price\\\":26158.48912175515,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.12748767136208206,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6277417684896679,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26002.030223134432,\\\"ask\\\":26210.881871513026,\\\"price\\\":26106.45604732373,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.1277417684896679,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6268216899332001,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26189.31360519336,\\\"ask\\\":26399.6695377652,\\\"price\\\":26294.49157147928,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.1268216899332001,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6269980058845872,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26225.723731465216,\\\"ask\\\":26436.372114850477,\\\"price\\\":26331.047923157847,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.1269980058845872,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6278395666994556,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26399.510251026983,\\\"ask\\\":26611.554510071375,\\\"price\\\":26505.53238054918,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.12783956669945562,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.628409953682166,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26517.298017255205,\\\"ask\\\":26730.288362775325,\\\"price\\\":26623.793190015265,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.128409953682166,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6275367411910399,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26338.19321540852,\\\"ask\\\":26549.74496814272,\\\"price\\\":26443.96909177562,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.12753674119103986,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6265588992256981,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26540.131812684802,\\\"ask\\\":26753.305562184276,\\\"price\\\":26646.71868743454,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.12655889922569807,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6269075965286,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26613.255650189418,\\\"ask\\\":26827.01673974917,\\\"price\\\":26720.136194969295,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.12690759652859995,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6270518844328552,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26583.032006515692,\\\"ask\\\":26796.550335885295,\\\"price\\\":26689.791171200493,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.1270518844328552,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6261652833991842,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26768.53530511132,\\\"ask\\\":26983.543620815028,\\\"price\\\":26876.039462963174,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.1261652833991842,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6260733746648848,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26749.049189846373,\\\"ask\\\":26963.90099056803,\\\"price\\\":26856.4750902072,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.12607337466488477,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6264526070192808,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26829.51110283225,\\\"ask\\\":27045.0091839795,\\\"price\\\":26937.260143405874,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.12645260701928085,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6266299105345383,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26867.12967585578,\\\"ask\\\":27082.929914216067,\\\"price\\\":26975.029795035924,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.12662991053453831,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6272019677956878,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26988.503343044205,\\\"ask\\\":27205.27847029757,\\\"price\\\":27096.890906670887,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.12720196779568782,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6274314424152301,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27037.19108462544,\\\"ask\\\":27254.357278076248,\\\"price\\\":27145.774181350844,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.12743144241523008,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6265705500003773,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27219.84704678456,\\\"ask\\\":27438.480356397286,\\\"price\\\":27329.163701590922,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.1265705500003773,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6272060009715281,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27083.871714580495,\\\"ask\\\":27301.412852850215,\\\"price\\\":27192.642283715355,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.12720600097152812,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6266556984528553,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26967.209581967298,\\\"ask\\\":27183.813674995145,\\\"price\\\":27075.51162848122,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.1266556984528553,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6265520256656112,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26989.283328476224,\\\"ask\\\":27206.064720672817,\\\"price\\\":27097.67402457452,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.1265520256656112,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6258641215295175,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27135.990104082637,\\\"ask\\\":27353.94986395479,\\\"price\\\":27244.969984018713,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.12586412152951754,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.626693868466933,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26958.270337885144,\\\"ask\\\":27174.802629755708,\\\"price\\\":27066.536483820426,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.12669386846693298,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6266668153597832,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26964.02677254806,\\\"ask\\\":27180.60530084162,\\\"price\\\":27072.31603669484,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.1266668153597832,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6269913423316448,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27033.110012170324,\\\"ask\\\":27250.243425922697,\\\"price\\\":27141.67671904651,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.12699134233164477,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6268186919452493,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27069.862729350705,\\\"ask\\\":27287.291345650712,\\\"price\\\":27178.57703750071,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.1268186919452493,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6275659988681805,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26911.282104419883,\\\"ask\\\":27127.4369807606,\\\"price\\\":27019.359542590242,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.12756599886818054,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6283830428785163,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26740.01570224651,\\\"ask\\\":26954.794944834834,\\\"price\\\":26847.40532354067,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.12838304287851632,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6288693248617705,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26841.300011890402,\\\"ask\\\":27056.892783070245,\\\"price\\\":26949.096397480324,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.1288693248617705,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6280812886492272,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26678.162984992377,\\\"ask\\\":26892.445418606774,\\\"price\\\":26785.304201799576,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.1280812886492272,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6287223602439176,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26545.29863682637,\\\"ask\\\":26758.51388692136,\\\"price\\\":26651.906261873864,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.1287223602439176,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6296147631484132,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26729.33116667839,\\\"ask\\\":26944.024589703917,\\\"price\\\":26836.677878191153,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.12961476314841325,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6292285707265428,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26808.972288472643,\\\"ask\\\":27024.305399223427,\\\"price\\\":26916.638843848035,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.1292285707265428,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6295683481034331,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26879.460433857905,\\\"ask\\\":27095.35971445114,\\\"price\\\":26987.410074154523,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.1295683481034331,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.628676245257653,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26695.655740775735,\\\"ask\\\":26910.07867845265,\\\"price\\\":26802.867209614193,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.12867624525765298,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6277290679078518,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26892.160700996814,\\\"ask\\\":27108.161991767876,\\\"price\\\":27000.161346382345,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.12772906790785177,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.62853640708324,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27062.138413982353,\\\"ask\\\":27279.504987588636,\\\"price\\\":27170.821700785495,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.12853640708324,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6287046578159244,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27097.562032235615,\\\"ask\\\":27315.213132896144,\\\"price\\\":27206.38758256588,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.12870465781592444,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6288768069335413,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27133.806418977925,\\\"ask\\\":27351.74863921068,\\\"price\\\":27242.777529094303,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.1288768069335413,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6285373328880831,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27205.279504422084,\\\"ask\\\":27423.79580566242,\\\"price\\\":27314.53765504225,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.1285373328880831,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.6280116867818335,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27094.478178183057,\\\"ask\\\":27312.104508931512,\\\"price\\\":27203.291343557285,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.1280116867818335,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.628667073546169,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27233.194906561344,\\\"ask\\\":27451.93542789919,\\\"price\\\":27342.565167230267,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.12866707354616902,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3710053105250741,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27302.536877249182,\\\"ask\\\":27521.834362207006,\\\"price\\\":27412.185619728094,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.12899468947492593,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3700892345123927,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27110.010884313022,\\\"ask\\\":27327.76197575329,\\\"price\\\":27218.886430033155,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.12991076548760733,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.37025189742117887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":27076.108547132906,\\\"ask\\\":27293.58733064401,\\\"price\\\":27184.84793888846,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.12974810257882113,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3694738214773872,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26914.70591548866,\\\"ask\\\":27130.88829231989,\\\"price\\\":27022.797103904275,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.13052617852261278,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.36886487013500757,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26789.722272174593,\\\"ask\\\":27004.900764320577,\\\"price\\\":26897.311518247585,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.13113512986499243,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.36821974401854485,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26921.515709282994,\\\"ask\\\":27137.752783253138,\\\"price\\\":27029.634246268066,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.13178025598145515,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3686466703726893,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26834.580155958585,\\\"ask\\\":27050.118952391986,\\\"price\\\":26942.349554175285,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.13135332962731072,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.36885179778034,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26792.739380482435,\\\"ask\\\":27007.942106430088,\\\"price\\\":26900.34074345626,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.13114820221966,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3681403261958841,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26648.174539777123,\\\"ask\\\":26862.216102345614,\\\"price\\\":26755.19532106137,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.1318596738041159,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3685044202504728,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26574.79558474732,\\\"ask\\\":26788.247758118785,\\\"price\\\":26681.521671433053,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.1314955797495272,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3675344917950943,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26380.21172074521,\\\"ask\\\":26592.10097151425,\\\"price\\\":26486.15634612973,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.1324655082049057,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3680105973996281,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26285.73591073258,\\\"ask\\\":26496.866319654127,\\\"price\\\":26391.301115193353,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.1319894026003719,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3678692278166242,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26257.61223096257,\\\"ask\\\":26468.516746873916,\\\"price\\\":26363.064488918244,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.13213077218337582,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3672893919706203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26142.888132956687,\\\"ask\\\":26352.871170169194,\\\"price\\\":26247.87965156294,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.13271060802937967,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.36632532587633276,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25954.344774082158,\\\"ask\\\":26162.81340680571,\\\"price\\\":26058.579090443935,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.13367467412366724,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.365485321573064,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26117.440449771475,\\\"ask\\\":26327.21908792225,\\\"price\\\":26222.329768846863,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.13451467842693599,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3649636853234089,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26016.550524572915,\\\"ask\\\":26225.518801878723,\\\"price\\\":26121.03466322582,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.1350363146765911,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.3643291454749539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25894.869725222336,\\\"ask\\\":26102.86064671006,\\\"price\\\":25998.8651859662,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.13567085452504613,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.36354027699111285,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25745.17246533513,\\\"ask\\\":25951.96099919324,\\\"price\\\":25848.566732264186,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.13645972300888715,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[26681.521671433053,26486.15634612973,26391.301115193353,26363.064488918244,26247.87965156294,26058.579090443935,26222.329768846863,26121.03466322582,25998.8651859662,25848.566732264186]}],[\\\"CLRK\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.62,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22861.188,\\\"ask\\\":23044.812,\\\"price\\\":22953,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.12},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6200173660838229,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22857.880067822734,\\\"ask\\\":23041.477498086373,\\\"price\\\":22949.678782954554,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.12001736608382285},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6207464419291923,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22719.86251660105,\\\"ask\\\":22902.351372156078,\\\"price\\\":22811.106944378564,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.12074644192919226},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6210298082365565,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22773.181218521313,\\\"ask\\\":22956.09833674237,\\\"price\\\":22864.63977763184,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.12102980823655651},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6205054535204083,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22871.844722559035,\\\"ask\\\":23055.55431872417,\\\"price\\\":22963.699520641603,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.12050545352040831},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6202853261049089,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22830.140884586617,\\\"ask\\\":23013.515510165627,\\\"price\\\":22921.828197376122,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.12028532610490894},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6208975535996972,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22946.341591788765,\\\"ask\\\":23130.64955638145,\\\"price\\\":23038.495574085107,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.12089755359969723},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6214751619930063,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22837.232871275835,\\\"ask\\\":23020.664460603355,\\\"price\\\":22928.948665939595,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.12147516199300634},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6213169454983102,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22807.526988085057,\\\"ask\\\":22990.719975941163,\\\"price\\\":22899.12348201311,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.12131694549831018},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6219882687653774,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22933.735437106527,\\\"ask\\\":23117.942147444734,\\\"price\\\":23025.83879227563,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.12198826876537738},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.622629627678266,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22813.79088612894,\\\"ask\\\":22997.03418641913,\\\"price\\\":22905.412536274034,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.12262962767826602,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6225287895671092,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22795.046562407144,\\\"ask\\\":22978.139305880293,\\\"price\\\":22886.59293414372,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.12252878956710922,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.622209679509983,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22735.83408394415,\\\"ask\\\":22918.45122518065,\\\"price\\\":22827.1426545624,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.12220967950998296,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6216580923903413,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22838.451104832333,\\\"ask\\\":23021.89247916834,\\\"price\\\":22930.171792000336,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.12165809239034131,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6216777345935148,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22842.13846740686,\\\"ask\\\":23025.609459112944,\\\"price\\\":22933.873963259903,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.12167773459351483,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6215361068011583,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22868.72576092154,\\\"ask\\\":23052.410305185975,\\\"price\\\":22960.568033053758,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.12153610680115834,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6220726248271784,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22768.216055160625,\\\"ask\\\":22951.093292551475,\\\"price\\\":22859.65467385605,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.1220726248271784,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6222322024226776,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22797.979461796916,\\\"ask\\\":22981.09576269488,\\\"price\\\":22889.5376122459,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.12223220242267763,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6214537567805345,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22943.170233213554,\\\"ask\\\":23127.452725046598,\\\"price\\\":23035.311479130076,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.1214537567805345,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6213817737946122,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22956.768148532836,\\\"ask\\\":23141.15986056924,\\\"price\\\":23048.96400455104,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.12138177379461224,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6211102770554373,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22905.534937399465,\\\"ask\\\":23089.515137699866,\\\"price\\\":22997.525037549665,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.12111027705543731,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6209118483775405,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22943.063668442384,\\\"ask\\\":23127.345304333485,\\\"price\\\":23035.204486387935,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.12091184837754054,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6207981104732074,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22964.64547382907,\\\"ask\\\":23149.100457554603,\\\"price\\\":23056.872965691837,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.12079811047320743,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6211397117102601,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22899.88759062478,\\\"ask\\\":23083.822430710123,\\\"price\\\":22991.855010667452,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.12113971171026006,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6212676035775769,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22924.063885449705,\\\"ask\\\":23108.19291264207,\\\"price\\\":23016.128399045887,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.12126760357757693,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6206858833683281,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23034.030528203963,\\\"ask\\\":23219.042821603194,\\\"price\\\":23126.53667490358,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.12068588336832808,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6214667980996164,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22885.943857263082,\\\"ask\\\":23069.766699490094,\\\"price\\\":22977.855278376588,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.12146679809961636,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.620966731787205,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22792.1110805829,\\\"ask\\\":22975.18024588879,\\\"price\\\":22883.645663235846,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.12096673178720496,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6216409937246364,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22919.153059383978,\\\"ask\\\":23103.24264219028,\\\"price\\\":23011.197850787128,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.12164099372463644,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6221262113427806,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23010.575995984855,\\\"ask\\\":23195.39989956706,\\\"price\\\":23102.987947775957,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.12212621134278057,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6221000785194013,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23015.499847398456,\\\"ask\\\":23200.363299988003,\\\"price\\\":23107.93157369323,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.1221000785194013,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6223098004860469,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23055.031811258432,\\\"ask\\\":23240.212789662113,\\\"price\\\":23147.622300460273,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.1223098004860469,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6226445847161048,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23118.13763796422,\\\"ask\\\":23303.825490477986,\\\"price\\\":23210.981564221103,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.12264458471610484,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6227189799133577,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23104.12286689206,\\\"ask\\\":23289.69815096348,\\\"price\\\":23196.91050892777,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.12271897991335767,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6221093907834012,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23218.88932084057,\\\"ask\\\":23405.38642381921,\\\"price\\\":23312.13787232989,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.12210939078340122,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6219039421470225,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23257.95502347484,\\\"ask\\\":23444.76590719753,\\\"price\\\":23351.360465336184,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.12190394214702249,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6211627473426968,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23117.39767361857,\\\"ask\\\":23303.07958264362,\\\"price\\\":23210.238628131094,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.12116274734269683,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6213049441392854,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23144.528288983005,\\\"ask\\\":23330.42811459733,\\\"price\\\":23237.478201790167,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.12130494413928539,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6206263818233466,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23015.781336436226,\\\"ask\\\":23200.6470499819,\\\"price\\\":23108.214193209064,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.12062638182334662,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6201720540896251,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23102.468076238543,\\\"ask\\\":23288.030068818774,\\\"price\\\":23195.24907252866,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.12017205408962506,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.619482215688806,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23235.086011027288,\\\"ask\\\":23421.71320790301,\\\"price\\\":23328.39960946515,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.11948221568880601,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6202555357114202,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23085.669544390676,\\\"ask\\\":23271.096609004253,\\\"price\\\":23178.383076697464,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.12025553571142023,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.620535230006543,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23032.10072413536,\\\"ask\\\":23217.097517100305,\\\"price\\\":23124.599120617833,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.12053523000654298,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6206509155093924,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23054.20612978155,\\\"ask\\\":23239.380476205497,\\\"price\\\":23146.793302993523,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.12065091550939244,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.621361638518475,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23190.01243248047,\\\"ask\\\":23376.277592580715,\\\"price\\\":23283.145012530593,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.12136163851847503,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6214362698139887,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23204.2731222004,\\\"ask\\\":23390.652825993173,\\\"price\\\":23297.462974096787,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.1214362698139887,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6211279133518488,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23145.50102042186,\\\"ask\\\":23331.40865914011,\\\"price\\\":23238.454839780985,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.1211279133518488,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6212712827380453,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23172.896491727217,\\\"ask\\\":23359.024174391692,\\\"price\\\":23265.960333059455,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.12127128273804533,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6217337529931123,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23261.26675638681,\\\"ask\\\":23448.104240373854,\\\"price\\\":23354.68549838033,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.12173375299311229,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6215483680442738,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23296.690692982233,\\\"ask\\\":23483.812706580484,\\\"price\\\":23390.25169978136,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.12154836804427382,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.622241544887715,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23429.549132606076,\\\"ask\\\":23617.73828226556,\\\"price\\\":23523.64370743582,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.12224154488771499,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.621723472027617,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23330.67122998119,\\\"ask\\\":23518.066179619593,\\\"price\\\":23424.368704800392,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.12172347202761702,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6212789524797926,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23415.872048301902,\\\"ask\\\":23603.95134186256,\\\"price\\\":23509.91169508223,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.12127895247979259,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6213627532690894,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23432.051843061006,\\\"ask\\\":23620.261094812504,\\\"price\\\":23526.156468936755,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.12136275326908941,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6219196400019237,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23325.02233744338,\\\"ask\\\":23512.371914450956,\\\"price\\\":23418.69712594717,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.12191964000192368,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6212411553744687,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23454.82643701874,\\\"ask\\\":23643.218617235754,\\\"price\\\":23549.022527127247,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.12124115537446867,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6212630095412641,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23459.054256256604,\\\"ask\\\":23647.48039486107,\\\"price\\\":23553.267325558838,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.12126300954126412,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6210007453969597,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23509.790823112246,\\\"ask\\\":23698.62448434206,\\\"price\\\":23604.207653727153,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.12100074539695971,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.620861876777521,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23536.772245286025,\\\"ask\\\":23725.82262476623,\\\"price\\\":23631.29743502613,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.12086187677752103,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6214630888619808,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23420.27107578983,\\\"ask\\\":23608.385702904612,\\\"price\\\":23514.32838934722,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.12146308886198076,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6208063730557615,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23546.89771064256,\\\"ask\\\":23736.02941916178,\\\"price\\\":23641.46356490217,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.12080637305576147,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6204201012662448,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23471.847757504995,\\\"ask\\\":23660.376655155636,\\\"price\\\":23566.112206330316,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.1204201012662448,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6197984909100568,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23593.009785202295,\\\"ask\\\":23782.51187183043,\\\"price\\\":23687.760828516362,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.11979849091005679,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.619292322748157,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23493.74488150878,\\\"ask\\\":23682.449659673508,\\\"price\\\":23588.097270591144,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.11929232274815704,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6199904620816747,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23357.051455140885,\\\"ask\\\":23544.658294138004,\\\"price\\\":23450.854874639444,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.11999046208167474,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6202922616638555,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23298.451273611056,\\\"ask\\\":23485.587428419174,\\\"price\\\":23392.019351015115,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.12029226166385554,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6205592524290129,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23350.162591084707,\\\"ask\\\":23537.714097840406,\\\"price\\\":23443.938344462556,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.12055925242901289,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6198585410330548,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23485.87780742351,\\\"ask\\\":23674.519396238153,\\\"price\\\":23580.19860183083,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.11985854103305482,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6206033150942021,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23340.84304962616,\\\"ask\\\":23528.319700627177,\\\"price\\\":23434.58137512667,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.12060331509420208,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6212468145158595,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23216.96499919321,\\\"ask\\\":23403.446645773074,\\\"price\\\":23310.20582248314,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.1212468145158595,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6213807895192812,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23242.6192234104,\\\"ask\\\":23429.306928016103,\\\"price\\\":23335.96307571325,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.12138078951928122,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6212437382297582,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23268.862510746694,\\\"ask\\\":23455.76100480892,\\\"price\\\":23362.311757777807,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.1212437382297582,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6215133344245761,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23217.23692726365,\\\"ask\\\":23403.720758004725,\\\"price\\\":23310.478842634187,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.12151333442457612,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6219328139204584,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23297.38578407963,\\\"ask\\\":23484.513380738903,\\\"price\\\":23390.949582409266,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.1219328139204584,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.6224597904513033,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23197.131035210583,\\\"ask\\\":23383.453372842796,\\\"price\\\":23290.29220402669,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.12245979045130329,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.377276992673407,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23246.991289946203,\\\"ask\\\":23433.7141115522,\\\"price\\\":23340.3527007492,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.12272300732659303,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3765412798928099,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23108.45827593477,\\\"ask\\\":23294.06838256878,\\\"price\\\":23201.263329251775,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.12345872010719011,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.37641078671894446,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23084.05892923203,\\\"ask\\\":23269.473057177667,\\\"price\\\":23176.76599320485,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.12358921328105554,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.37578514720222883,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23200.91621061529,\\\"ask\\\":23387.268951262802,\\\"price\\\":23294.092580939046,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.12421485279777117,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.37627434121099335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23292.288127519292,\\\"ask\\\":23479.374779145954,\\\"price\\\":23385.831453332623,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.12372565878900665,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3757605247903693,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23195.958357181556,\\\"ask\\\":23382.271275713134,\\\"price\\\":23289.114816447345,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.12423947520963069,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3761002946552786,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23132.69510949737,\\\"ask\\\":23318.49988949333,\\\"price\\\":23225.59749949535,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.12389970534472139,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3762636282463201,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23163.19030843421,\\\"ask\\\":23349.240029787095,\\\"price\\\":23256.215169110652,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.12373637175367991,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.37569697781123595,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23269.26608615573,\\\"ask\\\":23456.1678217875,\\\"price\\\":23362.716953971616,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.12430302218876405,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3759867161124737,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23215.15381189247,\\\"ask\\\":23401.62091078317,\\\"price\\\":23308.38736133782,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.1240132838875263,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.37675889760048165,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23071.496760481463,\\\"ask\\\":23256.809987473283,\\\"price\\\":23164.153373977373,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.12324110239951835,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3771328175959454,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23001.708365860155,\\\"ask\\\":23186.461043497584,\\\"price\\\":23094.08470467887,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.12286718240405459,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.37724390771811195,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22980.93020285696,\\\"ask\\\":23165.515987618863,\\\"price\\\":23073.22309523791,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.12275609228188805,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.37678916393153067,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22896.112701790742,\\\"ask\\\":23080.01722148384,\\\"price\\\":22988.06496163729,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.12321083606846933,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.37603359741031545,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23036.518665871932,\\\"ask\\\":23221.550944312672,\\\"price\\\":23129.034805092302,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.12396640258968455,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3766911931741303,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22914.963288995412,\\\"ask\\\":23099.0192190275,\\\"price\\\":23006.991254011456,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.1233088068258697,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3762875340133172,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22840.194471014736,\\\"ask\\\":23023.649848291963,\\\"price\\\":22931.92215965335,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.12371246598668278,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3757968019678596,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22749.951904567213,\\\"ask\\\":22932.682441953293,\\\"price\\\":22841.317173260253,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.12420319803214042,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.3764064419690882,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22861.6179560602,\\\"ask\\\":23045.24540952253,\\\"price\\\":22953.431682791364,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.12359355803091182,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[23308.38736133782,23164.153373977373,23094.08470467887,23073.22309523791,22988.06496163729,23129.034805092302,23006.991254011456,22931.92215965335,22841.317173260253,22953.431682791364]}],[\\\"OMTK\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.62,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36719.51,\\\"ask\\\":36940.49,\\\"price\\\":36830,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.12},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6200187019364247,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36725.23271617971,\\\"ask\\\":36946.24715579563,\\\"price\\\":36835.73993598767,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.12001870193642472},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6208038692783334,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36486.53627768811,\\\"ask\\\":36706.1142292088,\\\"price\\\":36596.325253448456,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.12080386927833342},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6204985604259844,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36578.749073384795,\\\"ask\\\":36798.88196650446,\\\"price\\\":36688.81551994463,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.12049856042598439},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6210607714733586,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36749.41482039029,\\\"ask\\\":36970.574789219114,\\\"price\\\":36859.9948048047,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.12106077147335859},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6212989241975074,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36821.70886860953,\\\"ask\\\":37043.30390693616,\\\"price\\\":36932.506387772846,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.12129892419750743},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6206340464283064,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36620.97770693738,\\\"ask\\\":36841.36473426097,\\\"price\\\":36731.17122059918,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.12063404642830644},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.621254730444367,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36433.52064499925,\\\"ask\\\":36652.77954557096,\\\"price\\\":36543.150095285106,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.12125473044436696},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6210846526381333,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36382.48878953293,\\\"ask\\\":36601.44057763443,\\\"price\\\":36491.96468358368,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.12108465263813328},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6203630734215324,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36166.95919503688,\\\"ask\\\":36384.61391436508,\\\"price\\\":36275.78655470098,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.12036307342153241},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6196815810188737,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36371.73552068254,\\\"ask\\\":36590.62259502967,\\\"price\\\":36481.179057856105,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.11968158101887372,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6197875652597521,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36403.94457696146,\\\"ask\\\":36623.025487153805,\\\"price\\\":36513.48503205764,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.1197875652597521,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.620123533921606,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36506.04686545195,\\\"ask\\\":36725.74223274654,\\\"price\\\":36615.89454909925,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.12012353392160602,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6195396570201027,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36683.48950998691,\\\"ask\\\":36904.252736727045,\\\"price\\\":36793.87112335698,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.11953965702010272,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6195188722184061,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36677.11232499672,\\\"ask\\\":36897.83717349218,\\\"price\\\":36787.47474924445,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.11951887221840607,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6193690561002345,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36723.08684343286,\\\"ask\\\":36944.08836907036,\\\"price\\\":36833.58760625161,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.11936905610023452,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6188015697226952,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36549.32952898713,\\\"ask\\\":36769.28537369517,\\\"price\\\":36659.307451341156,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.11880156972269518,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6186343218908875,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36600.78336189536,\\\"ask\\\":36821.048858556715,\\\"price\\\":36710.91611022604,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.11863432189088752,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6194479720059699,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36351.46785578509,\\\"ask\\\":36570.23295822713,\\\"price\\\":36460.85040700611,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.1194479720059699,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6193717320970444,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36374.66986208199,\\\"ask\\\":36593.57459545459,\\\"price\\\":36484.12222876829,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.11937173209704444,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6196592714671921,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36462.2881740369,\\\"ask\\\":36681.72019915647,\\\"price\\\":36572.004186596685,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.11965927146719213,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6198704036699928,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36526.62387595904,\\\"ask\\\":36746.44307681737,\\\"price\\\":36636.533476388206,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.1198704036699928,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6199918356322229,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36563.626334239845,\\\"ask\\\":36783.66821789625,\\\"price\\\":36673.64727606805,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.11999183563222293,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6196264128042649,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36674.977107940926,\\\"ask\\\":36895.6891065845,\\\"price\\\":36785.33310726271,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.11962641280426489,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6194904036450428,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36716.67469532158,\\\"ask\\\":36937.63763230445,\\\"price\\\":36827.156163813015,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.11949040364504282,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6188731167345852,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36906.35287861969,\\\"ask\\\":37128.4573091831,\\\"price\\\":37017.4050939014,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.11887311673458523,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6197014697830743,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37163.53036967411,\\\"ask\\\":37387.182508308055,\\\"price\\\":37275.35643899108,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.11970146978307428,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.620232176007894,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37328.297911285794,\\\"ask\\\":37552.94162990937,\\\"price\\\":37440.61977059759,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.12023217600789404,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6195104570930859,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37105.56396230975,\\\"ask\\\":37328.86725596457,\\\"price\\\":37217.215609137165,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.11951045709308594,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6200238468424674,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36946.84870126445,\\\"ask\\\":37169.19683788188,\\\"price\\\":37058.02276957317,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.12002384684246736,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6200515054093957,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36955.36281670466,\\\"ask\\\":37177.76219172996,\\\"price\\\":37066.56250421731,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.12005150540939569,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6202735704901692,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37023.72094016943,\\\"ask\\\":37246.53169808418,\\\"price\\\":37135.12631912681,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.12027357049016918,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6206281050871578,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37132.85705319116,\\\"ask\\\":37356.32459814517,\\\"price\\\":37244.590825668165,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.12062810508715782,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6205493044531635,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37108.61575017432,\\\"ask\\\":37331.9374096538,\\\"price\\\":37220.27657991406,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.12054930445316347,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6211941784567827,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37307.12690472752,\\\"ask\\\":37531.64321508696,\\\"price\\\":37419.38505990724,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.12119417845678271,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6209745843701405,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37374.72441281091,\\\"ask\\\":37599.64752863524,\\\"price\\\":37487.185970723076,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.12097458437014053,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.621766708856001,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37131.591994781214,\\\"ask\\\":37355.05192654519,\\\"price\\\":37243.321960663205,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.12176670885600105,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6216128105102173,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37178.521821808645,\\\"ask\\\":37402.26417981351,\\\"price\\\":37290.39300081108,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.12161281051021733,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6208801964592503,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37402.49088696361,\\\"ask\\\":37627.5811029333,\\\"price\\\":37515.035994948455,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.1208801964592503,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6213705019847824,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37251.39447020129,\\\"ask\\\":37475.57537975114,\\\"price\\\":37363.48492497622,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.12137050198478239,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6206201902941363,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37481.68235981853,\\\"ask\\\":37707.24915436107,\\\"price\\\":37594.4657570898,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.12062019029413629,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6197794522887896,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37222.238641534605,\\\"ask\\\":37446.24408972839,\\\"price\\\":37334.2413656315,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.11977945228878961,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6200794690629534,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37315.47079238353,\\\"ask\\\":37540.03731671081,\\\"price\\\":37427.75405454717,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.12007946906295341,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6202035823792496,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37354.039807264555,\\\"ask\\\":37578.838442012384,\\\"price\\\":37466.43912463847,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.12020358237924955,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6209661385647447,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37118.56437218637,\\\"ask\\\":37341.94590301196,\\\"price\\\":37230.25513759917,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.1209661385647447,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6208860283215561,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37093.99874336309,\\\"ask\\\":37317.23243690388,\\\"price\\\":37205.615590133486,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.12088602832155615,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6205554568063871,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37195.43494354703,\\\"ask\\\":37419.27908563457,\\\"price\\\":37307.3570145908,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.12055545680638713,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6204017886975555,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37148.08349311641,\\\"ask\\\":37371.64267161059,\\\"price\\\":37259.8630823635,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.12040178869755547,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6208962626922431,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36996.14528732931,\\\"ask\\\":37218.79009347171,\\\"price\\\":37107.46769040051,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.12089626269224307,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6210945345240833,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37056.819565704805,\\\"ask\\\":37279.82951294074,\\\"price\\\":37168.32453932278,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.12109453452408325,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6218382454116151,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36830.6216253519,\\\"ask\\\":37052.27030113135,\\\"price\\\":36941.445963241626,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.12183824541161514,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6212821614987311,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36663.28612622857,\\\"ask\\\":36883.92776791099,\\\"price\\\":36773.606947069784,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.12128216149873106,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6208051837230036,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36807.475283572465,\\\"ask\\\":37028.984663413416,\\\"price\\\":36918.22997349294,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.12080518372300364,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6208950781825007,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36780.10619505529,\\\"ask\\\":37001.45086623917,\\\"price\\\":36890.77853064723,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.12089507818250067,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.621492491300851,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36961.85815936668,\\\"ask\\\":37184.29662371593,\\\"price\\\":37073.07739154131,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.12149249130085105,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6207643754901381,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36741.661958781624,\\\"ask\\\":36962.77527046937,\\\"price\\\":36852.2186146255,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.12076437549013808,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6207409327857993,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36748.79422700823,\\\"ask\\\":36969.95046107247,\\\"price\\\":36859.37234404035,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.12074093278579934,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6210221551061293,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36834.3872478952,\\\"ask\\\":37056.05858539507,\\\"price\\\":36945.222916645136,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.12102215510612935,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6211717323883844,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36879.91269349018,\\\"ask\\\":37101.858005587404,\\\"price\\\":36990.885349538796,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.12117173238838441,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.620522613318629,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36683.39908901514,\\\"ask\\\":36904.16177159697,\\\"price\\\":36793.780430306055,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.12052261331862901,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6212243697013906,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36896.99227906692,\\\"ask\\\":37119.04037703523,\\\"price\\\":37008.016328051075,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.12122436970139061,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6208069453664727,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36770.37705948245,\\\"ask\\\":36991.6631802015,\\\"price\\\":36881.02011984198,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.12080694536647274,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6201353683267246,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36974.78700380412,\\\"ask\\\":37197.303274639446,\\\"price\\\":37086.04513922179,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.12013536832672456,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6206820053524912,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37143.02877870878,\\\"ask\\\":37366.55753765788,\\\"price\\\":37254.79315818333,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.12068200535249118,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6214426062153438,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37377.12349444976,\\\"ask\\\":37602.06104807734,\\\"price\\\":37489.59227126355,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.12144260621534375,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6211136578969625,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37478.365902716476,\\\"ask\\\":37703.912738640545,\\\"price\\\":37591.139320678514,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.12111365789696249,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6214031497552078,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37388.99687225019,\\\"ask\\\":37614.005880508455,\\\"price\\\":37501.501376379325,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.12140314975520783,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6221630442045195,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37623.02450041173,\\\"ask\\\":37849.4418996118,\\\"price\\\":37736.23320001177,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.12216304420451951,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6213455586530058,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37372.93386415942,\\\"ask\\\":37597.84620436499,\\\"price\\\":37485.39003426221,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.12134555865300578,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6220428230400016,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37159.41196117552,\\\"ask\\\":37383.03931500406,\\\"price\\\":37271.225638089796,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.12204282304000158,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6221880510437833,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37115.24571762942,\\\"ask\\\":37338.607276612136,\\\"price\\\":37226.92649712078,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.12218805104378327,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6223366263346678,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37070.170022852115,\\\"ask\\\":37293.26031386225,\\\"price\\\":37181.71516835719,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.1223366263346678,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6220436749041315,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36981.61260027654,\\\"ask\\\":37204.169947921124,\\\"price\\\":37092.89127409883,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.12204367490413148,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6215899561208988,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37119.09823633396,\\\"ask\\\":37342.4829799829,\\\"price\\\":37230.79060815843,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.12158995612089885,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6210240387005223,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36947.134795595164,\\\"ask\\\":37169.48465394378,\\\"price\\\":37058.309724769475,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.12102403870052225,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37925610221416556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36861.80876503658,\\\"ask\\\":37083.64512671182,\\\"price\\\":36972.7269458742,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.12074389778583444,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3800356310522025,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36625.353591307095,\\\"ask\\\":36845.76695293983,\\\"price\\\":36735.56027212347,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.1199643689477975,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.38017218459780894,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36583.71093121633,\\\"ask\\\":36803.87368506517,\\\"price\\\":36693.79230814075,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.11982781540219106,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37951892480435007,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36385.35058783396,\\\"ask\\\":36604.319598392634,\\\"price\\\":36494.835093113295,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.12048107519564993,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37900793631354135,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36231.68352226009,\\\"ask\\\":36449.727756095155,\\\"price\\\":36340.70563917763,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.12099206368645865,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3784668210654123,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36070.36529960559,\\\"ask\\\":36287.43871163932,\\\"price\\\":36178.902005622454,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.1215331789345877,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3788247565791666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36176.598550870796,\\\"ask\\\":36394.3112803645,\\\"price\\\":36285.45491561765,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.12117524342083341,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.378996786433335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36227.95767999096,\\\"ask\\\":36445.97949150545,\\\"price\\\":36336.96858574821,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.12100321356666499,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3784000268020486,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36050.16666492077,\\\"ask\\\":36267.11852047696,\\\"price\\\":36158.64259269887,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.1215999731979514,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37870526746228456,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":35959.9000034208,\\\"ask\\\":36176.30862931901,\\\"price\\\":36068.10431636991,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.12129473253771544,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3795186180831672,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36201.03171938846,\\\"ask\\\":36418.891489013666,\\\"price\\\":36309.96160420107,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.12048138191683277,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37991228393042953,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36319.3164667648,\\\"ask\\\":36537.88808040631,\\\"price\\\":36428.60227358556,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.12008771606957047,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3800292130861054,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36354.68050855173,\\\"ask\\\":36573.46494491212,\\\"price\\\":36464.07272673193,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.11997078691389462,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.38050782544577744,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36499.71414441352,\\\"ask\\\":36719.3714010499,\\\"price\\\":36609.542772731715,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.11949217455422256,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37971869654389634,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36260.25066576686,\\\"ask\\\":36478.46681821881,\\\"price\\\":36369.35874199284,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.12028130345610366,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3804058248150875,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36467.39377643342,\\\"ask\\\":36686.856527344746,\\\"price\\\":36577.125151889086,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.1195941751849125,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3799842104215465,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36339.2841488163,\\\"ask\\\":36557.9759290499,\\\"price\\\":36448.6300389331,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.12001578957845349,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3804968994517241,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36184.708628054126,\\\"ask\\\":36402.47016443158,\\\"price\\\":36293.58939624285,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.1195031005482759,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3811285902252499,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36375.980205763764,\\\"ask\\\":36594.89282485562,\\\"price\\\":36485.436515309695,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.11887140977475008,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[36068.10431636991,36309.96160420107,36428.60227358556,36464.07272673193,36609.542772731715,36369.35874199284,36577.125151889086,36448.6300389331,36293.58939624285,36485.436515309695]}],[\\\"FSIG\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.67,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75359.264,\\\"ask\\\":76574.736,\\\"price\\\":75967,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.17000000000000004},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.670040120106473,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75377.04883350237,\\\"ask\\\":76592.80768565563,\\\"price\\\":75984.928259579,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.17004012010647296},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6717246259827097,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74637.64945518486,\\\"ask\\\":75841.48251091364,\\\"price\\\":75239.56598304925,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.17172462598270966},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6723818281037957,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74923.29294547703,\\\"ask\\\":76131.73315427505,\\\"price\\\":75527.51304987604,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.17238182810379565},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6711639135393758,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74397.65754826913,\\\"ask\\\":75597.61976678959,\\\"price\\\":74997.63865752936,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.17116391353937577},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6716737984378756,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74619.2827803827,\\\"ask\\\":75822.81959942111,\\\"price\\\":75221.0511899019,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.17167379843787556},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6702488580217657,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74005.02046652151,\\\"ask\\\":75198.64982888477,\\\"price\\\":74601.83514770314,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.1702488580217657},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6715753135639452,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":73432.88472328515,\\\"ask\\\":74617.28608978976,\\\"price\\\":74025.08540653746,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.17157531356394518},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6719397414328921,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":73588.85698487952,\\\"ask\\\":74775.77403302274,\\\"price\\\":74182.31550895113,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.17193974143289215},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6734913387150523,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":72930.72458852654,\\\"ask\\\":74107.0265980189,\\\"price\\\":73518.87559327272,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.1734913387150523},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6720038510489623,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":73556.02124084313,\\\"ask\\\":74742.40868021156,\\\"price\\\":74149.21496052734,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.17200385104896232,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6722345045078196,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":73654.65828074385,\\\"ask\\\":74842.63664011068,\\\"price\\\":74248.64746042727,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.17223450450781963,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6715030033513252,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":73967.47868724453,\\\"ask\\\":75160.50253703879,\\\"price\\\":74563.99061214166,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.17150300335132518,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6727653329032663,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74511.90841969776,\\\"ask\\\":75713.71339420903,\\\"price\\\":75112.8109069534,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.17276533290326634,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6727198447499095,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74492.29501183145,\\\"ask\\\":75693.78364105453,\\\"price\\\":75093.03932644299,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.17271984474990953,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6723919970676291,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74351.16555830256,\\\"ask\\\":75550.37790601711,\\\"price\\\":74950.77173215983,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.1723919970676291,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6736330451477418,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74886.41877678044,\\\"ask\\\":76094.26424092207,\\\"price\\\":75490.34150885126,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.1736330451477418,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6732628944908483,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74727.11562735005,\\\"ask\\\":75932.39168585569,\\\"price\\\":75329.75365660287,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.1732628944908483,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6750623484058309,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75503.207941669,\\\"ask\\\":76721.00161814752,\\\"price\\\":76112.10477990826,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.1750623484058309,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6752315498881774,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75576.18339768206,\\\"ask\\\":76795.15409764467,\\\"price\\\":76185.66874766337,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.17523154988817735,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6758707192497255,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75851.85282434279,\\\"ask\\\":77075.26980538058,\\\"price\\\":76463.56131486168,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.17587071924972553,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.675400814873712,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76054.51940649445,\\\"ask\\\":77281.20520337339,\\\"price\\\":76667.86230493392,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.17540081487371195,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6751317478486669,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76171.18798236549,\\\"ask\\\":77399.75553046816,\\\"price\\\":76785.47175641682,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.17513174784866692,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.675939385736463,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76522.45917179115,\\\"ask\\\":77756.6923842394,\\\"price\\\":77139.57577801528,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.17593938573646295,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6756364768791637,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76654.20528746863,\\\"ask\\\":77890.56343726652,\\\"price\\\":77272.38436236758,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.17563647687916373,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.677010444764704,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76059.20979725,\\\"ask\\\":77285.97124559274,\\\"price\\\":76672.59052142137,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.17701044476470396,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6788782799140854,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75265.00456695755,\\\"ask\\\":76478.95625352139,\\\"price\\\":75871.98041023947,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.17887827991408545,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6800792166613349,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74763.06707832257,\\\"ask\\\":75968.92299894067,\\\"price\\\":75365.99503863162,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.18007921666133486,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.678442329289249,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75442.64977902404,\\\"ask\\\":76659.46671094379,\\\"price\\\":76051.05824498391,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.17844232928924897,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6772815570996061,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75933.40626110572,\\\"ask\\\":77158.13862015582,\\\"price\\\":76545.77244063077,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.17728155709960614,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6773434204611399,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75959.90363534409,\\\"ask\\\":77185.06337139802,\\\"price\\\":76572.48350337106,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.17734342046113993,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6778401678209665,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76172.67094007641,\\\"ask\\\":77401.26240685183,\\\"price\\\":76786.96667346412,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.17784016782096645,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6770463403884839,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76512.68386594462,\\\"ask\\\":77746.75941216954,\\\"price\\\":77129.72163905708,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.17704634038848388,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6768712041630881,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76588.37107087513,\\\"ask\\\":77823.66737846988,\\\"price\\\":77206.0192246725,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.1768712041630881,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6783039696739689,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":75972.94351306165,\\\"ask\\\":77198.31356972392,\\\"price\\\":76585.62854139278,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.1783039696739689,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6778147457131715,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76181.39531818336,\\\"ask\\\":77410.12750073471,\\\"price\\\":76795.76140945904,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.17781474571317146,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6795778374006339,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":76936.75890901536,\\\"ask\\\":78177.67437528982,\\\"price\\\":77557.21664215259,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.17957783740063393,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6799215266489107,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":77084.00612625015,\\\"ask\\\":78327.2965476413,\\\"price\\\":77705.65133694572,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.1799215266489107,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6782802307993099,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":77787.18857296482,\\\"ask\\\":79041.82064672232,\\\"price\\\":78414.50460984357,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.17828023079930988,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6793752522917028,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78264.96809421811,\\\"ask\\\":79527.30628928615,\\\"price\\\":78896.13719175213,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.1793752522917028,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6810544387191237,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78997.63032318949,\\\"ask\\\":80271.78565098287,\\\"price\\\":79634.70798708618,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.18105443871912374,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6791434519842388,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78172.53769565969,\\\"ask\\\":79433.38507784774,\\\"price\\\":78802.96138675371,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.17914345198423876,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6798229246307557,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78469.03807278583,\\\"ask\\\":79734.66771912109,\\\"price\\\":79101.85289595346,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.17982292463075567,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6795414738206269,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78591.85430648328,\\\"ask\\\":79859.46485981364,\\\"price\\\":79225.65958314846,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.1795414738206269,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.681266227374166,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":77844.05047143939,\\\"ask\\\":79099.59967259165,\\\"price\\\":78471.82507201552,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.18126622737416598,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6810844461792339,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":77922.1156726522,\\\"ask\\\":79178.92398995304,\\\"price\\\":78550.51983130262,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.18108444617923392,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6803345894492117,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78244.78514585966,\\\"ask\\\":79506.79780950256,\\\"price\\\":78875.79147768111,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.18033458944921166,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6806826731873019,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78094.04718732051,\\\"ask\\\":79353.62859356761,\\\"price\\\":78723.83789044406,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.1806826731873019,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.681806333002814,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":77611.38444831828,\\\"ask\\\":78863.18097167826,\\\"price\\\":78237.28270999827,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.181806333002814,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6813548254952935,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":77804.12868427916,\\\"ask\\\":79059.0339856385,\\\"price\\\":78431.58133495883,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.18135482549529347,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6830414427471173,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78527.71453507549,\\\"ask\\\":79794.29057596381,\\\"price\\\":79161.00255551965,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.1830414427471173,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6817763745127027,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":77988.70526920393,\\\"ask\\\":79246.5876122556,\\\"price\\\":78617.64644072976,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.18177637451270268,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6806938282172724,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78453.1571772195,\\\"ask\\\":79718.53068007789,\\\"price\\\":79085.8439286487,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.18069382821727242,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6808974379339695,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78364.85396359037,\\\"ask\\\":79628.80322106765,\\\"price\\\":78996.82859232901,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.1808974379339695,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6795437879713054,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":78951.25575486787,\\\"ask\\\":80224.66310575283,\\\"price\\\":79587.95943031035,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.17954378797130544,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6811731936771668,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":79667.75855379767,\\\"ask\\\":80952.72240143956,\\\"price\\\":80310.24047761862,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.18117319367716678,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.68122644993367,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":79691.17706565623,\\\"ask\\\":80976.51863123133,\\\"price\\\":80333.84784844378,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.18122644993367,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6818656321287858,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":79411.09566219397,\\\"ask\\\":80691.91978577773,\\\"price\\\":80051.50772398585,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.18186563212878581,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6815252559037702,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":79262.74902307894,\\\"ask\\\":80541.18045893506,\\\"price\\\":79901.964741007,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.18152525590377022,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6800527130790133,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":79905.73278731243,\\\"ask\\\":81194.53492904328,\\\"price\\\":80550.13385817785,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.18005271307901327,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6816402554542809,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":80610.26944581317,\\\"ask\\\":81910.43508203595,\\\"price\\\":81260.35226392456,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.18164025545428086,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6806931294550767,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81030.59522549261,\\\"ask\\\":82337.54030977475,\\\"price\\\":81684.06776763368,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.18069312945507665,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.679172044742947,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81712.71523738216,\\\"ask\\\":83030.66225733995,\\\"price\\\":82371.68874736105,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.179172044742947,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.677937501702005,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81153.54572371877,\\\"ask\\\":82462.47388055295,\\\"price\\\":81808.00980213586,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.17793750170200495,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6762392986795949,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81928.0603443529,\\\"ask\\\":83249.48067248763,\\\"price\\\":82588.77050842026,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.17623929867959487,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6769621802836764,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":82264.10507515202,\\\"ask\\\":83590.94547958997,\\\"price\\\":82927.525277371,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.17696218028367638,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6763216620184729,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81967.42229779682,\\\"ask\\\":83289.47749614838,\\\"price\\\":82628.4498969726,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.17632166201847288,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6779928942921386,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":82744.3353552459,\\\"ask\\\":84078.92140936277,\\\"price\\\":83411.62838230433,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.1779928942921386,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6797965379100549,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81914.27881401891,\\\"ask\\\":83235.4768594063,\\\"price\\\":82574.8778367126,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.1797965379100549,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6782320840875249,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81207.67093000747,\\\"ask\\\":82517.47207403986,\\\"price\\\":81862.57150202367,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.1782320840875249,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6785532517667443,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81354.00417489394,\\\"ask\\\":82666.16553255352,\\\"price\\\":82010.08485372373,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.1785532517667443,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6788820227198376,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81204.48197538021,\\\"ask\\\":82514.23168466054,\\\"price\\\":81859.35683002038,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.17888202271983755,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6795306775338354,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81498.94240997647,\\\"ask\\\":82813.44148110514,\\\"price\\\":82156.1919455408,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.17953067753383545,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6785199875134071,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81957.75072564,\\\"ask\\\":83279.64993089226,\\\"price\\\":82618.70032826613,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.17851998751340714,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6797781885369232,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81384.15875273566,\\\"ask\\\":82696.80647455399,\\\"price\\\":82040.48261364482,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.17977818853692318,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6804083469314456,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81099.88747764504,\\\"ask\\\":82407.95017889739,\\\"price\\\":81753.91882827121,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.18040834693144558,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.682172074271858,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":80314.70627234557,\\\"ask\\\":81610.1047606092,\\\"price\\\":80962.40551647739,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.182172074271858,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6824860819993513,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":80453.14372771121,\\\"ask\\\":81750.77507815817,\\\"price\\\":81101.95940293469,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.18248608199935135,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6839925706344465,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81117.31353921446,\\\"ask\\\":82425.657305976,\\\"price\\\":81771.48542259523,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.18399257063444652,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6823935866688231,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":81638.28468248849,\\\"ask\\\":82955.0312096254,\\\"price\\\":82296.65794605695,\\\"maxShares\\\":5300000,\\\"investedShares\\\":529220,\\\"averagePrice\\\":82425.657305976,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.1823935866688231,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6836288236253916,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":82191.16939818718,\\\"ask\\\":83516.83342073859,\\\"price\\\":82854.00140946289,\\\"maxShares\\\":5300000,\\\"investedShares\\\":529220,\\\"averagePrice\\\":82425.657305976,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.18362882362539157,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6843875083414948,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":82557.72757977834,\\\"ask\\\":83889.30383106509,\\\"price\\\":83223.51570542171,\\\"maxShares\\\":5300000,\\\"investedShares\\\":624278,\\\"averagePrice\\\":82591.80927531836,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.18438750834149475,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6847237753333922,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":82735.2100546422,\\\"ask\\\":84069.64892649127,\\\"price\\\":83402.42949056673,\\\"maxShares\\\":5300000,\\\"investedShares\\\":700376,\\\"averagePrice\\\":82732.78603737647,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.18472377533339224,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6832846870522326,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":83353.08520866006,\\\"ask\\\":84697.48980879974,\\\"price\\\":84025.2875087299,\\\"maxShares\\\":5300000,\\\"investedShares\\\":800215,\\\"averagePrice\\\":82899.58002897415,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.18328468705223255,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6824684478408762,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":83669.9240450306,\\\"ask\\\":85019.4389489827,\\\"price\\\":84344.68149700665,\\\"maxShares\\\":5300000,\\\"investedShares\\\":904417,\\\"averagePrice\\\":83106.72539983447,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.18246844784087624,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6843212603081626,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":84519.52122329302,\\\"ask\\\":85882.7393075397,\\\"price\\\":85201.13026541636,\\\"maxShares\\\":5300000,\\\"investedShares\\\":904417,\\\"averagePrice\\\":83106.72539983447,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.18432126030816265,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6838464243449888,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":84937.71026873974,\\\"ask\\\":86307.67333759037,\\\"price\\\":85622.69180316506,\\\"maxShares\\\":5300000,\\\"investedShares\\\":2672764,\\\"averagePrice\\\":84943.38432881166,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.18384642434498877,\\\"countOfNegative\\\":0,\\\"countOfPositive\\\":10},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.683575350733741,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":85062.94725355304,\\\"ask\\\":86434.93027377162,\\\"price\\\":85748.93876366233,\\\"maxShares\\\":5300000,\\\"investedShares\\\":2672764,\\\"averagePrice\\\":84943.38432881166,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.18357535073374098,\\\"countOfNegative\\\":0,\\\"countOfPositive\\\":10},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.682466353165064,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":84552.15896772487,\\\"ask\\\":85915.90346720429,\\\"price\\\":85234.03121746458,\\\"maxShares\\\":5300000,\\\"investedShares\\\":2672764,\\\"averagePrice\\\":84943.38432881166,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.182466353165064,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6785032219163142,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":83714.9777496532,\\\"ask\\\":85065.21932626051,\\\"price\\\":84390.09853795686,\\\"maxShares\\\":5300000,\\\"investedShares\\\":5300000,\\\"averagePrice\\\":85425.46683656149,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.17850322191631418,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6769590573720536,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":84439.16468071699,\\\"ask\\\":85801.08669169628,\\\"price\\\":85120.12568620664,\\\"maxShares\\\":5300000,\\\"investedShares\\\":5300000,\\\"averagePrice\\\":85425.46683656149,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.17695905737205364,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.677903740203119,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":84889.93691203407,\\\"ask\\\":86259.12944287334,\\\"price\\\":85574.5331774537,\\\"maxShares\\\":5300000,\\\"investedShares\\\":5300000,\\\"averagePrice\\\":85425.46683656149,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.17790374020311905,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.6790545632279306,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":85439.07260677342,\\\"ask\\\":86817.1221649472,\\\"price\\\":86128.09738586031,\\\"maxShares\\\":5300000,\\\"investedShares\\\":5300000,\\\"averagePrice\\\":85425.46683656149,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.17905456322793056,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0106,\\\"forecast\\\":0.677621324354012,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":86122.968051849,\\\"ask\\\":87512.04818171753,\\\"price\\\":86817.50811678327,\\\"maxShares\\\":5300000,\\\"investedShares\\\":5300000,\\\"averagePrice\\\":85425.46683656149,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.177621324354012,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[84344.68149700665,85201.13026541636,85622.69180316506,85748.93876366233,85234.03121746458,84390.09853795686,85120.12568620664,85574.5331774537,86128.09738586031,86817.50811678327]}],[\\\"KGI\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16794.552,\\\"ask\\\":16929.448,\\\"price\\\":16862,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.09999999999999998},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6000175887259231,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16791.598571749088,\\\"ask\\\":16926.470849433823,\\\"price\\\":16859.034710591455,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.10001758872592315},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5992791427410958,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16915.573651553503,\\\"ask\\\":17051.441713011765,\\\"price\\\":16983.507682282634,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.09927914274109584},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5995623116854316,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16963.821098111704,\\\"ask\\\":17100.076689261197,\\\"price\\\":17031.94889368645,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.09956231168543161},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6000865654281875,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17053.14552772344,\\\"ask\\\":17190.118584171018,\\\"price\\\":17121.63205594723,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.1000865654281875},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6003087720280476,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17015.368956362625,\\\"ask\\\":17152.03858653421,\\\"price\\\":17083.703771448418,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.10030877202804755},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6009292878050203,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16910.75804393022,\\\"ask\\\":17046.58742580918,\\\"price\\\":16978.6727348697,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.1009292878050203},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6015153543433615,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16813.12917299107,\\\"ask\\\":16948.17438723196,\\\"price\\\":16880.651780111515,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.10151535434336145},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6013546566137028,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16786.556232446364,\\\"ask\\\":16921.388009413804,\\\"price\\\":16853.972120930084,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.1013546566137028},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6006729968282489,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16674.412627857997,\\\"ask\\\":16808.34365298135,\\\"price\\\":16741.378140419674,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.10067299682824893},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6013162912685904,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16780.961129217914,\\\"ask\\\":16915.747965597173,\\\"price\\\":16848.354547407544,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.10131629126859043,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.601215034908642,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16764.20683885977,\\\"ask\\\":16898.859102625713,\\\"price\\\":16831.53297074274,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.10121503490864203,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6015354117478237,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16711.310381299143,\\\"ask\\\":16845.537773920023,\\\"price\\\":16778.424077609583,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.10153541174782366,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6009784315180513,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16802.981546420233,\\\"ask\\\":16937.945253620397,\\\"price\\\":16870.463400020315,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.1009784315180513,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.600958616633251,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16806.27877671624,\\\"ask\\\":16941.26896769388,\\\"price\\\":16873.77387220506,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.10095861663325101,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6011014384311787,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16830.053894001026,\\\"ask\\\":16965.235049776133,\\\"price\\\":16897.64447188858,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.10110143843117869,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6005590004800088,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16920.35191640311,\\\"ask\\\":17056.258357498715,\\\"price\\\":16988.305136950912,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.10055900048000876,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6007187679347684,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16893.511620252226,\\\"ask\\\":17029.202476639795,\\\"price\\\":16961.35704844601,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.10071876793476842,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6014983588935805,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16763.755542761908,\\\"ask\\\":16898.404181659593,\\\"price\\\":16831.07986221075,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.1014983588935805,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6014252463893129,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16751.68876720187,\\\"ask\\\":16886.240484207512,\\\"price\\\":16818.96462570469,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.10142524638931294,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6011495246914379,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16797.22776497209,\\\"ask\\\":16932.145257060216,\\\"price\\\":16864.686511016153,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.1011495246914379,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6009481054193688,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16830.6761217441,\\\"ask\\\":16965.86227533241,\\\"price\\\":16898.269198538255,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.10094810541936883,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6010635167023385,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16849.91818593528,\\\"ask\\\":16985.258894256043,\\\"price\\\":16917.58854009566,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.10106351670233849,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6007161665972618,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16907.83048746004,\\\"ask\\\":17043.636354829196,\\\"price\\\":16975.733421144618,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.10071616659726179,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6008453983738772,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16886.16337118264,\\\"ask\\\":17021.79520548933,\\\"price\\\":16953.979288335984,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.10084539837387718,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6014333467251701,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16984.612998769422,\\\"ask\\\":17121.03559313705,\\\"price\\\":17052.824295953236,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.10143334672517013,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6022310504711738,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17118.185338152547,\\\"ask\\\":17255.68080271602,\\\"price\\\":17186.933070434283,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.10223105047117376,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6027425751287007,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17203.838120279142,\\\"ask\\\":17342.021558996246,\\\"price\\\":17272.929839637694,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.10274257512870066,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6020465468606333,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17320.385302749197,\\\"ask\\\":17459.504863413847,\\\"price\\\":17389.945083081522,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.1020465468606333,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6025412773205676,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17236.819714227422,\\\"ask\\\":17375.268065345714,\\\"price\\\":17306.043889786568,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.10254127732056761,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6025679452874102,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17232.33809050647,\\\"ask\\\":17370.750444647085,\\\"price\\\":17301.544267576777,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.1025679452874102,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.602782063381284,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17268.311857696513,\\\"ask\\\":17407.01315775833,\\\"price\\\":17337.662507727422,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.10278206338128404,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6031239914878657,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17325.758857524266,\\\"ask\\\":17464.92157927145,\\\"price\\\":17395.340218397858,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.10312399148786566,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6030479641171098,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17312.99498493146,\\\"ask\\\":17452.05518561364,\\\"price\\\":17382.52508527255,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.10304796411710981,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6036700905130189,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17209.099337507334,\\\"ask\\\":17347.32503499735,\\\"price\\\":17278.21218625234,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.1036700905130189,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.603882083459395,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17173.980599496426,\\\"ask\\\":17311.92421876949,\\\"price\\\":17242.95240913296,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.10388208345939498,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.604649743619222,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17048.00054225094,\\\"ask\\\":17184.932273513998,\\\"price\\\":17116.466407882468,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.10464974361922197,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6045004735948453,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17072.317424151544,\\\"ask\\\":17209.444471735093,\\\"price\\\":17140.88094794332,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.10450047359484527,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6052109394792017,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16957.0318924682,\\\"ask\\\":17093.232951845457,\\\"price\\\":17025.13242215683,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.10521093947920168,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6056925562265792,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16879.76258574694,\\\"ask\\\":17015.343008122414,\\\"price\\\":16947.552796934677,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.10569255622657925,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6049551581201807,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16997.529677504102,\\\"ask\\\":17134.056020295302,\\\"price\\\":17065.792848899702,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.10495515812018075,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6057807653915691,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16864.865822733904,\\\"ask\\\":17000.32659239442,\\\"price\\\":16932.596207564162,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.10578076539156911,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6054817462635921,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16817.326911388973,\\\"ask\\\":16952.405842404147,\\\"price\\\":16884.86637689656,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.10548174626359208,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6053587035265336,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16836.944049012116,\\\"ask\\\":16972.180547397755,\\\"price\\\":16904.562298204935,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.10535870352653365,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6061130205454365,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16957.48837062372,\\\"ask\\\":17093.69309649218,\\\"price\\\":17025.59073355795,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.10611302054543648,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6060337116391122,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16970.162402988142,\\\"ask\\\":17106.46892831335,\\\"price\\\":17038.315665650745,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.10603371163911224,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6057064746905141,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17022.535031241212,\\\"ask\\\":17159.26222024717,\\\"price\\\":17090.89862574419,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.10570647469051409,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6058585390770147,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17047.022853333372,\\\"ask\\\":17183.9467316734,\\\"price\\\":17115.484792503386,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.1058585390770147,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6063491819160787,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17126.033954027505,\\\"ask\\\":17263.592459682342,\\\"price\\\":17194.813206854924,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.10634918191607867,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6065460210059194,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17094.394359190785,\\\"ask\\\":17231.698731553766,\\\"price\\\":17163.046545372275,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.10654602100591937,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6072845131572174,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17212.879084817047,\\\"ask\\\":17351.135141723207,\\\"price\\\":17282.007113270127,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.10728451315721743,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6067318980143549,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17301.5414402177,\\\"ask\\\":17440.5096445568,\\\"price\\\":17371.02554238725,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.1067318980143549,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6062581749832122,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17225.08893171516,\\\"ask\\\":17363.443059680743,\\\"price\\\":17294.26599569795,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.10625817498321222,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.606168939257663,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17210.635422238756,\\\"ask\\\":17348.87345775875,\\\"price\\\":17279.754439998753,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.10616893925766302,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6055768425257381,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17306.61792954372,\\\"ask\\\":17445.626908897484,\\\"price\\\":17376.122419220603,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.10557684252573807,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6048627594424676,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17423.67355269424,\\\"ask\\\":17563.62273785644,\\\"price\\\":17493.64814527534,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.10486275944246759,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6048397863635979,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17419.85725263985,\\\"ask\\\":17559.77578478957,\\\"price\\\":17489.81651871471,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.10483978636359792,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.604564204622829,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17374.187483583235,\\\"ask\\\":17513.739190278684,\\\"price\\\":17443.96333693096,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.104564204622829,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6044183524695295,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17398.421997348745,\\\"ask\\\":17538.168358773237,\\\"price\\\":17468.29517806099,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.10441835246952946,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6050496425115064,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17293.867138422527,\\\"ask\\\":17432.773701783353,\\\"price\\\":17363.32042010294,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.10504964251150639,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6043593368082694,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17180.966996912786,\\\"ask\\\":17318.96673182775,\\\"price\\\":17249.966864370268,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.10435933680826937,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6047648903430071,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17247.734399896683,\\\"ask\\\":17386.270419172964,\\\"price\\\":17317.002409534824,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.10476489034300707,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6041076128658482,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17355.943813527083,\\\"ask\\\":17495.34898472007,\\\"price\\\":17425.646399123576,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.10410761286584824,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6035729996380139,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17267.272944312634,\\\"ask\\\":17405.96589968864,\\\"price\\\":17336.619422000636,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.10357299963801392,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6043096983340577,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17145.32093346923,\\\"ask\\\":17283.034354621595,\\\"price\\\":17214.177644045412,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.10430969833405768,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6046285658895987,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17093.068601340437,\\\"ask\\\":17230.362325045982,\\\"price\\\":17161.71546319321,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.10462856588959868,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6049108084849047,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17139.178303817644,\\\"ask\\\":17276.84238657923,\\\"price\\\":17208.010345198436,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.10491080848490475,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6041697156696623,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17260.249927261917,\\\"ask\\\":17398.886472862418,\\\"price\\\":17329.568200062167,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.10416971566966227,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6033830127369942,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17390.601528483712,\\\"ask\\\":17530.285074897234,\\\"price\\\":17460.443301690473,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.10338301273699424,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6040534402582414,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17278.55201001704,\\\"ask\\\":17417.3355602983,\\\"price\\\":17347.94378515767,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.10405344025824137,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6041931811845437,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17255.378508300408,\\\"ask\\\":17393.975926037758,\\\"price\\\":17324.677217169083,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.10419318118454368,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6040501975933187,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17231.731520773454,\\\"ask\\\":17370.13900286802,\\\"price\\\":17300.935261820738,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.10405019759331868,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6037690003338133,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17278.30054026838,\\\"ask\\\":17417.082070712302,\\\"price\\\":17347.69130549034,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.10376900033381331,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6033336206430298,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17206.10951389586,\\\"ask\\\":17344.3111967384,\\\"price\\\":17275.21035531713,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.10333362064302976,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6038764034204835,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17296.488423035124,\\\"ask\\\":17435.41604089083,\\\"price\\\":17365.952231962976,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.10387640342048354,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6041477665606982,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17341.673173937237,\\\"ask\\\":17480.963721519063,\\\"price\\\":17411.31844772815,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.10414776656069824,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6049065992075836,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17216.23370820868,\\\"ask\\\":17354.51670988104,\\\"price\\\":17285.37520904486,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.1049065992075836,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6047718325159411,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17194.145506674588,\\\"ask\\\":17332.251093073577,\\\"price\\\":17263.198299874082,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.10477183251594113,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6041272153316021,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17089.00402548127,\\\"ask\\\":17226.265101991157,\\\"price\\\":17157.634563736214,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.10412721533160207,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6036288066605173,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17170.801159490635,\\\"ask\\\":17308.71924109297,\\\"price\\\":17239.760200291803,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.10362880666051733,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6031057575881885,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17257.467906962072,\\\"ask\\\":17396.08210701799,\\\"price\\\":17326.775006990032,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.10310575758818852,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6027630514354546,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17200.297019947862,\\\"ask\\\":17338.452016092026,\\\"price\\\":17269.374518019944,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.10276305143545461,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6025984036236209,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17172.78264541182,\\\"ask\\\":17310.71664256372,\\\"price\\\":17241.74964398777,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.10259840362362094,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6020273561857327,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17268.363796625905,\\\"ask\\\":17407.065513867878,\\\"price\\\":17337.71465524689,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.10202735618573266,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6017383184214172,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17219.581689746723,\\\"ask\\\":17357.89158283706,\\\"price\\\":17288.73663629189,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.10173831842141723,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6009683915669548,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17349.8946197347,\\\"ask\\\":17489.25120302574,\\\"price\\\":17419.57291138022,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.10096839156695481,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6013407166439161,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17286.15122948159,\\\"ask\\\":17424.9958176702,\\\"price\\\":17355.573523575895,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.10134071664391608,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6012293545851969,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17267.176542980695,\\\"ask\\\":17405.86872404881,\\\"price\\\":17336.522633514753,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.10122935458519688,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6007735864889461,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17189.782446645928,\\\"ask\\\":17327.852988386054,\\\"price\\\":17258.81771751599,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.10077358648894608,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6015246631234458,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17317.899787683746,\\\"ask\\\":17456.99938437197,\\\"price\\\":17387.44958602786,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.10152466312344577,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6008701169321646,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17429.551134246052,\\\"ask\\\":17569.547528898634,\\\"price\\\":17499.549331572343,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.10087011693216463,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6012714426364557,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17498.89701285878,\\\"ask\\\":17639.450402520295,\\\"price\\\":17569.173707689537,\\\"maxShares\\\":22500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.10127144263645571,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5878856857619413,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17414.938134950742,\\\"ask\\\":17554.817156115005,\\\"price\\\":17484.877645532873,\\\"maxShares\\\":22500000,\\\"investedShares\\\":10223561,\\\"averagePrice\\\":17639.450402520295,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.08788568576194133,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5884099769487358,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17311.663607597144,\\\"ask\\\":17450.713114485476,\\\"price\\\":17381.18836104131,\\\"maxShares\\\":22500000,\\\"investedShares\\\":10223561,\\\"averagePrice\\\":17639.450402520295,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.08840997694873576,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[17288.73663629189,17419.57291138022,17355.573523575895,17336.522633514753,17258.81771751599,17387.44958602786,17499.549331572343,17569.173707689537,17484.877645532873,17381.18836104131]}],[\\\"FLCM\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.012,\\\"forecast\\\":0.66,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":30207.87,\\\"ask\\\":30818.13,\\\"price\\\":30513,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.16000000000000003},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6599572527167435,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":30215.940652346642,\\\"ask\\\":30826.363695828393,\\\"price\\\":30521.152174087518,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.15995725271674355},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6581633435688963,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":30554.810265486612,\\\"ask\\\":31172.07915973887,\\\"price\\\":30863.44471261274,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.15816334356889628},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6574780958548406,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":30687.189952305205,\\\"ask\\\":31307.133183664904,\\\"price\\\":30997.161567985055,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.15747809585484063},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6562185300040089,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":30932.637017892892,\\\"ask\\\":31557.538775830122,\\\"price\\\":31245.087896861507,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.15621853000400887},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6567453568157032,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":31036.95334027163,\\\"ask\\\":31663.96249866096,\\\"price\\\":31350.457919466295,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.15674535681570323},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6582182211775509,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":31328.593382464172,\\\"ask\\\":31961.494258877592,\\\"price\\\":31645.043820670882,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.1582182211775509},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6568226873459764,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":31604.921302443814,\\\"ask\\\":32243.40456107904,\\\"price\\\":31924.162931761428,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.15682268734597637},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6571997739051147,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":31680.91662702008,\\\"ask\\\":32320.93514473766,\\\"price\\\":32000.92588587887,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.15719977390511475},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6555938312304244,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":31360.539394509848,\\\"ask\\\":31994.085644903986,\\\"price\\\":31677.312519706917,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.15559383123042436},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6571040620564905,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":31664.932267550634,\\\"ask\\\":32304.627868915297,\\\"price\\\":31984.780068232965,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.15710406205649052,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6568655641363421,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":31713.0024472048,\\\"ask\\\":32353.669163309944,\\\"price\\\":32033.33580525737,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.15686556413634212,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6576197838045578,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":31865.480591885836,\\\"ask\\\":32509.2276745502,\\\"price\\\":32187.354133218018,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.15761978380455777,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6563064136956522,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32131.00036805291,\\\"ask\\\":32780.11148659944,\\\"price\\\":32455.555927326175,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.15630641369565224,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6563530038216201,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32121.425960666882,\\\"ask\\\":32770.34365684197,\\\"price\\\":32445.884808754425,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.1563530038216201,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6566889823231701,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32190.44995315905,\\\"ask\\\":32840.76207342489,\\\"price\\\":32515.60601329197,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.15668898232317008,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6554119986431846,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32452.795643533063,\\\"ask\\\":33108.407676735755,\\\"price\\\":32780.60166013441,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.15541199864318456,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6557870632373257,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32374.664029945576,\\\"ask\\\":33028.69764671216,\\\"price\\\":32701.680838328866,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.15578706323732572,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6576187108931917,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":31998.44614855406,\\\"ask\\\":32644.879404080406,\\\"price\\\":32321.662776317233,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.15761871089319168,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.657446248437614,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32033.458048893663,\\\"ask\\\":32680.59861553798,\\\"price\\\":32357.02833221582,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.157446248437614,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6580963951105931,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32165.73459648481,\\\"ask\\\":32815.54741661582,\\\"price\\\":32490.641006550315,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.15809639511059315,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6585745992133678,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32068.734280361667,\\\"ask\\\":32716.587498146753,\\\"price\\\":32392.66088925421,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.1585745992133678,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6582992157398908,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32124.425415511603,\\\"ask\\\":32773.40370673406,\\\"price\\\":32448.91456112283,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.1582992157398908,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6574727859828836,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32292.136802874116,\\\"ask\\\":32944.50320293218,\\\"price\\\":32618.320002903147,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.1574727859828836,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6571658627294963,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32355.07598074227,\\\"ask\\\":33008.71387934312,\\\"price\\\":32681.894930042698,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.1571658627294963,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6557740030098743,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32641.61229467712,\\\"ask\\\":33301.0388056807,\\\"price\\\":32971.32555017891,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.15577400300987432,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6539131588164327,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":33031.54227997299,\\\"ask\\\":33698.84616441689,\\\"price\\\":33365.19422219494,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.15391315881643275,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6550829643088119,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":33282.59605521873,\\\"ask\\\":33954.971733101935,\\\"price\\\":33618.78389416033,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.15508296430881185,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6566788239067879,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":33625.08596439092,\\\"ask\\\":34304.380630338215,\\\"price\\\":33964.73329736457,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.1566788239067879,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6555250125892982,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":33872.70720489982,\\\"ask\\\":34557.00432015033,\\\"price\\\":34214.855762525076,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.15552501258929818,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6555864517937263,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":33859.331283291605,\\\"ask\\\":34543.35817790355,\\\"price\\\":34201.34473059758,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.15558645179372632,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6560798160072232,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":33752.30282326739,\\\"ask\\\":34434.16752676774,\\\"price\\\":34093.235175017566,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.1560798160072232,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6552911041524933,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":33922.86197718079,\\\"ask\\\":34608.17232015414,\\\"price\\\":34265.517148667466,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.15529110415249325,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6551171995844887,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":33960.85089283577,\\\"ask\\\":34646.92868865064,\\\"price\\\":34303.889790743204,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.15511719958448866,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6565397030154769,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":34272.289128207114,\\\"ask\\\":34964.65860554463,\\\"price\\\":34618.47386687587,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.15653970301547693,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6570259384371728,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":34378.743916581756,\\\"ask\\\":35073.26399570463,\\\"price\\\":34726.00395614319,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.15702593843717283,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6587885389947163,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":34764.64190132301,\\\"ask\\\":35466.957899329536,\\\"price\\\":35115.799900326274,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.15878853899471634,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6591325780469609,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":34689.481964884195,\\\"ask\\\":35390.2795803364,\\\"price\\\":35039.8807726103,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.1591325780469609,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6607759589021007,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":35047.72432628795,\\\"ask\\\":35755.75916116245,\\\"price\\\":35401.7417437252,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.16077595890210072,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6596580254676786,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":34805.70764326619,\\\"ask\\\":35508.853252221066,\\\"price\\\":35157.28044774363,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.1596580254676786,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6613500339077839,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":35174.56821838437,\\\"ask\\\":35885.16555612951,\\\"price\\\":35529.86688725694,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.1613500339077839,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6632779713499479,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":34759.23743910346,\\\"ask\\\":35461.444256055045,\\\"price\\\":35110.34084757925,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.16327797134994793,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6639790617431005,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":34908.488236626115,\\\"ask\\\":35613.71022120443,\\\"price\\\":35261.09922891527,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.1639790617431005,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6642696119735659,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":34846.74419778355,\\\"ask\\\":35550.7188280418,\\\"price\\\":35198.73151291267,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.16426961197356593,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6660560784648762,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":35225.70985121566,\\\"ask\\\":35937.34035326042,\\\"price\\\":35581.52510223804,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.16605607846487624,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6658675563877311,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":35265.701305015216,\\\"ask\\\":35978.13971521755,\\\"price\\\":35621.92051011638,\\\"maxShares\\\":13100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.1658675563877311,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6664642726856504,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":35431.021173074994,\\\"ask\\\":36146.799378591655,\\\"price\\\":35788.910275833325,\\\"maxShares\\\":13100000,\\\"investedShares\\\":145276,\\\"averagePrice\\\":35978.13971521755,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.16646427268565045,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6658011798075618,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":35508.44305952161,\\\"ask\\\":36225.78534355236,\\\"price\\\":35867.114201536984,\\\"maxShares\\\":13100000,\\\"investedShares\\\":319406,\\\"averagePrice\\\":36070.08760343296,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.16580117980756182,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6646338828867596,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":35758.434623477726,\\\"ask\\\":36480.82724213384,\\\"price\\\":36119.63093280578,\\\"maxShares\\\":13100000,\\\"investedShares\\\":319406,\\\"averagePrice\\\":36070.08760343296,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.16463388288675962,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6650967438668998,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":35658.18319688723,\\\"ask\\\":36378.550534198075,\\\"price\\\":36018.36686554265,\\\"maxShares\\\":13100000,\\\"investedShares\\\":319406,\\\"averagePrice\\\":36070.08760343296,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.16509674386689976,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6633585376007798,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36033.60718175547,\\\"ask\\\":36761.55884199295,\\\"price\\\":36397.58301187421,\\\"maxShares\\\":13100000,\\\"investedShares\\\":319406,\\\"averagePrice\\\":36070.08760343296,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.16335853760077979,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6646366873473933,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36315.54130387331,\\\"ask\\\":37049.18860294146,\\\"price\\\":36682.364953407385,\\\"maxShares\\\":13100000,\\\"investedShares\\\":319406,\\\"averagePrice\\\":36070.08760343296,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.16463668734739334,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6576267649400905,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36072.34398351957,\\\"ask\\\":36801.078205408856,\\\"price\\\":36436.71109446421,\\\"maxShares\\\":13100000,\\\"investedShares\\\":3920200,\\\"averagePrice\\\":36969.414424621726,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.15762676494009054,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6578278410727512,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36118.35956613315,\\\"ask\\\":36848.023395751996,\\\"price\\\":36483.19148094257,\\\"maxShares\\\":13100000,\\\"investedShares\\\":3920200,\\\"averagePrice\\\":36969.414424621726,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.15782784107275116,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6563123611354268,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36424.328517191454,\\\"ask\\\":37160.17353774078,\\\"price\\\":36792.25102746612,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4060058,\\\"averagePrice\\\":36965.23283250761,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.1563123611354268,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6577970617543132,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36053.915140261415,\\\"ask\\\":36782.27706228689,\\\"price\\\":36418.09610127415,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4138873,\\\"averagePrice\\\":36968.94501495026,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.15779706175431318,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6578495728389185,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36041.92125168612,\\\"ask\\\":36770.0408729323,\\\"price\\\":36405.98106230921,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4138873,\\\"averagePrice\\\":36968.94501495026,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.15784957283891854,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6584798359335718,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36185.82973630722,\\\"ask\\\":36916.856599666964,\\\"price\\\":36551.34316798709,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4138873,\\\"averagePrice\\\":36968.94501495026,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.15847983593357184,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6581440534982168,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36262.49921266439,\\\"ask\\\":36995.074954334385,\\\"price\\\":36628.78708349939,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4138873,\\\"averagePrice\\\":36968.94501495026,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.1581440534982168,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6566917441819282,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":35932.51446545766,\\\"ask\\\":36658.42384859822,\\\"price\\\":36295.46915702794,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4138873,\\\"averagePrice\\\":36968.94501495026,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.15669174418192822,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6545336956878165,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36291.17917476672,\\\"ask\\\":37024.3343096105,\\\"price\\\":36657.75674218861,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4494276,\\\"averagePrice\\\":36944.38930139706,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.1545336956878165,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6554459044218538,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36505.405143183445,\\\"ask\\\":37242.88807536897,\\\"price\\\":36874.146609276206,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4500802,\\\"averagePrice\\\":36944.50521876548,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.1554459044218538,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6568061406654345,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36853.29704170911,\\\"ask\\\":37597.80809305677,\\\"price\\\":37225.55256738294,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4575609,\\\"averagePrice\\\":36949.383504115896,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.15680614066543452,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6555830055559206,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37140.76385469084,\\\"ask\\\":37891.082316401764,\\\"price\\\":37515.9230855463,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4575609,\\\"averagePrice\\\":36949.383504115896,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.15558300555592064,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6572639743786718,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37542.04461070796,\\\"ask\\\":38300.46975435862,\\\"price\\\":37921.25718253329,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4575609,\\\"averagePrice\\\":36949.383504115896,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.1572639743786718,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.65799422013992,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37368.526117934736,\\\"ask\\\":38123.44583748897,\\\"price\\\":37745.985977711855,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4575609,\\\"averagePrice\\\":36949.383504115896,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.15799422013992004,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6586416126023797,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37521.64628980278,\\\"ask\\\":38279.65934616243,\\\"price\\\":37900.652817982605,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4575609,\\\"averagePrice\\\":36949.383504115896,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.15864161260237974,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6569393614392408,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37123.30696742555,\\\"ask\\\":37873.27276474728,\\\"price\\\":37498.289866086416,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4575609,\\\"averagePrice\\\":36949.383504115896,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.1569393614392408,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6551390181412335,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37549.17015614858,\\\"ask\\\":38307.739250212195,\\\"price\\\":37928.45470318039,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4575609,\\\"averagePrice\\\":36949.383504115896,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.15513901814123354,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6536108264181085,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37919.04700421912,\\\"ask\\\":38685.08835783971,\\\"price\\\":38302.06768102942,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4575609,\\\"averagePrice\\\":36949.383504115896,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.15361082641810853,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6527585682871976,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37996.400285837415,\\\"ask\\\":38764.004332015946,\\\"price\\\":38380.20230892668,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4874495,\\\"averagePrice\\\":37055.81050443288,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.15275856828719758,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6530769929055201,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":38075.60362869609,\\\"ask\\\":38844.80774240712,\\\"price\\\":38460.205685551606,\\\"maxShares\\\":13100000,\\\"investedShares\\\":4880523,\\\"averagePrice\\\":37057.92031774442,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.15307699290552013,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6498791897081246,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37919.93899312624,\\\"ask\\\":38685.99836672476,\\\"price\\\":38302.9686799255,\\\"maxShares\\\":13100000,\\\"investedShares\\\":6464407,\\\"averagePrice\\\":37495.736563182625,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.14987918970812464,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6508343934715972,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37679.79967474387,\\\"ask\\\":38441.007748981116,\\\"price\\\":38060.40371186249,\\\"maxShares\\\":13100000,\\\"investedShares\\\":6464407,\\\"averagePrice\\\":37495.736563182625,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.15083439347159722,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.649630913274749,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37381.539171386285,\\\"ask\\\":38136.72178090925,\\\"price\\\":37759.130476147766,\\\"maxShares\\\":13100000,\\\"investedShares\\\":6464407,\\\"averagePrice\\\":37495.736563182625,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.14963091327474898,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6441406242285048,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37529.87473496551,\\\"ask\\\":38288.054022540564,\\\"price\\\":37908.96437875304,\\\"maxShares\\\":13100000,\\\"investedShares\\\":10153904,\\\"averagePrice\\\":37728.643338531954,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.14414062422850482,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6400532355511281,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37119.05891645409,\\\"ask\\\":37868.93889456427,\\\"price\\\":37493.99890550918,\\\"maxShares\\\":13100000,\\\"investedShares\\\":11712181,\\\"averagePrice\\\":37803.071560094184,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.14005323555112814,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6380420785746622,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37191.49098201402,\\\"ask\\\":37942.83423417591,\\\"price\\\":37567.162608094965,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.13804207857466222,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6367519797378702,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":36847.12903959804,\\\"ask\\\":37591.51548484245,\\\"price\\\":37219.322262220245,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.13675197973787023,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6377462606731418,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37115.03300701253,\\\"ask\\\":37864.83165361884,\\\"price\\\":37489.932330315685,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.13774626067314177,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6388023384698684,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37399.587826083036,\\\"ask\\\":38155.1350548928,\\\"price\\\":37777.36144048792,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.13880233846986845,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6381015452012642,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37588.413026623755,\\\"ask\\\":38347.77490594949,\\\"price\\\":37968.09396628662,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.13810154520126416,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.638437647640448,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37497.154922209076,\\\"ask\\\":38254.67320346583,\\\"price\\\":37875.91406283745,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.13843764764044797,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6396080628308779,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37814.17302000894,\\\"ask\\\":38578.09570728184,\\\"price\\\":38196.13436364539,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.1396080628308779,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6390073006128507,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37976.89518659245,\\\"ask\\\":38744.105190361995,\\\"price\\\":38360.50018847722,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.13900730061285071,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6406052266642399,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":38413.449740935925,\\\"ask\\\":39189.479028631606,\\\"price\\\":38801.464384783765,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.1406052266642399,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6398176506709987,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":38628.61607259571,\\\"ask\\\":39408.992154870364,\\\"price\\\":39018.80411373304,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.13981765067099872,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6395842675543908,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":38693.094818776925,\\\"ask\\\":39474.77350198454,\\\"price\\\":39083.93416038073,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.1395842675543908,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6405388821718679,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":38957.71628763292,\\\"ask\\\":39744.74085910025,\\\"price\\\":39351.228573366585,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.14053888217186794,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6389478162056735,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":39398.76360171436,\\\"ask\\\":40194.69821993082,\\\"price\\\":39796.73091082259,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.13894781620567354,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6375870778604037,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":39016.66709619012,\\\"ask\\\":39804.88259308285,\\\"price\\\":39410.774844636486,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.1375870778604037,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6367555702011315,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":39252.464367520166,\\\"ask\\\":40045.443445651894,\\\"price\\\":39648.95390658603,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.1367555702011315,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6377570538640593,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":39539.91665729466,\\\"ask\\\":40338.70285239153,\\\"price\\\":39939.309754843096,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.13775705386405934,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.012,\\\"forecast\\\":0.6390053637574876,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":39898.21460113235,\\\"ask\\\":40704.23913852897,\\\"price\\\":40301.22686983066,\\\"maxShares\\\":13100000,\\\"investedShares\\\":13100000,\\\"averagePrice\\\":37810.049570648145,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.13900536375748762,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[38360.50018847722,38801.464384783765,39018.80411373304,39083.93416038073,39351.228573366585,39796.73091082259,39410.774844636486,39648.95390658603,39939.309754843096,40301.22686983066]}],[\\\"STM\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.57,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22634.442,\\\"ask\\\":22953.557999999997,\\\"price\\\":22794,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.06999999999999995},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5700134030544377,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22638.775866547036,\\\"ask\\\":22957.952968391604,\\\"price\\\":22798.36441746932,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.0700134030544377},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5694506797508302,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22458.27053985024,\\\"ask\\\":22774.902752899485,\\\"price\\\":22616.586646374864,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.06945067975083019},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5692350367016892,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22528.00304578137,\\\"ask\\\":22845.61839587295,\\\"price\\\":22686.81072082716,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.06923503670168918},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5688381707375904,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22657.137051826703,\\\"ask\\\":22976.57302234591,\\\"price\\\":22816.85503708631,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.06883817073759035},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5690045433548998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22602.509819926006,\\\"ask\\\":22921.175617991426,\\\"price\\\":22761.842718958716,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.0690045433548998},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.56946923296309,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22754.719383553107,\\\"ask\\\":23075.531137198366,\\\"price\\\":22915.12526037574,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.06946923296309004},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5699083634414124,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22611.785257862022,\\\"ask\\\":22930.58182745927,\\\"price\\\":22771.18354266065,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.06990836344141238},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5697878935548095,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22650.751113616712,\\\"ask\\\":22970.0970507674,\\\"price\\\":22810.424082192058,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.06978789355480952},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5692769470685808,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22816.586777976678,\\\"ask\\\":23138.27078088873,\\\"price\\\":22977.428779432707,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.06927694706858079},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5697588470414534,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22975.30209403222,\\\"ask\\\":23299.223775116257,\\\"price\\\":23137.26293457424,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.06975884704145341,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5698347421315912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22950.332965914233,\\\"ask\\\":23273.902614980496,\\\"price\\\":23112.117790447366,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.06983474213159124,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5695941070308489,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22871.522748924403,\\\"ask\\\":23193.981277106617,\\\"price\\\":23032.75201301551,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.0695941070308489,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5691785160897739,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23008.10324501195,\\\"ask\\\":23332.48737938271,\\\"price\\\":23170.29531219733,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.06917851608977388,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.569163738434439,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23003.18938990753,\\\"ask\\\":23327.50424535436,\\\"price\\\":23165.346817630947,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.06916373843443901,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.569270251019339,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23038.614443820472,\\\"ask\\\":23363.428746150264,\\\"price\\\":23201.02159498537,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.06927025101933904,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.569674837022153,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23173.17582898996,\\\"ask\\\":23499.8872706877,\\\"price\\\":23336.53154983883,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.06967483702215305,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5697953446923032,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23213.25551268181,\\\"ask\\\":23540.532025448723,\\\"price\\\":23376.893769065267,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.0697953446923032,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5692072405943017,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23408.85323850646,\\\"ask\\\":23738.88742313797,\\\"price\\\":23573.870330822218,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.06920724059430172,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5692615100583909,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23390.511364078306,\\\"ask\\\":23720.286952292903,\\\"price\\\":23555.399158185606,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.06926151005839087,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5690565410553815,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23459.73205808471,\\\"ask\\\":23790.483567463547,\\\"price\\\":23625.10781277413,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.0690565410553815,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.56920623814504,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23510.58681506486,\\\"ask\\\":23842.055309939893,\\\"price\\\":23676.32106250238,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.06920623814504001,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5692923705748943,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23481.362472573994,\\\"ask\\\":23812.418942479366,\\\"price\\\":23646.89070752668,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.06929237057489435,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5690331139830359,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23393.83471434859,\\\"ask\\\":23723.657157451187,\\\"price\\\":23558.74593589989,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.06903311398303591,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5689366869172919,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23426.511768994522,\\\"ask\\\":23756.794915788,\\\"price\\\":23591.653342391262,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.06893668691729193,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5684991599176312,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23575.19502989887,\\\"ask\\\":23907.574416020303,\\\"price\\\":23741.38472295959,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.06849915991763122,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5690855916762039,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23777.02587128001,\\\"ask\\\":24112.250808035213,\\\"price\\\":23944.638339657613,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.06908559167620387,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5687092844213025,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23906.5386556139,\\\"ask\\\":24243.58955307472,\\\"price\\\":24075.06410434431,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.06870928442130253,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5692159987870193,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24082.843600038672,\\\"ask\\\":24422.380166403767,\\\"price\\\":24252.61188322122,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.06921599878701934,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5695812975377481,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24209.94474479221,\\\"ask\\\":24551.273270902067,\\\"price\\\":24380.60900784714,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.06958129753774811,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5695615980439515,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24203.092491568023,\\\"ask\\\":24544.324409878143,\\\"price\\\":24373.708450723083,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.06956159804395146,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.569403515970539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24258.095182012916,\\\"ask\\\":24600.10256625076,\\\"price\\\":24429.09887413184,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.06940351597053895,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5696548610002666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24345.94594244485,\\\"ask\\\":24689.19190739372,\\\"price\\\":24517.568924919287,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.06965486100026663,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5697107637341294,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24326.42234431231,\\\"ask\\\":24669.3930520871,\\\"price\\\":24497.907698199706,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.06971076373412943,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5692526108625446,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24167.588193928335,\\\"ask\\\":24508.31954812269,\\\"price\\\":24337.953871025515,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.06925261086254464,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5690984495340021,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24113.908885900775,\\\"ask\\\":24453.883432126968,\\\"price\\\":24283.89615901387,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.06909844953400213,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5696543128493355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24307.8935183978,\\\"ask\\\":24650.602993984474,\\\"price\\\":24479.24825619114,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.06965431284933554,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5695461560548808,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24345.637970038362,\\\"ask\\\":24688.879592979483,\\\"price\\\":24517.258781508925,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.06954615605488079,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5690314379310676,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24525.82249510523,\\\"ask\\\":24871.604483958676,\\\"price\\\":24698.713489531954,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.06903143793106759,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5686874375200086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24648.040621697055,\\\"ask\\\":24995.545726131855,\\\"price\\\":24821.793173914455,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.06868743752000861,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5692091200471812,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24835.2430066693,\\\"ask\\\":25185.38741965356,\\\"price\\\":25010.315213161433,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.06920912004718116,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5698017783997292,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24624.3771155286,\\\"ask\\\":24971.54859550584,\\\"price\\\":24797.96285551722,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.06980177839972923,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5700165763403031,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24700.15262746529,\\\"ask\\\":25048.392442958255,\\\"price\\\":24874.272535211774,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.07001657634030312,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5701054864002788,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24731.517943599007,\\\"ask\\\":25080.199968987105,\\\"price\\\":24905.858956293057,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.0701054864002788,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.569559091225635,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24540.253652192012,\\\"ask\\\":24886.23910146763,\\\"price\\\":24713.246376829822,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.06955909122563497,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5695024961632132,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24560.22023258891,\\\"ask\\\":24906.48718450859,\\\"price\\\":24733.35370854875,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.06950249616321325,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5697359979094918,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24642.73315845318,\\\"ask\\\":24990.16343460458,\\\"price\\\":24816.44829652888,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.06973599790949181,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5696267899469478,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24681.324169701657,\\\"ask\\\":25029.298528589694,\\\"price\\\":24855.311349145675,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.06962678994694782,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5692754825440086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24805.855717138602,\\\"ask\\\":25155.585807813262,\\\"price\\\":24980.720762475932,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.06927548254400862,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.569135900962636,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24755.975469789933,\\\"ask\\\":25105.00231427841,\\\"price\\\":24930.488892034173,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.069135900962636,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.568614245649267,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24942.76823536665,\\\"ask\\\":25294.428613307366,\\\"price\\\":25118.598424337008,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.06861424564926699,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5682295020534639,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25082.63088705581,\\\"ask\\\":25436.263145282173,\\\"price\\\":25259.447016168993,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.0682295020534639,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5678998363039587,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25203.823099545734,\\\"ask\\\":25559.164009307704,\\\"price\\\":25381.49355442672,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.06789983630395868,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5678377613374609,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25180.802462761487,\\\"ask\\\":25535.818811682595,\\\"price\\\":25358.310637222043,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.06783776133746089,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5674259123019105,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25333.67733664011,\\\"ask\\\":25690.8490211446,\\\"price\\\":25512.263178892357,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.06742591230191053,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5669294591565953,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25520.20775746497,\\\"ask\\\":25880.00927670415,\\\"price\\\":25700.10851708456,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.06692945915659532,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5669134971826638,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25514.12290679,\\\"ask\\\":25873.83863760073,\\\"price\\\":25693.980772195366,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.06691349718266382,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5671049710020252,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25587.131892515004,\\\"ask\\\":25947.876954443713,\\\"price\\\":25767.50442347936,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.06710497100202517,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5670030753013772,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25625.98473296526,\\\"ask\\\":25987.277569079568,\\\"price\\\":25806.631151022415,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.06700307530137717,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5665620960066468,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25458.430621012914,\\\"ask\\\":25817.361163504534,\\\"price\\\":25637.895892258726,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.06656209600664675,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5660859444243792,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25640.54736236423,\\\"ask\\\":26002.045512488192,\\\"price\\\":25821.296437426212,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.0660859444243792,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5663655187855572,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25532.532842470977,\\\"ask\\\":25892.508129273185,\\\"price\\\":25712.520485872083,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.06636551878555719,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.565912259362665,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25706.913474355286,\\\"ask\\\":26069.34729977419,\\\"price\\\":25888.13038706474,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.06591225936266498,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5655437956103353,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25564.005169279266,\\\"ask\\\":25924.424174687025,\\\"price\\\":25744.214671983147,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.0655437956103353,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5660513075856674,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25761.94974420122,\\\"ask\\\":26125.159508973444,\\\"price\\\":25943.554626587334,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.06605130758566735,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5662711130185322,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25847.680318234496,\\\"ask\\\":26212.098771865192,\\\"price\\\":26029.889545049846,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.06627111301853217,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5660765017834515,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":25923.58441523214,\\\"ask\\\":26289.07301725958,\\\"price\\\":26106.328716245862,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.06607650178345148,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5655683765394511,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26122.935580938898,\\\"ask\\\":26491.234773419405,\\\"price\\\":26307.085177179153,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.06556837653945113,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5650293190540416,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26337.700147472027,\\\"ask\\\":26709.027239178577,\\\"price\\\":26523.363693325304,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.06502931905404163,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5654883936030245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26523.63117046797,\\\"ask\\\":26897.579646184535,\\\"price\\\":26710.605408326253,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.0654883936030245,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5653926515200904,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26562.40793006645,\\\"ask\\\":26936.90310732821,\\\"price\\\":26749.65551869733,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.06539265152009044,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.565490340867885,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26602.089212996867,\\\"ask\\\":26977.143844398634,\\\"price\\\":26789.616528697752,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.06549034086788497,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.565683012060383,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26524.056003330807,\\\"ask\\\":26898.010468634562,\\\"price\\\":26711.033235982686,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.06568301206038296,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5653830095051188,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26645.202770620526,\\\"ask\\\":27020.86524674206,\\\"price\\\":26833.034008681294,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.06538300950511877,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5657568795577379,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26493.70769620552,\\\"ask\\\":26867.234290109725,\\\"price\\\":26680.470993157625,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.0657568795577379,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5655698774473386,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26418.577462343535,\\\"ask\\\":26791.04481830809,\\\"price\\\":26604.811140325815,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.06556987744733855,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5650497955014054,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26628.12223671703,\\\"ask\\\":27003.54389967175,\\\"price\\\":26815.83306819439,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.06504979550140544,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5651407652624788,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26665.36069225768,\\\"ask\\\":27041.307368684273,\\\"price\\\":26853.334030470978,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.0651407652624788,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5655770615876653,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26843.95851549362,\\\"ask\\\":27222.42318741397,\\\"price\\\":27033.190851453797,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.0655770615876653,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5652353618481238,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26983.833243194626,\\\"ask\\\":27364.269965656582,\\\"price\\\":27174.051604425604,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.06523536184812384,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5655938017706209,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26836.379019849104,\\\"ask\\\":27214.73683080367,\\\"price\\\":27025.55792532639,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.06559380177062091,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5653564605634842,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26739.625746191083,\\\"ask\\\":27116.61946265299,\\\"price\\\":26928.12260442204,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.06535646056348421,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5652424673868776,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26786.264362386082,\\\"ask\\\":27163.915622278735,\\\"price\\\":26975.08999233241,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.06524246738687756,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5656377733093472,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26624.943092491943,\\\"ask\\\":27000.31993367511,\\\"price\\\":26812.63151308353,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.06563777330934717,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5654353487717232,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26543.085170265036,\\\"ask\\\":26917.30792191026,\\\"price\\\":26730.19654608765,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.06543534877172319,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5648962743891797,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26326.20267906835,\\\"ask\\\":26697.36767152248,\\\"price\\\":26511.785175295416,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.06489627438917966,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5646357622439572,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26431.883561369177,\\\"ask\\\":26804.53851591013,\\\"price\\\":26618.211038639656,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.06463576224395717,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5647130832532945,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26463.502897858747,\\\"ask\\\":26836.6036436493,\\\"price\\\":26650.053270754026,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.0647130832532945,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5650302596826076,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26593.20772622252,\\\"ask\\\":26968.137140288094,\\\"price\\\":26780.67243325531,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.06503025968260756,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5655578834913189,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26808.972042939713,\\\"ask\\\":27186.94345140009,\\\"price\\\":26997.9577471699,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.06555788349131886,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5650977699371194,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26622.12645593097,\\\"ask\\\":26997.463586226066,\\\"price\\\":26809.79502107852,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.06509776993711935,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5653797198231211,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26737.43156586981,\\\"ask\\\":27114.39434726173,\\\"price\\\":26925.91295656577,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.06537971982312107,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5657228501506237,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26597.838964076822,\\\"ask\\\":26972.83367253309,\\\"price\\\":26785.336318304955,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.06572285015062374,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5652960327069261,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":26426.221750455254,\\\"ask\\\":26798.79688087456,\\\"price\\\":26612.50931566491,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.06529603270692608,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[26730.19654608765,26511.785175295416,26618.211038639656,26650.053270754026,26780.67243325531,26997.9577471699,26809.79502107852,26925.91295656577,26785.336318304955,26612.50931566491]}],[\\\"DCOMM\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6142.332,\\\"ask\\\":6191.668,\\\"price\\\":6167,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.09999999999999998},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6000142490944188,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6143.207226686196,\\\"ask\\\":6192.550256619419,\\\"price\\\":6167.878741652808,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.1000142490944188},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6006124638409824,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6106.681362852782,\\\"ask\\\":6155.731012353608,\\\"price\\\":6131.206187603195,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.10061246384098244},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6003799802686727,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6120.791971459263,\\\"ask\\\":6169.954959181827,\\\"price\\\":6145.373465320545,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.10037998026867267},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6008081801638339,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6146.901983370679,\\\"ask\\\":6196.27469006442,\\\"price\\\":6171.588336717549,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.10080818016383386},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6006268667958758,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6157.957787565357,\\\"ask\\\":6207.419295899214,\\\"price\\\":6182.688541732286,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.10062686679587585},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6011311572500118,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6127.251134801913,\\\"ask\\\":6176.46600335454,\\\"price\\\":6151.8585690782265,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.10113115725001176},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.600655419541023,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6156.074738689522,\\\"ask\\\":6205.521122132812,\\\"price\\\":6180.797930411167,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.10065541954102297},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.600784502244402,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6148.190165647262,\\\"ask\\\":6197.573219186597,\\\"price\\\":6172.88169241693,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.10078450224440205},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6013336264713429,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6114.873286647072,\\\"ask\\\":6163.98873473259,\\\"price\\\":6139.431010689831,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.10133362647134292},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6018581962530757,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6146.527909668065,\\\"ask\\\":6195.897611753752,\\\"price\\\":6171.212760710909,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.10185819625307568,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6019406654738404,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6141.555415474873,\\\"ask\\\":6190.885177848166,\\\"price\\\":6166.22029666152,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.1019406654738404,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6022020720026379,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6157.304210865936,\\\"ask\\\":6206.760469587751,\\\"price\\\":6182.032340226843,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.10220207200263787,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6026562591381069,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6184.667338706169,\\\"ask\\\":6234.343381587343,\\\"price\\\":6209.505360146756,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.10265625913810694,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6026399398485558,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6183.684316962452,\\\"ask\\\":6233.352464086649,\\\"price\\\":6208.51839052455,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.1026399398485558,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6025223092311823,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6176.60561122283,\\\"ask\\\":6226.216901272813,\\\"price\\\":6201.411256247821,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.10252230923118233,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6020766899284284,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6203.452594152689,\\\"ask\\\":6253.279522619779,\\\"price\\\":6228.366058386234,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.10207668992842844,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6019453046124476,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6211.437204349458,\\\"ask\\\":6261.328266231782,\\\"price\\\":6236.38273529062,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.10194530461244755,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6013060461294399,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6250.386658075102,\\\"ask\\\":6300.590566975303,\\\"price\\\":6275.488612525202,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.10130604612943994,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6013651642866057,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6246.741309661774,\\\"ask\\\":6296.915938655041,\\\"price\\\":6271.828624158407,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.10136516428660569,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6015884014441615,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6233.0143019115685,\\\"ask\\\":6283.078673814473,\\\"price\\\":6258.046487863021,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.10158840144416148,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6017522845496333,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6243.069443302969,\\\"ask\\\":6293.214579393756,\\\"price\\\":6268.142011348363,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.10175228454963325,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6016580419737773,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6237.292486913874,\\\"ask\\\":6287.391221748524,\\\"price\\\":6262.341854331199,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.10165804197377726,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6013749890459118,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6219.973819676903,\\\"ask\\\":6269.933448750613,\\\"price\\\":6244.953634213758,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.1013749890459118,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6014803679870188,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6213.514893011258,\\\"ask\\\":6263.422643155926,\\\"price\\\":6238.468768083592,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.10148036798701876,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6010010563126539,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6242.862542080107,\\\"ask\\\":6293.006016313682,\\\"price\\\":6267.934279196895,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.10100105631265388,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6003575694644786,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6203.34049971687,\\\"ask\\\":6253.166527827046,\\\"price\\\":6228.253513771958,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.1003575694644786,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6007643749188933,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6228.486114186636,\\\"ask\\\":6278.514115103798,\\\"price\\\":6253.500114645217,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.10076437491889334,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6002113606599253,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6194.489564720852,\\\"ask\\\":6244.24450098367,\\\"price\\\":6219.367032852261,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.10021136065992531,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6006049471461732,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6170.2554942199795,\\\"ask\\\":6219.815779314115,\\\"price\\\":6195.035636767047,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.10060494714617318,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6006261436094689,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6171.555505778236,\\\"ask\\\":6221.1262327322775,\\\"price\\\":6196.340869255257,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.10062614360946887,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6004559648220426,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6181.992831455575,\\\"ask\\\":6231.6473923508,\\\"price\\\":6206.820111903187,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.10045596482204255,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6007267008676047,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6198.6537464728835,\\\"ask\\\":6248.442129978689,\\\"price\\\":6223.547938225786,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.10072670086760471,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6006665408784145,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6202.355951937467,\\\"ask\\\":6252.174072033349,\\\"price\\\":6227.265011985408,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.10066654087841453,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6001741871392846,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6232.6912859789945,\\\"ask\\\":6282.753063376415,\\\"price\\\":6257.722174677705,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.10017418713928461,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6000082373738225,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6222.383210975194,\\\"ask\\\":6272.362192589452,\\\"price\\\":6247.372701782323,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.10000823737382247,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.600606948055496,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6259.634215409477,\\\"ask\\\":6309.912401878631,\\\"price\\\":6284.773308644054,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.10060694805549597,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6004906920779052,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6252.4092675728825,\\\"ask\\\":6302.629422332504,\\\"price\\\":6277.519344952693,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.10049069207790517,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5999372098381026,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6286.846262821112,\\\"ask\\\":6337.343019952205,\\\"price\\\":6312.094641386659,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.09993720983810261,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6003078229537577,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6310.160778854559,\\\"ask\\\":6360.844801174675,\\\"price\\\":6335.502790014617,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.10030782295375773,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5997408722433697,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6345.826492962254,\\\"ask\\\":6396.79698688163,\\\"price\\\":6371.311739921942,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.0997408722433697,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6003764896273636,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6386.266460490248,\\\"ask\\\":6437.561773425913,\\\"price\\\":6411.914116958081,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.10037648962736356,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6001466223501248,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6400.891336180193,\\\"ask\\\":6452.304117996902,\\\"price\\\":6426.597727088548,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.10014662235012484,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6000519838472336,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6406.940174962873,\\\"ask\\\":6458.401541830045,\\\"price\\\":6432.670858396459,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.10005198384723357,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5994716711466359,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6444.101144816078,\\\"ask\\\":6495.860993368818,\\\"price\\\":6469.981069092448,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.09947167114663591,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5995319001366977,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6448.002976355993,\\\"ask\\\":6499.794164921102,\\\"price\\\":6473.898570638547,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.09953190013669766,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5997807477892618,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6431.922014447576,\\\"ask\\\":6483.584038660006,\\\"price\\\":6457.753026553791,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.09978074778926183,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5996644622899958,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6424.43491259812,\\\"ask\\\":6476.036799446297,\\\"price\\\":6450.235856022208,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.09966446228999581,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6000386872746577,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6400.402369567764,\\\"ask\\\":6451.811223941802,\\\"price\\\":6426.106796754783,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.1000386872746577,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.600188689624217,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6409.99941066971,\\\"ask\\\":6461.485349711234,\\\"price\\\":6435.742380190472,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.10018868962421701,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6007512643635938,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6445.992532861336,\\\"ask\\\":6497.767573285925,\\\"price\\\":6471.880053073631,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.10075126436359383,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6003308387814076,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6419.205788814174,\\\"ask\\\":6470.765674668103,\\\"price\\\":6444.985731741139,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.10033083878140758,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6006915981288142,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6442.287311099533,\\\"ask\\\":6494.032590706758,\\\"price\\\":6468.159950903146,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.10069159812881423,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6007601031686391,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6446.670289987658,\\\"ask\\\":6498.450774244588,\\\"price\\\":6472.560532116123,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.10076010316863915,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6003048670919126,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6475.796469879037,\\\"ask\\\":6527.810899355977,\\\"price\\\":6501.803684617507,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.10030486709191255,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6008544775205904,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6440.50636316946,\\\"ask\\\":6492.237337974034,\\\"price\\\":6466.371850571747,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.1008544775205904,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6008365778108643,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6441.649427882337,\\\"ask\\\":6493.389583929585,\\\"price\\\":6467.519505905961,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.1008365778108643,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6006218465408589,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6455.3669061289,\\\"ask\\\":6507.217242724313,\\\"price\\\":6481.292074426607,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.10062184654085893,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.600508142742577,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6462.661542053043,\\\"ask\\\":6514.570470101662,\\\"price\\\":6488.616006077353,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.10050814274257702,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.6000158694973039,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6431.162707723578,\\\"ask\\\":6482.81863308682,\\\"price\\\":6456.990670405199,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.1000158694973039,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5994834319425423,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6397.107509314309,\\\"ask\\\":6448.489898947356,\\\"price\\\":6422.798704130832,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.09948343194254228,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5997966310545972,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6417.247228587311,\\\"ask\\\":6468.791383033796,\\\"price\\\":6443.019305810553,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.09979663105459724,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5992894047694979,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6449.863524728012,\\\"ask\\\":6501.669657456751,\\\"price\\\":6475.7665910923815,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.09928940476949788,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5997024646372162,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6476.695992708969,\\\"ask\\\":6528.717647268882,\\\"price\\\":6502.706819988925,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.09970246463721621,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5991279486429781,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6439.589117190798,\\\"ask\\\":6491.312724557792,\\\"price\\\":6465.450920874295,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.09912794864297814,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5988824581688331,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6423.680864445167,\\\"ask\\\":6475.276694681674,\\\"price\\\":6449.47877956342,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.09888245816883312,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5986663633166499,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6409.673350464819,\\\"ask\\\":6461.156670548874,\\\"price\\\":6435.415010506847,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.09866636331664991,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5981017197649754,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6446.354348973548,\\\"ask\\\":6498.132295551649,\\\"price\\\":6472.243322262599,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.09810171976497539,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5975015158914719,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6485.794298237427,\\\"ask\\\":6537.889031556603,\\\"price\\\":6511.841664897015,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.09750151589147193,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.59698928366221,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6451.898717917121,\\\"ask\\\":6503.721197579106,\\\"price\\\":6477.809957748113,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.09698928366221005,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5970948058552792,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6458.918240863032,\\\"ask\\\":6510.797102235426,\\\"price\\\":6484.857671549229,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.09709480585527919,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5972027491781918,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6466.098821648986,\\\"ask\\\":6518.035358369058,\\\"price\\\":6492.067090009022,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.09720274917819183,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5974155628894509,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6451.973003896797,\\\"ask\\\":6503.796080233318,\\\"price\\\":6477.884542065058,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.09741556288945086,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5977466801044968,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6473.903373842168,\\\"ask\\\":6525.902597728451,\\\"price\\\":6499.902985785309,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.09774668010449683,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5981626283635323,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6446.471255505439,\\\"ask\\\":6498.2501410918285,\\\"price\\\":6472.360698298634,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.09816262836353229,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5983703745273481,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6432.857099008479,\\\"ask\\\":6484.526633940273,\\\"price\\\":6458.691866474376,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.09837037452734809,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5989510229540902,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6395.108844948191,\\\"ask\\\":6446.475181052193,\\\"price\\\":6420.792013000192,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.0989510229540902,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5990540029640516,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6401.764343324021,\\\"ask\\\":6453.184137246302,\\\"price\\\":6427.474240285162,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.09905400296405165,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5985602812223026,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6433.673101650526,\\\"ask\\\":6485.34919082041,\\\"price\\\":6459.511146235468,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.09856028122230265,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.59817809400997,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6458.6209564789115,\\\"ask\\\":6510.497430024927,\\\"price\\\":6484.559193251919,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.09817809400997002,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5977766458992106,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6432.319341302874,\\\"ask\\\":6483.984556895669,\\\"price\\\":6458.151949099271,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.09777664589921065,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5975133603627536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6449.639802982277,\\\"ask\\\":6501.444138749203,\\\"price\\\":6475.54197086574,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.0975133603627536,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.597639931877352,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6458.011380737779,\\\"ask\\\":6509.882958093102,\\\"price\\\":6483.947169415441,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.09763993187735198,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5980801946195933,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6429.02263524296,\\\"ask\\\":6480.661371269009,\\\"price\\\":6454.842003255984,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.09808019461959328,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.597855096349214,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6414.30153698996,\\\"ask\\\":6465.822031262973,\\\"price\\\":6440.061784126467,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.09785509634921397,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.597255165431329,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6453.626395400453,\\\"ask\\\":6505.462751990014,\\\"price\\\":6479.544573695233,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.09725516543132895,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5975457030747422,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6434.404416929982,\\\"ask\\\":6486.086380118176,\\\"price\\\":6460.245398524079,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.0975457030747422,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.597458864176273,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6440.1325687015,\\\"ask\\\":6491.86054114087,\\\"price\\\":6465.996554921185,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.09745886417627303,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.597103387032703,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6463.62268372678,\\\"ask\\\":6515.539331788843,\\\"price\\\":6489.581007757812,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.09710338703270305,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5976896936525645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6502.649795793218,\\\"ask\\\":6554.879914634931,\\\"price\\\":6528.7648552140745,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.09768969365256452,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.597179458503012,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6536.613260791326,\\\"ask\\\":6589.116178548686,\\\"price\\\":6562.864719670006,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.09717945850301202,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5968662296142694,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6557.682076561222,\\\"ask\\\":6610.354221754485,\\\"price\\\":6584.018149157853,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.09686622961426938,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5964879003218715,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6532.16945922109,\\\"ask\\\":6584.636683793147,\\\"price\\\":6558.4030715071185,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.09648790032187149,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0064,\\\"forecast\\\":0.5969542161426178,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":6563.738743581819,\\\"ask\\\":6616.459536702959,\\\"price\\\":6590.099140142389,\\\"maxShares\\\":29200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.09695421614261779,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[6440.061784126467,6479.544573695233,6460.245398524079,6465.996554921185,6489.581007757812,6528.7648552140745,6562.864719670006,6584.018149157853,6558.4030715071185,6590.099140142389]}],[\\\"HLS\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.59,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15372.194,\\\"ask\\\":15433.806,\\\"price\\\":15403,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.08999999999999997},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5899887788381453,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15370.277640298278,\\\"ask\\\":15431.88195949787,\\\"price\\\":15401.079799898074,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.08998877883814527},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5904597471065365,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15450.720036988256,\\\"ask\\\":15512.646770603438,\\\"price\\\":15481.683403795847,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.09045974710653648},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5906426429805701,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15481.959047001024,\\\"ask\\\":15544.010987069165,\\\"price\\\":15512.985017035095,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.09064264298057012},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5909809726340811,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15539.746482007376,\\\"ask\\\":15602.030035041473,\\\"price\\\":15570.888258524425,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.09098097263408111},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5911241560366967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15564.202516194055,\\\"ask\\\":15626.584089405253,\\\"price\\\":15595.393302799654,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.09112415603669666},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5907245717799569,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15496.250635356997,\\\"ask\\\":15558.359856340392,\\\"price\\\":15527.305245848695,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.09072457177995685},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5910980072617963,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15432.727293884891,\\\"ask\\\":15494.581912297257,\\\"price\\\":15463.654603091074,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.09109800726179629},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5909957844508886,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15450.044651436072,\\\"ask\\\":15511.968678095136,\\\"price\\\":15481.006664765604,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.09099578445088863},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5914296010605248,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15523.701755771834,\\\"ask\\\":15585.92100128595,\\\"price\\\":15554.811378528892,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.09142960106052478},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5918437385645258,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15594.017572787545,\\\"ask\\\":15656.518645223567,\\\"price\\\":15625.268109005556,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.09184373856452577,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5919088044757769,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15582.97794530871,\\\"ask\\\":15645.434770740809,\\\"price\\\":15614.20635802476,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.09190880447577687,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5921150260680454,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15617.942457604328,\\\"ask\\\":15680.53942136226,\\\"price\\\":15649.240939483294,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.09211502606804545,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5917568358999966,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15678.672977610198,\\\"ask\\\":15741.51335026595,\\\"price\\\":15710.093163938074,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.09175683589999661,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5917440726200205,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15676.492393902137,\\\"ask\\\":15739.324026743428,\\\"price\\\":15707.908210322783,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.09174407262002049,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5916520721479942,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15660.78783847641,\\\"ask\\\":15723.556527207778,\\\"price\\\":15692.172182842094,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.0916520721479942,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5913034973724774,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15601.451781744632,\\\"ask\\\":15663.982650609341,\\\"price\\\":15632.717216176987,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.09130349737247745,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5914063263974314,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15583.900676281646,\\\"ask\\\":15646.361200034276,\\\"price\\\":15615.130938157961,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.0914063263974314,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5919078525447192,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15498.861874378545,\\\"ask\\\":15560.981561249802,\\\"price\\\":15529.921717814173,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.09190785254471923,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.59195478207355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15506.775825853203,\\\"ask\\\":15568.927231968848,\\\"price\\\":15537.851528911026,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.09195478207355001,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5917775835381512,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15536.657664547567,\\\"ask\\\":15598.928837551766,\\\"price\\\":15567.793251049667,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.09177758353815124,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5916480343397146,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15514.757715252043,\\\"ask\\\":15576.941112908364,\\\"price\\\":15545.849414080203,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.09164803433971458,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5915737607889219,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15502.194401357056,\\\"ask\\\":15564.32744504987,\\\"price\\\":15533.260923203463,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.09157376078892188,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5917968635855941,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15539.962675759076,\\\"ask\\\":15602.247095301196,\\\"price\\\":15571.104885530136,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.09179686358559414,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5918803582850862,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15554.097194772568,\\\"ask\\\":15616.4382656935,\\\"price\\\":15585.267730233034,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.09188035828508623,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5922600811131453,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15490.079846170162,\\\"ask\\\":15552.164334531566,\\\"price\\\":15521.122090350864,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.09226008111314532,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5927744037559313,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15404.205957673856,\\\"ask\\\":15465.946262113432,\\\"price\\\":15435.076109893644,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.09277440375593127,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5931034620618414,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15458.84260001389,\\\"ask\\\":15520.8018889919,\\\"price\\\":15489.822244502895,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.09310346206184139,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5935505605463586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15384.961427538934,\\\"ask\\\":15446.624599593199,\\\"price\\\":15415.793013566066,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.09355056054635857,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5938720580956214,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15437.833664386788,\\\"ask\\\":15499.70874921399,\\\"price\\\":15468.77120680039,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.09387205809562138,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5938547524239913,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15440.679687852078,\\\"ask\\\":15502.566179586955,\\\"price\\\":15471.622933719516,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.09385475242399133,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.593715866281035,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15463.528785964678,\\\"ask\\\":15525.506857251108,\\\"price\\\":15494.517821607893,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.09371586628103501,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5939368659021353,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15499.99469230677,\\\"ask\\\":15562.118919530443,\\\"price\\\":15531.056805918606,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.09393686590213535,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5939859575103185,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15508.095022874206,\\\"ask\\\":15570.251716352659,\\\"price\\\":15539.173369613432,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.09398595751031846,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.594388177007004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15442.009858688994,\\\"ask\\\":15503.901681769912,\\\"price\\\":15472.955770229453,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.09438817700700397,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5942513579895653,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15464.39360083911,\\\"ask\\\":15526.375138317424,\\\"price\\\":15495.384369578267,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.0942513579895653,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5947450736497784,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15383.808795716086,\\\"ask\\\":15445.467348003524,\\\"price\\\":15414.638071859805,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.09474507364977836,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5948408706717582,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15399.363409930473,\\\"ask\\\":15461.084305361055,\\\"price\\\":15430.223857645764,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.09484087067175817,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5943838020180954,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15473.57789416272,\\\"ask\\\":15535.596242435919,\\\"price\\\":15504.587068299319,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.09438380201809538,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5940775358073794,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15523.78814175323,\\\"ask\\\":15586.007733503742,\\\"price\\\":15554.897937628486,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.09407753580737943,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5945428052017653,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15600.562511376125,\\\"ask\\\":15663.089816030939,\\\"price\\\":15631.826163703532,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.09454280520176528,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5950699854641833,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15687.552828842003,\\\"ask\\\":15750.428792083854,\\\"price\\\":15718.990810462928,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.09506998546418333,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5948794847409709,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15718.987462441006,\\\"ask\\\":15781.989416198283,\\\"price\\\":15750.488439319644,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.09487948474097085,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5948010313128098,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15731.985092613791,\\\"ask\\\":15795.039141081183,\\\"price\\\":15763.512116847487,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.09480103131280981,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5952821558276571,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15811.82645710584,\\\"ask\\\":15875.200511042136,\\\"price\\\":15843.513484073988,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.09528215582765709,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5953326365771656,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15803.45374363317,\\\"ask\\\":15866.794239599636,\\\"price\\\":15835.123991616403,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.09533263657716562,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5955411917232378,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15768.956669182851,\\\"ask\\\":15832.158900321861,\\\"price\\\":15800.557784752356,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.09554119172323783,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5956386183160214,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15785.03680898768,\\\"ask\\\":15848.303489584825,\\\"price\\\":15816.670149286252,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.09563861831602138,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5959528382966823,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15733.345019053162,\\\"ask\\\":15796.404518127525,\\\"price\\\":15764.874768590344,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.09595283829668233,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5958269469276974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15753.987371883164,\\\"ask\\\":15817.129605838609,\\\"price\\\":15785.558488860886,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.09582694692769744,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5962977694567515,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15676.962408387546,\\\"ask\\\":15739.79592505443,\\\"price\\\":15708.379166720988,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.0962977694567515,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5959461580870336,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15734.203591195072,\\\"ask\\\":15797.266531440344,\\\"price\\\":15765.735061317708,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.09594615808703355,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5962480272787327,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15684.85534526843,\\\"ask\\\":15747.720496952874,\\\"price\\\":15716.287921110652,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.09624802727873272,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.596305323921961,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15694.192571040363,\\\"ask\\\":15757.095146475396,\\\"price\\\":15725.64385875788,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.096305323921961,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5959246032855684,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15756.235900941383,\\\"ask\\\":15819.38714703734,\\\"price\\\":15787.811523989361,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.0959246032855684,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5963845113476437,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15831.778771806645,\\\"ask\\\":15895.232794940139,\\\"price\\\":15863.505783373392,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.0963845113476437,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5963994794280445,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15834.237375727862,\\\"ask\\\":15897.701252985287,\\\"price\\\":15865.969314356575,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.0963994794280445,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5962198572591056,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15804.788146920686,\\\"ask\\\":15868.13399119692,\\\"price\\\":15836.461069058803,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.09621985725910565,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5961247189450661,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15789.17644607283,\\\"ask\\\":15852.45971840178,\\\"price\\\":15820.818082237305,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.09612471894506613,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5965366723728978,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15721.79888685395,\\\"ask\\\":15784.812108845348,\\\"price\\\":15753.30549784965,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.09653667237289776,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5969863488221074,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15795.032431421558,\\\"ask\\\":15858.339174633667,\\\"price\\\":15826.685803027613,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.09698634882210744,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5972535192747344,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15751.641035455315,\\\"ask\\\":15814.773865256739,\\\"price\\\":15783.207450356027,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.09725351927473436,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5976860323583587,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15821.692904911508,\\\"ask\\\":15885.10650372879,\\\"price\\\":15853.399704320149,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.09768603235835871,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5980416232417501,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15764.30860658209,\\\"ask\\\":15827.49220821168,\\\"price\\\":15795.900407396884,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.09804162324175014,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5975472957368975,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15843.792514350567,\\\"ask\\\":15907.294688756781,\\\"price\\\":15875.543601553674,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.09754729573689747,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5977586747241923,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15878.125037782322,\\\"ask\\\":15941.76481749287,\\\"price\\\":15909.944927637596,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.09775867472419231,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.597945608821614,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15847.820841316585,\\\"ask\\\":15911.339161321863,\\\"price\\\":15879.580001319224,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.09794560882161396,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5974551548284314,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15927.177405723909,\\\"ask\\\":15991.01378811158,\\\"price\\\":15959.095596917745,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.09745515482843137,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5969334377640831,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15842.366775633978,\\\"ask\\\":15905.863235656558,\\\"price\\\":15874.115005645268,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.09693343776408314,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5964878459529794,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15915.192304848193,\\\"ask\\\":15978.98065075941,\\\"price\\\":15947.086477803801,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.09648784595297943,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5965797005129307,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15930.343259574815,\\\"ask\\\":15994.192330755473,\\\"price\\\":15962.267795165144,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.09657970051293074,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.596673649844144,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15914.861842480856,\\\"ask\\\":15978.648863893606,\\\"price\\\":15946.75535318723,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.09667364984414395,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5964884514461464,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15945.35005640814,\\\"ask\\\":16009.259275071097,\\\"price\\\":15977.304665739619,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.09648845144614637,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5967754216496938,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15898.066972818104,\\\"ask\\\":15961.786680123989,\\\"price\\\":15929.926826471046,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.09677542164969377,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.5971357599455406,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15957.26260599218,\\\"ask\\\":16021.219570344854,\\\"price\\\":15989.241088168517,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.09713575994554058,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40268436371959426,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15927.767511249374,\\\"ask\\\":15991.606258789452,\\\"price\\\":15959.686885019413,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.09731563628040574,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40318698353733146,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15845.925819086799,\\\"ask\\\":15909.436543812597,\\\"price\\\":15877.681181449698,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.09681301646266854,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.4030988229558203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15860.35555266847,\\\"ask\\\":15923.924111997801,\\\"price\\\":15892.139832333136,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.09690117704417972,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40267620560148176,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15791.483787608724,\\\"ask\\\":15854.776307799542,\\\"price\\\":15823.130047704133,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.09732379439851824,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.4030064240278277,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15738.084661703222,\\\"ask\\\":15801.16315734131,\\\"price\\\":15769.623909522266,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.09699357597217229,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.4033534530896023,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15794.393264613655,\\\"ask\\\":15857.69744603495,\\\"price\\\":15826.045355324302,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.0966465469103977,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40312574090944403,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15757.267037705431,\\\"ask\\\":15820.42241661407,\\\"price\\\":15788.84472715975,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.09687425909055597,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.4032357651301912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15775.163236790759,\\\"ask\\\":15838.390343952244,\\\"price\\\":15806.776790371501,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.09676423486980879,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.4028539902174725,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15713.168291436528,\\\"ask\\\":15776.146921863126,\\\"price\\\":15744.657606649827,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.09714600978252752,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40265890522601744,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15744.72288959993,\\\"ask\\\":15807.827991361855,\\\"price\\\":15776.275440480893,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.09734109477398256,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40213672301272346,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15660.71165985886,\\\"ask\\\":15723.480043265108,\\\"price\\\":15692.095851561984,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.09786327698727654,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.402392533025777,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15701.648025137709,\\\"ask\\\":15764.580482152289,\\\"price\\\":15733.114253644999,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.09760746697422301,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40246856517344043,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15689.426615872708,\\\"ask\\\":15752.310089283019,\\\"price\\\":15720.868352577863,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.09753143482655957,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40215729106169823,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15739.49982911195,\\\"ask\\\":15802.583996763702,\\\"price\\\":15771.041912937826,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.09784270893830177,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.4026742153523446,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15822.655026597575,\\\"ask\\\":15886.072481614,\\\"price\\\":15854.363754105787,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.0973257846476554,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40311900799243555,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15894.966804283275,\\\"ask\\\":15958.67408606397,\\\"price\\\":15926.820445173622,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.09688099200756445,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40339224150487213,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15850.264295599254,\\\"ask\\\":15913.792409008469,\\\"price\\\":15882.028352303862,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.09660775849512787,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.40306208669317967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15796.280865945411,\\\"ask\\\":15859.592612903109,\\\"price\\\":15827.93673942426,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.09693791330682033,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.005600000000000001,\\\"forecast\\\":0.4034720160433627,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15729.763119132047,\\\"ask\\\":15792.8082618941,\\\"price\\\":15761.285690513074,\\\"maxShares\\\":10700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.09652798395663731,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[15776.275440480893,15692.095851561984,15733.114253644999,15720.868352577863,15771.041912937826,15854.363754105787,15926.820445173622,15882.028352303862,15827.93673942426,15761.285690513074]}],[\\\"VITA\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.57,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8253.525,\\\"ask\\\":8336.474999999999,\\\"price\\\":8295,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.06999999999999995},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5700115328607952,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8252.165413214718,\\\"ask\\\":8335.10174902592,\\\"price\\\":8293.633581120319,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.0700115328607952},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.570495723699646,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8309.23633753948,\\\"ask\\\":8392.746250479575,\\\"price\\\":8350.991294009527,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.07049572369964596},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5703073783051783,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8331.436356400001,\\\"ask\\\":8415.169385107538,\\\"price\\\":8373.30287075377,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.0703073783051783},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5706541567544686,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8290.544741345086,\\\"ask\\\":8373.866799047046,\\\"price\\\":8332.205770196066,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.07065415675446862},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5708010911645536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8273.339267802017,\\\"ask\\\":8356.488406171886,\\\"price\\\":8314.913836986952,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.07080109116455358},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5712113505203184,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8225.675309553351,\\\"ask\\\":8308.345413166951,\\\"price\\\":8267.010361360151,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.07121135052031835},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5708240183513017,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8270.41633238182,\\\"ask\\\":8353.536094516308,\\\"price\\\":8311.976213449065,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.0708240183513017},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5707190004830384,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8282.67970733704,\\\"ask\\\":8365.92271947108,\\\"price\\\":8324.30121340406,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.07071900048303836},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5711645179229109,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8334.859153218522,\\\"ask\\\":8418.626581894085,\\\"price\\\":8376.742867556304,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.0711645179229109},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5715904741203234,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8285.267570616255,\\\"ask\\\":8368.536591426468,\\\"price\\\":8326.902081021362,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.07159047412032338,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5716574938843145,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8293.023863391372,\\\"ask\\\":8376.370836892793,\\\"price\\\":8334.697350142083,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.07165749388431453,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5718699564035983,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8268.50796230189,\\\"ask\\\":8351.608544837587,\\\"price\\\":8310.05825356974,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.07186995640359828,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5715006606996108,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8310.99476237334,\\\"ask\\\":8394.52234792483,\\\"price\\\":8352.758555149087,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.07150066069961081,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5714875182108425,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8312.522400779048,\\\"ask\\\":8396.065339480343,\\\"price\\\":8354.293870129695,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.07148751821084254,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5715822478653695,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8301.521874828059,\\\"ask\\\":8384.954255479595,\\\"price\\\":8343.238065153828,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.07158224786536949,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5712224962994561,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8343.242910182387,\\\"ask\\\":8427.094597721907,\\\"price\\\":8385.168753952148,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.0712224962994561,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5711165003697816,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8355.659630105367,\\\"ask\\\":8439.636108799892,\\\"price\\\":8397.64786945263,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.07111650036978157,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5716321223170394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8295.513967101968,\\\"ask\\\":8378.885966771333,\\\"price\\\":8337.19996693665,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.07163212231703942,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5715837891685623,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8289.920415754366,\\\"ask\\\":8373.236198827273,\\\"price\\\":8331.57830729082,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.07158378916856234,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.571401507000873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8311.03000887464,\\\"ask\\\":8394.557948662325,\\\"price\\\":8352.793978768483,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.071401507000873,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5712683238815884,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8295.556552581062,\\\"ask\\\":8378.928980245191,\\\"price\\\":8337.242766413126,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.07126832388158844,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5713446461499971,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8304.440382862485,\\\"ask\\\":8387.902095253063,\\\"price\\\":8346.171239057774,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.07134464614999714,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5715743345407787,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8331.17586549239,\\\"ask\\\":8414.906276200856,\\\"price\\\":8373.041070846624,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.07157433454077866,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5714883080762978,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8321.174498005232,\\\"ask\\\":8404.804392457545,\\\"price\\\":8362.98944523139,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.0714883080762978,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5718787196987889,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8366.618058277088,\\\"ask\\\":8450.704671928113,\\\"price\\\":8408.661365102602,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.0718787196987889,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5713492198531616,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8428.251362109515,\\\"ask\\\":8512.95740594981,\\\"price\\\":8470.604384029662,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.07134921985316156,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5716836285836443,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8467.753978171655,\\\"ask\\\":8552.857033228656,\\\"price\\\":8510.305505700157,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.0716836285836443,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5712287441860678,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8521.487993082634,\\\"ask\\\":8607.131088490498,\\\"price\\\":8564.309540786566,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.07122874418606784,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5715522113887566,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8560.186160730615,\\\"ask\\\":8646.218182446499,\\\"price\\\":8603.202171588557,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.07155221138875656,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5715347805264389,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8558.101318307377,\\\"ask\\\":8644.112386833078,\\\"price\\\":8601.106852570229,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.07153478052643891,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5716746630924799,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8574.836243109472,\\\"ask\\\":8661.01550183419,\\\"price\\\":8617.925872471831,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.07167466309247994,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5714513121661499,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8548.19854463944,\\\"ask\\\":8634.110087801644,\\\"price\\\":8591.154316220542,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.07145131216614986,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5715006551143296,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8554.10177167657,\\\"ask\\\":8640.07264375372,\\\"price\\\":8597.087207715145,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.07150065511432957,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5719050017757731,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8602.476468208997,\\\"ask\\\":8688.933518140744,\\\"price\\\":8645.704993174872,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.07190500177577308,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5720427327638141,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8586.03029052928,\\\"ask\\\":8672.32205224314,\\\"price\\\":8629.17617138621,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.07204273276381412,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5715440513780708,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8527.006165710223,\\\"ask\\\":8612.70472013947,\\\"price\\\":8569.855442924847,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.07154405137807085,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5714484613491273,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8515.628431955929,\\\"ask\\\":8601.212637302218,\\\"price\\\":8558.420534629075,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.0714484613491273,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5719034729599073,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8569.85926823237,\\\"ask\\\":8655.988507109078,\\\"price\\\":8612.923887670724,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.07190347295990729,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.572211788331373,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8606.606023777362,\\\"ask\\\":8693.104576780148,\\\"price\\\":8649.855300278756,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.07221178833137298,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5726837104634876,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8662.852350850355,\\\"ask\\\":8749.916193572468,\\\"price\\\":8706.384272211411,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.07268371046348765,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5721481463850435,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8726.68388210262,\\\"ask\\\":8814.389247751891,\\\"price\\\":8770.536564927255,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.07214814638504352,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5723391854007128,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8703.637768303322,\\\"ask\\\":8791.11151471843,\\\"price\\\":8747.374641510876,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.07233918540071282,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5722601435837924,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8694.138069547147,\\\"ask\\\":8781.516341602897,\\\"price\\\":8737.827205575022,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.0722601435837924,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5717755396478305,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8752.444257707612,\\\"ask\\\":8840.40852160417,\\\"price\\\":8796.426389655891,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.07177553964783046,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5717252898430591,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8758.571813381584,\\\"ask\\\":8846.597660752253,\\\"price\\\":8802.58473706692,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.07172528984305915,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5719326356755728,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8783.89138153181,\\\"ask\\\":8872.171696924088,\\\"price\\\":8828.03153922795,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.07193263567557284,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5718357060518666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8795.72772366347,\\\"ask\\\":8884.126997268128,\\\"price\\\":8839.9273604658,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.07183570605186662,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.571523828180301,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8833.91476172704,\\\"ask\\\":8922.697824658968,\\\"price\\\":8878.306293193004,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.07152382818030101,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5713998250711523,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8849.230397428866,\\\"ask\\\":8938.167386347748,\\\"price\\\":8893.698891888307,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.07139982507115228,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5709362602993733,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8792.14720835903,\\\"ask\\\":8880.510496885252,\\\"price\\\":8836.328852622142,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.07093626029937328,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5712785222838587,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8749.92947354915,\\\"ask\\\":8837.868463233059,\\\"price\\\":8793.898968391104,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.07127852228385867,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.571574864539931,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8786.307526258204,\\\"ask\\\":8874.612124512054,\\\"price\\\":8830.459825385129,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.071574864539931,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5716311688407506,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8779.401218430792,\\\"ask\\\":8867.636406555725,\\\"price\\\":8823.51881249326,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.0716311688407506,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5712569705047368,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8733.776323288339,\\\"ask\\\":8821.552969753548,\\\"price\\\":8777.664646520943,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.07125697050473678,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5708055180092377,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8678.791358463955,\\\"ask\\\":8766.015392217361,\\\"price\\\":8722.403375340658,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.07080551800923773,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5708200481444103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8677.01073256948,\\\"ask\\\":8764.216870585253,\\\"price\\\":8720.613801577367,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.07082004814441034,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.570994423520753,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8655.69839651567,\\\"ask\\\":8742.690340199244,\\\"price\\\":8699.194368357457,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.07099442352075302,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5709016639623543,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8667.007718023975,\\\"ask\\\":8754.113323230245,\\\"price\\\":8710.56052062711,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.07090166396235431,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5705001384376929,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8716.09013198638,\\\"ask\\\":8803.689027785238,\\\"price\\\":8759.88957988581,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.07050013843769287,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5700661866508961,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8662.767915902592,\\\"ask\\\":8749.830910032266,\\\"price\\\":8706.29941296743,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.07006618665089615,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5698111339125975,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8631.348351950259,\\\"ask\\\":8718.095571567848,\\\"price\\\":8674.721961759054,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.06981113391259752,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5702213968719838,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8682.072675133404,\\\"ask\\\":8769.329686943789,\\\"price\\\":8725.701181038597,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.07022139687198381,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5698836189149915,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8723.835056705106,\\\"ask\\\":8811.511790943347,\\\"price\\\":8767.673423824226,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.06988361891499151,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5694180077754261,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8781.959046921946,\\\"ask\\\":8870.219941865884,\\\"price\\\":8826.089494393915,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.06941800777542606,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5696167830752477,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8807.105786197722,\\\"ask\\\":8895.619412189659,\\\"price\\\":8851.362599193691,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.06961678307524766,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5697926932110317,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8829.359890829923,\\\"ask\\\":8918.097176164896,\\\"price\\\":8873.72853349741,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.06979269321103165,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5702545070626206,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8887.783208668088,\\\"ask\\\":8977.10766302656,\\\"price\\\":8932.445435847325,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.0702545070626206,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5697575165368907,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8825.351398741606,\\\"ask\\\":8914.048397723933,\\\"price\\\":8869.69989823277,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.06975751653689066,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.570181255392205,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8878.960593637063,\\\"ask\\\":8968.196378497736,\\\"price\\\":8923.5784860674,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.07018125539220499,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5700929691696958,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8890.130098745509,\\\"ask\\\":8979.47813993893,\\\"price\\\":8934.80411934222,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.07009296916969576,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5701830694181459,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8901.557820243674,\\\"ask\\\":8991.020712909438,\\\"price\\\":8946.289266576556,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.0701830694181459,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5703607357602369,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8879.080692911974,\\\"ask\\\":8968.317684800535,\\\"price\\\":8923.699188856255,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.07036073576023694,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5700842100386428,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8913.976493377542,\\\"ask\\\":9003.564196828573,\\\"price\\\":8958.770345103057,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.07008421003864285,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5704290433585092,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8870.33205408315,\\\"ask\\\":8959.481119953332,\\\"price\\\":8914.906587018242,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.07042904335850919,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5706013850573837,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8892.037987074456,\\\"ask\\\":8981.405203024953,\\\"price\\\":8936.721595049705,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.07060138505738367,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.57108323731225,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8952.725869485625,\\\"ask\\\":9042.703013902565,\\\"price\\\":8997.714441694096,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.07108323731224997,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5709977007906473,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8963.498944245497,\\\"ask\\\":9053.584360770577,\\\"price\\\":9008.541652508038,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.07099770079064727,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5705885284656125,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8912.136721766965,\\\"ask\\\":9001.705935051054,\\\"price\\\":8956.92132840901,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.07058852846561248,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5702720383930056,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8952.095095449857,\\\"ask\\\":9042.065900429252,\\\"price\\\":8997.080497939554,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.07027203839300555,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5699398005343936,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8909.969815473856,\\\"ask\\\":8999.517250805251,\\\"price\\\":8954.743533139554,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.06993980053439364,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5701575554671282,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8882.315062326916,\\\"ask\\\":8971.584560440753,\\\"price\\\":8926.949811383834,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.07015755546712821,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5700522628190076,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8869.00443659167,\\\"ask\\\":8958.14015957249,\\\"price\\\":8913.57229808208,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.07005226281900756,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5696870395993586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8915.243718879838,\\\"ask\\\":9004.844158265563,\\\"price\\\":8960.0439385727,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.06968703959935862,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5695021150367109,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8938.901597806685,\\\"ask\\\":9028.739804819817,\\\"price\\\":8983.820701313252,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.06950211503671089,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5690094320540061,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9002.267219111676,\\\"ask\\\":9092.742266539934,\\\"price\\\":9047.504742825806,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.06900943205400611,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5687710629678007,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8971.279055221088,\\\"ask\\\":9061.442663816273,\\\"price\\\":9016.360859518682,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.06877106296780067,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5688418516203112,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8980.513531586706,\\\"ask\\\":9070.769948989588,\\\"price\\\":9025.641740288147,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.0688418516203112,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5685515198081991,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":8942.798409079809,\\\"ask\\\":9032.675780025334,\\\"price\\\":8987.737094552573,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.06855151980819907,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.568072934621043,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9005.231610594285,\\\"ask\\\":9095.736450901764,\\\"price\\\":9050.484030748024,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.06807293462104302,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5684840349694693,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9059.61524886968,\\\"ask\\\":9150.666658406059,\\\"price\\\":9105.14095363787,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.06848403496946931,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5687392630304325,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9093.378855731815,\\\"ask\\\":9184.769598000476,\\\"price\\\":9139.074226866145,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.06873926303043254,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5684288398173791,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9134.444118253741,\\\"ask\\\":9226.247576728652,\\\"price\\\":9180.345847491197,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.06842883981737913,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.568811222500966,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9185.487702571914,\\\"ask\\\":9277.804161894244,\\\"price\\\":9231.64593223308,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.06881122250096605,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[8983.820701313252,9047.504742825806,9016.360859518682,9025.641740288147,8987.737094552573,9050.484030748024,9105.14095363787,9139.074226866145,9180.345847491197,9231.64593223308]}],[\\\"ICRS\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.575,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17139.87,\\\"ask\\\":17486.13,\\\"price\\\":17313,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.07499999999999996},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5750115217286902,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17137.237325347167,\\\"ask\\\":17483.444140000647,\\\"price\\\":17310.340732673907,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.07501152172869019},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5754952398178929,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17027.43448594663,\\\"ask\\\":17371.423061420297,\\\"price\\\":17199.428773683463,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.07549523981789286},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5756833139956415,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17069.853329145724,\\\"ask\\\":17414.69885094665,\\\"price\\\":17242.276090046187,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.07568331399564154},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5760313856905004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17148.358516955155,\\\"ask\\\":17494.790002146172,\\\"price\\\":17321.574259550664,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.07603138569050039},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5761788191556202,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17181.611125654974,\\\"ask\\\":17528.714380718713,\\\"price\\\":17355.162753186843,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.07617881915562019},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765904142122857,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17089.27755783709,\\\"ask\\\":17434.515488298446,\\\"price\\\":17261.896523067768,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.07659041421228574},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5769788561705629,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17175.94887967783,\\\"ask\\\":17522.937745933952,\\\"price\\\":17349.44331280589,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.07697885617056288},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5770852879833468,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17199.696535417173,\\\"ask\\\":17547.16515229429,\\\"price\\\":17373.43084385573,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.0770852879833468},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5775380995016498,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17300.730350121696,\\\"ask\\\":17650.240054164562,\\\"price\\\":17475.48520214313,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.0775380995016498},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5771053526144295,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17397.287233173658,\\\"ask\\\":17748.74758131858,\\\"price\\\":17573.01740724612,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.07710535261442952,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5770380472695242,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17382.114366920134,\\\"ask\\\":17733.26819251448,\\\"price\\\":17557.691279717306,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.07703804726952423,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5768250650500447,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17430.169599734672,\\\"ask\\\":17782.294238113154,\\\"price\\\":17606.231918923913,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.07682506505004472,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5771931492551436,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17513.681017755345,\\\"ask\\\":17867.492755487776,\\\"price\\\":17690.58688662156,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.07719314925514364,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5772063793722964,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17516.68268375646,\\\"ask\\\":17870.555061206083,\\\"price\\\":17693.61887248127,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.07720637937229635,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5773017745213188,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17495.066018869482,\\\"ask\\\":17848.501696018364,\\\"price\\\":17671.783857443923,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.07730177452131881,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5776640210190915,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17577.050247988187,\\\"ask\\\":17932.14217218997,\\\"price\\\":17754.59621008908,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.07766402101909153,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.577771793837451,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17601.441571265248,\\\"ask\\\":17957.026249472627,\\\"price\\\":17779.233910368937,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.07777179383745103,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5782975695310545,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17720.435999629524,\\\"ask\\\":18078.424605682645,\\\"price\\\":17899.430302656085,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.07829756953105449,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5782483085655094,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17731.58482318114,\\\"ask\\\":18089.798657992884,\\\"price\\\":17910.69174058701,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.07824830856550935,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5780625187811141,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17773.686018487195,\\\"ask\\\":18132.750382497037,\\\"price\\\":17953.218200492116,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.07806251878111414,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5779267494321764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17742.827008185825,\\\"ask\\\":18101.267957846143,\\\"price\\\":17922.047483015984,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.07792674943217637,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.57784893526806,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17760.544201097906,\\\"ask\\\":18119.343073847358,\\\"price\\\":17939.943637472632,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.07784893526806003,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5776152411912778,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17707.388537475264,\\\"ask\\\":18065.113558434365,\\\"price\\\":17886.251047954815,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.07761524119127783,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5775282572387215,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17727.233333687975,\\\"ask\\\":18085.359259621066,\\\"price\\\":17906.29629665452,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.07752825723872148,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5779230463010069,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17637.420137760197,\\\"ask\\\":17993.731655694744,\\\"price\\\":17815.57589672747,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.07792304630100688,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5784582865922595,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17517.0981386253,\\\"ask\\\":17870.978909102578,\\\"price\\\":17694.03852386394,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.07845828659225951,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5781154046854211,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17593.65214296218,\\\"ask\\\":17949.079458981614,\\\"price\\\":17771.365800971897,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.07811540468542111,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5776531991759265,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17697.75303042932,\\\"ask\\\":18055.28339468042,\\\"price\\\":17876.51821255487,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.0776531991759265,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5773243841245798,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17623.129572327005,\\\"ask\\\":17979.152391969972,\\\"price\\\":17801.14098214849,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.07732438412457976,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5773419483763006,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17619.127383470674,\\\"ask\\\":17975.069350813515,\\\"price\\\":17797.098367142095,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.0773419483763006,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5774829677628048,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17651.252751224125,\\\"ask\\\":18007.84371589532,\\\"price\\\":17829.548233559723,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.07748296776280483,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5777081041619055,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17702.540661312854,\\\"ask\\\":18060.16774537978,\\\"price\\\":17881.354203346316,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.07770810416190554,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5776580663200335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17691.14896769058,\\\"ask\\\":18048.545916532818,\\\"price\\\":17869.8474421117,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.07765806632003347,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5780675605475984,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17784.435135175183,\\\"ask\\\":18143.716653057512,\\\"price\\\":17964.075894116348,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.07806756054759845,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5782069919326281,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17816.19875639603,\\\"ask\\\":18176.12196359595,\\\"price\\\":17996.16035999599,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.07820699193262814,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5777022191469992,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17931.190166413864,\\\"ask\\\":18293.43643240202,\\\"price\\\":18112.313299407942,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.07770221914699915,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5777990223788387,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17953.529260173258,\\\"ask\\\":18316.22682098484,\\\"price\\\":18134.87804057905,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.07779902237883873,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5773370445760551,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18060.13898027282,\\\"ask\\\":18424.990272803585,\\\"price\\\":18242.564626538202,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.07733704457605506,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5770278369099724,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18132.34672306709,\\\"ask\\\":18498.656757876528,\\\"price\\\":18315.50174047181,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.07702783690997239,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765584539514212,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18242.839434426714,\\\"ask\\\":18611.381645223213,\\\"price\\\":18427.110539824964,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.07655845395142125,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5760324550028644,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18368.177837515268,\\\"ask\\\":18739.252137263054,\\\"price\\\":18553.71498738916,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.07603245500286437,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5758447338215286,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18413.5281559091,\\\"ask\\\":18785.518623705248,\\\"price\\\":18599.523389807175,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.07584473382152856,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.575922006524384,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18394.78704045593,\\\"ask\\\":18766.39889985908,\\\"price\\\":18580.592970157504,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.07592200652438397,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5763967654795743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18509.814162051705,\\\"ask\\\":18883.74980168911,\\\"price\\\":18696.78198187041,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.0763967654795743,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5763468942294345,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18497.738973245436,\\\"ask\\\":18871.43066967464,\\\"price\\\":18684.584821460037,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.07634689422943453,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765526877726759,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18547.599747330343,\\\"ask\\\":18922.298732124895,\\\"price\\\":18734.94923972762,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.07655268777267588,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5764565025471413,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18570.904024642205,\\\"ask\\\":18946.073802917806,\\\"price\\\":18758.488913780006,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.07645650254714131,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5767660134810125,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18496.02846986403,\\\"ask\\\":18869.685610669367,\\\"price\\\":18682.8570402667,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.07676601348101253,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.576641914509522,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18466.176281636486,\\\"ask\\\":18839.23034793217,\\\"price\\\":18652.70331478433,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.07664191450952196,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5771058920867496,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18577.96748344352,\\\"ask\\\":18953.279957856525,\\\"price\\\":18765.623720650023,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.07710589208674956,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5767589992657114,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18494.761133185595,\\\"ask\\\":18868.392671229747,\\\"price\\\":18681.57690220767,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.07675899926571139,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5764614344556115,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18566.458134671866,\\\"ask\\\":18941.538096988468,\\\"price\\\":18753.998115830167,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.07646143445561149,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765175186966839,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18552.84967308527,\\\"ask\\\":18927.654716985984,\\\"price\\\":18740.252195035628,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.07651751869668388,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5761448026736334,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18643.220407319557,\\\"ask\\\":19019.85112261894,\\\"price\\\":18831.53576496925,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.07614480267363344,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765946263806002,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18753.35481201902,\\\"ask\\\":19132.210464787084,\\\"price\\\":18942.782638403052,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.07659462638060022,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765799702872271,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18756.94319585442,\\\"ask\\\":19135.871341225215,\\\"price\\\":18946.407268539817,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.07657997028722707,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5764041530283563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18713.978431334086,\\\"ask\\\":19092.03860166407,\\\"price\\\":18903.008516499078,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.07640415302835635,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5764972356854892,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18691.207061593646,\\\"ask\\\":19068.8072042521,\\\"price\\\":18880.007132922874,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.07649723568548916,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5760932929116742,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18593.026797289833,\\\"ask\\\":18968.643500265385,\\\"price\\\":18780.83514877761,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.07609329291167422,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765300251591501,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18699.740202241104,\\\"ask\\\":19077.512731579307,\\\"price\\\":18888.626466910206,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.07653002515915008,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5767897842382749,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18636.484036815065,\\\"ask\\\":19012.978663821432,\\\"price\\\":18824.73135031825,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.07678978423827487,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5763690009970064,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18738.605956242864,\\\"ask\\\":19117.163652328578,\\\"price\\\":18927.88480428572,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.07636900099700639,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5760264728061404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18822.651848080503,\\\"ask\\\":19202.907440971016,\\\"price\\\":19012.77964452576,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.07602647280614039,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5764987861206292,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18706.438382054825,\\\"ask\\\":19084.346228156945,\\\"price\\\":18895.392305105885,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.07649878612062921,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5767030361775949,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18656.625606765014,\\\"ask\\\":19033.527134174412,\\\"price\\\":18845.076370469713,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.07670303617759489,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765223159191609,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18700.582539491304,\\\"ask\\\":19078.372085743656,\\\"price\\\":18889.47731261748,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.07652231591916092,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5760501849662095,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18815.962265641287,\\\"ask\\\":19196.082715452223,\\\"price\\\":19006.022490546755,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.07605018496620952,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765518242793003,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18940.07539423224,\\\"ask\\\":19322.703179974305,\\\"price\\\":19131.389287103273,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.0765518242793003,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5769854152143974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19047.352328234912,\\\"ask\\\":19432.147324764912,\\\"price\\\":19239.749826499912,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.07698541521439739,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.577075717268644,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19069.694417816565,\\\"ask\\\":19454.940769691646,\\\"price\\\":19262.317593754105,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.07707571726864404,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.577168099080832,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19092.55107086653,\\\"ask\\\":19478.25917330828,\\\"price\\\":19285.405122087406,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.077168099080832,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5769859495838787,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19047.590664958912,\\\"ask\\\":19432.390476372228,\\\"price\\\":19239.99057066557,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.07698594958387872,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.576703829500169,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19117.3918157132,\\\"ask\\\":19503.601751384173,\\\"price\\\":19310.496783548686,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.07670382950016896,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.576351926103482,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19205.098976614878,\\\"ask\\\":19593.080774122252,\\\"price\\\":19399.089875368565,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.07635192610348196,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.576526137253905,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19248.91898951368,\\\"ask\\\":19637.786039806888,\\\"price\\\":19443.352514660284,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.076526137253905,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5770131359942539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19371.415689822352,\\\"ask\\\":19762.757420929876,\\\"price\\\":19567.086555376114,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.07701313599425386,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5770995465038393,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19393.150863692877,\\\"ask\\\":19784.93168922203,\\\"price\\\":19589.041276457454,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.07709954650383932,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5775138619855104,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19497.365259309456,\\\"ask\\\":19891.251426164195,\\\"price\\\":19694.308342736826,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.07751386198551036,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5771898040134062,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19578.87683008486,\\\"ask\\\":19974.409695339098,\\\"price\\\":19776.64326271198,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.07718980401340625,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.576849518174005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19665.188935962233,\\\"ask\\\":20062.46548012309,\\\"price\\\":19863.82720804266,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.07684951817400498,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.577072619490126,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19722.278812875284,\\\"ask\\\":20120.708687882867,\\\"price\\\":19921.493750379075,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.077072619490126,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5769647642895479,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19694.718081411225,\\\"ask\\\":20092.591173964986,\\\"price\\\":19893.654627688105,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.0769647642895479,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.577338914097804,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19599.43907368557,\\\"ask\\\":19995.38733780043,\\\"price\\\":19797.413205743,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.07733891409780402,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5771475510736142,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19647.934814507862,\\\"ask\\\":20044.862790558524,\\\"price\\\":19846.398802533193,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.07714755107361415,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5776574793050293,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19777.80331339725,\\\"ask\\\":20177.35489548608,\\\"price\\\":19977.579104441666,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.07765747930502931,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5774073629223586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19714.308187174272,\\\"ask\\\":20112.57703944042,\\\"price\\\":19913.442613307347,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.07740736292235861,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.577333068270544,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19733.229742013988,\\\"ask\\\":20131.880847913264,\\\"price\\\":19932.555294963626,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.07733306827054398,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5770289624766725,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19810.8290100962,\\\"ask\\\":20211.04777797693,\\\"price\\\":20010.938394036566,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.07702896247667246,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5765275287007628,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19939.791136483906,\\\"ask\\\":20342.615199847216,\\\"price\\\":20141.20316816556,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.07652752870076285,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5760965970119539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19828.137553168373,\\\"ask\\\":20228.70598858592,\\\"price\\\":20028.421770877147,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.07609659701195393,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5758321603370838,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19759.473124332453,\\\"ask\\\":20158.654399571493,\\\"price\\\":19959.063761951973,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.07583216033708384,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.576151475923385,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19842.676711275657,\\\"ask\\\":20243.538867059004,\\\"price\\\":20043.10778916733,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.076151475923385,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5757546913891377,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19739.823071101015,\\\"ask\\\":20138.607375567703,\\\"price\\\":19939.21522333436,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.07575469138913771,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[19846.398802533193,19977.579104441666,19913.442613307347,19932.555294963626,20010.938394036566,20141.20316816556,20028.421770877147,19959.063761951973,20043.10778916733,19939.21522333436]}],[\\\"UNV\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26274.78,\\\"ask\\\":26645.219999999998,\\\"price\\\":26460,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.09999999999999998},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5999877546844838,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26277.997429712173,\\\"ask\\\":26648.48279125897,\\\"price\\\":26463.240110485574,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.09998775468448384},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5994738000725739,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26143.61466084872,\\\"ask\\\":26512.205401283645,\\\"price\\\":26327.910031066185,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.09947380007257389},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.599276270597067,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26091.803026397512,\\\"ask\\\":26459.66329061661,\\\"price\\\":26275.73315850706,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.099276270597067},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5996402087782247,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25996.502108695848,\\\"ask\\\":26363.018754739896,\\\"price\\\":26179.760431717874,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.09964020877822466},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5997942196555311,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26036.68412101552,\\\"ask\\\":26403.767280828426,\\\"price\\\":26220.225700921976,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.09979421965553115},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.60022400826272,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25925.031530003052,\\\"ask\\\":26290.540534454252,\\\"price\\\":26107.786032228654,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.10022400826272004},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6006291780775183,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25820.64788676633,\\\"ask\\\":26184.685218503215,\\\"price\\\":26002.666552634775,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.10062917807751826},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.600518276549526,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25792.222762271667,\\\"ask\\\":26155.859336966332,\\\"price\\\":25974.041049619,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.10051827654952605},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6000476194665147,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25912.989778443985,\\\"ask\\\":26278.32900996283,\\\"price\\\":26095.65939420341,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.10004761946651475},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6004927005728206,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25798.221421214654,\\\"ask\\\":26161.942569147184,\\\"price\\\":25980.08199518092,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.10049270057282056,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6004227786854335,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25816.171583989842,\\\"ask\\\":26180.145805717795,\\\"price\\\":25998.15869485382,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.10042277868543348,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6006440799600905,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25873.06257777717,\\\"ask\\\":26237.838888037873,\\\"price\\\":26055.450732907524,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.1006440799600905,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6002597129743024,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25971.873666120067,\\\"ask\\\":26338.04308336647,\\\"price\\\":26154.95837474327,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.10025971297430236,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6002734099594984,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25975.421814808768,\\\"ask\\\":26341.64125630657,\\\"price\\\":26158.53153555767,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.1002734099594984,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6001746519138154,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25949.86411345383,\\\"ask\\\":26315.723224821755,\\\"price\\\":26132.793669137794,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.10017465191381536,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5998004670872882,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26046.795275341494,\\\"ask\\\":26414.020989193235,\\\"price\\\":26230.408132267366,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.09980046708728818,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5996900756111607,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26075.606204415788,\\\"ask\\\":26443.23811464924,\\\"price\\\":26259.422159532514,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.09969007561116072,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5991528658281857,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26216.122405894614,\\\"ask\\\":26585.735410610145,\\\"price\\\":26400.92890825238,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.09915286582818572,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5991031409750799,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26202.981692263216,\\\"ask\\\":26572.409430119897,\\\"price\\\":26387.69556119156,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.09910314097507988,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5992907042859154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26252.573642140953,\\\"ask\\\":26622.700561566908,\\\"price\\\":26437.637101853932,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.09929070428591535,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5991530526537786,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26216.22878280716,\\\"ask\\\":26585.843287297896,\\\"price\\\":26401.03603505253,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.0991530526537786,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5992319735092182,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26237.095585659576,\\\"ask\\\":26607.004284752456,\\\"price\\\":26422.049935206018,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.0992319735092182,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5994694169927198,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26299.87602983005,\\\"ask\\\":26670.66985099583,\\\"price\\\":26485.272940412942,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.09946941699271983,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.599558274739827,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26276.402865602176,\\\"ask\\\":26646.865745882566,\\\"price\\\":26461.634305742373,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.09955827473982704,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5991541680396539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26383.058695890388,\\\"ask\\\":26755.02528374785,\\\"price\\\":26569.04198981912,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.09915416803965393,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5996970525489315,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26239.39392840561,\\\"ask\\\":26609.335031122304,\\\"price\\\":26424.364479763957,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.09969705254893146,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5993497550409385,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26330.799600786067,\\\"ask\\\":26702.0294038183,\\\"price\\\":26516.414502302185,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.09934975504093846,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.599818329735054,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26207.195585356174,\\\"ask\\\":26576.682733588787,\\\"price\\\":26391.93915947248,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.099818329735054,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5994814179260309,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26119.037306888036,\\\"ask\\\":26487.281538807907,\\\"price\\\":26303.159422847973,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.09948141792603094,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5994994302084768,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26123.76646623254,\\\"ask\\\":26492.07737310792,\\\"price\\\":26307.921919670232,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.09949943020847685,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5996440400682431,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26085.85397088749,\\\"ask\\\":26453.63036121218,\\\"price\\\":26269.742166049837,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.09964404006824312,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5994132567596556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26146.27082755659,\\\"ask\\\":26514.899016464737,\\\"price\\\":26330.584922010665,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.09941325675965562,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5993622309203629,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26159.6909231941,\\\"ask\\\":26528.508317881628,\\\"price\\\":26344.099620537865,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.09936223092036289,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.598944596635204,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26269.644008158957,\\\"ask\\\":26640.011597397854,\\\"price\\\":26454.827802778407,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.09894459663520405,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5990854592071719,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26307.042812596057,\\\"ask\\\":26677.937676016343,\\\"price\\\":26492.490244306202,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.09908545920717193,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5985756896745091,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26442.385869262693,\\\"ask\\\":26815.1888925957,\\\"price\\\":26628.787380929196,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.09857568967450914,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5984777993298743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26468.64441509944,\\\"ask\\\":26841.817649551995,\\\"price\\\":26655.23103232572,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.09847779932987433,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5989439205804362,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26593.927450660743,\\\"ask\\\":26968.867011898656,\\\"price\\\":26781.3972312797,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.09894392058043622,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5986285905048777,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26509.44298098165,\\\"ask\\\":26883.191421801126,\\\"price\\\":26696.31720139139,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.09862859050487771,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5991076572680141,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26638.206790506232,\\\"ask\\\":27013.770632467043,\\\"price\\\":26825.98871148664,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.09910765726801407,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.598564891398249,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26784.091678477413,\\\"ask\\\":27161.71230637135,\\\"price\\\":26972.901992424384,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.09856489139824898,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5987588683415744,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26836.803107058447,\\\"ask\\\":27215.166897087463,\\\"price\\\":27025.985002072957,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.09875886834157444,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5988390712976137,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26858.597513737837,\\\"ask\\\":27237.26857636858,\\\"price\\\":27047.93304505321,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.09883907129761371,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5993317317970778,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26992.4734181985,\\\"ask\\\":27373.0319558166,\\\"price\\\":27182.752687007553,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.09933173179707777,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5992800453250645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27006.518735809066,\\\"ask\\\":27387.275294017854,\\\"price\\\":27196.897014913462,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.09928004532506451,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5994933576432355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27064.5447278239,\\\"ask\\\":27446.119376554547,\\\"price\\\":27255.332052189224,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.09949335764323552,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5993937126205399,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27091.65052903047,\\\"ask\\\":27473.60733407219,\\\"price\\\":27282.62893155133,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.09939371262053986,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5990729866856528,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27179.070494684922,\\\"ask\\\":27562.259806795282,\\\"price\\\":27370.665150740104,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.09907298668565279,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.59920065056831,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27144.093045983856,\\\"ask\\\":27526.789221858755,\\\"price\\\":27335.441133921307,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.09920065056830996,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5996793454313455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27275.077448086355,\\\"ask\\\":27659.620332550814,\\\"price\\\":27467.348890318586,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.09967934543134549,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6000368046668573,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27372.88836659638,\\\"ask\\\":27758.81025696128,\\\"price\\\":27565.84931177883,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.10003680466685727,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6003459236501695,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27457.472030082845,\\\"ask\\\":27844.586439369006,\\\"price\\\":27651.029234725927,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.10034592365016948,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6004045930627158,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27473.525634408863,\\\"ask\\\":27860.866378499217,\\\"price\\\":27667.19600645404,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.10040459306271576,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.600794431236764,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27580.19634280264,\\\"ask\\\":27969.041004231876,\\\"price\\\":27774.61867351726,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.10079443123676401,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6003198044861578,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27710.06759472246,\\\"ask\\\":28100.743270780982,\\\"price\\\":27905.405432751722,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.10031980448615785,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6003045034727057,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27705.841834307743,\\\"ask\\\":28096.45793267663,\\\"price\\\":27901.149883492188,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.1003045034727057,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6004880644420523,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27756.544554600376,\\\"ask\\\":28147.875494947206,\\\"price\\\":27952.21002477379,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.10048806444205227,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6005856487274707,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27783.499025074874,\\\"ask\\\":28175.20998816757,\\\"price\\\":27979.354506621225,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.10058564872747067,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6001622751780323,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27900.442135219047,\\\"ask\\\":28293.801843067045,\\\"price\\\":28097.12198914305,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.10016227517803233,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6006205084943543,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27773.381436383585,\\\"ask\\\":28164.949754721314,\\\"price\\\":27969.16559555245,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.10062050849435433,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6008927403768834,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27848.523174641115,\\\"ask\\\":28241.150893115406,\\\"price\\\":28044.837033878262,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.10089274037688345,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6013334256163414,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27727.413747725706,\\\"ask\\\":28118.333981832613,\\\"price\\\":27922.87386477916,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.1013334256163414,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6016957065967609,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27628.637555758727,\\\"ask\\\":28018.165174873146,\\\"price\\\":27823.401365315938,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.10169570659676086,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6011921114184599,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27492.49524935894,\\\"ask\\\":27880.10344018575,\\\"price\\\":27686.299344772346,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.10119211141845985,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6009767500019845,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27551.005963646356,\\\"ask\\\":27939.43907894449,\\\"price\\\":27745.222521295425,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.10097675000198447,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6007871102969824,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27602.74821761425,\\\"ask\\\":27991.910830954228,\\\"price\\\":27797.32952428424,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.1007871102969824,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6012827806694703,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27738.498359178975,\\\"ask\\\":28129.574871795798,\\\"price\\\":27934.03661548739,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.10128278066947027,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6018153062871159,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27884.34211340496,\\\"ask\\\":28277.474832022956,\\\"price\\\":28080.90847271396,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.10181530628711588,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6022749817479852,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27759.01578635068,\\\"ask\\\":28150.381567829943,\\\"price\\\":27954.698677090313,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.10227498174798522,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6021793565861849,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27733.085878771577,\\\"ask\\\":28124.08608250048,\\\"price\\\":27928.585980636028,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.10217935658618493,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6020817350438911,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27706.61514541988,\\\"ask\\\":28097.24214646306,\\\"price\\\":27901.928645941472,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.10208173504389106,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6018896684583814,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27758.745087810858,\\\"ask\\\":28150.107052795098,\\\"price\\\":27954.42607030298,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.10188966845838143,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6015920456016661,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27839.829236349848,\\\"ask\\\":28232.334381676028,\\\"price\\\":28036.08180901294,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.10159204560166613,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.6012205277252074,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27738.39109623345,\\\"ask\\\":28129.46609658316,\\\"price\\\":27933.928596408306,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.1012205277252074,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.39896356564452584,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27788.83989355394,\\\"ask\\\":28180.626155900114,\\\"price\\\":27984.73302472703,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.10103643435547416,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.3994760842733196,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27648.589327699065,\\\"ask\\\":28038.3982406777,\\\"price\\\":27843.493784188384,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.1005239157266804,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.39956598946144345,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27673.317290262985,\\\"ask\\\":28063.47483514081,\\\"price\\\":27868.396062701897,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.10043401053855655,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.39913578615659245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27555.28580911801,\\\"ask\\\":27943.779264634275,\\\"price\\\":27749.532536876144,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.10086421384340755,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.3987996663993299,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27463.765597198464,\\\"ask\\\":27850.968737541643,\\\"price\\\":27657.367167370056,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.1012003336006701,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.39844405188241494,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27367.59679648768,\\\"ask\\\":27753.44408264158,\\\"price\\\":27560.520439564632,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.10155594811758506,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.3986790584217298,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27430.927052683615,\\\"ask\\\":27817.667212540182,\\\"price\\\":27624.2971326119,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.10132094157827021,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.3985660388162687,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27461.5251946337,\\\"ask\\\":27848.696748233768,\\\"price\\\":27655.110971433736,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.10143396118373132,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.39895909132077234,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27355.52364490458,\\\"ask\\\":27741.200715426898,\\\"price\\\":27548.36218016574,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.10104090867922766,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.39915837457101544,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27301.676476500794,\\\"ask\\\":27686.5943724434,\\\"price\\\":27494.135424472097,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.10084162542898456,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.39968967522210136,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27445.519839060617,\\\"ask\\\":27832.465738100746,\\\"price\\\":27638.992788580683,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.10031032477789864,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.39994719944464135,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27375.240060493135,\\\"ask\\\":27761.195106663225,\\\"price\\\":27568.21758357818,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.10005280055535865,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.40002374467378315,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27354.312688933613,\\\"ask\\\":27739.97268656208,\\\"price\\\":27547.142687747848,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.09997625532621685,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.40033712369340063,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27440.055725265564,\\\"ask\\\":27826.9245874546,\\\"price\\\":27633.490156360083,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.09966287630659937,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.40085426181248485,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27298.40772404816,\\\"ask\\\":27683.279534860518,\\\"price\\\":27490.84362945434,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.09914573818751515,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.40040924297811675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27420.937505030615,\\\"ask\\\":27807.53682534323,\\\"price\\\":27614.237165186925,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.09959075702188325,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4006851032018099,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27496.89180219849,\\\"ask\\\":27884.561978664526,\\\"price\\\":27690.72689043151,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.09931489679819011,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.40035175763518227,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27404.908574388555,\\\"ask\\\":27791.281907763616,\\\"price\\\":27598.095241076087,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.09964824236481773,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.39993789172762584,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27518.728518318105,\\\"ask\\\":27906.706563893582,\\\"price\\\":27712.717541105845,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.10006210827237416,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[27494.135424472097,27638.992788580683,27568.21758357818,27547.142687747848,27633.490156360083,27490.84362945434,27614.237165186925,27690.72689043151,27598.095241076087,27712.717541105845]}],[\\\"AERO\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.56,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13836.416,\\\"ask\\\":14059.584,\\\"price\\\":13948,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.06000000000000005},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5599913169580886,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13834.413920068526,\\\"ask\\\":14057.549628456729,\\\"price\\\":13945.981774262627,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.05999131695808857},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5603557493861048,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13750.880717244394,\\\"ask\\\":13972.669115909628,\\\"price\\\":13861.774916577011,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.06035574938610477},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5604973915376952,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13783.151119830156,\\\"ask\\\":14005.460008859674,\\\"price\\\":13894.305564344915,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.06049739153769518},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.560235290051874,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13842.865833076188,\\\"ask\\\":14066.137862641934,\\\"price\\\":13954.501847859061,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.060235290051874},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5601252581957745,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13868.15260798901,\\\"ask\\\":14091.832488763026,\\\"price\\\":13979.992548376018,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.06012525819577452},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5604312833560386,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13938.738643738077,\\\"ask\\\":14163.557008959659,\\\"price\\\":14051.147826348868,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.060431283356038645},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5601425627372537,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14005.333311645294,\\\"ask\\\":14231.225784413766,\\\"price\\\":14118.27954802953,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.06014256273725371},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5600642294771682,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13987.115658142844,\\\"ask\\\":14212.71429779031,\\\"price\\\":14099.914977966577,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.06006422947716816},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5603966027874329,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13910.142058340958,\\\"ask\\\":14134.499188314201,\\\"price\\\":14022.32062332758,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.06039660278743286},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607141406941346,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13837.391339305339,\\\"ask\\\":14060.575070584457,\\\"price\\\":13948.983204944898,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.06071414069413461,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607640658173206,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13826.022227349167,\\\"ask\\\":14049.0225858548,\\\"price\\\":13937.522406601984,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.060764065817320634,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5609223178051408,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13862.030277035978,\\\"ask\\\":14085.61141053656,\\\"price\\\":13973.820843786269,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.06092231780514079,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5606473480487779,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13924.595839629339,\\\"ask\\\":14149.18609510723,\\\"price\\\":14036.890967368285,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.060647348048777916,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.56063755628311,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13922.348018846807,\\\"ask\\\":14146.90201915079,\\\"price\\\":14034.625018998799,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.06063755628310996,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607081358616907,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13906.161828279814,\\\"ask\\\":14130.454760994004,\\\"price\\\":14018.308294636909,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.06070813586169066,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5604401413531191,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13967.55022297169,\\\"ask\\\":14192.833291084136,\\\"price\\\":14080.191757027913,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.06044014135311915,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5605191508152523,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13949.315191323567,\\\"ask\\\":14174.304146022336,\\\"price\\\":14061.809668672951,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.060519150815252276,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5609045719095677,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14038.152530472678,\\\"ask\\\":14264.574345480301,\\\"price\\\":14151.36343797649,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.06090457190956766,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5609406687175923,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14046.472636517663,\\\"ask\\\":14273.028646784076,\\\"price\\\":14159.75064165087,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.060940668717592295,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5608043616566329,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14077.890627856112,\\\"ask\\\":14304.953379918308,\\\"price\\\":14191.42200388721,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.060804361656632944,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607047389872177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14100.956029841627,\\\"ask\\\":14328.390804516492,\\\"price\\\":14214.67341717906,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.06070473898721773,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607618419914985,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14114.220347685143,\\\"ask\\\":14341.869062970389,\\\"price\\\":14228.044705327766,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.06076184199149848,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5605900154595388,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14154.133514471569,\\\"ask\\\":14382.425990511432,\\\"price\\\":14268.2797524915,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.06059001545953879,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5606539826764694,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14139.206208975167,\\\"ask\\\":14367.257922023153,\\\"price\\\":14253.23206549916,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.060653982676469376,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5603630257642075,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14071.704299741028,\\\"ask\\\":14298.667272317496,\\\"price\\\":14185.185786029262,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.06036302576420749,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607536130866745,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14162.757212271521,\\\"ask\\\":14391.188780211385,\\\"price\\\":14276.972996241453,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.060753613086674485,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5605034967113585,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14104.689655916272,\\\"ask\\\":14332.184650366535,\\\"price\\\":14218.437153141404,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.06050349671135846,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5601662535345672,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14026.506675959732,\\\"ask\\\":14252.740654604244,\\\"price\\\":14139.623665281988,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.06016625353456717,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5599262544574569,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13970.778195682153,\\\"ask\\\":14196.113327870575,\\\"price\\\":14083.445761776364,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.05992625445745692,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5599134313115793,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13973.767692163246,\\\"ask\\\":14199.151042036849,\\\"price\\\":14086.459367100048,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.059913431311579335,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5600163400303575,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13997.769364212822,\\\"ask\\\":14223.539837829157,\\\"price\\\":14110.65460102099,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.060016340030357496,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5601806156984407,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14036.083811791865,\\\"ask\\\":14262.472260369152,\\\"price\\\":14149.278036080508,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.06018061569844069,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5601441106314942,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14027.574800190128,\\\"ask\\\":14253.826006644807,\\\"price\\\":14140.700403417468,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.06014411063149416,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5604428679720272,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14097.254788761444,\\\"ask\\\":14324.629865999532,\\\"price\\\":14210.942327380488,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.06044286797202725,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5603411730513992,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14073.576044736814,\\\"ask\\\":14300.569206748698,\\\"price\\\":14187.072625742756,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.06034117305139919,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607080567072097,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14159.145561677138,\\\"ask\\\":14387.51887718806,\\\"price\\\":14273.3322194326,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.06070805670720969,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607793037809201,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14142.547844613022,\\\"ask\\\":14370.653455010008,\\\"price\\\":14256.600649811515,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.06077930378092011,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5611192944171415,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14221.65921214059,\\\"ask\\\":14451.040812336405,\\\"price\\\":14336.350012238498,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.06111929441714148,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.561349494395782,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14168.29568112686,\\\"ask\\\":14396.81657920955,\\\"price\\\":14282.556130168205,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.06134949439578197,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.560997322358567,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14087.427888693659,\\\"ask\\\":14314.644467543556,\\\"price\\\":14201.036178118607,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.06099732235856703,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5613921129174281,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13996.83671558039,\\\"ask\\\":14222.592146476847,\\\"price\\\":14109.714431028618,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.06139211291742808,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5612493251143806,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14029.391020510735,\\\"ask\\\":14255.671520841552,\\\"price\\\":14142.531270676143,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.06124932511438064,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5611905401518874,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14015.939011895405,\\\"ask\\\":14242.002544345332,\\\"price\\\":14128.970778120369,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.06119054015188741,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5615509976307265,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13933.858294534812,\\\"ask\\\":14158.597944446663,\\\"price\\\":14046.228119490737,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.06155099763072647,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5615888483943566,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13942.426915630569,\\\"ask\\\":14167.304769108481,\\\"price\\\":14054.865842369525,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.06158884839435663,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5614324592082656,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13907.113345176975,\\\"ask\\\":14131.421624937895,\\\"price\\\":14019.267485057435,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.061432459208265566,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.561505171878083,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13923.574078701471,\\\"ask\\\":14148.147854164397,\\\"price\\\":14035.860966432934,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.06150517187808302,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5617397229761185,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13870.677994441381,\\\"ask\\\":14094.39860725495,\\\"price\\\":13982.538300848166,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.061739722976118516,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5616457012680565,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13891.801264423042,\\\"ask\\\":14115.862575139543,\\\"price\\\":14003.831919781293,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.06164570126805646,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5612941426802756,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13971.024664170189,\\\"ask\\\":14196.363771656805,\\\"price\\\":14083.694217913497,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.061294142680275554,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5610343714884537,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13912.063836179213,\\\"ask\\\":14136.451962569203,\\\"price\\\":14024.257899374208,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.0610343714884537,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.560811481270455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13861.443503913673,\\\"ask\\\":14085.015173331634,\\\"price\\\":13973.229338622654,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.06081148127045499,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607694620245383,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13871.02142228014,\\\"ask\\\":14094.7475742524,\\\"price\\\":13982.88449826627,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.06076946202453826,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5610483095807395,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13807.663395625814,\\\"ask\\\":14030.36764394236,\\\"price\\\":13919.015519784087,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.06104830958073948,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5613880443403073,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13884.503249769563,\\\"ask\\\":14108.4468505723,\\\"price\\\":13996.475050170931,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.06138804434030731,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5613991097624086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13887.00598284692,\\\"ask\\\":14110.989950312192,\\\"price\\\":13998.997966579556,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.06139910976240859,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5612663175362895,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13917.040399399986,\\\"ask\\\":14141.508792938697,\\\"price\\\":14029.274596169342,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.06126631753628953,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5613366308959836,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13901.086574529163,\\\"ask\\\":14125.297648311891,\\\"price\\\":14013.192111420527,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.061336630895983624,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5610315196011906,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13970.235767463764,\\\"ask\\\":14195.562150809954,\\\"price\\\":14082.898959136859,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.061031519601190576,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5607015398190591,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14045.768793431249,\\\"ask\\\":14272.313451389819,\\\"price\\\":14159.041122410534,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.060701539819059125,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.560895629682195,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14001.001355160532,\\\"ask\\\":14226.823957663122,\\\"price\\\":14113.912656411827,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.060895629682194974,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5612099738295508,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13929.099137960253,\\\"ask\\\":14153.762027282191,\\\"price\\\":14041.430582621222,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.061209973829550846,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5609513517074532,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13870.494038523795,\\\"ask\\\":14094.211684306438,\\\"price\\\":13982.352861415116,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.06095135170745325,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5605946436219894,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13951.668897395974,\\\"ask\\\":14176.695815095909,\\\"price\\\":14064.182356245941,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.06059464362198941,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5604422361905131,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13986.760085236321,\\\"ask\\\":14212.352989836909,\\\"price\\\":14099.556537536615,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.06044223619051314,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5605763887840809,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13955.784977959269,\\\"ask\\\":14180.878284055387,\\\"price\\\":14068.331631007328,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.06057638878408089,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5602243082503037,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14036.898433596818,\\\"ask\\\":14263.300021235476,\\\"price\\\":14150.099227416147,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.06022430825030367,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5598500879214996,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14124.12056864199,\\\"ask\\\":14351.928964910408,\\\"price\\\":14238.0247667762,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.059850087921499595,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5601694282060808,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14049.158900959152,\\\"ask\\\":14275.758238071397,\\\"price\\\":14162.458569515275,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.060169428206080844,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5602359140711486,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14064.682905604921,\\\"ask\\\":14291.532629888872,\\\"price\\\":14178.107767746897,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.06023591407114859,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5603039265608658,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14080.563366891914,\\\"ask\\\":14307.669227648235,\\\"price\\\":14194.116297270075,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.060303926560865806,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5604380176848345,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14111.87274715379,\\\"ask\\\":14339.483597914335,\\\"price\\\":14225.678172534062,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.06043801768483448,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5602293779556178,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14160.58872794687,\\\"ask\\\":14388.985320333111,\\\"price\\\":14274.78702413999,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.06022937795561778,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.5599690750262463,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14221.78880758617,\\\"ask\\\":14451.172498031108,\\\"price\\\":14336.48065280864,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.059969075026246266,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.44015982338591203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14252.357329687722,\\\"ask\\\":14482.23406081172,\\\"price\\\":14367.29569524972,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.05984017661408797,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4405185595649483,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14167.424961751427,\\\"ask\\\":14395.931815973223,\\\"price\\\":14281.678388862325,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.05948144043505171,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.44058143014988316,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14182.3996208695,\\\"ask\\\":14411.148001851268,\\\"price\\\":14296.773811360385,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.05941856985011684,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.44088222181557996,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14110.966378831088,\\\"ask\\\":14338.56261074772,\\\"price\\\":14224.764494789404,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.059117778184420045,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4406493989103645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14055.6113170895,\\\"ask\\\":14282.314725429653,\\\"price\\\":14168.963021259577,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.059350601089635524,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4408958741662834,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14113.982425938837,\\\"ask\\\":14341.62730377656,\\\"price\\\":14227.804864857699,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.0591041258337166,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.44105751200978055,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14152.581316461363,\\\"ask\\\":14380.848757049449,\\\"price\\\":14266.715036755406,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.05894248799021945,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.44097980974082374,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14133.94891837766,\\\"ask\\\":14361.91583641601,\\\"price\\\":14247.932377396835,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.059020190259176264,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4407095269127828,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14069.517594319479,\\\"ask\\\":14296.445297453663,\\\"price\\\":14182.981445886571,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.05929047308721719,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4408477272610075,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14102.312276662939,\\\"ask\\\":14329.768926286535,\\\"price\\\":14216.040601474737,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.059152272738992484,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4412160449811,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14190.121776877624,\\\"ask\\\":14418.994708762746,\\\"price\\\":14304.558242820185,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.05878395501889999,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.44139439859662316,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14233.175353704944,\\\"ask\\\":14462.742698119542,\\\"price\\\":14347.959025912243,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.05860560140337684,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4413414104569739,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14220.318080982051,\\\"ask\\\":14449.67805003015,\\\"price\\\":14334.9980655061,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.05865858954302611,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4415587082597018,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14167.83405038151,\\\"ask\\\":14396.347502807019,\\\"price\\\":14282.090776594265,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.05844129174029822,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4419170881303732,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14254.715540907657,\\\"ask\\\":14484.630307696489,\\\"price\\\":14369.672924302073,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.058082911869626774,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4422251964242141,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14330.331517158196,\\\"ask\\\":14561.465896467198,\\\"price\\\":14445.898706812697,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.057774803575785905,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.44203606695870495,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14283.573338439066,\\\"ask\\\":14513.953553575178,\\\"price\\\":14398.763446007122,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.057963933041295046,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.44180614057903694,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14227.13834101652,\\\"ask\\\":14456.608314258721,\\\"price\\\":14341.87332763762,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.05819385942096306,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006500000000000001,\\\"forecast\\\":0.4415205013596691,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14157.646830588901,\\\"ask\\\":14385.995973017756,\\\"price\\\":14271.821401803329,\\\"maxShares\\\":9200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.05847949864033092,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[14216.040601474737,14304.558242820185,14347.959025912243,14334.9980655061,14282.090776594265,14369.672924302073,14445.898706812697,14398.763446007122,14341.87332763762,14271.821401803329]}],[\\\"OMN\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.545,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11204.64,\\\"ask\\\":11385.36,\\\"price\\\":11295,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.04500000000000004},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5450691303721412,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11206.361290962019,\\\"ask\\\":11387.10905371947,\\\"price\\\":11296.735172340745,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.04506913037214122},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5421628096998998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11278.626451642067,\\\"ask\\\":11460.539781507261,\\\"price\\\":11369.583116574664,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.04216280969989983},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.543213172051885,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11250.598894654418,\\\"ask\\\":11432.060167148846,\\\"price\\\":11341.329530901632,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.04321317205188502},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5452005694374162,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11302.34101347423,\\\"ask\\\":11484.636836272202,\\\"price\\\":11393.488924873216,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.04520056943741624},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.544324079219985,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11324.257532349278,\\\"ask\\\":11506.90684738717,\\\"price\\\":11415.582189868224,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.044324079219985046},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5467189144380173,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11385.44262910434,\\\"ask\\\":11569.078800541507,\\\"price\\\":11477.260714822924,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.046718914438017345},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5490883475843884,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11443.185933879322,\\\"ask\\\":11627.75344894189,\\\"price\\\":11535.469691410606,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.0490883475843884},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5497670484744607,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11459.007408548505,\\\"ask\\\":11643.830108686385,\\\"price\\\":11551.418758617445,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.04976704847446067},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5526904458399933,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11392.088428379271,\\\"ask\\\":11575.831790127324,\\\"price\\\":11483.960109253298,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.05269044583999327},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5529845158077904,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11455.668666197893,\\\"ask\\\":11640.437515652698,\\\"price\\\":11548.053090925296,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.0529845158077904,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.553030766048405,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11465.668331649855,\\\"ask\\\":11650.598466031302,\\\"price\\\":11558.133398840579,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.053030766048404954,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5528841552417451,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11497.366740107014,\\\"ask\\\":11682.808139141,\\\"price\\\":11590.087439624007,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.05288415524174506,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5531375337742827,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11552.452916662902,\\\"ask\\\":11738.78280241553,\\\"price\\\":11645.617859539216,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.05313753377428265,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5531466410047017,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11550.473283545407,\\\"ask\\\":11736.771239731623,\\\"price\\\":11643.622261638515,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.05314664100470168,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5532123082692452,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11536.219288381819,\\\"ask\\\":11722.287341420235,\\\"price\\\":11629.253314901027,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.05321230826924517,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5534616682927155,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11590.279561391491,\\\"ask\\\":11777.21955431716,\\\"price\\\":11683.749557854326,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.05346166829271548,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5535358559872298,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11606.36316197662,\\\"ask\\\":11793.562567814952,\\\"price\\\":11699.962864895786,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.05353585598722976,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5531739271898413,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11684.82790273412,\\\"ask\\\":11873.29286890725,\\\"price\\\":11779.060385820685,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.053173927189841264,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5531404727798144,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11677.481008149249,\\\"ask\\\":11865.827476022625,\\\"price\\\":11771.654242085937,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.053140472779814374,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5532666474813692,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11705.207571426554,\\\"ask\\\":11894.001241933433,\\\"price\\\":11799.604406679993,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.05326664748136922,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5531740040698887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11684.88476834279,\\\"ask\\\":11873.350651703158,\\\"price\\\":11779.117710022974,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.0531740040698887,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5531209068894011,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11696.552771277196,\\\"ask\\\":11885.206848233282,\\\"price\\\":11790.879809755239,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.053120906889401076,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5529614436770833,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11661.546072292374,\\\"ask\\\":11849.635525071284,\\\"price\\\":11755.59079868183,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.05296144367708333,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5529020894106608,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11674.615249875505,\\\"ask\\\":11862.915495841238,\\\"price\\\":11768.765372858372,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.05290208941066077,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5531714772057077,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11734.06467607439,\\\"ask\\\":11923.323783753009,\\\"price\\\":11828.694229913699,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.053171477205707696,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5535367031343243,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11814.663991590598,\\\"ask\\\":12005.223088229155,\\\"price\\\":11909.943539909877,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.05353670313432435,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5533027346441387,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11866.296963632733,\\\"ask\\\":12057.688850142938,\\\"price\\\":11961.992906887835,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.053302734644138705,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5536181246459297,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11936.509335391884,\\\"ask\\\":12129.033679511109,\\\"price\\\":12032.771507451496,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.05361812464592974,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5533910838208811,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11886.178448598177,\\\"ask\\\":12077.891004220728,\\\"price\\\":11982.034726409453,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.05339108382088109,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.553403211617908,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11883.479113571666,\\\"ask\\\":12075.1481315325,\\\"price\\\":11979.313622552083,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.05340321161790795,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5533058402909913,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11861.851122510949,\\\"ask\\\":12053.171301906286,\\\"price\\\":11957.511212208618,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.05330584029099128,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5534607270394041,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11827.48489421092,\\\"ask\\\":12018.250779601418,\\\"price\\\":11922.867836906169,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.05346072703940408,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5534263025809153,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11835.10085428694,\\\"ask\\\":12025.989577743183,\\\"price\\\":11930.545216015062,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.0534263025809153,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5537080217060975,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11773.021221613844,\\\"ask\\\":11962.908660672134,\\\"price\\\":11867.96494114299,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.05370802170609745,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5538039461054404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11752.031683282945,\\\"ask\\\":11941.580581400412,\\\"price\\\":11846.806132341679,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.05380394610544037,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5534566783345884,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11827.88303139107,\\\"ask\\\":12018.655338348992,\\\"price\\\":11923.26918487003,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.05345667833458845,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5533900807614045,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11842.61848316874,\\\"ask\\\":12033.62845870372,\\\"price\\\":11938.12347093623,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.0533900807614045,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5530730455153767,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11772.711034332626,\\\"ask\\\":11962.59347037025,\\\"price\\\":11867.652252351438,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.05307304551537673,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5532852412700201,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11725.829022680107,\\\"ask\\\":11914.955297239463,\\\"price\\\":11820.392159959785,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.0532852412700201,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5536099444578256,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11797.282467810133,\\\"ask\\\":11987.56121729094,\\\"price\\\":11892.421842550537,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.05360994445782563,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5539782744457183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11716.78169313449,\\\"ask\\\":11905.762043023755,\\\"price\\\":11811.271868079122,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.053978274445718344,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5538450041804739,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11687.924660639925,\\\"ask\\\":11876.439574521213,\\\"price\\\":11782.182117580569,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.05384500418047389,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.553899862953109,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11699.832640057752,\\\"ask\\\":11888.5396181232,\\\"price\\\":11794.186129090476,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.053899862953109,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5542369120353444,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11772.994567335209,\\\"ask\\\":11962.881576485775,\\\"price\\\":11867.938071910492,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.05423691203534442,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5542015065755721,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11780.679892142814,\\\"ask\\\":11970.690858145119,\\\"price\\\":11875.685375143967,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.0542015065755721,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5543476070843065,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11749.010359336917,\\\"ask\\\":11938.510526422997,\\\"price\\\":11843.760442879957,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.054347607084306526,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5544158925618876,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11763.772495639398,\\\"ask\\\":11953.510761698097,\\\"price\\\":11858.641628668747,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.05441589256188761,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.554636178779059,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11716.342441037508,\\\"ask\\\":11905.315706215533,\\\"price\\\":11810.82907362652,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.05463617877905902,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5547245029382174,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11735.282932807646,\\\"ask\\\":11924.561689788416,\\\"price\\\":11829.92231129803,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.0547245029382174,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5550557961013742,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11664.666952681007,\\\"ask\\\":11852.80674224038,\\\"price\\\":11758.736847460694,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.05505579610137423,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5548081047783476,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11717.145292742687,\\\"ask\\\":11906.131507141763,\\\"price\\\":11811.638399942225,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.05480810477834763,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5550205745010682,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11762.568111530069,\\\"ask\\\":11952.28695203862,\\\"price\\\":11857.427531784344,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.05502057450106823,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5550609319333638,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11753.946625668608,\\\"ask\\\":11943.526409953587,\\\"price\\\":11848.736517811098,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.05506093193336381,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.554792730717156,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11696.970804780107,\\\"ask\\\":11885.631624212045,\\\"price\\\":11791.301214496076,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.05479273071715596,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5544690438944103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11766.070396386378,\\\"ask\\\":11955.845725360352,\\\"price\\\":11860.958060873365,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.05446904389441032,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5544794663408792,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11763.819433829438,\\\"ask\\\":11953.558456955718,\\\"price\\\":11858.688945392578,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.05447946634087919,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5546045438304743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11790.827572889164,\\\"ask\\\":11981.002211161569,\\\"price\\\":11885.914892025366,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.054604543830474306,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5546710681728014,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11805.192257487824,\\\"ask\\\":11995.5985842215,\\\"price\\\":11900.395420854662,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.05467106817280143,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5543823782256778,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11867.529439520305,\\\"ask\\\":12058.941204673858,\\\"price\\\":11963.235322097082,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.05438237822567782,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5540702542873283,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11935.642312623639,\\\"ask\\\":12128.152672504666,\\\"price\\\":12031.897492564152,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.05407025428732826,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5542537801575016,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11976.15440509247,\\\"ask\\\":12169.318185819766,\\\"price\\\":12072.736295456118,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.0542537801575016,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5539564869473148,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12041.779867105352,\\\"ask\\\":12236.002123026405,\\\"price\\\":12138.890995065878,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.05395648694731481,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5541984911324982,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12095.789334544213,\\\"ask\\\":12290.88271090783,\\\"price\\\":12193.336022726022,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.054198491132498194,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5545351984403902,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12170.934243167347,\\\"ask\\\":12367.239634186175,\\\"price\\\":12269.08693867676,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.05453519844039023,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5543895906738758,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12138.524652408289,\\\"ask\\\":12334.307308092293,\\\"price\\\":12236.41598025029,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.05438959067387583,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.554261443192726,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12167.124267514937,\\\"ask\\\":12363.368207313564,\\\"price\\\":12265.24623741425,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.05426144319272597,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5539266584103344,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12242.19355816693,\\\"ask\\\":12439.648292976073,\\\"price\\\":12340.920925571501,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.053926658410334394,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5542823673661279,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12322.945045753328,\\\"ask\\\":12521.70222391064,\\\"price\\\":12422.323634831984,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.054282367366127904,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5539749110429489,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12392.742432240735,\\\"ask\\\":12592.625374696232,\\\"price\\\":12492.683903468484,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.053974911042948936,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5540382223251105,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12407.278823273573,\\\"ask\\\":12607.396223648953,\\\"price\\\":12507.337523461263,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.05403822232511046,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.553973452912866,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12422.150003752104,\\\"ask\\\":12622.507261877137,\\\"price\\\":12522.32863281462,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.05397345291286604,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5538460526345903,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12392.897500807841,\\\"ask\\\":12592.782944369257,\\\"price\\\":12492.84022258855,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.0538460526345903,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5536487302275951,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12438.312090083306,\\\"ask\\\":12638.930027020135,\\\"price\\\":12538.62105855172,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.05364873022759509,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5534025994865608,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12495.37683250981,\\\"ask\\\":12696.915168518033,\\\"price\\\":12596.146000513922,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.05340259948656079,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4464755525291523,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12523.887363730852,\\\"ask\\\":12725.885547016833,\\\"price\\\":12624.886455373842,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.053524447470847725,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4461349324556512,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12603.587157674101,\\\"ask\\\":12806.870821507553,\\\"price\\\":12705.228989590827,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.05386506754434878,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4460744946111813,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12589.461492371447,\\\"ask\\\":12792.517322893567,\\\"price\\\":12690.989407632507,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.053925505388818684,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44636427805028894,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12522.170189002178,\\\"ask\\\":12724.140675921566,\\\"price\\\":12623.155432461872,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.05363572194971106,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44658850998561184,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12470.037384322895,\\\"ask\\\":12671.167019553912,\\\"price\\\":12570.602201938404,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.05341149001438816,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44682397079478897,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12525.010669887297,\\\"ask\\\":12727.026971014513,\\\"price\\\":12626.018820450905,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.05317602920521103,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44666959582427956,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12488.754650780029,\\\"ask\\\":12690.186177405514,\\\"price\\\":12589.470414092772,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.053330404175720436,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44674422623748383,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12506.231377881575,\\\"ask\\\":12707.944787202245,\\\"price\\\":12607.08808254191,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.05325577376251617,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44648533325280826,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12567.028082909314,\\\"ask\\\":12769.722084246561,\\\"price\\\":12668.375083577937,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.05351466674719174,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44661774691010764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12598.123224689849,\\\"ask\\\":12801.318760571945,\\\"price\\\":12699.720992630897,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.05338225308989236,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4469705917837071,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12515.399206957014,\\\"ask\\\":12717.260484488577,\\\"price\\\":12616.329845722796,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.05302940821629287,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44714138697145883,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12555.708349171482,\\\"ask\\\":12758.21977415812,\\\"price\\\":12656.964061664801,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.05285861302854117,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44719212002968617,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12567.759166366017,\\\"ask\\\":12770.464959371922,\\\"price\\\":12669.11206286897,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.05280787997031383,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44739978258103963,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12518.531094575257,\\\"ask\\\":12720.442886423247,\\\"price\\\":12619.486990499252,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.05260021741896037,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4477421930820513,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12437.566535911796,\\\"ask\\\":12638.17244778134,\\\"price\\\":12537.869491846568,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.05225780691794868,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44803646032641326,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12367.921931213856,\\\"ask\\\":12567.40454300763,\\\"price\\\":12467.663237110743,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.051963539673586745,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4482170343098149,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12325.092074248378,\\\"ask\\\":12523.883881897544,\\\"price\\\":12424.48797807296,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.05178296569018509,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44843508306348717,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12376.990819904702,\\\"ask\\\":12576.619704096713,\\\"price\\\":12476.805262000707,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.05156491693651283,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4487037602138912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12441.480686690744,\\\"ask\\\":12642.149730024465,\\\"price\\\":12541.815208357604,\\\"maxShares\\\":10600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.05129623978610881,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[12699.720992630897,12616.329845722796,12656.964061664801,12669.11206286897,12619.486990499252,12537.869491846568,12467.663237110743,12424.48797807296,12476.805262000707,12541.815208357604]}],[\\\"SLRS\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.585,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18132.768,\\\"ask\\\":18425.232,\\\"price\\\":18279,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.08499999999999996},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5849867527950325,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18129.942458073052,\\\"ask\\\":18422.360884816164,\\\"price\\\":18276.151671444608,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.08498675279503254},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.584430765922046,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18248.549295999892,\\\"ask\\\":18542.880736257957,\\\"price\\\":18395.715016128925,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.08443076592204601},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5846441486588789,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18294.669040970643,\\\"ask\\\":18589.74434808307,\\\"price\\\":18442.206694526856,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.08464414865887893},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.584249223812446,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18380.02661708216,\\\"ask\\\":18676.47865929316,\\\"price\\\":18528.25263818766,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.08424922381244604},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5844149602596385,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18416.184105222324,\\\"ask\\\":18713.21933272591,\\\"price\\\":18564.701718974116,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.08441496025963846},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5848776653564556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18517.129035163645,\\\"ask\\\":18815.79240669854,\\\"price\\\":18666.460720931093,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.08487766535645558},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5844409543965974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18612.403017557037,\\\"ask\\\":18912.60306622731,\\\"price\\\":18762.503041892174,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.08444095439659738},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5843225133903998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18638.50968294124,\\\"ask\\\":18939.130806859645,\\\"price\\\":18788.820244900442,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.08432251339039976},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5838200106220605,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18528.09528943414,\\\"ask\\\":18826.935536037912,\\\"price\\\":18677.515412736026,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.08382001062206046},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5842945972108362,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18633.00085404416,\\\"ask\\\":18933.533125883583,\\\"price\\\":18783.26698996387,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.08429459721083621,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5843692444440987,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18616.514965492042,\\\"ask\\\":18916.781335903204,\\\"price\\\":18766.648150697623,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.08436924444409866,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5841326136878425,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18668.728779236197,\\\"ask\\\":18969.837307933558,\\\"price\\\":18819.283043584877,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.08413261368784253,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5845415517884106,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18578.42579418916,\\\"ask\\\":18878.077823127696,\\\"price\\\":18728.251808658428,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.08454155178841061,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.584556251340282,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18581.6560937031,\\\"ask\\\":18881.3602242467,\\\"price\\\":18731.5081589749,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.084556251340282,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.58466224204374,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18604.948077081837,\\\"ask\\\":18905.027884776708,\\\"price\\\":18754.987980929272,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.08466224204373995,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5850647305162251,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18693.396917455557,\\\"ask\\\":18994.903319350004,\\\"price\\\":18844.15011840278,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.0850647305162251,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5849449771175507,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18719.713321446365,\\\"ask\\\":19021.644181469692,\\\"price\\\":18870.67875145803,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.08494497711755067,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5855275698218014,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18848.10194166635,\\\"ask\\\":19152.10358588678,\\\"price\\\":19000.102763776566,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.08552756982180143,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5854729802459022,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18836.07946059386,\\\"ask\\\":19139.887193829247,\\\"price\\\":18987.983327211554,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.08547298024590222,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5852670952639821,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18881.451294687293,\\\"ask\\\":19185.99083169838,\\\"price\\\":19033.721063192836,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.08526709526398213,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5854175443635693,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18914.766576946993,\\\"ask\\\":19219.84345722033,\\\"price\\\":19067.30501708366,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.0854175443635693,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5855040746471372,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18933.927747262966,\\\"ask\\\":19239.31367867043,\\\"price\\\":19086.6207129667,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.08550407464713716,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5857644685363952,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18876.441480873404,\\\"ask\\\":19180.90021443588,\\\"price\\\":19028.67084765464,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.08576446853639519,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5858619783837886,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18897.903036684824,\\\"ask\\\":19202.707924373288,\\\"price\\\":19050.305480529056,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.08586197838378862,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.58630554099422,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18995.529522358895,\\\"ask\\\":19301.90903078404,\\\"price\\\":19148.719276571468,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.08630554099422005,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5857041311889764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18864.07746236309,\\\"ask\\\":19168.336776272172,\\\"price\\\":19016.20711931763,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.08570413118897635,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5860841074415418,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":18947.712887666556,\\\"ask\\\":19253.321160048272,\\\"price\\\":19100.517023857414,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.08608410744154182,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5855673694877943,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19061.45051795351,\\\"ask\\\":19368.893268243082,\\\"price\\\":19215.171893098297,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.08556736948779431,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5851997915247852,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19143.334175185573,\\\"ask\\\":19452.09762962405,\\\"price\\\":19297.715902404812,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.08519979152478518,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5851801578919851,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19138.92375827568,\\\"ask\\\":19447.616076957547,\\\"price\\\":19293.269917616613,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.08518015789198508,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5853377197532719,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19174.32595199084,\\\"ask\\\":19483.589273797144,\\\"price\\\":19328.95761289399,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.08533771975327187,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5850861667815146,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19230.84678109912,\\\"ask\\\":19541.021729181368,\\\"price\\\":19385.934255140244,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.0850861667815146,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5851417495487452,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19218.292379927585,\\\"ask\\\":19528.264837668354,\\\"price\\\":19373.27860879797,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.0851417495487452,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5846862869381917,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19321.099917523825,\\\"ask\\\":19632.730561354852,\\\"price\\\":19476.91523943934,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.08468628693819169,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5845328422095082,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19286.154958641207,\\\"ask\\\":19597.221974103166,\\\"price\\\":19441.688466372187,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.08453284220950819,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5850863513165837,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19412.43797635423,\\\"ask\\\":19725.541814682525,\\\"price\\\":19568.989895518378,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.08508635131658371,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.584978812492225,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19387.933980181995,\\\"ask\\\":19700.642592765573,\\\"price\\\":19544.288286473784,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.08497881249222505,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5844668872122721,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19504.729840696284,\\\"ask\\\":19819.32225748171,\\\"price\\\":19662.026049088996,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.08446688721227213,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5841242787227282,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19583.843517667592,\\\"ask\\\":19899.711961500943,\\\"price\\\":19741.777739584268,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.08412427872272821,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5846443344921337,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19463.520156752696,\\\"ask\\\":19777.447901216452,\\\"price\\\":19620.484028984574,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.08464433449213371,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5840543527587997,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19599.183357695354,\\\"ask\\\":19915.299218303346,\\\"price\\\":19757.24128799935,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.08405435275879969,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.584264887331193,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19550.215088489076,\\\"ask\\\":19865.54113830342,\\\"price\\\":19707.878113396247,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.08426488733119297,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5843519829412552,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19530.02898437381,\\\"ask\\\":19845.029451863713,\\\"price\\\":19687.52921811876,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.08435198294125523,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5848871011555169,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19406.913998794913,\\\"ask\\\":19719.928740710962,\\\"price\\\":19563.421369752938,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.0848871011555169,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5849433179315323,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19419.76629463927,\\\"ask\\\":19732.98833164958,\\\"price\\\":19576.377313144425,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.08494331793153231,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5847110343359673,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19472.871038482528,\\\"ask\\\":19786.94960361934,\\\"price\\\":19629.910321050935,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.08471103433596727,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5848190127285546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19448.081203678335,\\\"ask\\\":19761.759932769924,\\\"price\\\":19604.92056822413,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.08481901272855463,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5851673530356467,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19527.951864287425,\\\"ask\\\":19842.918829840448,\\\"price\\\":19685.435347063936,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.08516735303564671,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5853070288761013,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19495.978143892553,\\\"ask\\\":19810.42940427792,\\\"price\\\":19653.203774085236,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.08530702887610131,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5847831095563113,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19376.97305513974,\\\"ask\\\":19689.504878609736,\\\"price\\\":19533.23896687474,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.0847831095563113,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5851700695223653,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19288.936108854556,\\\"ask\\\":19600.04798157802,\\\"price\\\":19444.492045216288,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.08517006952236528,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5848351131708514,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19364.79552402046,\\\"ask\\\":19677.13093569821,\\\"price\\\":19520.963229859335,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.08483511317085135,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5847719850300728,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19379.2054009252,\\\"ask\\\":19691.773229972383,\\\"price\\\":19535.48931544879,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.08477198503007277,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5851908928688941,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19474.969361739586,\\\"ask\\\":19789.081770799905,\\\"price\\\":19632.025566269745,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.08519089286889414,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5846803359170822,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19591.68466614733,\\\"ask\\\":19907.67958011745,\\\"price\\\":19749.68212313239,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.08468033591708224,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5846638978237276,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19587.882278804034,\\\"ask\\\":19903.815863946038,\\\"price\\\":19745.849071375036,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.08466389782372763,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.584861091743344,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19542.365408773378,\\\"ask\\\":19857.56485085037,\\\"price\\\":19699.965129811873,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.084861091743344,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5847562077123082,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19566.518787170226,\\\"ask\\\":19882.107799866517,\\\"price\\\":19724.31329351837,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.08475620771230818,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5843021672391567,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19671.336967311196,\\\"ask\\\":19988.616595816216,\\\"price\\\":19829.976781563706,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.08430216723915673,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5847930260274931,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19557.46146267242,\\\"ask\\\":19872.90438948972,\\\"price\\\":19715.18292608107,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.08479302602749306,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.585085002571338,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19490.34834247872,\\\"ask\\\":19804.708799615473,\\\"price\\\":19647.528571047096,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.085085002571338,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5855579980103046,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19382.59867460136,\\\"ask\\\":19695.221233869124,\\\"price\\\":19538.90995423524,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.08555799801030461,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5851686940924467,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19470.79290281812,\\\"ask\\\":19784.83794963777,\\\"price\\\":19627.815426227946,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.08516869409244665,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5846319166165874,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19348.846393731794,\\\"ask\\\":19660.92456137263,\\\"price\\\":19504.885477552212,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.08463191661658742,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5844026764222272,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19296.578271605842,\\\"ask\\\":19607.813405018842,\\\"price\\\":19452.195838312342,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.08440267642222721,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.58460441987596,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19342.701907854833,\\\"ask\\\":19654.68097088475,\\\"price\\\":19498.69143936979,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.08460441987596001,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5840748584174592,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19463.77299904238,\\\"ask\\\":19777.704821607582,\\\"price\\\":19620.73891032498,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.08407485841745921,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5835122497951104,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19594.01986140791,\\\"ask\\\":19910.05243981771,\\\"price\\\":19752.03615061281,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.0835122497951104,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5830323795937911,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19706.609167511117,\\\"ask\\\":20024.457702470972,\\\"price\\\":19865.533434991044,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.08303237959379106,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5829335730729546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19683.186652083,\\\"ask\\\":20000.657404535952,\\\"price\\\":19841.922028309476,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.08293357307295457,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5830344166467586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19707.120540522872,\\\"ask\\\":20024.97732343453,\\\"price\\\":19866.0489319787,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.08303441664675859,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5828355796192124,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19660.041937959704,\\\"ask\\\":19977.139388571955,\\\"price\\\":19818.59066326583,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.0828355796192124,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5825276238122218,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19733.131594702678,\\\"ask\\\":20051.40791074627,\\\"price\\\":19892.269752724475,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.08252762381222178,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5821435146187685,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19824.975718052156,\\\"ask\\\":20144.733390923968,\\\"price\\\":19984.85455448806,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.08214351461876845,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4180466274353892,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19779.191748786332,\\\"ask\\\":20098.210970540953,\\\"price\\\":19938.701359663643,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.08195337256461083,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4175175322309109,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19652.315386017504,\\\"ask\\\":19969.28821482424,\\\"price\\\":19810.80180042087,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.08248246776908907,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4176114207206602,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19674.68530609355,\\\"ask\\\":19992.018940062804,\\\"price\\\":19833.352123078177,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.08238857927933979,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41806057475140634,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19781.94488364897,\\\"ask\\\":20101.008510804597,\\\"price\\\":19941.476697226783,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.08193942524859366,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4184080990673831,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19698.399353030098,\\\"ask\\\":20016.115471627356,\\\"price\\\":19857.257412328727,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.08159190093261692,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4187730041725054,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19610.69405027161,\\\"ask\\\":19926.995567211474,\\\"price\\\":19768.84480874154,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.0812269958274946,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41901223124396936,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19553.10688420352,\\\"ask\\\":19868.47957588422,\\\"price\\\":19710.79323004387,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.08098776875603064,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41912720781554624,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19525.387117330738,\\\"ask\\\":19840.312715997363,\\\"price\\\":19682.84991666405,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.08087279218445376,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41952605356701483,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19621.681773261043,\\\"ask\\\":19938.16051153945,\\\"price\\\":19779.921142400246,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.08047394643298517,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4193240475969887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19572.550690923756,\\\"ask\\\":19888.23699239027,\\\"price\\\":19730.393841657013,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.08067595240301129,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4187830691504854,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19703.795848266174,\\\"ask\\\":20021.599007109176,\\\"price\\\":19862.697427687675,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.08121693084951459,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41904844070737035,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19639.624527299828,\\\"ask\\\":19956.392664836923,\\\"price\\\":19798.008596068375,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.08095155929262965,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4191272630697946,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19620.520068321024,\\\"ask\\\":19936.980069422974,\\\"price\\\":19778.750068872,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.08087273693020541,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4194498973747865,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19542.55684505443,\\\"ask\\\":19857.759374813373,\\\"price\\\":19700.158109933902,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.0805501026252135,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41891794275710403,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19671.61631259377,\\\"ask\\\":19988.900446667863,\\\"price\\\":19830.258379630817,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.08108205724289597,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41845474712971154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19783.993908446322,\\\"ask\\\":20103.090584389003,\\\"price\\\":19943.542246417663,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.08154525287028846,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41874222477886874,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19714.492915095154,\\\"ask\\\":20032.468607274106,\\\"price\\\":19873.48076118463,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.08125777522113126,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41839510403651614,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19630.63386062304,\\\"ask\\\":19947.256987407283,\\\"price\\\":19788.94542401516,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.08160489596348386,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4188264657302142,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":19734.40096148759,\\\"ask\\\":20052.697751189,\\\"price\\\":19893.549356338295,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.0811735342697858,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[19730.393841657013,19862.697427687675,19798.008596068375,19778.750068872,19700.158109933902,19830.258379630817,19943.542246417663,19873.48076118463,19788.94542401516,19893.549356338295]}],[\\\"GPH\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.006,\\\"forecast\\\":0.605,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21937.896,\\\"ask\\\":22114.104,\\\"price\\\":22026,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.10499999999999998},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6049859735476815,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21934.965811885064,\\\"ask\\\":22111.150276237553,\\\"price\\\":22023.05804406131,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.10498597354768147},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6043972684557144,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22057.965348196612,\\\"ask\\\":22235.137760631926,\\\"price\\\":22146.55155441427,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.1043972684557144},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6041711162135175,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22105.748766245648,\\\"ask\\\":22283.304981235575,\\\"price\\\":22194.52687374061,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.10417111621351749},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6037545173846032,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22017.696082003,\\\"ask\\\":22194.54504651708,\\\"price\\\":22106.12056426004,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.10375451738460317},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.603579568031312,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22054.821999867658,\\\"ask\\\":22231.96916452523,\\\"price\\\":22143.395582196445,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.10357956803131196},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6030929231396605,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22158.44153281719,\\\"ask\\\":22336.42098287998,\\\"price\\\":22247.431257848584,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.10309292313966045},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.603547578933938,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22256.163699656976,\\\"ask\\\":22434.928066722492,\\\"price\\\":22345.545883189734,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.10354757893393796},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6036720711260695,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22282.921627132768,\\\"ask\\\":22461.900917310544,\\\"price\\\":22372.411272221656,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.10367207112606946},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6031425175552882,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22396.74206678364,\\\"ask\\\":22576.63557736022,\\\"price\\\":22486.68882207193,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.10314251755528825},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6036430804897512,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22505.43612619857,\\\"ask\\\":22686.20268142908,\\\"price\\\":22595.819403813824,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.10364308048975124,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6037217501906202,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22522.51875168219,\\\"ask\\\":22703.42251675594,\\\"price\\\":22612.970634219066,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.10372175019062024,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6039711005960016,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22576.66360722713,\\\"ask\\\":22758.002270738994,\\\"price\\\":22667.33293898306,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.10397110059600156,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6044042712691771,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22482.993602600734,\\\"ask\\\":22663.579896597526,\\\"price\\\":22573.28674959913,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.10440427126917706,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6044198311174104,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22486.34434643559,\\\"ask\\\":22666.957554037483,\\\"price\\\":22576.650950236537,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.10441983111741038,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6045320221771707,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22462.210432733176,\\\"ask\\\":22642.62979363866,\\\"price\\\":22552.42011318592,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.10453202217717072,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.604106064702762,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22553.741680539228,\\\"ask\\\":22734.89623219014,\\\"price\\\":22644.318956364685,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.10410606470276196,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6039804421663868,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22526.559368617527,\\\"ask\\\":22707.49558844578,\\\"price\\\":22617.027478531654,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.1039804421663868,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6033691733960788,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22394.906658080454,\\\"ask\\\":22574.785426418446,\\\"price\\\":22484.84604224945,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.10336917339607876,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6033126214125804,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22407.158631760474,\\\"ask\\\":22587.135809525622,\\\"price\\\":22497.147220643048,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.10331262141258035,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6030993157360252,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22453.42184787365,\\\"ask\\\":22633.77061773609,\\\"price\\\":22543.59623280487,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.10309931573602515,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.602943390245935,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22487.379986012947,\\\"ask\\\":22668.00151200502,\\\"price\\\":22577.690749008983,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.10294339024593502,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.602854003583386,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22506.905978324026,\\\"ask\\\":22687.684339595708,\\\"price\\\":22597.295158959867,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.10285400358338603,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6025855195963008,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22448.30824667133,\\\"ask\\\":22628.615943431745,\\\"price\\\":22538.46209505154,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.1025855195963008,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6024855471431928,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22426.45304201919,\\\"ask\\\":22606.585194967138,\\\"price\\\":22516.519118493165,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.1024855471431928,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6020317415188838,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22327.586571129727,\\\"ask\\\":22506.924615877757,\\\"price\\\":22417.25559350374,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.10203174151888383,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6026411666157664,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22460.946949054327,\\\"ask\\\":22641.35616149653,\\\"price\\\":22551.151555275428,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.10264116661576639,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6030312248842556,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22375.913716794686,\\\"ask\\\":22555.639931387417,\\\"price\\\":22465.776824091052,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.10303122488425565,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6025011106648906,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22491.041825248052,\\\"ask\\\":22671.69276360346,\\\"price\\\":22581.367294425756,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.10250111066489065,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6028785290632147,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22408.53157690353,\\\"ask\\\":22588.519782340503,\\\"price\\\":22498.525679622016,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.10287852906321471,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6028582082965639,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22412.957753534425,\\\"ask\\\":22592.981510590926,\\\"price\\\":22502.969632062675,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.10285820829656389,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6030212898452878,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22448.49346743088,\\\"ask\\\":22628.802651908238,\\\"price\\\":22538.64805966956,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.1030212898452878,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6032815865148674,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22505.212501869562,\\\"ask\\\":22685.977260920725,\\\"price\\\":22595.594881395144,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.10328158651486741,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6032237559656427,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22517.813865223074,\\\"ask\\\":22698.679840044144,\\\"price\\\":22608.24685263361,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.1032237559656427,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6036970630760533,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22415.035241632802,\\\"ask\\\":22595.075685340693,\\\"price\\\":22505.055463486748,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.10369706307605331,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6038581122674793,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22449.84744551174,\\\"ask\\\":22630.167505315047,\\\"price\\\":22540.007475413393,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.10385811226747932,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6044410107631355,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22575.846099040107,\\\"ask\\\":22757.178196221153,\\\"price\\\":22666.51214763063,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.1044410107631355,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6043278672498004,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22600.303067863882,\\\"ask\\\":22781.831606561587,\\\"price\\\":22691.067337212735,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.10432786724980037,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6048665703293336,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22717.0010621964,\\\"ask\\\":22899.466934181914,\\\"price\\\":22808.233998189156,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.10486657032933355,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6052311579390884,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22795.980827550175,\\\"ask\\\":22979.081075161022,\\\"price\\\":22887.5309513556,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.10523115793908844,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6046735536255144,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22916.773352221917,\\\"ask\\\":23100.843820914462,\\\"price\\\":23008.80858656819,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.10467355362551445,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6052989147064868,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22780.672631754933,\\\"ask\\\":22963.64992196983,\\\"price\\\":22872.16127686238,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.10529891470648678,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6050728460675279,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22829.580976829373,\\\"ask\\\":23012.951105157317,\\\"price\\\":22921.266040993345,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.10507284606752787,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6049797581472897,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22809.37330945591,\\\"ask\\\":22992.581127202542,\\\"price\\\":22900.977218329226,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.10497975814728966,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6044089197008392,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22686.015719402752,\\\"ask\\\":22868.232713132897,\\\"price\\\":22777.124216267825,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.10440891970083921,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6044681869875187,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22698.893341363677,\\\"ask\\\":22881.213769808368,\\\"price\\\":22790.053555586022,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.1044681869875187,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6042233220585634,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22752.09770018021,\\\"ask\\\":22934.845472872417,\\\"price\\\":22843.471586526313,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.10422332205856344,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6043371935465752,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22727.266524139883,\\\"ask\\\":22909.814849634986,\\\"price\\\":22818.540686887434,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.10433719354657522,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6039699088116492,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22807.270382564388,\\\"ask\\\":22990.461309331975,\\\"price\\\":22898.86584594818,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.10396990881164925,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.603823755380005,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22839.33120545969,\\\"ask\\\":23022.77964887704,\\\"price\\\":22931.055427168365,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.10382375538000499,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6043703049301254,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22959.562130932467,\\\"ask\\\":23143.976284594577,\\\"price\\\":23051.769207763522,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.10437030493012545,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6047786119606597,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23049.382225281388,\\\"ask\\\":23234.517825484454,\\\"price\\\":23141.95002538292,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.10477861196065974,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6044254067784451,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22971.944571580876,\\\"ask\\\":23156.45818259759,\\\"price\\\":23064.201377089234,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.10442540677844514,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6044920117644528,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22986.596619334014,\\\"ask\\\":23171.227917481272,\\\"price\\\":23078.912268407643,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.10449201176445277,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6049346026187661,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23083.95963554659,\\\"ask\\\":23269.372965952585,\\\"price\\\":23176.666300749588,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.10493460261876608,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6043955601824369,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23202.54048048749,\\\"ask\\\":23388.906267479357,\\\"price\\\":23295.723373983423,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.1043955601824369,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6044129303540745,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23198.680497732395,\\\"ask\\\":23385.015280846714,\\\"price\\\":23291.847889289555,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.1044129303540745,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6042044799432713,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23152.458832098746,\\\"ask\\\":23338.422356854557,\\\"price\\\":23245.44059447665,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.10420447994327131,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6043148726435291,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23127.957412662443,\\\"ask\\\":23313.724138868565,\\\"price\\\":23220.840775765504,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.10431487264352912,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6038358870034862,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23234.15472857199,\\\"ask\\\":23420.774445267347,\\\"price\\\":23327.46458691967,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.10383588700348623,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6043541121928722,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23350.111981713515,\\\"ask\\\":23537.663081968243,\\\"price\\\":23443.88753184088,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.10435411219287216,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6040461122704237,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23419.029559836737,\\\"ask\\\":23607.134214935824,\\\"price\\\":23513.08188738628,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.10404611227042371,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6035503391186123,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23530.619756182245,\\\"ask\\\":23719.620718079288,\\\"price\\\":23625.120237130766,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.10355033911861233,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6031464772072084,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23622.392715615682,\\\"ask\\\":23812.130809717015,\\\"price\\\":23717.26176266635,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.10314647720720838,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6037036910614542,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23495.466428259377,\\\"ask\\\":23684.185034108847,\\\"price\\\":23589.82573118411,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.10370369106145416,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6039444619726645,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23550.016317499976,\\\"ask\\\":23739.173075070255,\\\"price\\\":23644.594696285116,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.10394446197266449,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6037315020899043,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23501.866040499703,\\\"ask\\\":23690.636048857134,\\\"price\\\":23596.251044678418,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.10373150208990434,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6031749738650897,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23627.95552656553,\\\"ask\\\":23817.73830187931,\\\"price\\\":23722.84691422242,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.10317497386508967,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6025831835996756,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23763.48058219135,\\\"ask\\\":23954.35191216879,\\\"price\\\":23858.91624718007,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.10258318359967555,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.602077937485619,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23880.521268581688,\\\"ask\\\":24072.332684393587,\\\"price\\\":23976.426976487637,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.102077937485619,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6019738201083487,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23856.188451575123,\\\"ask\\\":24047.80442307372,\\\"price\\\":23951.996437324422,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.10197382010834866,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6018675381003704,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23831.35027490038,\\\"ask\\\":24022.766742971868,\\\"price\\\":23927.058508936123,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.10186753810037041,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6016584505646854,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23782.53559014787,\\\"ask\\\":23973.559972398056,\\\"price\\\":23878.047781272962,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.10165845056468537,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6013345078787219,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23858.320519145924,\\\"ask\\\":24049.953615685252,\\\"price\\\":23954.137067415588,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.10133450787872189,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6009302430731874,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23953.501119584573,\\\"ask\\\":24145.898718938668,\\\"price\\\":24049.69991926162,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.10093024307318743,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6011304962572498,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23906.06968153014,\\\"ask\\\":24098.086305478173,\\\"price\\\":24002.077993504157,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.10113049625724979,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6016901280045134,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24038.360098775272,\\\"ask\\\":24231.4392963558,\\\"price\\\":24134.899697565535,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.10169012800451338,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6015909117766047,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24061.813657748124,\\\"ask\\\":24255.08123732843,\\\"price\\\":24158.447447538278,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.10159091177660473,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6020656304944946,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24174.250815068153,\\\"ask\\\":24368.42150434581,\\\"price\\\":24271.33615970698,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.10206563049449457,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6016945868330366,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24262.13252894157,\\\"ask\\\":24457.00909543909,\\\"price\\\":24359.57081219033,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.10169458683303656,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6013047490447844,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24169.480823077,\\\"ask\\\":24363.61319916597,\\\"price\\\":24266.547011121485,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.10130474904478437,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6010490124088211,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24108.620325244196,\\\"ask\\\":24302.263861993142,\\\"price\\\":24205.44209361867,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.10104901240882114,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6009260491954183,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24079.318995427602,\\\"ask\\\":24272.727180129834,\\\"price\\\":24176.023087778718,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.10092604919541825,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6013526866856593,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23977.958680680487,\\\"ask\\\":24170.552726308444,\\\"price\\\":24074.255703494466,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.10135268668565933,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.601134615953849,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23926.478401023596,\\\"ask\\\":24118.65895042941,\\\"price\\\":24022.568675726503,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.10113461595384898,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6017159006662972,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24063.99903118632,\\\"ask\\\":24257.28416396693,\\\"price\\\":24160.641597576625,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.10171590066629721,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6014310286050083,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24131.394206984434,\\\"ask\\\":24325.220666478286,\\\"price\\\":24228.30743673136,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.1014310286050083,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6013463744520349,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24151.534224933137,\\\"ask\\\":24345.52245163943,\\\"price\\\":24248.528338286284,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.10134637445203487,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6016929275850466,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24234.12020689789,\\\"ask\\\":24428.77177482478,\\\"price\\\":24331.445990861335,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.10169292758504656,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6022685695482627,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24097.712935393694,\\\"ask\\\":24291.268862585614,\\\"price\\\":24194.490898989654,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.10226856954826269,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6027693358355652,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23980.291506705602,\\\"ask\\\":24172.904289891994,\\\"price\\\":24076.597898298798,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.10276933583556525,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6024587925374064,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24052.753966005876,\\\"ask\\\":24245.948776977813,\\\"price\\\":24149.351371491844,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.10245879253740642,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6028339538807382,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23965.00412124952,\\\"ask\\\":24157.494114191286,\\\"price\\\":24061.249117720403,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.10283395388073824,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6032998779057118,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23856.91230734756,\\\"ask\\\":24048.534092948747,\\\"price\\\":23952.723200148153,\\\"maxShares\\\":6300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.10329987790571182,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[24022.568675726503,24160.641597576625,24228.30743673136,24248.528338286284,24331.445990861335,24194.490898989654,24076.597898298798,24149.351371491844,24061.249117720403,23952.723200148153]}],[\\\"NVMD\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.55,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16773.57,\\\"ask\\\":17112.43,\\\"price\\\":16943,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.050000000000000044},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5500087943629616,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16776.520257254837,\\\"ask\\\":17115.439858411504,\\\"price\\\":16945.98005783317,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.05000879436296157},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5496395713705479,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16653.564306686618,\\\"ask\\\":16989.999949245946,\\\"price\\\":16821.782127966282,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.049639571370547864},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5482237266488689,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16701.064437065976,\\\"ask\\\":17038.459678218827,\\\"price\\\":16869.7620576424,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.04822372664886887},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5507629876159289,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16613.58420930832,\\\"ask\\\":16949.212173132728,\\\"price\\\":16781.398191220524,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.0507629876159289},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5508756887644658,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16576.781365608804,\\\"ask\\\":16911.665837641303,\\\"price\\\":16744.223601625054,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.0508756887644658},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5505609688560825,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16679.326279287066,\\\"ask\\\":17016.28236573731,\\\"price\\\":16847.804322512187,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.05056096885608252},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5508545614557836,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16583.03350586778,\\\"ask\\\":16918.044283764102,\\\"price\\\":16750.53889481594,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.0508545614557836},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5507740592241598,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16609.284272094064,\\\"ask\\\":16944.825368500005,\\\"price\\\":16777.054820297035,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.050774059224159784},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5504325787685623,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16498.324943562744,\\\"ask\\\":16831.62443737209,\\\"price\\\":16664.974690467418,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.05043257876856233},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5507548399364627,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16603.74825513107,\\\"ask\\\":16939.17751281049,\\\"price\\\":16771.46288397078,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.05075483993646268,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5508055647535417,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16587.17089599426,\\\"ask\\\":16922.265257529496,\\\"price\\\":16754.718076761877,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.0508055647535417,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5506447494530949,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16639.674413751472,\\\"ask\\\":16975.829452413116,\\\"price\\\":16807.751933082294,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.05064474945309494,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5503669338250142,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16548.894194983146,\\\"ask\\\":16883.21528983129,\\\"price\\\":16716.054742407217,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.050366933825014226,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5503570503778614,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16545.647461067205,\\\"ask\\\":16879.90296533119,\\\"price\\\":16712.7752131992,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.05035705037786142,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5502858124319273,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16522.274112923635,\\\"ask\\\":16856.057428336233,\\\"price\\\":16689.165770629934,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.05028581243192731,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5500160147565257,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16434.10049305135,\\\"ask\\\":16766.10252321401,\\\"price\\\":16600.10150813268,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.05001601475652573,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5500954798599647,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16408.031524368776,\\\"ask\\\":16739.50690869946,\\\"price\\\":16573.769216534118,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.05009547985996465,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5497077270709168,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16535.03420014204,\\\"ask\\\":16869.075295094404,\\\"price\\\":16702.054747618222,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.04970772707091675,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5493496664631178,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16546.944912509218,\\\"ask\\\":16881.226627913446,\\\"price\\\":16714.08577021133,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.04934966646311778,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5506912233546385,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16591.927319832237,\\\"ask\\\":16927.117770737936,\\\"price\\\":16759.522545285086,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.05069122335463849,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5505902818095394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16624.96686137411,\\\"ask\\\":16960.824777765505,\\\"price\\\":16792.895819569807,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.050590281809539395,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5506481203326615,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16605.981684354687,\\\"ask\\\":16941.456061816396,\\\"price\\\":16773.71887308554,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.05064812033266153,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.550822195315341,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16663.055588679144,\\\"ask\\\":16999.682974309024,\\\"price\\\":16831.369281494084,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.050822195315341046,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5508874067189716,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16684.436429018093,\\\"ask\\\":17021.49575081644,\\\"price\\\":16852.966089917267,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.05088740671897163,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5505907232077313,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16781.70994916746,\\\"ask\\\":17120.734392584985,\\\"price\\\":16951.222170876223,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.05059072320773128,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5509885845690959,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16913.686595142364,\\\"ask\\\":17255.37723342807,\\\"price\\\":17084.531914285217,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.05098858456909594,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5507334574023567,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16998.31614461117,\\\"ask\\\":17341.716470764928,\\\"price\\\":17170.01630768805,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.050733457402356685,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5510771505640727,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17113.47102107181,\\\"ask\\\":17459.19770836619,\\\"price\\\":17286.334364719,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.05107715056407269,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5508295241331146,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17196.43860449126,\\\"ask\\\":17543.841404581995,\\\"price\\\":17370.140004536628,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.05082952413311459,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.550816304870593,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17200.910891812982,\\\"ask\\\":17548.40404114254,\\\"price\\\":17374.65746647776,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.050816304870592965,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5509223876268198,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17165.07753595412,\\\"ask\\\":17511.846779104704,\\\"price\\\":17338.46215752941,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.050922387626819776,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5510917926281502,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17222.18110313413,\\\"ask\\\":17570.103953702495,\\\"price\\\":17396.142528418313,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.05109179262815022,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5510541255964083,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17234.87802389001,\\\"ask\\\":17583.05737790799,\\\"price\\\":17408.967700899,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.05105412559640832,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5507458990397197,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17338.92930370715,\\\"ask\\\":17689.210703782042,\\\"price\\\":17514.070003744597,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.05074589903971971,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.550849668339049,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17303.545620711066,\\\"ask\\\":17653.112198907253,\\\"price\\\":17478.32890980916,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.050849668339049026,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5504739032097371,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17431.414086132834,\\\"ask\\\":17783.56386565067,\\\"price\\\":17607.488975891752,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.0504739032097371,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5504019083772421,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17456.277860429567,\\\"ask\\\":17808.92993841804,\\\"price\\\":17632.603899423804,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.05040190837724212,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5500592416392203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17574.957608578516,\\\"ask\\\":17930.00725723667,\\\"price\\\":17752.482432907593,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.050059241639220264,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5498300889555373,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17655.409260855733,\\\"ask\\\":18012.084195418473,\\\"price\\\":17833.746728137103,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.04983008895553731,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5463535325593889,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17533.084061730748,\\\"ask\\\":17887.28778014955,\\\"price\\\":17710.18592094015,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.0463535325593889,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5427072312035518,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17671.00431215478,\\\"ask\\\":18027.994298258913,\\\"price\\\":17849.499305206846,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.0427072312035518,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5439144713842717,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17621.193046758344,\\\"ask\\\":17977.17674467265,\\\"price\\\":17799.184895715498,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.043914471384271736,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5444267265323889,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17600.662161338998,\\\"ask\\\":17956.231093891303,\\\"price\\\":17778.44662761515,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.04442672653238888,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5476074638417732,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17475.545762389902,\\\"ask\\\":17828.587090923033,\\\"price\\\":17652.066426656467,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.04760746384177317,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5479632821825152,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17488.606991018674,\\\"ask\\\":17841.912182756427,\\\"price\\\":17665.25958688755,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.04796328218251522,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5494435055816147,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17542.5796219726,\\\"ask\\\":17896.97516989124,\\\"price\\\":17719.77739593192,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.0494435055816147,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5487322344542103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17517.37993915899,\\\"ask\\\":17871.26640257634,\\\"price\\\":17694.323170867665,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.048732234454210266,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5509909206287048,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17436.563360493685,\\\"ask\\\":17788.817165756187,\\\"price\\\":17612.690263124936,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.050990920628704806,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.550896542785586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17404.350076229995,\\\"ask\\\":17755.953108073023,\\\"price\\\":17580.15159215151,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.050896542785585974,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5505437684912435,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17524.98316800003,\\\"ask\\\":17879.023232000032,\\\"price\\\":17702.003200000032,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.050543768491243535,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5508041159638062,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17615.25315005099,\\\"ask\\\":17971.116850052018,\\\"price\\\":17793.185000051504,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.050804115963806185,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5505786249882249,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17693.437378682116,\\\"ask\\\":18050.88055804943,\\\"price\\\":17872.158968365773,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.05057862498822485,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5505361490065056,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17708.296345742245,\\\"ask\\\":18066.039706262287,\\\"price\\\":17887.168026002266,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.050536149006505604,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5502543124460196,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17807.05427313215,\\\"ask\\\":18166.79274329644,\\\"price\\\":17986.923508214295,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.05025431244601963,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5505942142040245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17927.49466436875,\\\"ask\\\":18289.666273749935,\\\"price\\\":18108.580469059343,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.050594214204024546,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.550605298261696,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17931.422176395423,\\\"ask\\\":18293.673129453917,\\\"price\\\":18112.54765292467,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.05060529826169602,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5504722772334127,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17978.556691918893,\\\"ask\\\":18341.759857412202,\\\"price\\\":18160.158274665548,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.05047227723341274,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5505426788621822,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18003.634214539507,\\\"ask\\\":18367.343996651416,\\\"price\\\":18185.48910559546,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.05054267886218222,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5502371091121726,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18112.48016671398,\\\"ask\\\":18478.388856950627,\\\"price\\\":18295.434511832304,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.05023710911217261,\\\"countOfNegative\\\":0,\\\"countOfPositive\\\":10},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5505672288736985,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17994.235845906685,\\\"ask\\\":18357.755761985605,\\\"price\\\":18175.995803946145,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.050567228873698467,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5507637394978441,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18064.1637141301,\\\"ask\\\":18429.096314415558,\\\"price\\\":18246.63001427283,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.050763739497844074,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5504452562491235,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17951.538749205632,\\\"ask\\\":18314.19609767443,\\\"price\\\":18132.86742344003,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.05044525624912355,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5507043026390069,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17859.82500769258,\\\"ask\\\":18220.62955330253,\\\"price\\\":18040.227280497555,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.05070430263900694,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5510649544861921,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17986.859175291487,\\\"ask\\\":18350.23006772162,\\\"price\\\":18168.544621506553,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.05106495448619208,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5509088524413115,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17932.042158845532,\\\"ask\\\":18294.305636802008,\\\"price\\\":18113.17389782377,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.05090885244131149,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.551046182495632,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17980.41504893551,\\\"ask\\\":18343.655756994813,\\\"price\\\":18162.03540296516,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.051046182495631975,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5506855908689026,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18107.42919171338,\\\"ask\\\":18473.235842051028,\\\"price\\\":18290.332516882205,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.050685590868902564,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5510683748932635,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17971.704594419603,\\\"ask\\\":18334.769333700806,\\\"price\\\":18153.236964060205,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.051068374893263546,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5513995477144785,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17855.91096631929,\\\"ask\\\":18216.636440386344,\\\"price\\\":18036.273703352817,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.05139954771447852,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5514685759022184,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17831.963127218525,\\\"ask\\\":18192.204806556274,\\\"price\\\":18012.0839668874,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.05146857590221843,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5513979459268777,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17856.43380848129,\\\"ask\\\":18217.169845016266,\\\"price\\\":18036.80182674878,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.05139794592687774,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5512590421874025,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17904.691095517974,\\\"ask\\\":18266.40202674056,\\\"price\\\":18085.546561129268,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.051259042187402515,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5510439765525248,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17829.882926505292,\\\"ask\\\":18190.082581586204,\\\"price\\\":18009.982754045748,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.051043976552524795,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5513120963686414,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17923.538343941575,\\\"ask\\\":18285.630027657564,\\\"price\\\":18104.58418579957,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.051312096368641424,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.551178050414574,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17876.837509066387,\\\"ask\\\":18237.98574157278,\\\"price\\\":18057.411625319583,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.05117805041457402,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5515509395963683,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18007.090210328468,\\\"ask\\\":18370.869810537122,\\\"price\\\":18188.980010432795,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.05155093959636825,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5514847154538173,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18030.222749101853,\\\"ask\\\":18394.469673326133,\\\"price\\\":18212.346211213993,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.051484715453817276,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5518014793350569,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18141.155154715387,\\\"ask\\\":18507.64313763893,\\\"price\\\":18324.39914617716,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.051801479335056855,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5515535296862222,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18054.73551212027,\\\"ask\\\":18419.477643678256,\\\"price\\\":18237.106577899263,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.05155352968622218,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5518137375062928,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18145.863770420998,\\\"ask\\\":18512.44687689415,\\\"price\\\":18329.155323657575,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.05181373750629281,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5519859576330337,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18085.749787710043,\\\"ask\\\":18451.118470290046,\\\"price\\\":18268.434129000045,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.05198595763303371,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5520692499647696,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18056.81900280283,\\\"ask\\\":18421.603225081675,\\\"price\\\":18239.211113942252,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.05206924996476958,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5517794402724646,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18157.32056875105,\\\"ask\\\":18524.135125695517,\\\"price\\\":18340.727847223283,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.051779440272464616,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5519261285158277,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18106.027211542685,\\\"ask\\\":18471.805539048597,\\\"price\\\":18288.91637529564,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.051926128515827674,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5523190907881841,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17970.035062420673,\\\"ask\\\":18333.06607378271,\\\"price\\\":18151.55056810169,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.052319090788184086,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5521261619992637,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17904.013280562533,\\\"ask\\\":18265.710518553693,\\\"price\\\":18084.861899558113,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.052126161999263676,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5520688812052689,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17884.360378386875,\\\"ask\\\":18245.660588051258,\\\"price\\\":18065.010483219066,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.05206888120526887,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5523033125612532,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17964.88169471573,\\\"ask\\\":18327.80859763928,\\\"price\\\":18146.345146177504,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.0523033125612532,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.552693134907965,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17831.977999521532,\\\"ask\\\":18192.219979309844,\\\"price\\\":18012.09898941569,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.05269313490796501,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5530328562101549,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17946.943692817204,\\\"ask\\\":18309.508211864017,\\\"price\\\":18128.22595234061,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.053032856210154855,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5532438547597394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18018.34808924748,\\\"ask\\\":18382.355121353492,\\\"price\\\":18200.351605300486,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.05324385475973936,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5535005478508365,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17931.89690971211,\\\"ask\\\":18294.157453342657,\\\"price\\\":18113.027181527385,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.053500547850836466,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.553181384775716,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17825.55669974104,\\\"ask\\\":18185.668956301462,\\\"price\\\":18005.61282802125,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.05318138477571599,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[18288.91637529564,18151.55056810169,18084.861899558113,18065.010483219066,18146.345146177504,18012.09898941569,18128.22595234061,18200.351605300486,18113.027181527385,18005.61282802125]}],[\\\"WDS\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.515,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6645.091,\\\"ask\\\":6792.909,\\\"price\\\":6719,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.015000000000000013},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5150854945665128,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6648.878461163219,\\\"ask\\\":6796.78071206877,\\\"price\\\":6722.829586615995,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.015085494566512758},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.511476262725808,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6807.954080071172,\\\"ask\\\":6959.394919061632,\\\"price\\\":6883.674499566402,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.01147626272580804},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5104155422331748,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6870.878192024439,\\\"ask\\\":7023.718758479987,\\\"price\\\":6947.298475252213,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.010415542233174757},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5086383216836764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6988.117080241631,\\\"ask\\\":7143.565589609999,\\\"price\\\":7065.841334925815,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.008638321683676398},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4986383216836764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6938.200949243819,\\\"ask\\\":7092.539089671892,\\\"price\\\":7015.370019457856,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.0013616783163236112},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5086383216836764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6801.851331837739,\\\"ask\\\":6953.156417075787,\\\"price\\\":6877.503874456764,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.008638321683676398},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4986383216836764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6929.839471496474,\\\"ask\\\":7083.991613430672,\\\"price\\\":7006.915542463574,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.0013616783163236112},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5086383216836764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6965.387380075776,\\\"ask\\\":7120.330274273619,\\\"price\\\":7042.858827174698,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.008638321683676398},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4986383216836764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6816.821606120684,\\\"ask\\\":6968.459700493439,\\\"price\\\":6892.640653307062,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.0013616783163236112},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4886383216836764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6678.531642251193,\\\"ask\\\":6827.093519025234,\\\"price\\\":6752.812580638214,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.01136167831632362,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48827036356472514,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6656.9724413195945,\\\"ask\\\":6805.054740317603,\\\"price\\\":6731.013590818599,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.01172963643527486,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4870672309265974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6725.254360025804,\\\"ask\\\":6874.855569247813,\\\"price\\\":6800.054964636809,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.012932769073402572,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48476829618915673,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6607.793923651256,\\\"ask\\\":6754.782261690009,\\\"price\\\":6681.288092670633,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.015231703810843267,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48467144068831014,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6603.594823590162,\\\"ask\\\":6750.489753943027,\\\"price\\\":6677.0422887665945,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.01532855931168986,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4853741331871327,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6633.867052398133,\\\"ask\\\":6781.435379145108,\\\"price\\\":6707.651215771621,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.014625866812867316,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48791702111862684,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6520.500089623504,\\\"ask\\\":6665.546603245058,\\\"price\\\":6593.023346434281,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.012082978881373163,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4885391126066765,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6554.070847657644,\\\"ask\\\":6699.864132438704,\\\"price\\\":6626.967490048174,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.011460887393323516,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4914137793769917,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6393.701407281359,\\\"ask\\\":6535.92732331795,\\\"price\\\":6464.814365299655,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.00858622062300829,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5014137793769917,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6378.811729566463,\\\"ask\\\":6520.706429314149,\\\"price\\\":6449.759079440307,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.0014137793769917195,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5114137793769917,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6323.110024988762,\\\"ask\\\":6463.765657496096,\\\"price\\\":6393.437841242429,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.011413779376991728,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5106772678922631,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6282.569687075217,\\\"ask\\\":6422.323512267993,\\\"price\\\":6352.446599671605,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.010677267892263087,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5110728376757723,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6259.380031920808,\\\"ask\\\":6398.618010386183,\\\"price\\\":6328.999021153496,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.011072837675772274,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5123060698187696,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6190.434357359756,\\\"ask\\\":6328.138660556838,\\\"price\\\":6259.286508958297,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.012306069818769583,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5128177544537651,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6164.801201534362,\\\"ask\\\":6301.935303085176,\\\"price\\\":6233.36825230977,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.012817754453765096,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5103961237597894,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6281.27146054692,\\\"ask\\\":6420.9964070909355,\\\"price\\\":6351.133933818928,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.010396123759789377,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5130455094813476,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6441.345650748189,\\\"ask\\\":6584.631398287582,\\\"price\\\":6512.988524517886,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.013045509481347639,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5109302791341203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6545.787181505758,\\\"ask\\\":6691.396198687888,\\\"price\\\":6618.591690096823,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.010930279134120258,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5133297780524768,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6689.485334765031,\\\"ask\\\":6838.290873051007,\\\"price\\\":6763.88810390802,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.013329778052476815,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5154239200625593,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6794.57884952734,\\\"ask\\\":6945.72216063917,\\\"price\\\":6870.150505083256,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.015423920062559326,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5152939333910269,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6800.305050684584,\\\"ask\\\":6951.575739375241,\\\"price\\\":6875.940395029913,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.015293933391026915,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5163285365055268,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6754.611494223429,\\\"ask\\\":6904.86574384215,\\\"price\\\":6829.73861903279,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.01632853650552679,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5145682733250756,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6827.4281481073185,\\\"ask\\\":6979.302181735589,\\\"price\\\":6903.365164921454,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.014568273325075598,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5149163149697268,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6811.156034759244,\\\"ask\\\":6962.668100244283,\\\"price\\\":6886.912067501764,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.014916314969726785,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5178345054172387,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6944.407783046184,\\\"ask\\\":7098.88399257805,\\\"price\\\":7021.6458878121175,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.017834505417238744,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5190162996800691,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6990.424541485846,\\\"ask\\\":7145.924379617987,\\\"price\\\":7068.174460551917,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.019016299680069126,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5235700292700852,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7157.820426157888,\\\"ask\\\":7317.043934120955,\\\"price\\\":7237.432180139422,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.023570029270085224,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5224805789497642,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7124.887877405635,\\\"ask\\\":7283.3788109778525,\\\"price\\\":7204.133344191744,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.022480578949764185,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5175278411660392,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7281.857595463543,\\\"ask\\\":7443.840272005704,\\\"price\\\":7362.848933734624,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.017527841166039226,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5201278928728164,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7389.875497327441,\\\"ask\\\":7554.260998784673,\\\"price\\\":7472.068248056057,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.020127892872816355,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.51557729140353,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7226.495741936067,\\\"ask\\\":7387.24691111968,\\\"price\\\":7306.871326527874,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.015577291403530036,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5195480596508592,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7410.704530795441,\\\"ask\\\":7575.553367678655,\\\"price\\\":7493.128949237049,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.01954805965085915,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5213387017679217,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7343.437149384963,\\\"ask\\\":7506.789644113444,\\\"price\\\":7425.113396749204,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.02133870176792174,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5205320993118151,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7315.783503878547,\\\"ask\\\":7478.52085179091,\\\"price\\\":7397.152177834729,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.0205320993118151,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5252956382412467,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7485.5129552647695,\\\"ask\\\":7652.02588247996,\\\"price\\\":7568.769418872365,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.0252956382412467,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5246829891415883,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7503.6425344783365,\\\"ask\\\":7670.5587485921105,\\\"price\\\":7587.100641535224,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.024682989141588285,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5222145126440177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7578.6843583687905,\\\"ask\\\":7747.269854712686,\\\"price\\\":7662.9771065407385,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.022214512644017748,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5232500734113974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7543.519182169733,\\\"ask\\\":7711.32244001375,\\\"price\\\":7627.420811091742,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.0232500734113974,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5197580530198352,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7656.818277368991,\\\"ask\\\":7827.141838645147,\\\"price\\\":7741.98005800707,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.019758053019835242,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5209430963091597,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7611.168213537718,\\\"ask\\\":7780.476303222075,\\\"price\\\":7695.822258379897,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.020943096309159692,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5256470432285419,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7443.972069438021,\\\"ask\\\":7609.560932458887,\\\"price\\\":7526.766500948454,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.025647043228541944,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5299279515223784,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7568.224060153583,\\\"ask\\\":7736.5768703895565,\\\"price\\\":7652.40046527157,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.02992795152237837,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5342324259557896,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7460.915282078546,\\\"ask\\\":7626.8810416394435,\\\"price\\\":7543.898161858995,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.03423242595578957,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5351640205463942,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7481.219272005291,\\\"ask\\\":7647.6366875605145,\\\"price\\\":7564.427979782903,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.035164020546394226,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5288091518028873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7616.420440063597,\\\"ask\\\":7785.845363907277,\\\"price\\\":7701.1329019854375,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.028809151802887345,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5351234257683647,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7453.067114135328,\\\"ask\\\":7618.858293620642,\\\"price\\\":7535.962703877985,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.03512342576836469,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5348740767493448,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7447.7797694678675,\\\"ask\\\":7613.453333601632,\\\"price\\\":7530.61655153475,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.03487407674934484,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5378446475296016,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7511.219891825758,\\\"ask\\\":7678.304661916926,\\\"price\\\":7594.762276871343,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.037844647529601594,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5395552423225566,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7545.170937678798,\\\"ask\\\":7713.010938314726,\\\"price\\\":7629.0909379967625,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.03955524232255658,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5318058254198637,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7692.991230931842,\\\"ask\\\":7864.119448404542,\\\"price\\\":7778.555339668193,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.031805825419863654,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5250330538591734,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7532.591305759366,\\\"ask\\\":7700.151476362708,\\\"price\\\":7616.371391061038,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.025033053859173426,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5218806373863497,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7438.912956028604,\\\"ask\\\":7604.389280631868,\\\"price\\\":7521.651118330236,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.02188063738634971,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5263290578589862,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7590.149010552334,\\\"ask\\\":7758.989534548442,\\\"price\\\":7674.569272550389,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.026329057858986205,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5307103822033633,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7716.453965387746,\\\"ask\\\":7888.1041041526905,\\\"price\\\":7802.2790347702185,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.030710382203363307,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5236318788467218,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7542.602857667039,\\\"ask\\\":7710.385732155081,\\\"price\\\":7626.49429491106,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.0236318788467218,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.525972853807845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7468.618687994481,\\\"ask\\\":7634.755807444306,\\\"price\\\":7551.687247719394,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.025972853807844976,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5237024409931481,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7533.905497456234,\\\"ask\\\":7701.494901848586,\\\"price\\\":7617.70019965241,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.02370244099314811,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5182767092580989,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7365.306090314485,\\\"ask\\\":7529.14505288973,\\\"price\\\":7447.225571602108,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.018276709258098878,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5227495163476741,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7189.362857298379,\\\"ask\\\":7349.288016914723,\\\"price\\\":7269.325437106551,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.02274951634767408,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5275301745217976,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7340.442492510043,\\\"ask\\\":7503.728372019871,\\\"price\\\":7422.0854322649575,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.027530174521797623,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5263320857097459,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7372.387448103487,\\\"ask\\\":7536.383933298913,\\\"price\\\":7454.3856907012005,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.026332085709745878,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5251611176829006,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7339.748140710196,\\\"ask\\\":7503.018574578369,\\\"price\\\":7421.383357644283,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.025161117682900636,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5229576282224496,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7276.028191398934,\\\"ask\\\":7437.881194645421,\\\"price\\\":7356.954693022178,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.022957628222449622,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5260789635391504,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7374.953583600014,\\\"ask\\\":7539.0071516881835,\\\"price\\\":7456.980367644099,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.0260789635391504,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.5216399383078243,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7500.4861991440075,\\\"ask\\\":7667.332201551659,\\\"price\\\":7583.909200347834,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.02163993830782429,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4765281571298766,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7437.524673158304,\\\"ask\\\":7602.970115837254,\\\"price\\\":7520.247394497779,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.023471842870123383,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4820700242624397,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7613.129860027837,\\\"ask\\\":7782.481585933409,\\\"price\\\":7697.805722980624,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.017929975737560278,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4828164254718218,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7581.568790470082,\\\"ask\\\":7750.218450116534,\\\"price\\\":7665.893620293308,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.017183574528178203,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48624239679722314,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7433.3662178801715,\\\"ask\\\":7598.719157003895,\\\"price\\\":7516.042687442034,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.013757603202776858,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4883763111697228,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7548.663677580027,\\\"ask\\\":7716.581373137923,\\\"price\\\":7632.6225253589755,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.011623688830277201,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4864751506438336,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7672.128970023562,\\\"ask\\\":7842.793112936119,\\\"price\\\":7757.461041479841,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.01352484935616638,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48793189818737664,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7590.373838029566,\\\"ask\\\":7759.21936324357,\\\"price\\\":7674.796600636569,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.012068101812623355,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4885584699388037,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7551.168427762358,\\\"ask\\\":7719.141840715614,\\\"price\\\":7635.155134238987,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.011441530061196303,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48649485547151505,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7687.362628442842,\\\"ask\\\":7858.3656393889905,\\\"price\\\":7772.864133915917,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.013505144528484947,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48525505994036777,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7617.433278794327,\\\"ask\\\":7786.880732923219,\\\"price\\\":7702.157005858773,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.014744940059632228,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48887099646453896,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7804.237396693985,\\\"ask\\\":7977.840250816601,\\\"price\\\":7891.038823755293,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.011129003535461035,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48754113621644174,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7712.08187634801,\\\"ask\\\":7883.634759340584,\\\"price\\\":7797.858317844298,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.01245886378355826,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4870974820223404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7739.544231897723,\\\"ask\\\":7911.708006520321,\\\"price\\\":7825.626119209022,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.012902517977659622,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4852150261680375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7852.4628914508285,\\\"ask\\\":8027.138506831939,\\\"price\\\":7939.800699141384,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.014784973831962478,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.481644181402658,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7667.283799942954,\\\"ask\\\":7837.84016354128,\\\"price\\\":7752.5619817421175,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.018355818597341977,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4854790931510702,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7510.376437397199,\\\"ask\\\":7677.442445104719,\\\"price\\\":7593.909441250959,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.014520906848929815,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48735124497652416,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7414.779154977118,\\\"ask\\\":7579.71863061867,\\\"price\\\":7497.248892797895,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.012648755023475844,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.48537516123431523,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7300.721782578275,\\\"ask\\\":7463.124087145233,\\\"price\\\":7381.922934861755,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.014624838765684767,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0256,\\\"forecast\\\":0.4882023732140779,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7162.2639253908255,\\\"ask\\\":7321.586277623987,\\\"price\\\":7241.925101507407,\\\"maxShares\\\":13400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.01179762678592211,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[7702.157005858773,7891.038823755293,7797.858317844298,7825.626119209022,7939.800699141384,7752.5619817421175,7593.909441250959,7497.248892797895,7381.922934861755,7241.925101507407]}],[\\\"LXO\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.56,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5891.495,\\\"ask\\\":5998.504999999999,\\\"price\\\":5945,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.06000000000000005},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5599843705245594,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5893.029682940184,\\\"ask\\\":6000.067558109632,\\\"price\\\":5946.548620524908,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.059984370524559405},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5593284681102915,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5957.467341660138,\\\"ask\\\":6065.675628390594,\\\"price\\\":6011.571485025366,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.059328468110291466},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5595790845225891,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5982.632985390757,\\\"ask\\\":6091.2983675673795,\\\"price\\\":6036.965676479069,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.05957908452258909},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5600437058744291,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5936.339056913932,\\\"ask\\\":6044.163580652025,\\\"price\\\":5990.251318782979,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.06004370587442909},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5598462784740167,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5955.8581050956645,\\\"ask\\\":6064.037162504062,\\\"price\\\":6009.947633799863,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.05984627847401669},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5603945678538789,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6010.423465386324,\\\"ask\\\":6119.593619147125,\\\"price\\\":6065.008542266724,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.06039456785387887},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5598751864861405,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5959.175729850713,\\\"ask\\\":6067.415046840937,\\\"price\\\":6013.295388345825,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.05987518648614054},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5597348134621786,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5945.237552412265,\\\"ask\\\":6053.223703717432,\\\"price\\\":5999.230628064849,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.05973481346217857},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.560329804260368,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6004.455308888145,\\\"ask\\\":6113.517060210028,\\\"price\\\":6058.986184549087,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.06032980426036805},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5609007403390605,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6061.27896695847,\\\"ask\\\":6171.372833159531,\\\"price\\\":6116.325900059001,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.060900740339060455,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5608105989243616,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6070.250487795888,\\\"ask\\\":6180.50730795767,\\\"price\\\":6125.378897876779,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.06081059892436158,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5605255272054837,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6041.926766616352,\\\"ask\\\":6151.669129683046,\\\"price\\\":6096.7979481497,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.060525527205483654,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5600338052532629,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5993.236468940415,\\\"ask\\\":6102.094447185548,\\\"price\\\":6047.665458062982,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.06003380525326285,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.560051252125217,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5991.495235817648,\\\"ask\\\":6100.321587225031,\\\"price\\\":6045.90841152134,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.060051252125217,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5601770669863438,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6004.0481654295945,\\\"ask\\\":6113.102521612977,\\\"price\\\":6058.575343521286,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.06017706698634384,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5596988967727857,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6051.756655345337,\\\"ask\\\":6161.677563313264,\\\"price\\\":6106.717109329301,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.059698896772785726,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5595584239063588,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6065.996576855611,\\\"ask\\\":6176.176131228367,\\\"price\\\":6121.08635404199,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.05955842390635879,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.560241168635841,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5997.247459172651,\\\"ask\\\":6106.178290923516,\\\"price\\\":6051.712875048084,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.06024116863584095,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5601769021137024,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6003.645446551263,\\\"ask\\\":6112.692487961881,\\\"price\\\":6058.168967256573,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.06017690211370241,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5604191798291797,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5979.57114585009,\\\"ask\\\":6088.18091439227,\\\"price\\\":6033.8760301211805,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.06041917982917966,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5605973646775366,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5997.205760899081,\\\"ask\\\":6106.135835264553,\\\"price\\\":6051.670798081817,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.060597364677536625,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5604947610762667,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5987.068442444494,\\\"ask\\\":6095.814387917754,\\\"price\\\":6041.441415181124,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.06049476107626672,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5601868328044732,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6017.543604355905,\\\"ask\\\":6126.843084556112,\\\"price\\\":6072.193344456009,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.060186832804473234,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.560301207615077,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6028.9789196562515,\\\"ask\\\":6138.486104877051,\\\"price\\\":6083.732512266652,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.06030120761507696,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5597805312420103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5977.36679140002,\\\"ask\\\":6085.936521213541,\\\"price\\\":6031.651656306781,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.059780531242010326,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5590842584623053,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5908.549037907775,\\\"ask\\\":6015.868798434857,\\\"price\\\":5962.208918171316,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.05908425846230525,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5595220973276043,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5865.086315280864,\\\"ask\\\":5971.616641895451,\\\"price\\\":5918.351478588158,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.05952209732760427,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5589249060889219,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5806.825842724873,\\\"ask\\\":5912.297956921691,\\\"price\\\":5859.561899823282,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.05892490608892187,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.559347991457361,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5765.42961362255,\\\"ask\\\":5870.149828602576,\\\"price\\\":5817.789721112564,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.05934799145736103,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5593708503916628,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5767.650271365514,\\\"ask\\\":5872.41082119859,\\\"price\\\":5820.0305462820525,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.05937085039166279,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5595544085759145,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5749.873259780194,\\\"ask\\\":5854.310917374586,\\\"price\\\":5802.09208857739,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.05955440857591454,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5592609882765082,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5721.682938340995,\\\"ask\\\":5825.608561842647,\\\"price\\\":5773.645750091821,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.059260988276508164,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5593256932878251,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5727.930244875096,\\\"ask\\\":5831.969341149315,\\\"price\\\":5779.949793012206,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.05932569328782511,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5587952477446365,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5779.145071060917,\\\"ask\\\":5884.114406357684,\\\"price\\\":5831.629738709301,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.058795247744636514,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5586171866953188,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5796.64717667295,\\\"ask\\\":5901.93441096166,\\\"price\\\":5849.290793817306,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.05861718669531879,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5592587094896075,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5860.087295585755,\\\"ask\\\":5966.526822649876,\\\"price\\\":5913.307059117816,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.05925870948960754,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5591335264781658,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5872.466629886,\\\"ask\\\":5979.1310086326675,\\\"price\\\":5925.798819259334,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.05913352647816583,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5585381145653997,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5931.596142313214,\\\"ask\\\":6039.334518258357,\\\"price\\\":5985.465330285786,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.0585381145653997,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5589349753461401,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":5971.809563834422,\\\"ask\\\":6080.278355104875,\\\"price\\\":6026.043959469649,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.05893497534614012,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5583260143275774,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6033.514845177048,\\\"ask\\\":6143.104418550596,\\\"price\\\":6088.309631863823,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.05832601432757745,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5576465122441436,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6103.8057086106755,\\\"ask\\\":6214.672008060717,\\\"price\\\":6159.238858335697,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.05764651224414363,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5574051751537266,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6129.359287705767,\\\"ask\\\":6240.689728854812,\\\"price\\\":6185.024508280289,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.05740517515372656,\\\"countOfNegative\\\":0,\\\"countOfPositive\\\":10},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5575043470207087,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6139.948228551928,\\\"ask\\\":6251.471001623507,\\\"price\\\":6195.709615087718,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.057504347020708724,\\\"countOfNegative\\\":0,\\\"countOfPositive\\\":10},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5581140845621042,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6075.527409306779,\\\"ask\\\":6185.880076680665,\\\"price\\\":6130.703742993723,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.05811408456210421,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5581784115854415,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6068.809787034282,\\\"ask\\\":6179.040439069213,\\\"price\\\":6123.925113051748,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.05817841158544146,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5579124989338556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6096.548139774809,\\\"ask\\\":6207.28261658202,\\\"price\\\":6151.915378178414,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.05791249893385564,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5580358824096532,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6109.536929996269,\\\"ask\\\":6220.507328321124,\\\"price\\\":6165.022129158697,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.05803588240965318,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5576375047911183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6151.4748255096465,\\\"ask\\\":6263.206961593574,\\\"price\\\":6207.340893551611,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.05763750479111829,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5577954989883355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6168.337063565932,\\\"ask\\\":6280.375476425857,\\\"price\\\":6224.356269995895,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.05779549898833547,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.558388781349565,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6231.656277726038,\\\"ask\\\":6344.844787311375,\\\"price\\\":6288.250532518707,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.058388781349565044,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5579433570270687,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6279.195055062717,\\\"ask\\\":6393.247033863048,\\\"price\\\":6336.221044462883,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.057943357027068654,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5575624730612657,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6320.470618601524,\\\"ask\\\":6435.272304913155,\\\"price\\\":6377.87146175734,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.05756247306126572,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5576340667305711,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6312.619260732952,\\\"ask\\\":6427.278339131734,\\\"price\\\":6369.948799932344,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.05763406673057114,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5571580379386841,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6260.907273455832,\\\"ask\\\":6374.6270826608825,\\\"price\\\":6317.767178058358,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.057158037938684125,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5565854843276555,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6323.622950848007,\\\"ask\\\":6438.481894455741,\\\"price\\\":6381.052422651875,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.05658548432765553,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5566038438648604,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6325.674692424757,\\\"ask\\\":6440.570902781614,\\\"price\\\":6383.122797603186,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.05660384386486039,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5563834857711838,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6350.300469072875,\\\"ask\\\":6465.643969015671,\\\"price\\\":6407.9722190442735,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.056383485771183794,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5562670086846626,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6363.418928973943,\\\"ask\\\":6479.000705685881,\\\"price\\\":6421.209817329913,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.05626700868466261,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5557632011014675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6420.396166371285,\\\"ask\\\":6537.012847496091,\\\"price\\\":6478.704506933688,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.055763201101467486,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5552205091887121,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6358.514596083509,\\\"ask\\\":6474.007293086034,\\\"price\\\":6416.260944584772,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.05522050918871213,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5549026929688137,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6395.11040265585,\\\"ask\\\":6511.267806538599,\\\"price\\\":6453.189104597224,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.05490269296881367,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5554128283026298,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6454.5313819128,\\\"ask\\\":6571.768077043405,\\\"price\\\":6513.149729478103,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.055412828302629835,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5558342591288629,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6503.619987864672,\\\"ask\\\":6621.748302477754,\\\"price\\\":6562.6841451712135,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.05583425912886286,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.555246089120904,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6435.823647321657,\\\"ask\\\":6552.720545053028,\\\"price\\\":6494.272096187343,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.05524608912090401,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5549959705416088,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6464.960896543777,\\\"ask\\\":6582.387027863442,\\\"price\\\":6523.67396220361,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.05499597054160876,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5547762544194386,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6490.789264043821,\\\"ask\\\":6608.684528173779,\\\"price\\\":6549.7368961088005,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.054776254419438564,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5553493188741967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6423.586258004963,\\\"ask\\\":6540.260882267415,\\\"price\\\":6481.9235701361895,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.055349318874196696,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5559683897051937,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6495.432758804044,\\\"ask\\\":6613.412364917538,\\\"price\\\":6554.422561860792,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.05596838970519369,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5565059215921145,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6557.816226429227,\\\"ask\\\":6676.928932862855,\\\"price\\\":6617.372579646041,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.05650592159211454,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5566183095828753,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6570.859457451748,\\\"ask\\\":6690.209074236946,\\\"price\\\":6630.534265844348,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.05661830958287528,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.556733379704477,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6584.213964189371,\\\"ask\\\":6703.806145173638,\\\"price\\\":6644.010054681505,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.056733379704477005,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.556960452758471,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6610.56701385407,\\\"ask\\\":6730.637857698038,\\\"price\\\":6670.602435776054,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.05696045275847095,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.556606510239992,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6569.743749015413,\\\"ask\\\":6689.073100662515,\\\"price\\\":6629.4084248389645,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.05660651023999197,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.5570468719652297,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6519.029948380553,\\\"ask\\\":6637.438161368293,\\\"price\\\":6578.234054874423,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.05704687196522973,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.443173839329401,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6493.905376017945,\\\"ask\\\":6611.85723955813,\\\"price\\\":6552.881307788038,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.05682616067059898,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4425606379382433,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6563.979999459487,\\\"ask\\\":6683.204661407287,\\\"price\\\":6623.592330433387,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.057439362061756705,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4426699198130005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6576.46837005522,\\\"ask\\\":6695.919864163185,\\\"price\\\":6636.194117109202,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.05733008018699948,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4421475252376437,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6636.393480753065,\\\"ask\\\":6756.933422885814,\\\"price\\\":6696.66345181944,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.057852474762356276,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.44255763683167054,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6589.67976481308,\\\"ask\\\":6709.371223709785,\\\"price\\\":6649.525494261433,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.05744236316832946,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.44298702790142597,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6540.786316172871,\\\"ask\\\":6659.589700321319,\\\"price\\\":6600.188008247095,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.05701297209857403,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4427063737725223,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6572.984228653858,\\\"ask\\\":6692.372438659679,\\\"price\\\":6632.678333656769,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.05729362622747769,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.44257042225721327,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6588.581202084016,\\\"ask\\\":6708.252707268185,\\\"price\\\":6648.4169546761,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.05742957774278673,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4430438197761173,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6534.71492008266,\\\"ask\\\":6653.408026602829,\\\"price\\\":6594.061473342745,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.05695618022388271,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4432827865840231,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6507.412254628208,\\\"ask\\\":6625.609449969587,\\\"price\\\":6566.510852298898,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.05671721341597691,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4439184666142663,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6435.28630299325,\\\"ask\\\":6552.173440686365,\\\"price\\\":6493.729871839808,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.056081533385733684,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.444224744400992,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6400.332202012122,\\\"ask\\\":6516.584451897306,\\\"price\\\":6458.458326954715,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.05577525559900798,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.44431551675945935,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6410.748528082016,\\\"ask\\\":6527.189974606209,\\\"price\\\":6468.969251344112,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.05568448324054065,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4446868214346526,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6453.495461544303,\\\"ask\\\":6570.713340765087,\\\"price\\\":6512.104401154696,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.0553131785653474,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4452973766181995,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6383.038522389729,\\\"ask\\\":6498.976659022438,\\\"price\\\":6441.007590706084,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.054702623381800486,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4447750578061897,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6322.667592777399,\\\"ask\\\":6437.509183766291,\\\"price\\\":6380.088388271845,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.0552249421938103,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.4444496496061404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6285.630060767465,\\\"ask\\\":6399.798921608851,\\\"price\\\":6342.714491188158,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.05555035039385958,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.44405301531109953,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6241.06829462576,\\\"ask\\\":6354.427759109376,\\\"price\\\":6297.748026867568,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.05594698468890047,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.011699999999999999,\\\"forecast\\\":0.44355871615746445,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6296.208974556349,\\\"ask\\\":6410.569985194103,\\\"price\\\":6353.389479875226,\\\"maxShares\\\":10100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.05644128384253555,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[6566.510852298898,6493.729871839808,6458.458326954715,6468.969251344112,6512.104401154696,6441.007590706084,6380.088388271845,6342.714491188158,6297.748026867568,6353.389479875226]}],[\\\"RHOC\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.51,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6666.457,\\\"ask\\\":6787.543,\\\"price\\\":6727,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.52,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6665.67044879965,\\\"ask\\\":6786.7421622995425,\\\"price\\\":6726.206305549596,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.020000000000000018},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5190093479849449,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6632.816384217076,\\\"ask\\\":6753.291353859767,\\\"price\\\":6693.053869038422,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.019009347984944913},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5186455974819325,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6620.148499192794,\\\"ask\\\":6740.393376070159,\\\"price\\\":6680.270937631477,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.018645597481932508},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5179869217681013,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6643.534883257985,\\\"ask\\\":6764.204538049754,\\\"price\\\":6703.869710653869,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.01798692176810135},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5182548304525433,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6653.43018782185,\\\"ask\\\":6774.2795756934875,\\\"price\\\":6713.854881757669,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.01825483045254328},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5190124313776046,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6681.042851101459,\\\"ask\\\":6802.393780788468,\\\"price\\\":6741.718315944963,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.019012431377604555},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5197530867119242,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6655.116930543322,\\\"ask\\\":6775.996955517872,\\\"price\\\":6715.556943030598,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.019753086711924217},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5199628655882096,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6648.056657506344,\\\"ask\\\":6768.808443414632,\\\"price\\\":6708.4325504604885,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.01996286558820959},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5190621335139181,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6678.052941540133,\\\"ask\\\":6799.349564090811,\\\"price\\\":6738.701252815473,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.019062133513918056},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.518244954722708,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6649.546852987917,\\\"ask\\\":6770.325706018979,\\\"price\\\":6709.9362795034485,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.01824495472270804,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5183672851789108,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6654.005302528794,\\\"ask\\\":6774.865136479872,\\\"price\\\":6714.435219504333,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.01836728517891084,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5179772445657238,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6639.905055192271,\\\"ask\\\":6760.508779706358,\\\"price\\\":6700.2069174493145,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.017977244565723804,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5173156466159986,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6615.558499059805,\\\"ask\\\":6735.720005601758,\\\"price\\\":6675.639252330782,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.017315646615998603,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5173384421842849,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6614.687693779702,\\\"ask\\\":6734.833383474995,\\\"price\\\":6674.760538627349,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.01733844218428493,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5171738876105849,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6608.415820928108,\\\"ask\\\":6728.447591641231,\\\"price\\\":6668.431706284669,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.017173887610584915,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5165557144758184,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6632.202777128668,\\\"ask\\\":6752.666601536655,\\\"price\\\":6692.434689332662,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.016555714475818384,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5163792472433468,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6639.272036936089,\\\"ask\\\":6759.864263641284,\\\"price\\\":6699.568150288686,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.01637924724334683,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5155286986979377,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6604.973448754113,\\\"ask\\\":6724.942694039252,\\\"price\\\":6664.9580713966825,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.015528698697937715,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5154536546104305,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6601.783066895251,\\\"ask\\\":6721.694363771248,\\\"price\\\":6661.73871533325,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.015453654610430467,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5151718131681434,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6589.7647524642225,\\\"ask\\\":6709.457755031684,\\\"price\\\":6649.611253747954,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.015171813168143422,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5153744990225649,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6580.972987642561,\\\"ask\\\":6700.506301242526,\\\"price\\\":6640.739644442544,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.015374499022564936,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5152565756618173,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6575.929209167269,\\\"ask\\\":6695.370910241952,\\\"price\\\":6635.650059704611,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.015256575661817262,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5156083619225573,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6591.091992734581,\\\"ask\\\":6710.809102592524,\\\"price\\\":6650.950547663553,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.015608361922557323,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5154739999928937,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6585.423043282122,\\\"ask\\\":6705.037185339718,\\\"price\\\":6645.230114310921,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.015473999992893672,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.514868750461906,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6559.765199079235,\\\"ask\\\":6678.9133056215405,\\\"price\\\":6619.339252350388,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.014868750461906055,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5156532345294154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6594.374908203507,\\\"ask\\\":6714.151647202158,\\\"price\\\":6654.263277702833,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.01565323452941536,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.515127778208818,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6616.511265832293,\\\"ask\\\":6736.690077926118,\\\"price\\\":6676.600671879206,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.015127778208818055,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5158153219902946,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6586.575876625194,\\\"ask\\\":6706.210958138063,\\\"price\\\":6646.393417381629,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.015815321990294562,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5163297174818156,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6607.998803945778,\\\"ask\\\":6728.023000182935,\\\"price\\\":6668.010902064357,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.016329717481815553,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5163012257640969,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6609.151752469334,\\\"ask\\\":6729.196890253842,\\\"price\\\":6669.174321361588,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.01630122576409687,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5160729232186967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6618.408026751161,\\\"ask\\\":6738.621290607387,\\\"price\\\":6678.514658679274,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.01607292321869669,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.51643164778378,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6633.179363045353,\\\"ask\\\":6753.660925643553,\\\"price\\\":6693.420144344454,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.016431647783780035,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5163503759324792,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6629.900177242234,\\\"ask\\\":6750.3221784434045,\\\"price\\\":6690.111177842819,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.016350375932479233,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5170126164265393,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6656.7533113051895,\\\"ask\\\":6777.663058634647,\\\"price\\\":6717.208184969919,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.017012616426539284,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5167792234289817,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6665.885590376047,\\\"ask\\\":6786.961211593775,\\\"price\\\":6726.4234009849115,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.01677922342898175,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5159473658338465,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6698.932814403591,\\\"ask\\\":6820.608687924543,\\\"price\\\":6759.770751164067,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.015947365833846483,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5160999720311022,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6692.528488239272,\\\"ask\\\":6814.08803696612,\\\"price\\\":6753.308262602696,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.01609997203110225,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5153656291827087,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6662.141503970134,\\\"ask\\\":6783.149119582104,\\\"price\\\":6722.645311776119,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.015365629182708673,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.514893740232269,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6641.744254446201,\\\"ask\\\":6762.3813852030435,\\\"price\\\":6702.062819824622,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.01489374023226897,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5141966160155212,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6610.801390734865,\\\"ask\\\":6730.876491676568,\\\"price\\\":6670.838941205717,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.014196616015521246,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5134474064109998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6645.68911249973,\\\"ask\\\":6766.397895572378,\\\"price\\\":6706.043504036054,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.01344740641099984,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5137024295425089,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6658.292319368814,\\\"ask\\\":6779.230020426976,\\\"price\\\":6718.761169897895,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.013702429542508887,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5135951973888947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6663.502950246964,\\\"ask\\\":6784.535294449229,\\\"price\\\":6724.019122348097,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.013595197388894698,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5142482043100418,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6695.50920525838,\\\"ask\\\":6817.122894153083,\\\"price\\\":6756.3160497057315,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.014248204310041812,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5143196477234849,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6692.153622423741,\\\"ask\\\":6813.706362286129,\\\"price\\\":6752.929992354935,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.01431964772348493,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5146161305093775,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6706.009468516539,\\\"ask\\\":6827.813878640955,\\\"price\\\":6766.9116735787475,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.01461613050937749,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5147571915603844,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6699.543703343916,\\\"ask\\\":6821.230672728568,\\\"price\\\":6760.387188036242,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.014757191560384353,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5142983190284004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6678.776154775102,\\\"ask\\\":6800.085913388575,\\\"price\\\":6739.431034081839,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.014298319028400397,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5144758650544277,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6687.069368562333,\\\"ask\\\":6808.529760725927,\\\"price\\\":6747.79956464413,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.014475865054427661,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5151489997137673,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6656.118100549738,\\\"ask\\\":6777.016310246908,\\\"price\\\":6716.5672053983235,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.015148999713767264,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5146254975485357,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6679.119567996516,\\\"ask\\\":6800.435564186159,\\\"price\\\":6739.777566091338,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.014625497548535704,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5141899960090085,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6699.007895521072,\\\"ask\\\":6820.685132775742,\\\"price\\\":6759.846514148408,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.014189996009008499,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5141100480358034,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6695.235727254187,\\\"ask\\\":6816.844448839025,\\\"price\\\":6756.040088046606,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.014110048035803402,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5146379733125513,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6720.285848736649,\\\"ask\\\":6842.349567482623,\\\"price\\\":6781.317708109636,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.014637973312551344,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5153021900339209,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6750.780003479283,\\\"ask\\\":6873.397601927947,\\\"price\\\":6812.088802703615,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.01530219003392086,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5153246805950511,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6749.787946015096,\\\"ask\\\":6872.38752525654,\\\"price\\\":6811.087735635819,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.015324680595051099,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5150544313299527,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6761.691131994512,\\\"ask\\\":6884.506914412172,\\\"price\\\":6823.099023203342,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.015054431329952656,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5149135534068986,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6755.369522052087,\\\"ask\\\":6878.070482089359,\\\"price\\\":6816.720002070723,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.014913553406898594,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5143086555938746,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6728.080244208427,\\\"ask\\\":6850.2855362323935,\\\"price\\\":6789.182890220411,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.01430865559387462,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5149394596706347,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6757.741314872758,\\\"ask\\\":6880.485354900718,\\\"price\\\":6819.113334886739,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.014939459670634703,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5153289534706939,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6740.168698611259,\\\"ask\\\":6862.593558929122,\\\"price\\\":6801.381128770191,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.015328953470693851,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5159741533420873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6768.538254209611,\\\"ask\\\":6891.47840413471,\\\"price\\\":6830.008329172161,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.015974153342087294,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5154238225169938,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6791.85676857683,\\\"ask\\\":6915.220463667024,\\\"price\\\":6853.538616121928,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.015423822516993813,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.514687811789493,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6824.266888933273,\\\"ask\\\":6948.2192643124845,\\\"price\\\":6886.243076622879,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.014687811789492966,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5143865864377586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6810.299968381773,\\\"ask\\\":6933.99865600122,\\\"price\\\":6872.149312191497,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.014386586437758586,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5146469491709862,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6822.6249790543125,\\\"ask\\\":6946.547531650656,\\\"price\\\":6884.586255352485,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.01464694917098619,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5139528071726329,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6854.958473775227,\\\"ask\\\":6979.468314873061,\\\"price\\\":6917.213394324144,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.01395280717263292,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5146597424609493,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6889.689922329608,\\\"ask\\\":7014.830607094423,\\\"price\\\":6952.260264712016,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.014659742460949254,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5152975325540435,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6859.845323088661,\\\"ask\\\":6984.44392633346,\\\"price\\\":6922.144624711061,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.015297532554043536,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5151597045907641,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6853.670291828072,\\\"ask\\\":6978.156735070154,\\\"price\\\":6915.913513449113,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.0151597045907641,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5152992727721778,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6859.980139707445,\\\"ask\\\":6984.581191690022,\\\"price\\\":6922.280665698734,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.015299272772177797,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5150218847265975,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6847.564957046779,\\\"ask\\\":6971.940506216145,\\\"price\\\":6909.752731631463,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.01502188472659749,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5145990469924075,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6866.839561424679,\\\"ask\\\":6991.565204316348,\\\"price\\\":6929.202382870514,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.01459904699240755,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5151135141992469,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6842.725945609649,\\\"ask\\\":6967.01360153394,\\\"price\\\":6904.869773571795,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.015113514199246891,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5148486347964423,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6830.754367631488,\\\"ask\\\":6954.824578143462,\\\"price\\\":6892.789472887475,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.014848634796442273,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5141228107532723,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6864.144142657836,\\\"ask\\\":6988.82082738825,\\\"price\\\":6926.482485023043,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.014122810753272264,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5142445273151597,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6858.233417047137,\\\"ask\\\":6982.802742482906,\\\"price\\\":6920.518079765022,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.014244527315159683,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5148324959502873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6830.041186407347,\\\"ask\\\":6954.098443072667,\\\"price\\\":6892.069814740007,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.01483249595028735,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5143561918152217,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6808.178624354985,\\\"ask\\\":6931.838781003208,\\\"price\\\":6870.008702679097,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.014356191815221742,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5138700645612535,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6831.232378594139,\\\"ask\\\":6955.311271444486,\\\"price\\\":6893.271825019313,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.013870064561253503,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5135607743004291,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6846.465426968186,\\\"ask\\\":6970.82100485459,\\\"price\\\":6908.643215911388,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.013560774300429124,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5134150096425063,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6853.82468735283,\\\"ask\\\":6978.313934953587,\\\"price\\\":6916.069311153208,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.013415009642506304,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5129140862059465,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6879.417225170239,\\\"ask\\\":7004.3713220956315,\\\"price\\\":6941.894273632935,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.012914086205946473,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5131595290732404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6892.492125415826,\\\"ask\\\":7017.68370791581,\\\"price\\\":6955.087916665819,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.013159529073240361,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5124914097403083,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6857.675185199351,\\\"ask\\\":6982.234371207008,\\\"price\\\":6919.95477820318,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.012491409740308268,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5128004372075713,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6840.751713628195,\\\"ask\\\":6965.0035106466685,\\\"price\\\":6902.877612137432,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.012800437207571291,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5127060687489035,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6845.794910082164,\\\"ask\\\":6970.138309054392,\\\"price\\\":6907.966609568279,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.012706068748903454,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5123222754102646,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6866.4729855443575,\\\"ask\\\":6991.191970145566,\\\"price\\\":6928.832477844962,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.01232227541026465,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5117061385005572,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6900.806639882085,\\\"ask\\\":7026.149242826461,\\\"price\\\":6963.477941354273,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.01170613850055724,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5111998113926006,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6871.087039102876,\\\"ask\\\":6995.8898309332,\\\"price\\\":6933.488435018038,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.011199811392600623,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5109008645714862,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6852.795468386109,\\\"ask\\\":6977.266021797763,\\\"price\\\":6915.030745091936,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.010900864571486202,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.511253441923848,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6830.7022582449235,\\\"ask\\\":6954.771522269553,\\\"price\\\":6892.736890257239,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.011253441923848029,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0053,\\\"forecast\\\":0.5108030521057982,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6858.040371935491,\\\"ask\\\":6982.606191001927,\\\"price\\\":6920.323281468709,\\\"maxShares\\\":5400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.010803052105798239,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[6955.087916665819,6919.95477820318,6902.877612137432,6907.966609568279,6928.832477844962,6963.477941354273,6933.488435018038,6915.030745091936,6892.736890257239,6920.323281468709]}],[\\\"APHE\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4530.066,\\\"ask\\\":4593.933999999999,\\\"price\\\":4562,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.09999999999999998},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6000423019990557,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4531.982308476547,\\\"ask\\\":4595.877325917303,\\\"price\\\":4563.929817196925,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.10004230199905573},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.601818750162505,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4612.45658273658,\\\"ask\\\":4677.486182090368,\\\"price\\\":4644.971382413474,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.10181875016250497},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6011202896236365,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4644.097306131279,\\\"ask\\\":4709.572998262031,\\\"price\\\":4676.835152196655,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.1011202896236365},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6024008833870369,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4702.910449062253,\\\"ask\\\":4769.215329512274,\\\"price\\\":4736.062889287264,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.1024008833870369},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6029476618257905,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4728.022049156731,\\\"ask\\\":4794.680970292878,\\\"price\\\":4761.351509724805,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.10294766182579052},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6044793025715745,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4658.710414802239,\\\"ask\\\":4724.392132634294,\\\"price\\\":4691.551273718267,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.10447930257157445},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6059384073903825,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4723.771595805173,\\\"ask\\\":4790.370591113604,\\\"price\\\":4757.071093459389,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.10593840739038252},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.606341735002919,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4741.755890329088,\\\"ask\\\":4808.608440645913,\\\"price\\\":4775.182165487501,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.10634173500291899},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6046216329337025,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4666.2777720621425,\\\"ask\\\":4732.066179724649,\\\"price\\\":4699.171975893396,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.10462163293370252},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6062294802498671,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4595.650840869016,\\\"ask\\\":4660.443501263946,\\\"price\\\":4628.0471710664815,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.10622948024986711,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.606484817744838,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4584.631035432716,\\\"ask\\\":4649.268330997728,\\\"price\\\":4616.949683215223,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.10648481774483798,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6056741735356376,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4619.5327677068835,\\\"ask\\\":4684.662132004865,\\\"price\\\":4652.097449855874,\\\"maxShares\\\":10500000,\\\"investedShares\\\":56798,\\\"averagePrice\\\":4649.268330997728,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.10567417353563757,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6042799974939609,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4680.478992247787,\\\"ask\\\":4746.467618523183,\\\"price\\\":4713.473305385485,\\\"maxShares\\\":10500000,\\\"investedShares\\\":56798,\\\"averagePrice\\\":4649.268330997728,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.10427999749396089,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6043292116965762,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4682.687910995355,\\\"ask\\\":4748.707680133255,\\\"price\\\":4715.697795564305,\\\"maxShares\\\":10500000,\\\"investedShares\\\":56798,\\\"averagePrice\\\":4649.268330997728,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.10432921169657616,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6039742483253467,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4698.6200038413745,\\\"ask\\\":4764.864394630678,\\\"price\\\":4731.742199236027,\\\"maxShares\\\":10500000,\\\"investedShares\\\":56798,\\\"averagePrice\\\":4649.268330997728,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.10397424832534674,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6053159162319173,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4759.250282644625,\\\"ask\\\":4826.349480990068,\\\"price\\\":4792.799881817346,\\\"maxShares\\\":10500000,\\\"investedShares\\\":56798,\\\"averagePrice\\\":4649.268330997728,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.10531591623191727,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6057183439523939,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4777.43608314799,\\\"ask\\\":4844.791677472332,\\\"price\\\":4811.113880310161,\\\"maxShares\\\":10500000,\\\"investedShares\\\":56798,\\\"averagePrice\\\":4649.268330997728,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.10571834395239388,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6037503069920327,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4866.3721223999155,\\\"ask\\\":4934.9815984458355,\\\"price\\\":4900.6768604228755,\\\"maxShares\\\":10500000,\\\"investedShares\\\":56798,\\\"averagePrice\\\":4649.268330997728,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.10375030699203269,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6038098406723837,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4874.80283849496,\\\"ask\\\":4943.531176600629,\\\"price\\\":4909.167007547795,\\\"maxShares\\\":10500000,\\\"investedShares\\\":173459,\\\"averagePrice\\\":4841.426682503062,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.10380984067238375,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6044885595160645,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4906.674773990522,\\\"ask\\\":4975.852464661083,\\\"price\\\":4941.263619325803,\\\"maxShares\\\":10500000,\\\"investedShares\\\":216860,\\\"averagePrice\\\":4861.861235432733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.1044885595160645,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6039881420868994,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4930.17385932122,\\\"ask\\\":4999.682856330784,\\\"price\\\":4964.928357826002,\\\"maxShares\\\":10500000,\\\"investedShares\\\":216860,\\\"averagePrice\\\":4861.861235432733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.10398814208689944,\\\"countOfNegative\\\":0,\\\"countOfPositive\\\":10},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6037022116256228,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4943.730086574435,\\\"ask\\\":5013.430208640942,\\\"price\\\":4978.580147607689,\\\"maxShares\\\":10500000,\\\"investedShares\\\":216860,\\\"averagePrice\\\":4861.861235432733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.10370221162562276,\\\"countOfNegative\\\":0,\\\"countOfPositive\\\":10},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6028450009787204,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4903.199850527627,\\\"ask\\\":4972.328549326606,\\\"price\\\":4937.764199927116,\\\"maxShares\\\":10500000,\\\"investedShares\\\":216860,\\\"averagePrice\\\":4861.861235432733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.1028450009787204,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6025276207830133,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4888.115102478625,\\\"ask\\\":4957.031126078525,\\\"price\\\":4922.573114278575,\\\"maxShares\\\":10500000,\\\"investedShares\\\":216860,\\\"averagePrice\\\":4861.861235432733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.10252762078301325,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6039652618827438,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4820.521802136994,\\\"ask\\\":4888.484848692802,\\\"price\\\":4854.503325414898,\\\"maxShares\\\":10500000,\\\"investedShares\\\":216860,\\\"averagePrice\\\":4861.861235432733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.1039652618827438,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6059316789639878,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4911.697991573445,\\\"ask\\\":4980.946503035709,\\\"price\\\":4946.322247304577,\\\"maxShares\\\":10500000,\\\"investedShares\\\":216860,\\\"averagePrice\\\":4861.861235432733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.10593167896398781,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6046568963984942,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4970.805399554366,\\\"ask\\\":5040.887248087861,\\\"price\\\":5005.846323821113,\\\"maxShares\\\":10500000,\\\"investedShares\\\":216860,\\\"averagePrice\\\":4861.861235432733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.10465689639849418,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6063620786073468,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5051.795083203261,\\\"ask\\\":5123.018780247416,\\\"price\\\":5087.406931725339,\\\"maxShares\\\":10500000,\\\"investedShares\\\":216860,\\\"averagePrice\\\":4861.861235432733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.10636207860734681,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6039951939842509,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4993.570282148169,\\\"ask\\\":5063.973085723269,\\\"price\\\":5028.771683935719,\\\"maxShares\\\":10500000,\\\"investedShares\\\":1776529,\\\"averagePrice\\\":5091.139410325218,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.10399519398425094,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6039301464314218,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4996.693691166315,\\\"ask\\\":5067.1405307195155,\\\"price\\\":5031.917110942915,\\\"maxShares\\\":10500000,\\\"investedShares\\\":1776529,\\\"averagePrice\\\":5091.139410325218,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.10393014643142184,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6031695445773384,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4971.731889790685,\\\"ask\\\":5041.826800623585,\\\"price\\\":5006.7793452071355,\\\"maxShares\\\":10500000,\\\"investedShares\\\":2142695,\\\"averagePrice\\\":5087.038232252883,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.1031695445773384,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6039950035496559,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4932.268833333123,\\\"ask\\\":5001.80736673359,\\\"price\\\":4967.038100033357,\\\"maxShares\\\":10500000,\\\"investedShares\\\":2142695,\\\"averagePrice\\\":5087.038232252883,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.10399500354965585,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.602792417083794,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4923.538835522754,\\\"ask\\\":4992.954287383094,\\\"price\\\":4958.246561452925,\\\"maxShares\\\":10500000,\\\"investedShares\\\":3541051,\\\"averagePrice\\\":5053.38068476653,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.10279241708379405,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6012998742618256,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4995.028472172234,\\\"ask\\\":5065.451834317662,\\\"price\\\":5030.2401532449485,\\\"maxShares\\\":10500000,\\\"investedShares\\\":3541051,\\\"averagePrice\\\":5053.38068476653,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.10129987426182563,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6008016746908957,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5019.594356974683,\\\"ask\\\":5090.36406593505,\\\"price\\\":5054.979211454867,\\\"maxShares\\\":10500000,\\\"investedShares\\\":3541051,\\\"averagePrice\\\":5053.38068476653,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.10080167469089574,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6025931985976126,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5108.806399533671,\\\"ask\\\":5180.833881500912,\\\"price\\\":5144.820140517291,\\\"maxShares\\\":10500000,\\\"investedShares\\\":3541051,\\\"averagePrice\\\":5053.38068476653,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.10259319859761262,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6029451474188136,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5091.340414636441,\\\"ask\\\":5163.121649082473,\\\"price\\\":5127.231031859457,\\\"maxShares\\\":10500000,\\\"investedShares\\\":3541051,\\\"averagePrice\\\":5053.38068476653,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.10294514741881355,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6012618635583762,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5174.590294430037,\\\"ask\\\":5247.545243193401,\\\"price\\\":5211.067768811719,\\\"maxShares\\\":10500000,\\\"investedShares\\\":3541051,\\\"averagePrice\\\":5053.38068476653,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.10126186355837619,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5985550891357839,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5231.559893223794,\\\"ask\\\":5305.318038747592,\\\"price\\\":5268.438965985693,\\\"maxShares\\\":10500000,\\\"investedShares\\\":8745625,\\\"averagePrice\\\":5168.929180444079,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.09855508913578392,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.6002088137140649,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5145.224581413209,\\\"ask\\\":5217.7655120675745,\\\"price\\\":5181.495046740392,\\\"maxShares\\\":10500000,\\\"investedShares\\\":8745625,\\\"averagePrice\\\":5168.929180444079,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.10020881371406487,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5970768094935204,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5242.566649200782,\\\"ask\\\":5316.479975574207,\\\"price\\\":5279.523312387495,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.09707680949352038,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5964168241826572,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5278.208704164745,\\\"ask\\\":5352.62453685186,\\\"price\\\":5315.416620508303,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.09641682418265718,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5961463299532948,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5293.016545098628,\\\"ask\\\":5367.641148957017,\\\"price\\\":5330.328847027823,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.09614632995329475,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5944907783986745,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5384.157431850371,\\\"ask\\\":5460.067002893578,\\\"price\\\":5422.112217371975,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.09449077839867448,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5943209269637407,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5374.496531988237,\\\"ask\\\":5450.269896991092,\\\"price\\\":5412.383214489664,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.09432092696374073,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5936208384692215,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5414.388243265889,\\\"ask\\\":5490.724029172961,\\\"price\\\":5452.556136219426,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.09362083846922153,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5932969280182114,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5433.121005827044,\\\"ask\\\":5509.720899161967,\\\"price\\\":5471.420952494506,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.09329692801821143,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5922569278196177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5373.224557725001,\\\"ask\\\":5448.979989555967,\\\"price\\\":5411.102273640485,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.0922569278196177,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5918462486333507,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5397.1433196125745,\\\"ask\\\":5473.23597467257,\\\"price\\\":5435.1896471425725,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.09184624863335067,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.590315173225713,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5487.1136072521085,\\\"ask\\\":5564.474725581947,\\\"price\\\":5525.794166417028,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.09031517322571303,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5891963203679057,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5555.089701648162,\\\"ask\\\":5633.4091939171185,\\\"price\\\":5594.24944778264,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.0891963203679057,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5882441739995152,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5496.416951273163,\\\"ask\\\":5573.909234574094,\\\"price\\\":5535.163092923629,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.08824417399951523,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5880659406542013,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5485.337805049001,\\\"ask\\\":5562.673886892591,\\\"price\\\":5524.005845970796,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.08806594065420126,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5868847236951474,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5558.911924547764,\\\"ask\\\":5637.285305155688,\\\"price\\\":5598.098614851726,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.08688472369514744,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.585471372764408,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5469.9327098169,\\\"ask\\\":5547.051599985516,\\\"price\\\":5508.492154901208,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.08547137276440797,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5854263382887461,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5467.052145028901,\\\"ask\\\":5544.130423005138,\\\"price\\\":5505.5912840170195,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.08542633828874613,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5859663990355921,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5432.706862481149,\\\"ask\\\":5509.300916937076,\\\"price\\\":5471.003889709113,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.08596639903559211,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5856780058116846,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5414.542586554293,\\\"ask\\\":5490.88054849967,\\\"price\\\":5452.7115675269815,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.08567800581168461,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5844322068589322,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5336.940927236191,\\\"ask\\\":5412.184807378493,\\\"price\\\":5374.5628673073425,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.08443220685893216,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.583097820685718,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5421.287179045798,\\\"ask\\\":5497.720230915527,\\\"price\\\":5459.503704980663,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.08309782068571803,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5838744844158947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5371.086964377904,\\\"ask\\\":5446.812258941137,\\\"price\\\":5408.949611659521,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.08387448441589473,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5851400637107743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5452.131116249032,\\\"ask\\\":5528.99902725355,\\\"price\\\":5490.565071751291,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.08514006371077432,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5861915840856942,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5519.467534682375,\\\"ask\\\":5597.284801032378,\\\"price\\\":5558.3761678573765,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.08619158408569416,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5847171182332254,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5613.888196398117,\\\"ask\\\":5693.036670466166,\\\"price\\\":5653.462433432142,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.08471711823322536,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5840942684366501,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5572.9154939018845,\\\"ask\\\":5651.48630650473,\\\"price\\\":5612.200900203307,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.08409426843665013,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5846398569155625,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5536.992483180603,\\\"ask\\\":5615.056828361397,\\\"price\\\":5576.024655771,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.08463985691556253,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5832018737587161,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5444.493624894878,\\\"ask\\\":5521.253857270031,\\\"price\\\":5482.873741082455,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.08320187375871613,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5847130979847269,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5347.367550414798,\\\"ask\\\":5422.758432293757,\\\"price\\\":5385.062991354278,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.08471309798472693,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5833918640371034,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5430.768154407611,\\\"ask\\\":5507.334875617788,\\\"price\\\":5469.0515150127,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.08339186403710341,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5836612142762097,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5413.28360420624,\\\"ask\\\":5489.603816148724,\\\"price\\\":5451.443710177482,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.08366121427620965,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5833850944596384,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5395.476094687417,\\\"ask\\\":5471.545244058639,\\\"price\\\":5433.510669373028,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.08338509445963838,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.583927074270761,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5430.545181478832,\\\"ask\\\":5507.108759062622,\\\"price\\\":5468.8269702707275,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.08392707427076096,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5830801801323446,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5485.343909095176,\\\"ask\\\":5562.680076997826,\\\"price\\\":5524.011993046502,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.08308018013234464,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.5841297427439908,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5416.911370361199,\\\"ask\\\":5493.282729057127,\\\"price\\\":5455.097049709163,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.08412974274399077,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4153416781130101,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5383.089930176384,\\\"ask\\\":5458.984450843523,\\\"price\\\":5421.037190509954,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":5177.088917519505,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.0846583218869899,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4215506403721292,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5290.383530879778,\\\"ask\\\":5364.971012684729,\\\"price\\\":5327.677271782254,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.07844935962787081,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4213082609916845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5306.728850823903,\\\"ask\\\":5381.546780241359,\\\"price\\\":5344.137815532631,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.0786917390083155,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.42014383204958705,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5385.254357308262,\\\"ask\\\":5461.17939356437,\\\"price\\\":5423.2168754363165,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.07985616795041295,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.42106313003993023,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5447.248986342233,\\\"ask\\\":5524.048065706575,\\\"price\\\":5485.648526024404,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.07893686996006977,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4201049031579382,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5513.373984891806,\\\"ask\\\":5591.105340167218,\\\"price\\\":5552.239662529512,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.07989509684206181,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4207435865469057,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5469.649471138516,\\\"ask\\\":5546.764368012573,\\\"price\\\":5508.206919575545,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.07925641345309431,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.42043817890704743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5490.726285784194,\\\"ask\\\":5568.138338151745,\\\"price\\\":5529.43231196797,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.07956182109295257,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4215032112795511,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5418.197085008399,\\\"ask\\\":5494.586570597641,\\\"price\\\":5456.3918278030205,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.0784967887204489,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4209683805452522,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5381.530516038363,\\\"ask\\\":5457.4030510076855,\\\"price\\\":5419.466783523025,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.07903161945474779,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4195299387164084,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5285.333017565139,\\\"ask\\\":5359.849293744304,\\\"price\\\":5322.591155654722,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.08047006128359158,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4202436091283353,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5332.207416958511,\\\"ask\\\":5407.3845608028405,\\\"price\\\":5369.795988880676,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.0797563908716647,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4204543968368567,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5346.299877393314,\\\"ask\\\":5421.67570648043,\\\"price\\\":5383.987791936872,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.0795456031631433,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4213157477973757,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5289.028207488583,\\\"ask\\\":5363.596581008059,\\\"price\\\":5326.312394248321,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.07868425220262432,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4199053167227229,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5383.835103782734,\\\"ask\\\":5459.7401304221685,\\\"price\\\":5421.787617102452,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.08009468327727709,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.418663381509494,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5301.628902914105,\\\"ask\\\":5376.374929742702,\\\"price\\\":5339.001916328404,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.081336618490506,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.41944168158910666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5251.3791033762645,\\\"ask\\\":5325.416673816614,\\\"price\\\":5288.39788859644,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.08055831841089334,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.4185076069270574,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5312.268906664603,\\\"ask\\\":5387.16494361657,\\\"price\\\":5349.716925140587,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.08149239307294259,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.019,\\\"forecast\\\":0.41733838219680797,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5388.48750750809,\\\"ask\\\":5464.458126949291,\\\"price\\\":5426.4728172286905,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.08266161780319203,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[5419.466783523025,5322.591155654722,5369.795988880676,5383.987791936872,5326.312394248321,5421.787617102452,5339.001916328404,5288.39788859644,5349.716925140587,5426.4728172286905]}],[\\\"SYSC\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.53,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5441.12,\\\"ask\\\":5528.88,\\\"price\\\":5485,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.030000000000000027},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.530100856871433,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5442.949247800973,\\\"ask\\\":5530.738751797763,\\\"price\\\":5486.843999799368,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.030100856871433046},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5258529883320936,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5519.760791637448,\\\"ask\\\":5608.7891915025675,\\\"price\\\":5564.274991570008,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.025852988332093596},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5272624335793327,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5549.853253343364,\\\"ask\\\":5639.367015494064,\\\"price\\\":5594.610134418714,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.027262433579332668},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5245185792916065,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5494.552789477312,\\\"ask\\\":5583.174608662431,\\\"price\\\":5538.8636990698715,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.0245185792916065},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5234781170471331,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5517.869290240775,\\\"ask\\\":5606.867182018852,\\\"price\\\":5562.368236129813,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.023478117047133096},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5262541654472584,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5453.388520984242,\\\"ask\\\":5541.346400354955,\\\"price\\\":5497.367460669599,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.02625416544725845},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5291680865652648,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5393.526361597928,\\\"ask\\\":5480.518722268863,\\\"price\\\":5437.022541933396,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.029168086565264817},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5300506294185127,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5377.256322331771,\\\"ask\\\":5463.986263014541,\\\"price\\\":5420.621292673156,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.030050629418512664},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5339136533247779,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5309.008741223593,\\\"ask\\\":5394.637914469134,\\\"price\\\":5351.823327846363,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.033913653324777915},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5297715470874154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5373.851293014282,\\\"ask\\\":5460.526313869352,\\\"price\\\":5417.188803441817,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.029771547087415362,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5292028326065918,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5363.605402691628,\\\"ask\\\":5450.115167251171,\\\"price\\\":5406.8602849714,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.029202832606591844,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5274360182556348,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5396.056004747977,\\\"ask\\\":5483.089166114879,\\\"price\\\":5439.572585431428,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.027436018255634798,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5245593274528264,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5452.634129662693,\\\"ask\\\":5540.579841431446,\\\"price\\\":5496.60698554707,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.024559327452826407,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5246514422196015,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5454.679251305902,\\\"ask\\\":5542.657948907609,\\\"price\\\":5498.668600106756,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.02465144221960147,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.525318008428089,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5469.428509522392,\\\"ask\\\":5557.645098385657,\\\"price\\\":5513.536803954024,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.025318008428088956,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5227216052716308,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5525.518393078916,\\\"ask\\\":5614.639657483415,\\\"price\\\":5570.079025281166,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.022721605271630807,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5220315939201854,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5508.789262024678,\\\"ask\\\":5597.640701734753,\\\"price\\\":5553.214981879715,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.02203159392018539,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5187720850781328,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5428.476564607885,\\\"ask\\\":5516.032638230592,\\\"price\\\":5472.2546014192385,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.018772085078132772,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5190305460715705,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5421.012714291084,\\\"ask\\\":5508.448403231263,\\\"price\\\":5464.730558761174,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.01903054607157051,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5200193859649542,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5392.990375845226,\\\"ask\\\":5479.974091584665,\\\"price\\\":5436.482233714945,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.02001938596495423,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5207813558098985,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5413.516959665839,\\\"ask\\\":5500.831749337868,\\\"price\\\":5457.1743545018535,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.020781355809898483,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5203272324623768,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5425.346815552422,\\\"ask\\\":5512.852409351655,\\\"price\\\":5469.099612452039,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.020327232462376776,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5189918639296455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5389.938384398759,\\\"ask\\\":5476.872874469706,\\\"price\\\":5433.405629434233,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.01899186392964547,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5185260767043861,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5403.157542105912,\\\"ask\\\":5490.305244397944,\\\"price\\\":5446.731393251928,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.018526076704386107,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5164615694902528,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5463.369198911458,\\\"ask\\\":5551.488056958417,\\\"price\\\":5507.428627934937,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.016461569490252792,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5139871007477383,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5545.49342357623,\\\"ask\\\":5634.936865891976,\\\"price\\\":5590.215144734103,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.013987100747738346,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5153248087004191,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5598.529794644455,\\\"ask\\\":5688.828662300011,\\\"price\\\":5643.679228472233,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.01532480870041908,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5133404446551982,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5526.962792026851,\\\"ask\\\":5616.107353188575,\\\"price\\\":5571.535072607713,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.013340444655198236,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5121042396480404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5578.1789190336585,\\\"ask\\\":5668.149546760007,\\\"price\\\":5623.164232896833,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.012104239648040416,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5121644094459783,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5575.407401395885,\\\"ask\\\":5665.333327224851,\\\"price\\\":5620.370364310368,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.012164409445978297,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5126497902523278,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5553.248985220593,\\\"ask\\\":5642.817517240279,\\\"price\\\":5598.033251230436,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.01264979025232782,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5134541505938561,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5588.560347395326,\\\"ask\\\":5678.698417514605,\\\"price\\\":5633.629382454966,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.013454150593856129,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5132645601698967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5596.43551958248,\\\"ask\\\":5686.700608608005,\\\"price\\\":5641.568064095242,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.013264560169896744,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5117338889296891,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5532.59187040477,\\\"ask\\\":5621.827223153235,\\\"price\\\":5577.209546779002,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.011733888929689074,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5112752617781234,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5554.21638777922,\\\"ask\\\":5643.800523065981,\\\"price\\\":5599.0084554226005,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.011275261778123435,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.509682668638709,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5632.6678427260385,\\\"ask\\\":5723.51732406033,\\\"price\\\":5678.092583393184,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.009682668638709035,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.519682668638709,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5617.352878106326,\\\"ask\\\":5707.955343882234,\\\"price\\\":5662.65411099428,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.019682668638709044,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5171249144358921,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5690.3501336940435,\\\"ask\\\":5782.129974560076,\\\"price\\\":5736.24005412706,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.017124914435892147,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5186232840177912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5740.138689325085,\\\"ask\\\":5832.7215714109725,\\\"price\\\":5786.430130368029,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.01862328401779123,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5211067815854257,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5664.598751219437,\\\"ask\\\":5755.963247206848,\\\"price\\\":5710.280999213142,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.02110678158542567,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5242803041753104,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5580.689958312436,\\\"ask\\\":5670.701086672314,\\\"price\\\":5625.695522492375,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.024280304175310352,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5229684177305929,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5610.842922853654,\\\"ask\\\":5701.340389351294,\\\"price\\\":5656.091656102474,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.022968417730592883,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5234805234267463,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5598.360772475104,\\\"ask\\\":5688.656913966637,\\\"price\\\":5643.50884322087,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.023480523426746336,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.526693748287819,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5522.783474473789,\\\"ask\\\":5611.860627287883,\\\"price\\\":5567.322050880836,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.026693748287819008,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5270750885851251,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5514.905017330012,\\\"ask\\\":5603.85509825469,\\\"price\\\":5559.380057792351,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.027075088585125084,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5254779665091153,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5547.436680236979,\\\"ask\\\":5636.9114654020905,\\\"price\\\":5592.174072819535,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.02547796650911527,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5247774142414924,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5562.690132055607,\\\"ask\\\":5652.410940637149,\\\"price\\\":5607.550536346378,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.02477741424149238,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5225823592430655,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5513.842470402012,\\\"ask\\\":5602.775413473012,\\\"price\\\":5558.308941937512,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.02258235924306551,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5233812664937211,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5533.349062610394,\\\"ask\\\":5622.596628136369,\\\"price\\\":5577.9728453733815,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.023381266493721076,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5264788750582373,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5461.000366230729,\\\"ask\\\":5549.081017298967,\\\"price\\\":5505.040691764848,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.026478875058237317,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5290858396525212,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5514.766376202159,\\\"ask\\\":5603.714220979614,\\\"price\\\":5559.240298590887,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.029085839652521206,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5266183137035756,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5561.551441712454,\\\"ask\\\":5651.25388432072,\\\"price\\\":5606.402663016587,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.02661831370357559,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5261910393737665,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5570.478784711786,\\\"ask\\\":5660.325216723266,\\\"price\\\":5615.402000717526,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.026191039373766545,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5233991527681091,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5629.858425527847,\\\"ask\\\":5720.662593681522,\\\"price\\\":5675.260509604685,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.02339915276810911,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5264241854014657,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5702.640998585836,\\\"ask\\\":5794.619079208188,\\\"price\\\":5748.630038897012,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.02642418540146574,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5263135359193647,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5705.02894078165,\\\"ask\\\":5797.045536600709,\\\"price\\\":5751.0372386911795,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.026313535919364694,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5276356026569724,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5676.508550502809,\\\"ask\\\":5768.065140027049,\\\"price\\\":5722.286845264929,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.027635602656972402,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5283724009359183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5691.642802439873,\\\"ask\\\":5783.443492801806,\\\"price\\\":5737.54314762084,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.028372400935918307,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5250937283716344,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5757.414582361532,\\\"ask\\\":5850.276107883493,\\\"price\\\":5803.845345122512,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.025093728371634372,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5219419045666646,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5685.997288984462,\\\"ask\\\":5777.706922677759,\\\"price\\\":5731.852105831111,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.02194190456666456,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5203120792548862,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5644.073608201696,\\\"ask\\\":5735.1070534952705,\\\"price\\\":5689.590330848483,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.020312079254886206,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5178763039318488,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5577.193258142382,\\\"ask\\\":5667.1479881124205,\\\"price\\\":5622.170623127401,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.017876303931848803,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.519630930890368,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5522.983086664809,\\\"ask\\\":5612.06345903037,\\\"price\\\":5567.523272847589,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.019630930890368048,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5169620198573007,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5598.07046065519,\\\"ask\\\":5688.361919698016,\\\"price\\\":5643.216190176603,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.016962019857300725,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5179531097937926,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5630.779957189239,\\\"ask\\\":5721.5989887568085,\\\"price\\\":5676.189472973024,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.01795310979379261,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5170274277761552,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5659.812875783912,\\\"ask\\\":5751.10018023204,\\\"price\\\":5705.456528007976,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.01702742777615518,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5193264928919238,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5584.411437024377,\\\"ask\\\":5674.482589234447,\\\"price\\\":5629.447013129412,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.019326492891923785,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5221162872890313,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5504.947094239756,\\\"ask\\\":5593.736563501688,\\\"price\\\":5549.341828870722,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.022116287289031256,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5193749357657703,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5573.181852203629,\\\"ask\\\":5663.071882077881,\\\"price\\\":5618.126867140755,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.019374935765770318,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5188775912864656,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5558.912414442984,\\\"ask\\\":5648.57229209529,\\\"price\\\":5603.742353269137,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.0188775912864656,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5193727487594714,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5544.369584316409,\\\"ask\\\":5633.79490019248,\\\"price\\\":5589.082242254444,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.01937274875947137,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5203734611492042,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5515.87695029254,\\\"ask\\\":5604.842707555322,\\\"price\\\":5560.359828923931,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.02037346114920424,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5220073225207029,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5560.111841031144,\\\"ask\\\":5649.7910642735815,\\\"price\\\":5604.951452652363,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.02200732252070292,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.5197977845131073,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5615.935435326556,\\\"ask\\\":5706.515039122146,\\\"price\\\":5661.225237224351,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.01979778451310732,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4811907694938942,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5643.977237044211,\\\"ask\\\":5735.009127964279,\\\"price\\\":5689.493182504245,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.01880923050610578,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4838102606155632,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5566.455297870748,\\\"ask\\\":5656.23683493318,\\\"price\\\":5611.346066401964,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.016189739384436796,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4842077902160504,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5552.820670836685,\\\"ask\\\":5642.382294559857,\\\"price\\\":5597.601482698271,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.015792209783949573,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.48606495354391327,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5488.27853413676,\\\"ask\\\":5576.799155655095,\\\"price\\\":5532.5388448959275,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.01393504645608673,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.48479004329609027,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5538.490512748586,\\\"ask\\\":5627.821004889692,\\\"price\\\":5583.155758819139,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.015209956703909733,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4833226728327365,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5485.568851861506,\\\"ask\\\":5574.045768827014,\\\"price\\\":5529.80731034426,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.0166773271672635,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.48226313787902625,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5450.938245031037,\\\"ask\\\":5538.85660382186,\\\"price\\\":5494.897424426448,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.01773686212097375,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4817199555690702,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5434.295992135006,\\\"ask\\\":5521.945927492022,\\\"price\\\":5478.120959813514,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.018280044430929787,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4836646827617224,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5377.09166520777,\\\"ask\\\":5463.818950130477,\\\"price\\\":5420.455307669124,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.01633531723827758,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4827801470218057,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5406.207902653954,\\\"ask\\\":5493.404804309663,\\\"price\\\":5449.806353481808,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.017219852978194283,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.48527097770995375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5329.122792752573,\\\"ask\\\":5415.076386184067,\\\"price\\\":5372.09958946832,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.014729022290046245,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4842328264738955,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5366.684250026903,\\\"ask\\\":5453.243673414434,\\\"price\\\":5409.9639617206685,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.015767173526104517,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.48390165190230533,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5377.956462858326,\\\"ask\\\":5464.697696130234,\\\"price\\\":5421.32707949428,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.01609834809769467,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4852870309763959,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5332.070149788985,\\\"ask\\\":5418.071281237194,\\\"price\\\":5375.070715513089,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.014712969023604083,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4831910481832843,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5408.029850837034,\\\"ask\\\":5495.256138753761,\\\"price\\\":5451.6429947953975,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.01680895181671571,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.48526242557260096,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5474.673332690755,\\\"ask\\\":5562.97451547609,\\\"price\\\":5518.823924083423,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.014737574427399036,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.4841416715156596,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5516.306794006035,\\\"ask\\\":5605.279484231939,\\\"price\\\":5560.793139118987,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.015858328484340378,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.48560301381426657,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5465.938264964316,\\\"ask\\\":5554.098559560514,\\\"price\\\":5510.018412262415,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.01439698618573343,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0151,\\\"forecast\\\":0.48396138163896774,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5404.314969471232,\\\"ask\\\":5491.481339946575,\\\"price\\\":5447.898154708903,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.016038618361032264,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[5449.806353481808,5372.09958946832,5409.9639617206685,5421.32707949428,5375.070715513089,5451.6429947953975,5518.823924083423,5560.793139118987,5510.018412262415,5447.898154708903]}],[\\\"CTK\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.54,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2244.896,\\\"ask\\\":2281.104,\\\"price\\\":2263,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.040000000000000036},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5399216299806966,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2244.456254799965,\\\"ask\\\":2280.657162135448,\\\"price\\\":2262.5567084677064,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.039921629980696594},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5432048969620645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2262.915293461644,\\\"ask\\\":2299.413927227154,\\\"price\\\":2281.164610344399,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.04320489696206453},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5418321953051428,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2270.1050052564337,\\\"ask\\\":2306.719602115408,\\\"price\\\":2288.412303685921,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.041832195305142816},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5442858463912076,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2256.8674374011252,\\\"ask\\\":2293.2685251011435,\\\"price\\\":2275.0679812511344,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.044285846391207584},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5431906255539805,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2251.2998110265485,\\\"ask\\\":2287.61109830117,\\\"price\\\":2269.455454663859,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.043190625553980455},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5402144469553345,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2235.8927267418335,\\\"ask\\\":2271.9555126570244,\\\"price\\\":2253.924119699429,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.04021444695533449},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5376132849690937,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2221.523407562303,\\\"ask\\\":2257.3544302649207,\\\"price\\\":2239.438918913612,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.03761328496909366},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5382765312927653,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2217.6130240721327,\\\"ask\\\":2253.380976073296,\\\"price\\\":2235.4970000727144,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.038276531292765315},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5411440887057172,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2201.1229031428147,\\\"ask\\\":2236.6248854515698,\\\"price\\\":2218.8738942971922,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.041144088705717174},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5382154902456264,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2185.5662432778454,\\\"ask\\\":2220.8173117178103,\\\"price\\\":2203.191777497828,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.03821549024562643,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5386409299745086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2187.999357975623,\\\"ask\\\":2223.2896702010357,\\\"price\\\":2205.6445140883293,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.03864092997450863,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5372784841757801,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2195.714054632409,\\\"ask\\\":2231.1287974490606,\\\"price\\\":2213.421426040735,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.03727848417578006,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5395563916060948,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2182.37859711038,\\\"ask\\\":2217.5782519024824,\\\"price\\\":2199.978424506431,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.03955639160609481,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5396428555775811,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2182.855630310657,\\\"ask\\\":2218.062979186635,\\\"price\\\":2200.459304748646,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.03964285557758107,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5390181554192888,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2186.295418484129,\\\"ask\\\":2221.558247814519,\\\"price\\\":2203.926833149324,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.03901815541928877,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5413500829379654,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2173.30660997725,\\\"ask\\\":2208.3599423962382,\\\"price\\\":2190.833276186744,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.04135008293796538,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5420818946140803,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2169.4670980814585,\\\"ask\\\":2204.458502889224,\\\"price\\\":2186.962800485341,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.042081894614080295,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5457102285816038,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2188.1724135991676,\\\"ask\\\":2223.465517044315,\\\"price\\\":2205.8189653217414,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.045710228581603785,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5460770051757309,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2186.4180426675143,\\\"ask\\\":2221.6828498073132,\\\"price\\\":2204.050446237414,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.04607700517573088,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5446817144821587,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2179.8171826138064,\\\"ask\\\":2214.9755242688675,\\\"price\\\":2197.396353441337,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.04468171448215874,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.545672826142711,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2184.6523646398305,\\\"ask\\\":2219.8886931017637,\\\"price\\\":2202.270528870797,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.045672826142710954,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5450911736911837,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2187.4345625262877,\\\"ask\\\":2222.715765147679,\\\"price\\\":2205.0751638369834,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.04509117369118365,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5468174891079238,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2195.8091549337983,\\\"ask\\\":2231.2254316262793,\\\"price\\\":2213.5172932800388,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.046817489107923826,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.547486655045857,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2198.947641684543,\\\"ask\\\":2234.414539131068,\\\"price\\\":2216.6810904078056,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.04748665504585703,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5505706257993461,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2184.758954959793,\\\"ask\\\":2219.997002620435,\\\"price\\\":2202.377978790114,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.050570625799346125,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5510136370802833,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2165.7861288965905,\\\"ask\\\":2200.7181632336324,\\\"price\\\":2183.2521460651114,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.05101363708028328,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5512979690010963,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2177.857452670865,\\\"ask\\\":2212.984185778459,\\\"price\\\":2195.420819224662,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.05129796900109629,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5516850770336995,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2194.2921406363007,\\\"ask\\\":2229.6839493562406,\\\"price\\\":2211.9880449962707,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.05168507703369951,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5519641971167406,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2182.5057369488727,\\\"ask\\\":2217.7074423835315,\\\"price\\\":2200.106589666202,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.05196419711674061,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5519792510846484,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2183.138006340982,\\\"ask\\\":2218.3499096690625,\\\"price\\\":2200.7439580050223,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.051979251084648403,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5521001235309626,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2188.2146710862735,\\\"ask\\\":2223.508456103794,\\\"price\\\":2205.8615635950337,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.052100123530962605,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5519070548616785,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2196.323590336794,\\\"ask\\\":2231.748164374484,\\\"price\\\":2214.035877355639,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.05190705486167846,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5519496825936467,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2198.1272814453355,\\\"ask\\\":2233.5809472750993,\\\"price\\\":2215.8541143602174,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.05194968259364674,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5516003189635711,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2212.9097726574796,\\\"ask\\\":2248.6018657648588,\\\"price\\\":2230.755819211169,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.05160031896357109,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5517178563150302,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2207.880570516692,\\\"ask\\\":2243.49154746051,\\\"price\\\":2225.686058988601,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.05171785631503023,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5512921359293352,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2189.8545771437452,\\\"ask\\\":2225.1748122589665,\\\"price\\\":2207.514694701356,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.051292135929335236,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5513736327751357,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2186.380689253042,\\\"ask\\\":2221.644893918414,\\\"price\\\":2204.012791585728,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.051373632775135736,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5509845689720368,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2169.9472025490218,\\\"ask\\\":2204.9463509772318,\\\"price\\\":2187.4467767631268,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.05098456897203685,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5507245919201156,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2181.0120499708564,\\\"ask\\\":2216.189663680064,\\\"price\\\":2198.60085682546,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.05072459192011558,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5511188056618015,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2197.9621108453757,\\\"ask\\\":2233.413112633204,\\\"price\\\":2215.68761173929,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.05111880566180149,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5515667313826785,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2178.8698834235024,\\\"ask\\\":2214.0129460593657,\\\"price\\\":2196.441414741434,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.05156673138267853,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.551404357023387,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2185.730752666404,\\\"ask\\\":2220.984474483604,\\\"price\\\":2203.357613575004,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.05140435702338697,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5513375635259594,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2182.894355967896,\\\"ask\\\":2218.1023294512493,\\\"price\\\":2200.4983427095726,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.05133756352595942,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5509281385589958,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2165.623177961094,\\\"ask\\\":2200.5525840572404,\\\"price\\\":2183.087881009167,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.050928138558995806,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.550970538638176,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2163.8216942673093,\\\"ask\\\":2198.7220441748464,\\\"price\\\":2181.271869221078,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.05097053863817602,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5511457624704333,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2171.2603664830863,\\\"ask\\\":2206.2806949747487,\\\"price\\\":2188.7705307289175,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.05114576247043334,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5510638045060766,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2174.7396787687926,\\\"ask\\\":2209.816125200547,\\\"price\\\":2192.27790198467,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.051063804506076615,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5508001663179892,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2185.96767938524,\\\"ask\\\":2221.225222601131,\\\"price\\\":2203.5964509931855,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.050800166317989226,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5506954298534696,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2190.474564753684,\\\"ask\\\":2225.8047996690657,\\\"price\\\":2208.1396822113747,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.05069542985346964,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5503040188421715,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2173.6918502600925,\\\"ask\\\":2208.7513962320295,\\\"price\\\":2191.221623246061,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.050304018842171505,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5505926505307636,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2186.163942225301,\\\"ask\\\":2221.42465097087,\\\"price\\\":2203.7942965980856,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.05059265053076356,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5508427848487834,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2196.9725205668447,\\\"ask\\\":2232.407561221149,\\\"price\\\":2214.690040893997,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.05084278484878335,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5507952227163393,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2194.9192294380264,\\\"ask\\\":2230.3211524934786,\\\"price\\\":2212.6201909657525,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.050795222716339294,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5511107766768917,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2208.55467424766,\\\"ask\\\":2244.1765238322996,\\\"price\\\":2226.3655990399798,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.05111077667689168,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5507256991831063,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2192.0394671005265,\\\"ask\\\":2227.394942376341,\\\"price\\\":2209.717204738434,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.05072569918310632,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5507133202976482,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2192.574403157,\\\"ask\\\":2227.9385064337253,\\\"price\\\":2210.2564547953625,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.05071332029764819,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5505648286800586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2198.994391394795,\\\"ask\\\":2234.4620428689045,\\\"price\\\":2216.7282171318498,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.05056482868005863,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5504862628093523,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2202.411112335968,\\\"ask\\\":2237.933872212355,\\\"price\\\":2220.1724922741614,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.05048626280935231,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5508262643670916,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2187.678115168048,\\\"ask\\\":2222.963246057855,\\\"price\\\":2205.3206806129515,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.05082626436709159,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5504542234942452,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2203.691601219187,\\\"ask\\\":2239.2350141420766,\\\"price\\\":2221.4633076806317,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.05045422349424522,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5502358147670559,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2194.19326934574,\\\"ask\\\":2229.5834833674453,\\\"price\\\":2211.8883763565927,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.05023581476705585,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5505868914764769,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2209.5275513994434,\\\"ask\\\":2245.165092551047,\\\"price\\\":2227.3463219752452,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.05058689147647688,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5502975232877829,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2196.960452528074,\\\"ask\\\":2232.3952985365913,\\\"price\\\":2214.6778755323326,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.05029752328778292,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.549899007502905,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2214.3673418111857,\\\"ask\\\":2250.0829440984626,\\\"price\\\":2232.225142954824,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.04989900750290499,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5515981630257468,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2221.907681162064,\\\"ask\\\":2257.744901825968,\\\"price\\\":2239.826291494016,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.051598163025746824,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5514431164762841,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2228.5842583692174,\\\"ask\\\":2264.5291657622693,\\\"price\\\":2246.5567120657433,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.05144311647628408,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5510383214007138,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2211.1849088818385,\\\"ask\\\":2246.849181605739,\\\"price\\\":2229.0170452437887,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.05103832140071385,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5506089617255887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2229.7864931045087,\\\"ask\\\":2265.7507913803884,\\\"price\\\":2247.7686422424485,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.05060896172558871,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.550974544444395,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2245.893747249071,\\\"ask\\\":2282.1178399466366,\\\"price\\\":2264.005793597854,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.050974544444394976,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5510508008109375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2249.253535917565,\\\"ask\\\":2285.531818754945,\\\"price\\\":2267.392677336255,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.05105080081093749,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5509727630064023,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2252.6918131825223,\\\"ask\\\":2289.025552104821,\\\"price\\\":2270.8586826436717,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.0509727630064023,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5511262112531887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2259.4733095914908,\\\"ask\\\":2295.9164274881277,\\\"price\\\":2277.6948685398092,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.051126211253188725,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5508872652752275,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2248.9624479736053,\\\"ask\\\":2285.236035844147,\\\"price\\\":2267.099241908876,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.05088726527522747,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5505895171021791,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2262.1214270721466,\\\"ask\\\":2298.6072565410523,\\\"price\\\":2280.3643418065994,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.05058951710217907,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5504423027789849,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2268.7041480377734,\\\"ask\\\":2305.2961504254795,\\\"price\\\":2287.0001492316264,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.05044230277898487,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5500329040108134,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2287.1173574350905,\\\"ask\\\":2324.00634707114,\\\"price\\\":2305.5618522531154,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.050032904010813395,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5499613076331361,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2283.8492015439924,\\\"ask\\\":2320.68547898825,\\\"price\\\":2302.267340266121,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.04996130763313611,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5533854098141717,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2268.3033664323825,\\\"ask\\\":2304.8889046006466,\\\"price\\\":2286.5961355165146,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.053385409814171725,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5536700521514979,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2256.273283618901,\\\"ask\\\":2292.6647881934,\\\"price\\\":2274.4690359061506,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.05367005215149789,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5533683005822754,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2243.6586597414034,\\\"ask\\\":2279.8467026404587,\\\"price\\\":2261.752681190931,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.053368300582275374,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5535658964865852,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2251.965796318679,\\\"ask\\\":2288.2878252915607,\\\"price\\\":2270.12681080512,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.05356589648658516,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5536614975955805,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2255.9849660081413,\\\"ask\\\":2292.371820298595,\\\"price\\\":2274.1783931533682,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.053661497595580476,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5539941954144052,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2242.0841888647524,\\\"ask\\\":2278.2468370722486,\\\"price\\\":2260.1655129685005,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.0539941954144052,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5538238067843408,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2235.031136392017,\\\"ask\\\":2271.080025688662,\\\"price\\\":2253.0555810403393,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.053823806784340844,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5542775340774787,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2216.3476305027043,\\\"ask\\\":2252.095172930167,\\\"price\\\":2234.2214017164356,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.054277534077478706,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5540545814784017,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2225.4515898677996,\\\"ask\\\":2261.3459703495387,\\\"price\\\":2243.398780108669,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.0540545814784017,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.554120748467071,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2222.7307954534226,\\\"ask\\\":2258.5812921542847,\\\"price\\\":2240.6560438038537,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.054120748467071045,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.553849319103525,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2233.878357566526,\\\"ask\\\":2269.9086536563086,\\\"price\\\":2251.8935056114174,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.05384931910352497,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5534022513627225,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2252.4244593031995,\\\"ask\\\":2288.753886066154,\\\"price\\\":2270.5891726846767,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.053402251362722475,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5530187350064815,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2236.363674861969,\\\"ask\\\":2272.4340567145814,\\\"price\\\":2254.398865788275,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.053018735006481466,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5527837612312247,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2246.275016870884,\\\"ask\\\":2282.5052590784785,\\\"price\\\":2264.3901379746812,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.052783761231224746,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5525002954735008,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2258.3382354604882,\\\"ask\\\":2294.763045709851,\\\"price\\\":2276.5506405851697,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.05250029547350077,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5521514189547788,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2273.345411602607,\\\"ask\\\":2310.0122730800686,\\\"price\\\":2291.6788423413377,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.052151418954778817,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[2253.0555810403393,2234.2214017164356,2243.398780108669,2240.6560438038537,2251.8935056114174,2270.5891726846767,2254.398865788275,2264.3901379746812,2276.5506405851697,2291.6788423413377]}],[\\\"NTLK\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.51,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4499.14,\\\"ask\\\":4580.86,\\\"price\\\":4540,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4501.714363806327,\\\"ask\\\":4583.481123189287,\\\"price\\\":4542.597743497808,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.49,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4396.125416717276,\\\"ask\\\":4475.974314296398,\\\"price\\\":4436.049865506837,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4436.91635631939,\\\"ask\\\":4517.506158956876,\\\"price\\\":4477.211257638133,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.51,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4362.192812941847,\\\"ask\\\":4441.425376648156,\\\"price\\\":4401.809094795001,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4330.912820359554,\\\"ask\\\":4409.577230820171,\\\"price\\\":4370.245025589863,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.49,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4418.069241352375,\\\"ask\\\":4498.316714959178,\\\"price\\\":4458.1929781557765,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.48,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4501.527297890743,\\\"ask\\\":4583.2906595073255,\\\"price\\\":4542.408978699034,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.020000000000000018},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4789700549992832,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4524.708925571006,\\\"ask\\\":4606.893346015282,\\\"price\\\":4565.801135793145,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.02102994500071681},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4835712234774588,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4623.705609017146,\\\"ask\\\":4707.688152874168,\\\"price\\\":4665.6968809456575,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.01642877652254121},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4869863598871476,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4719.821015732743,\\\"ask\\\":4805.549349015477,\\\"price\\\":4762.68518237411,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.013013640112852387,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.48740946458888745,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4735.166287661347,\\\"ask\\\":4821.173344349444,\\\"price\\\":4778.169816005396,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.012590535411112547,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4887059460588787,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4686.90397036668,\\\"ask\\\":4772.034415842563,\\\"price\\\":4729.469193104622,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.011294053941121318,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4866904677183086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4770.5440298692465,\\\"ask\\\":4857.193669160514,\\\"price\\\":4813.868849514881,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.013309532281691405,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.48677543109362437,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4773.58937747645,\\\"ask\\\":4860.2943308514,\\\"price\\\":4816.941854163925,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.013224568906375633,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4861668216867027,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4795.557968063271,\\\"ask\\\":4882.6619473015535,\\\"price\\\":4839.109957682413,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.013833178313297279,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.48375235765822266,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4713.291460473215,\\\"ask\\\":4798.901194366775,\\\"price\\\":4756.096327419995,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.016247642341777335,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4845921342233662,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4689.055581156828,\\\"ask\\\":4774.22510735342,\\\"price\\\":4731.640344255125,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.015407865776633778,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.48071237380669113,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4573.883421010961,\\\"ask\\\":4656.96102098896,\\\"price\\\":4615.422220999961,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.01928762619330887,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4811643519689891,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4584.601668049111,\\\"ask\\\":4667.873948598944,\\\"price\\\":4626.237808324027,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.0188356480310109,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.47949859564276764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4625.14622069304,\\\"ask\\\":4709.154931058806,\\\"price\\\":4667.150575875923,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.020501404357232356,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.47817050774474895,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4595.377211918637,\\\"ask\\\":4678.8452137496515,\\\"price\\\":4637.111212834145,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.02182949225525105,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.47898240255001573,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4578.349157147954,\\\"ask\\\":4661.507870395848,\\\"price\\\":4619.928513771902,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.02101759744998427,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4766324335671333,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4629.539491998104,\\\"ask\\\":4713.627999420874,\\\"price\\\":4671.583745709489,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.023367566432866693,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4776078490510529,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4648.864245035119,\\\"ask\\\":4733.30375705392,\\\"price\\\":4691.08400104452,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.022392150948947087,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.47336082289088316,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4562.332383805756,\\\"ask\\\":4645.200176851672,\\\"price\\\":4603.766280328714,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.02663917710911684,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.46654547995254453,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4448.521804953238,\\\"ask\\\":4529.322402823225,\\\"price\\\":4488.9221038882315,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.03345452004745547,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4610998943971781,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4377.270444389442,\\\"ask\\\":4456.776870220935,\\\"price\\\":4417.023657305189,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.03890010560282192,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.45252688610370206,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4282.882054426022,\\\"ask\\\":4360.674059450914,\\\"price\\\":4321.778056938468,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.047473113896297936,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4600141663373039,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4350.43005268668,\\\"ask\\\":4429.448963835378,\\\"price\\\":4389.939508261029,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.03998583366269609,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.46035246740664426,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4354.110744081861,\\\"ask\\\":4433.196509362863,\\\"price\\\":4393.653626722363,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.03964753259335574,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4630450182317874,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4383.680464339072,\\\"ask\\\":4463.303318383576,\\\"price\\\":4423.491891361325,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.0369549817682126,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4590456030233331,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4431.1223990369335,\\\"ask\\\":4511.606963297947,\\\"price\\\":4471.364681167441,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.04095439697666692,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4600278412341202,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4441.7498726620215,\\\"ask\\\":4522.427468734591,\\\"price\\\":4482.0886706983065,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.039972158765879784,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.45217724126993164,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4528.9865955908335,\\\"ask\\\":4611.248713371494,\\\"price\\\":4570.117654481164,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.04782275873006836,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44899591222361984,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4559.114921495736,\\\"ask\\\":4641.924274257514,\\\"price\\\":4600.519597876625,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.05100408777638016,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4502220502666252,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4668.716023905178,\\\"ask\\\":4753.516113138571,\\\"price\\\":4711.116068521875,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.04977794973337479,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44791223380640055,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4647.152121572776,\\\"ask\\\":4731.560535486307,\\\"price\\\":4689.356328529542,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.05208776619359945,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44676019599136846,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4546.5939945107275,\\\"ask\\\":4629.175923775301,\\\"price\\\":4587.884959143014,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.05323980400863154,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4459673603564632,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4479.880582764148,\\\"ask\\\":4561.250764893062,\\\"price\\\":4520.565673828605,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.05403263964353677,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.444740995114936,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4581.5593063863835,\\\"ask\\\":4664.776327087649,\\\"price\\\":4623.167816737016,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.05525900488506402,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4461550908546086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4467.241165596491,\\\"ask\\\":4548.381772035175,\\\"price\\\":4507.811468815833,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.05384490914539142,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4456599338283248,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4508.321852449846,\\\"ask\\\":4590.208626762759,\\\"price\\\":4549.265239606303,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.054340066171675194,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4458661415231536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4525.429867257983,\\\"ask\\\":4607.627382505857,\\\"price\\\":4566.52862488192,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.054133858476846375,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.444605305803933,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4422.42679621888,\\\"ask\\\":4502.753418148182,\\\"price\\\":4462.5901071835315,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.05539469419606702,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4447399933638859,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4411.70011683912,\\\"ask\\\":4491.831905035995,\\\"price\\\":4451.766010937557,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.05526000663611408,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44529479193673815,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4367.847864385481,\\\"ask\\\":4447.1831434560545,\\\"price\\\":4407.515503920768,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.054705208063261845,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4450387797548312,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4388.288738327608,\\\"ask\\\":4467.995294624174,\\\"price\\\":4428.142016475891,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.05496122024516881,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44421007092365977,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4454.4556395528725,\\\"ask\\\":4535.364016456961,\\\"price\\\":4494.909828004917,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.05578992907634023,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4445459933790888,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4481.276818586651,\\\"ask\\\":4562.672361204774,\\\"price\\\":4521.974589895713,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.05545400662091121,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4432955972790108,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4382.459605311307,\\\"ask\\\":4462.06028431797,\\\"price\\\":4422.259944814639,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.0567044027209892,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44424578312950147,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4455.895721512075,\\\"ask\\\":4536.830255303415,\\\"price\\\":4496.362988407745,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.05575421687049853,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4434407495073649,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4520.234278735173,\\\"ask\\\":4602.337424060332,\\\"price\\\":4561.285851397753,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.056559250492635105,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4432862290146359,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4532.583608365902,\\\"ask\\\":4614.911060384657,\\\"price\\\":4573.74733437528,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.05671377098536412,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44431516828528245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4451.8157806789295,\\\"ask\\\":4532.67620858228,\\\"price\\\":4492.245994630605,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.05568483171471755,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.445540413510639,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4355.970434428783,\\\"ask\\\":4435.089978141918,\\\"price\\\":4395.530206285351,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.054459586489361,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4455792266072378,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4359.074914505697,\\\"ask\\\":4438.250846353429,\\\"price\\\":4398.662880429563,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.05442077339276219,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4451138601753552,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4322.11536249942,\\\"ask\\\":4400.619980587199,\\\"price\\\":4361.36767154331,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.0548861398246448,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4448648033048933,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4341.727828039873,\\\"ask\\\":4420.588676581465,\\\"price\\\":4381.158252310669,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.05513519669510669,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4437804094132998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4427.120524863349,\\\"ask\\\":4507.532401197899,\\\"price\\\":4467.326463030624,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.056219590586700174,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44498223264074704,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4334.461429169365,\\\"ask\\\":4413.1902946840455,\\\"price\\\":4373.825861926705,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.055017767359252956,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44428668661241616,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4389.258589736166,\\\"ask\\\":4468.982761900899,\\\"price\\\":4429.120675818533,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.05571331338758384,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4454237849053324,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4301.466464718559,\\\"ask\\\":4379.596027145334,\\\"price\\\":4340.531245931947,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.05457621509466759,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44451205403988026,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4230.78841609499,\\\"ask\\\":4307.634219818208,\\\"price\\\":4269.2113179565995,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.055487945960119744,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4432281042888511,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4135.10516181121,\\\"ask\\\":4210.213025496983,\\\"price\\\":4172.659093654097,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.05677189571114888,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4437926837454503,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4094.3877054554514,\\\"ask\\\":4168.755998793693,\\\"price\\\":4131.571852124573,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.05620731625454972,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4442859383700729,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":4058.769445543789,\\\"ask\\\":4132.490787642465,\\\"price\\\":4095.6301165931272,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.05571406162992709,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4455662722011972,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3967.5924132790183,\\\"ask\\\":4039.657663974298,\\\"price\\\":4003.6250386266584,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.05443372779880279,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4442289273818746,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3872.45278425639,\\\"ask\\\":3942.789969036021,\\\"price\\\":3907.6213766462056,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.05577107261812542,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44540549713388344,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3954.1476593619072,\\\"ask\\\":4025.9687066560687,\\\"price\\\":3990.058183008988,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.05459450286611656,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4456440156626494,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3936.9474858489007,\\\"ask\\\":4008.4561182861153,\\\"price\\\":3972.701802067508,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.054355984337350616,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44540135448569207,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3954.5231828431088,\\\"ask\\\":4026.351050947221,\\\"price\\\":3990.437116895165,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.05459864551430793,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4449213380858019,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3920.0590924759967,\\\"ask\\\":3991.2609730658733,\\\"price\\\":3955.6600327709352,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.05507866191419808,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4441695595072662,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3867.273973349073,\\\"ask\\\":3937.517092945726,\\\"price\\\":3902.3955331473994,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.05583044049273378,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44512358833692844,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3933.3578306537156,\\\"ask\\\":4004.801262492027,\\\"price\\\":3969.0795465728715,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.054876411663071556,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44558995305717597,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3900.212053657979,\\\"ask\\\":3971.0534431290625,\\\"price\\\":3935.632748393521,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.05441004694282403,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4468796307223244,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3809.9061067193197,\\\"ask\\\":3879.107226720276,\\\"price\\\":3844.506666719798,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.053120369277675605,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4466576338396632,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3794.0502806695063,\\\"ask\\\":3862.963403830002,\\\"price\\\":3828.5068422497543,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.053342366160336774,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44772530041569064,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3869.9895567837752,\\\"ask\\\":3940.282000802047,\\\"price\\\":3905.1357787929114,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.05227469958430936,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4485392901219939,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3810.652404090494,\\\"ask\\\":3879.867079442289,\\\"price\\\":3845.259741766392,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.051460709878006106,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44769431534736254,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3749.0930309988685,\\\"ask\\\":3817.189574447889,\\\"price\\\":3783.141302723379,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.05230568465263746,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44712873552509963,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3789.631863139224,\\\"ask\\\":3858.4647324999764,\\\"price\\\":3824.0482978196005,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.05287126447490037,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44740431362466637,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3809.384361160095,\\\"ask\\\":3878.576004450591,\\\"price\\\":3843.9801828053432,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.05259568637533363,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44645198301633604,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3741.6359452451907,\\\"ask\\\":3809.597042131581,\\\"price\\\":3775.616493688386,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.05354801698366396,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44694548327067013,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3707.467802214117,\\\"ask\\\":3774.808287017199,\\\"price\\\":3741.138044615658,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.05305451672932987,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4482516340310581,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3618.3866317172337,\\\"ask\\\":3684.1090932418656,\\\"price\\\":3651.24786247955,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.05174836596894189,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4476308514491425,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3575.4943667527755,\\\"ask\\\":3640.4377558562564,\\\"price\\\":3607.966061304516,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.0523691485508575,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.447443638956873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3562.7579976775673,\\\"ask\\\":3627.470050107634,\\\"price\\\":3595.114023892601,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.052556361043127,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4482134227669599,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3511.3281890270637,\\\"ask\\\":3575.106097606768,\\\"price\\\":3543.217143316916,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.05178657723304009,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4494690501439913,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3428.207213262659,\\\"ask\\\":3490.4753563895288,\\\"price\\\":3459.341284826094,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.0505309498560087,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4505288704517871,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3357.7821428011835,\\\"ask\\\":3418.771122186068,\\\"price\\\":3388.276632493626,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.04947112954821292,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44412574057616344,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3401.2424707758096,\\\"ask\\\":3463.020840577993,\\\"price\\\":3432.1316556769016,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.05587425942383656,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.4450020601283019,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3348.721856317123,\\\"ask\\\":3409.546269449018,\\\"price\\\":3379.134062883071,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.0549979398716981,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.025699999999999997,\\\"forecast\\\":0.44393471010112806,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":3413.71080631554,\\\"ask\\\":3475.7156443717254,\\\"price\\\":3444.713225343633,\\\"maxShares\\\":2600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.05606528989887194,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[3741.138044615658,3651.24786247955,3607.966061304516,3595.114023892601,3543.217143316916,3459.341284826094,3388.276632493626,3432.1316556769016,3379.134062883071,3444.713225343633]}],[\\\"OMGA\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.505,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5994.875,\\\"ask\\\":6055.124999999999,\\\"price\\\":6025,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.0050000000000000044},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.515,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5993.420517372196,\\\"ask\\\":6053.655899456338,\\\"price\\\":6023.5382084142675,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.015000000000000013},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5134719659956463,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6054.474853058437,\\\"ask\\\":6115.323846556511,\\\"price\\\":6084.899349807474,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.013471965995646262},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5140021394609653,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6078.301530727981,\\\"ask\\\":6139.389988323237,\\\"price\\\":6108.8457595256095,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.01400213946096529},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5150194191500647,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6034.460132457795,\\\"ask\\\":6095.107972985008,\\\"price\\\":6064.784052721402,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.015019419150064661},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5145593387716627,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6016.031602907556,\\\"ask\\\":6076.494232082505,\\\"price\\\":6046.262917495031,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.014559338771662711},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5133166711794349,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6067.379590779793,\\\"ask\\\":6128.358280134364,\\\"price\\\":6097.868935457079,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.013316671179434914},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5143835738444182,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6019.155429634001,\\\"ask\\\":6079.649454052433,\\\"price\\\":6049.402441843217,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.01438357384441824},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5146977290208992,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6032.302015153817,\\\"ask\\\":6092.9281660598845,\\\"price\\\":6062.615090606851,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.014697729020899164},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5133338570328558,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6088.278606708791,\\\"ask\\\":6149.467336424456,\\\"price\\\":6118.872971566624,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.013333857032855834},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5145094365272744,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6141.955914547915,\\\"ask\\\":6203.684114694124,\\\"price\\\":6172.82001462102,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.014509436527274433,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5147095115987479,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6150.425245981151,\\\"ask\\\":6212.238565036238,\\\"price\\\":6181.331905508695,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.014709511598747893,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5140670994537588,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6123.681141590001,\\\"ask\\\":6185.225675676332,\\\"price\\\":6154.453408633167,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.014067099453758836,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.513002402012749,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6170.029485557021,\\\"ask\\\":6232.039832145533,\\\"price\\\":6201.0346588512775,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.013002402012749048,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5129671985059887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6171.699997470846,\\\"ask\\\":6233.727133123819,\\\"price\\\":6202.713565297333,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.012967198505988708,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5132203011434165,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6183.74634307165,\\\"ask\\\":6245.894547524631,\\\"price\\\":6214.820445298141,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.013220301143416546,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5122416374277647,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6229.522971811861,\\\"ask\\\":6292.131242885346,\\\"price\\\":6260.827107348604,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.01224163742776474,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5119732845310143,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6243.178910772013,\\\"ask\\\":6305.924427463189,\\\"price\\\":6274.551669117602,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.011973284531014317,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5106945832535311,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6177.208670130724,\\\"ask\\\":6239.2911693280175,\\\"price\\\":6208.249919729371,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.01069458325353112,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5108008741112771,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6183.348047350566,\\\"ask\\\":6245.492248831476,\\\"price\\\":6214.4201480910215,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.010800874111277059,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.510395754578005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6160.242191142938,\\\"ask\\\":6222.15417296347,\\\"price\\\":6191.198182053205,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.010395754578005012,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5106813771993076,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6143.363343833552,\\\"ask\\\":6205.105688997708,\\\"price\\\":6174.23451641563,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.010681377199307618,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5105128861810693,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6133.68789375356,\\\"ask\\\":6195.332998213395,\\\"price\\\":6164.510445983477,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.01051288618106927,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5100143526231019,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6104.738498206487,\\\"ask\\\":6166.092653967356,\\\"price\\\":6135.415576086922,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.010014352623101908,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5101916459597795,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6115.546280782415,\\\"ask\\\":6177.009057473695,\\\"price\\\":6146.277669128055,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.010191645959779505,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5093718102591668,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6066.744217644239,\\\"ask\\\":6127.716521339155,\\\"price\\\":6097.230369491697,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.00937181025916678,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.49937181025916677,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6001.622038486844,\\\"ask\\\":6061.939847918871,\\\"price\\\":6031.780943202858,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.0006281897408332293,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4893718102591668,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6043.0555553955255,\\\"ask\\\":6103.789782082918,\\\"price\\\":6073.422668739222,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.010628189740833183,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4883783851396914,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6099.540463300876,\\\"ask\\\":6160.842377504904,\\\"price\\\":6130.19142040289,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.011621614860308604,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4891557702576819,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6059.010941438102,\\\"ask\\\":6119.905523764112,\\\"price\\\":6089.458232601108,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.010844229742318079,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48919468277257977,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6061.185105570798,\\\"ask\\\":6122.1015387926145,\\\"price\\\":6091.643322181707,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.01080531722742023,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4888834547873399,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6078.643273515981,\\\"ask\\\":6139.73516571212,\\\"price\\\":6109.189219614051,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.01111654521266009,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4883732004387046,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6106.544515356673,\\\"ask\\\":6167.916822043675,\\\"price\\\":6137.230668700175,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.01162679956129542,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4882549317315262,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6112.7561398140415,\\\"ask\\\":6174.1908748875485,\\\"price\\\":6143.473507350795,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.011745068268473824,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4872765819230322,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6062.258270559732,\\\"ask\\\":6123.185489359327,\\\"price\\\":6092.72187995953,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.012723418076967807,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4876355626541202,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6079.362431508033,\\\"ask\\\":6140.461551422686,\\\"price\\\":6109.91199146536,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.012364437345879775,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48637489062914857,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6141.347315515872,\\\"ask\\\":6203.069399088895,\\\"price\\\":6172.208357302384,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.01362510937085143,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48664303818256277,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6129.284640378651,\\\"ask\\\":6190.885491035722,\\\"price\\\":6160.085065707187,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.01335696181743723,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48789598333722994,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6072.323421854748,\\\"ask\\\":6133.351797953789,\\\"price\\\":6102.837609904269,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.012104016662770056,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48866046945098424,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6034.2115202996665,\\\"ask\\\":6094.856862212225,\\\"price\\\":6064.534191255946,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.011339530549015764,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48756889817647825,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5976.678533585459,\\\"ask\\\":6036.745654526016,\\\"price\\\":6006.712094055738,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.01243110182352175,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48621969065856435,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5912.507237048798,\\\"ask\\\":5971.929420335719,\\\"price\\\":5942.218328692259,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.013780309341435648,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48568222510052755,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5935.567452337303,\\\"ask\\\":5995.221396581898,\\\"price\\\":5965.3944244596005,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.014317774899472446,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4854517873594575,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5926.029790737789,\\\"ask\\\":5985.587879086912,\\\"price\\\":5955.808834912351,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.014548212640542513,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4868889057114971,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5868.063210654548,\\\"ask\\\":5927.038720309367,\\\"price\\\":5897.550965481958,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.013111094288502878,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.487024110362411,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5874.1144937929275,\\\"ask\\\":5933.15082036371,\\\"price\\\":5903.632657078319,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.012975889637589,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48757663916257976,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5849.207871607465,\\\"ask\\\":5907.9938803673385,\\\"price\\\":5878.600875987402,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.012423360837420239,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4873300554250779,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5860.817608757351,\\\"ask\\\":5919.7202982926,\\\"price\\\":5890.268953524976,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.012669944574922098,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48814029544486975,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5823.575975334159,\\\"ask\\\":5882.104377096311,\\\"price\\\":5852.840176215235,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.011859704555130246,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48844316140986005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5838.447871588108,\\\"ask\\\":5897.125739644269,\\\"price\\\":5867.786805616189,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.01155683859013995,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48733794556419285,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5783.1419154407195,\\\"ask\\\":5841.26394474163,\\\"price\\\":5812.202930091175,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.012662054435807146,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4882378353647711,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5742.331276272668,\\\"ask\\\":5800.043148396011,\\\"price\\\":5771.18721233434,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.011762164635228889,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48895814119083275,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5777.496866975988,\\\"ask\\\":5835.562162121475,\\\"price\\\":5806.529514548732,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.011041858809167249,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4890860846247867,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5770.810155248197,\\\"ask\\\":5828.808247260741,\\\"price\\\":5799.809201254469,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.010913915375213301,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48992588327902437,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5815.215104669424,\\\"ask\\\":5873.659477580674,\\\"price\\\":5844.437291125049,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.010074116720975634,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4889857564204344,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5761.448677339107,\\\"ask\\\":5819.352684146535,\\\"price\\\":5790.400680742821,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.011014243579565597,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4889524634914055,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5759.707681348988,\\\"ask\\\":5817.594190709279,\\\"price\\\":5788.650936029134,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.011047536508594524,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4893531356482911,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5780.596994526826,\\\"ask\\\":5838.693446733126,\\\"price\\\":5809.645220629976,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.010646864351708918,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4895580398832493,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5791.7220428569035,\\\"ask\\\":5849.930304594159,\\\"price\\\":5820.826173725532,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.010441960116750693,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4886870090293942,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5840.03451043843,\\\"ask\\\":5898.728324613689,\\\"price\\\":5869.3814175260595,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.011312990970605785,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4876613010600493,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5787.56079026078,\\\"ask\\\":5845.727230363903,\\\"price\\\":5816.644010312341,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.01233869893995071,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48699971605266923,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5756.694144138928,\\\"ask\\\":5814.550366693088,\\\"price\\\":5785.622255416009,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.01300028394733077,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4858743722265935,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5806.525826584931,\\\"ask\\\":5864.882870068195,\\\"price\\\":5835.704348326563,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.01412562777340648,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48687521158617264,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5847.666650078802,\\\"ask\\\":5906.437169175071,\\\"price\\\":5877.051909626937,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.01312478841382736,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48816326853335856,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5905.055214495781,\\\"ask\\\":5964.402503083678,\\\"price\\\":5934.72885878973,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.011836731466641437,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4876640199458578,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5880.253534408054,\\\"ask\\\":5939.351559879491,\\\"price\\\":5909.802547143773,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.012335980054142215,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4881231601780008,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5858.448623495554,\\\"ask\\\":5917.3275041337,\\\"price\\\":5887.8880638146275,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.011876839821999219,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48696557575253363,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5801.900002968455,\\\"ask\\\":5860.210555762107,\\\"price\\\":5831.055279365281,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.01303442424746637,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4856073856872171,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5742.06752461541,\\\"ask\\\":5799.776745968328,\\\"price\\\":5770.922135291869,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.014392614312782881,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4843196054852951,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5793.444715135493,\\\"ask\\\":5851.67029016198,\\\"price\\\":5822.557502648737,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.015680394514704876,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48461015728243134,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5804.179749716501,\\\"ask\\\":5862.513214537771,\\\"price\\\":5833.346482127136,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.015389842717568658,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4849015512057905,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5815.169483271223,\\\"ask\\\":5873.613397675958,\\\"price\\\":5844.391440473591,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.015098448794209518,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.4843385622029788,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5793.566507526808,\\\"ask\\\":5851.793306597428,\\\"price\\\":5822.679907062118,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.015661437797021227,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48524519530228377,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5827.105185308663,\\\"ask\\\":5885.669056517795,\\\"price\\\":5856.387120913229,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.014754804697716228,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.48631453892644955,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5785.177536383857,\\\"ask\\\":5843.32002418671,\\\"price\\\":5814.248780285284,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.013685461073550453,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5141787402612953,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5764.400313830955,\\\"ask\\\":5822.3339853267435,\\\"price\\\":5793.367149578849,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.014178740261295286,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5156041282654573,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5707.0275957719205,\\\"ask\\\":5764.384657035959,\\\"price\\\":5735.70612640394,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.015604128265457318,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5153275496000249,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5717.143137307932,\\\"ask\\\":5774.601862306002,\\\"price\\\":5745.872499806967,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.015327549600024915,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.516628705920396,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5765.675989079377,\\\"ask\\\":5823.622481431934,\\\"price\\\":5794.649235255656,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.016628705920396003,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.515530511596618,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5727.848089007516,\\\"ask\\\":5785.414401459852,\\\"price\\\":5756.631245233684,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.015530511596618002,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5166120628576008,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5688.234984941646,\\\"ask\\\":5745.403175745078,\\\"price\\\":5716.819080343363,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.01661206285760075,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5158502260415053,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5662.267566375838,\\\"ask\\\":5719.174778098208,\\\"price\\\":5690.721172237023,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.015850226041505322,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5162006177642998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5674.78481175966,\\\"ask\\\":5731.817824943174,\\\"price\\\":5703.301318351418,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.01620061776429982,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5149564969212544,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5631.537613257838,\\\"ask\\\":5688.135981230278,\\\"price\\\":5659.836797244058,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.014956496921254447,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5143718855630035,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5609.6110727999,\\\"ask\\\":5665.989073531558,\\\"price\\\":5637.800073165729,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.014371885563003506,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5128712402030278,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5551.64339786453,\\\"ask\\\":5607.438808898343,\\\"price\\\":5579.541103381437,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.012871240203027767,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5135261125496519,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5579.889454050513,\\\"ask\\\":5635.968745045996,\\\"price\\\":5607.929099548255,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.013526112549651859,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5133210314283287,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5588.349608303224,\\\"ask\\\":5644.513925974613,\\\"price\\\":5616.431767138919,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.013321031428328745,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5141485442146387,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5553.848670349045,\\\"ask\\\":5609.666244925417,\\\"price\\\":5581.757457637232,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.014148544214638736,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5126935921023766,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5610.9611458908585,\\\"ask\\\":5667.3527151962935,\\\"price\\\":5639.156930543576,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.012693592102376638,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5138227448305499,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5660.8731962739,\\\"ask\\\":5717.766394226402,\\\"price\\\":5689.319795250151,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.013822744830549905,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5130639433844959,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5691.948636209441,\\\"ask\\\":5749.154150141194,\\\"price\\\":5720.551393175318,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.013063943384495902,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5121949461667724,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5654.336693854707,\\\"ask\\\":5711.164198315558,\\\"price\\\":5682.750446085132,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.012194946166772413,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0109,\\\"forecast\\\":0.5131987149974695,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5608.175670605859,\\\"ask\\\":5664.539245184812,\\\"price\\\":5636.357457895336,\\\"maxShares\\\":2000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.013198714997469496,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[5637.800073165729,5579.541103381437,5607.929099548255,5616.431767138919,5581.757457637232,5639.156930543576,5689.319795250151,5720.551393175318,5682.750446085132,5636.357457895336]}],[\\\"FNS\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.49,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2943.252,\\\"ask\\\":2984.7479999999996,\\\"price\\\":2964,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2942.7540624817098,\\\"ask\\\":2984.2430422145835,\\\"price\\\":2963.498552348147,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.49,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2921.999717854849,\\\"ask\\\":2963.196088499328,\\\"price\\\":2942.597903177089,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2930.0175004115954,\\\"ask\\\":2971.326911293531,\\\"price\\\":2950.6722058525634,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.51,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2915.2499363504608,\\\"ask\\\":2956.3511439123,\\\"price\\\":2935.8005401313803,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2921.476428763616,\\\"ask\\\":2962.66542171698,\\\"price\\\":2942.070925240298,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.51,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2904.1931588115895,\\\"ask\\\":2945.138480285267,\\\"price\\\":2924.6658195484283,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2888.0598884069777,\\\"ask\\\":2928.7777518890493,\\\"price\\\":2908.4188201480138,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.49,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2892.4580451410534,\\\"ask\\\":2933.237916875167,\\\"price\\\":2912.8479810081103,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2873.863880928496,\\\"ask\\\":2914.3815992900254,\\\"price\\\":2894.122740109261,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.020000000000000018},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4787705431306479,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2856.3053597012367,\\\"ask\\\":2896.575525900448,\\\"price\\\":2876.4404428008424,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.021229456869352126,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4789746550710946,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2859.0515723484314,\\\"ask\\\":2899.3604565507253,\\\"price\\\":2879.2060144495786,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.0210253449289054,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.47833441078185146,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2867.7576908356064,\\\"ask\\\":2908.189319910831,\\\"price\\\":2887.973505373219,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.02166558921814854,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.477191060636546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2882.8916026784987,\\\"ask\\\":2923.5366000979334,\\\"price\\\":2903.214101388216,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.022808939363454017,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.47723411870291527,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2883.4358267477796,\\\"ask\\\":2924.0884970141124,\\\"price\\\":2903.762161880946,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.022765881297084734,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4775439477083418,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2879.5169892854524,\\\"ask\\\":2920.114409073968,\\\"price\\\":2899.8156991797105,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.0224560522916582,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4787030256590171,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2864.730570037624,\\\"ask\\\":2905.119520672595,\\\"price\\\":2884.92504535511,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.021296974340982877,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4783775100809835,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2860.3586283834056,\\\"ask\\\":2900.6859403646417,\\\"price\\\":2880.522284374024,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.021622489919016497,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4799875943007978,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2881.6578326277768,\\\"ask\\\":2922.285435504704,\\\"price\\\":2901.9716340662403,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.020012405699202207,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48012627577158157,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2883.65475669843,\\\"ask\\\":2924.310513590452,\\\"price\\\":2903.9826351444412,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.019873724228418432,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4796065303971325,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2891.196202901849,\\\"ask\\\":2931.958284312348,\\\"price\\\":2911.577243607099,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.020393469602867476,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4799972046557379,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2885.668177030839,\\\"ask\\\":2926.3523205136503,\\\"price\\\":2906.0102487722447,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.02000279534426208,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.47977720232144,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2888.8420021089337,\\\"ask\\\":2929.5708923702878,\\\"price\\\":2909.206447239611,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.02022279767856,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.47910854936955133,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2898.3937602927094,\\\"ask\\\":2939.2573178396356,\\\"price\\\":2918.8255390661725,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.02089145063044867,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4793664338608381,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2894.820388120702,\\\"ask\\\":2935.6335657981335,\\\"price\\\":2915.2269769594177,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.020633566139161896,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48052372835335133,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2878.6744920939573,\\\"ask\\\":2919.26003377504,\\\"price\\\":2898.9672629344986,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.01947627164664867,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4790502179691573,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2857.0589279094575,\\\"ask\\\":2897.3397184338605,\\\"price\\\":2877.199323171659,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.02094978203084269,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4800586572630494,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2843.372064187153,\\\"ask\\\":2883.4598878514225,\\\"price\\\":2863.415976019288,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.019941342736950585,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48135828008871434,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2824.9611475433057,\\\"ask\\\":2864.789401385809,\\\"price\\\":2844.8752744645576,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.01864171991128566,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48048883368317186,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2811.8467457730667,\\\"ask\\\":2851.4901037195145,\\\"price\\\":2831.668424746291,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.019511166316828144,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.480440017826472,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2811.1434132720938,\\\"ask\\\":2850.7768551510553,\\\"price\\\":2830.9601342115748,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.019559982173528,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4800471950429836,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2805.5091141732773,\\\"ask\\\":2845.0631198111682,\\\"price\\\":2825.286116992223,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.0199528049570164,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4806857641843767,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2796.559012714103,\\\"ask\\\":2835.9868336385716,\\\"price\\\":2816.2729231763374,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.019314235815623304,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4808227495861474,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2794.576970800674,\\\"ask\\\":2833.9768475289816,\\\"price\\\":2814.276909164828,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.019177250413852598,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":0},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48193656199614077,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2778.439825530566,\\\"ask\\\":2817.6121896367367,\\\"price\\\":2798.0260075836513,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.018063438003859233,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":0},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48229191079113654,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2783.9056468418776,\\\"ask\\\":2823.155071872881,\\\"price\\\":2803.5303593573794,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.017708089208863464,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4835507972236184,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2764.2542764231134,\\\"ask\\\":2803.2266428580815,\\\"price\\\":2783.7404596405977,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.016449202776381622,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4833250794331223,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2760.4663338092573,\\\"ask\\\":2799.385295212409,\\\"price\\\":2779.9258145108333,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.016674920566877693,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4822344549454965,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2778.521185518111,\\\"ask\\\":2817.694696693593,\\\"price\\\":2798.107941105852,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.017765545054503507,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48145209660095517,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2790.757225720119,\\\"ask\\\":2830.103249043464,\\\"price\\\":2810.430237381792,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.01854790339904483,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48269700943074606,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2772.1508844645164,\\\"ask\\\":2811.234582734912,\\\"price\\\":2791.6927335997143,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.01730299056925394,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4813875941822809,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2793.1293195196336,\\\"ask\\\":2832.5087862600913,\\\"price\\\":2812.8190528898626,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.018612405817719113,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48088144180650305,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2785.5541845147436,\\\"ask\\\":2824.826851768728,\\\"price\\\":2805.190518141736,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.01911855819349695,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4806668958614811,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2782.4317761781035,\\\"ask\\\":2821.660421562286,\\\"price\\\":2802.046098870195,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.01933310413851891,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48199848909557375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2763.3985018431013,\\\"ask\\\":2802.3588029768407,\\\"price\\\":2782.878652409971,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.018001510904426254,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4818690549852866,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2761.412996092044,\\\"ask\\\":2800.3453041940465,\\\"price\\\":2780.8791501430455,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.018130945014713407,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4813307538295127,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2753.2387305500456,\\\"ask\\\":2792.0557922093612,\\\"price\\\":2772.6472613797037,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.01866924617048732,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48107238554117104,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2749.433721616766,\\\"ask\\\":2788.1971376315037,\\\"price\\\":2768.815429624135,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.018927614458828956,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.481916345710674,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2737.228739125888,\\\"ask\\\":2775.82008086583,\\\"price\\\":2756.524409995859,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.018083654289326012,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4822383412769167,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2732.3635225852504,\\\"ask\\\":2770.8862711413362,\\\"price\\\":2751.6248968632935,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.017761658723083273,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48342268747610995,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2750.582904025016,\\\"ask\\\":2789.3625220072418,\\\"price\\\":2769.972713016129,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.016577312523890053,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48260122756723,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2737.020076759635,\\\"ask\\\":2775.6084766333856,\\\"price\\\":2756.31427669651,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.017398772432769993,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48334413614991517,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2725.3829890198485,\\\"ask\\\":2763.8073211913265,\\\"price\\\":2744.5951551055878,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.01665586385008483,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4834787005159712,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2723.1829027063714,\\\"ask\\\":2761.5762165411033,\\\"price\\\":2742.3795596237374,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.016521299484028806,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4825923083879284,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2708.6505920685245,\\\"ask\\\":2746.839019348443,\\\"price\\\":2727.744805708484,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.01740769161207162,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4837249897659931,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2691.1399184004263,\\\"ask\\\":2729.081468105971,\\\"price\\\":2710.110693253199,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.016275010234006904,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48369068885196426,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2691.707098129676,\\\"ask\\\":2729.6566443268716,\\\"price\\\":2710.681871228274,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.016309311148035743,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48327826247688643,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2698.5138295187376,\\\"ask\\\":2736.5593417173905,\\\"price\\\":2717.5365856180642,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.016721737523113567,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4835026494861237,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2694.897578474258,\\\"ask\\\":2732.8921062674494,\\\"price\\\":2713.894842370854,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.016497350513876297,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4844621667764094,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2710.5716154653505,\\\"ask\\\":2748.787126660229,\\\"price\\\":2729.67937106279,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.015537833223590591,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4834799127012598,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2727.707016373332,\\\"ask\\\":2766.1641142879607,\\\"price\\\":2746.9355653306466,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.016520087298740216,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4840975246924484,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2717.5473254198237,\\\"ask\\\":2755.861184992711,\\\"price\\\":2736.7042552062676,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.015902475307551622,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4831377170166467,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2733.949317762825,\\\"ask\\\":2772.4944239548486,\\\"price\\\":2753.221870858837,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.016862282983353294,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48230468808282334,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2720.509482150946,\\\"ask\\\":2758.865104255793,\\\"price\\\":2739.68729320337,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.01769531191717666,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48351553173756906,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2702.0202681040764,\\\"ask\\\":2740.1152164962787,\\\"price\\\":2721.0677423001775,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.01648446826243094,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4840003144080863,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2694.0973452359276,\\\"ask\\\":2732.0805907880954,\\\"price\\\":2713.0889680120117,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.015999685591913726,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4844155267305168,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2701.088872720284,\\\"ask\\\":2739.1706896569244,\\\"price\\\":2720.1297811886043,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.015584473269483201,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.485474612172601,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2682.8567867402135,\\\"ask\\\":2720.681555133328,\\\"price\\\":2701.769170936771,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.014525387827398983,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4844192937291425,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2663.505520300877,\\\"ask\\\":2701.0574611711813,\\\"price\\\":2682.2814907360294,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.015580706270857503,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48539131616924824,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2646.9919200803965,\\\"ask\\\":2684.3110408066054,\\\"price\\\":2665.651480443501,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.014608683830751756,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4852025758153409,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2643.576488766723,\\\"ask\\\":2680.847456382769,\\\"price\\\":2662.211972574746,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.014797424184659125,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48539792856449443,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2647.0664876221567,\\\"ask\\\":2684.3866596530834,\\\"price\\\":2665.7265736376203,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.01460207143550557,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48501829102999744,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2653.94856458945,\\\"ask\\\":2691.365764895847,\\\"price\\\":2672.6571647426485,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.01498170897000256,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.4856230027571916,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2643.279407558022,\\\"ask\\\":2680.5461867179533,\\\"price\\\":2661.9127971379876,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.014376997242808387,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.48489649692873743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2656.636563182325,\\\"ask\\\":2694.0916607498502,\\\"price\\\":2675.364111966088,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.01510350307126257,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5147239275989359,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2649.976742814412,\\\"ask\\\":2687.3379456335474,\\\"price\\\":2668.6573442239796,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.014723927598935926,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5136918645711923,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2668.551562625649,\\\"ask\\\":2706.1746460866343,\\\"price\\\":2687.363104356142,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.013691864571192314,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5138610756733677,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2665.2577001230334,\\\"ask\\\":2702.834344434939,\\\"price\\\":2684.046022278986,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.013861075673367695,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5130406471055879,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2649.5750280368115,\\\"ask\\\":2686.9305672034934,\\\"price\\\":2668.2527976201527,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.013040647105587944,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5136411387637595,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2661.775708640721,\\\"ask\\\":2699.303261431224,\\\"price\\\":2680.5394850359726,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.013641138763759497,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5143035063428658,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2674.700391563382,\\\"ask\\\":2712.410165462563,\\\"price\\\":2693.5552785129726,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.014303506342865813,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5138461360026938,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2683.2530401141853,\\\"ask\\\":2721.083395161112,\\\"price\\\":2702.168217637649,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.013846136002693799,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.514059555486796,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2687.3889122407163,\\\"ask\\\":2725.2775776700914,\\\"price\\\":2706.333244955404,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.01405955548679605,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5133067380409031,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2701.7785084049356,\\\"ask\\\":2739.870048301883,\\\"price\\\":2720.824278353409,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.013306738040903099,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5129440810408628,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2694.4351927043817,\\\"ask\\\":2732.423201463557,\\\"price\\\":2713.4291970839695,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.012944081040862754,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5120017084698043,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2714.0515858039253,\\\"ask\\\":2752.3161600247254,\\\"price\\\":2733.1838729143255,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.012001708469804306,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5115759469336084,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2704.4575018992687,\\\"ask\\\":2742.586812097244,\\\"price\\\":2723.5221569982564,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.011575946933608416,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.511453570918273,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2707.3165399945915,\\\"ask\\\":2745.4861588867607,\\\"price\\\":2726.4013494406763,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.011453570918273037,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5119496659339381,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2695.640758234249,\\\"ask\\\":2733.645763889112,\\\"price\\\":2714.6432610616807,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.011949665933938092,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5128064666122514,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2676.450393206068,\\\"ask\\\":2714.184839837372,\\\"price\\\":2695.31761652172,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.012806466612251377,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5136007666177954,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2659.952475940079,\\\"ask\\\":2697.454323536414,\\\"price\\\":2678.7033997382464,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.013600766617795412,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5130801903785627,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2649.810193054525,\\\"ask\\\":2687.169047740087,\\\"price\\\":2668.489620397306,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.013080190378562673,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5136868502318669,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2637.577097900854,\\\"ask\\\":2674.763481959879,\\\"price\\\":2656.1702899303664,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.013686850231866887,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0076,\\\"forecast\\\":0.5144723470453421,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2652.7143162571474,\\\"ask\\\":2690.1141152778923,\\\"price\\\":2671.41421576752,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.01447234704534206,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[2713.4291970839695,2733.1838729143255,2723.5221569982564,2726.4013494406763,2714.6432610616807,2695.31761652172,2678.7033997382464,2668.489620397306,2656.1702899303664,2671.41421576752]}],[\\\"JGN\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.51,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":583.699,\\\"ask\\\":594.3009999999999,\\\"price\\\":589,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.52,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":583.9991982937014,\\\"ask\\\":594.6066509367756,\\\"price\\\":589.3029246152386,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.020000000000000018},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5156822525381564,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":571.657827622403,\\\"ask\\\":582.0411181342125,\\\"price\\\":576.8494728783078,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.01568225253815636},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5169901717981772,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":576.4255246166317,\\\"ask\\\":586.8954130556825,\\\"price\\\":581.6604688361572,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.01699017179817719},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5196061205214023,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":567.6849727418277,\\\"ask\\\":577.9961024182685,\\\"price\\\":572.8405375800481,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.019606120521402315},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.520878913363593,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":571.3702778950646,\\\"ask\\\":581.7483455056712,\\\"price\\\":576.559311700368,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.020878913363593044},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5171022637414459,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":581.7054198947494,\\\"ask\\\":592.2712095598407,\\\"price\\\":586.9883147272951,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.017102263741445856},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5141984536821568,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":591.5822530167869,\\\"ask\\\":602.3274402562441,\\\"price\\\":596.9548466365155,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.014198453682156775},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5135412440137537,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":594.320534135575,\\\"ask\\\":605.1154580653836,\\\"price\\\":599.7179961004794,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.013541244013753673},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.51620422103961,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":606.0082485493333,\\\"ask\\\":617.0154619437711,\\\"price\\\":611.5118552465523,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.016204221039609945},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5192319001783524,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":617.3312151242382,\\\"ask\\\":628.544092896424,\\\"price\\\":622.9376540103311,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.019231900178352412,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5186698823249613,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":619.1352550846059,\\\"ask\\\":630.3809004847299,\\\"price\\\":624.7580777846679,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.01866988232496125,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5203978776068321,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":624.8656757750227,\\\"ask\\\":636.2154055065569,\\\"price\\\":630.5405406407898,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.020397877606832093,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5236697180457678,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":634.8885851497649,\\\"ask\\\":646.4203657074801,\\\"price\\\":640.6544754286225,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.023669718045767785,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.523533905182773,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":635.2528735467166,\\\"ask\\\":646.7912708462533,\\\"price\\\":641.0220721964849,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.023533905182772985,\\\"countOfNegative\\\":0,\\\"countOfPositive\\\":10},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5245073918162819,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":632.6359570457017,\\\"ask\\\":644.1268220576317,\\\"price\\\":638.3813895516668,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.02450739181628192,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5283522003299029,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":622.8642369901278,\\\"ask\\\":634.1776136458516,\\\"price\\\":628.5209253179897,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.028352200329902932,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5270350388359403,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":619.9839701928071,\\\"ask\\\":631.2450312053908,\\\"price\\\":625.6145006990989,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.027035038835940273,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5331538672627731,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":634.0160400707804,\\\"ask\\\":645.5319721810467,\\\"price\\\":639.7740061259136,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.03315386726277314,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5324555516975911,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":635.3514597545457,\\\"ask\\\":646.891647721833,\\\"price\\\":641.1215537381894,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.03245555169759107,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5298756761436691,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":630.3409114109576,\\\"ask\\\":641.7900904275036,\\\"price\\\":636.0655009192307,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.02987567614366915,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5316152377239959,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":626.6918922782457,\\\"ask\\\":638.0747924407164,\\\"price\\\":632.383342359481,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.03161523772399588,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5326721317343335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":628.7869165607084,\\\"ask\\\":640.2078696364831,\\\"price\\\":634.4973930985958,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.032672131734333476,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5293886440748704,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":622.5306013505666,\\\"ask\\\":633.8379180249461,\\\"price\\\":628.1842596877564,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.029388644074870407,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5282860019880536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":620.203639163416,\\\"ask\\\":631.46869012703,\\\"price\\\":625.836164645223,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.028286001988053644,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5234638649624485,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":609.8077669828527,\\\"ask\\\":620.8839928210882,\\\"price\\\":615.3458799019705,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.023463864962448455,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5180681957652283,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":623.8306953870216,\\\"ask\\\":635.1616262820431,\\\"price\\\":629.4961608345324,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.018068195765228334,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5207117207894497,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":632.9578493959829,\\\"ask\\\":644.4545610903599,\\\"price\\\":638.7062052431714,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.020711720789449717,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5248144939230128,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":620.6631675834952,\\\"ask\\\":631.9365651783518,\\\"price\\\":626.2998663809235,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.024814493923012826,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5283322089009236,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":629.4617194605546,\\\"ask\\\":640.8949292993941,\\\"price\\\":635.1783243799744,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.028332208900923583,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5281167539354975,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":628.9834030757038,\\\"ask\\\":640.4079250286428,\\\"price\\\":634.6956640521734,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.028116753935497507,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5264004595499173,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":625.167275907716,\\\"ask\\\":636.5224837445867,\\\"price\\\":630.8448798261513,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.02640045954991732,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5238323482332992,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":619.1445319621123,\\\"ask\\\":630.390345862534,\\\"price\\\":624.7674389123232,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.02383234823329916,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5243461102369135,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":620.4792428019919,\\\"ask\\\":631.749299684369,\\\"price\\\":626.1142712431805,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.024346110236913465,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.520048236180117,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":609.7157916492275,\\\"ask\\\":620.7903468961357,\\\"price\\\":615.2530692726816,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.020048236180116974,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5188494851545227,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":606.0917664724705,\\\"ask\\\":617.1004968423034,\\\"price\\\":611.596131657387,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.01884948515452267,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5147765008919309,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":593.2723762759042,\\\"ask\\\":604.0482620205725,\\\"price\\\":598.6603191482384,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.014776500891930944,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5141602026512342,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":595.7467964679847,\\\"ask\\\":606.5676262726504,\\\"price\\\":601.1572113703176,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.014160202651234188,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5169752086662196,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":607.5900649350465,\\\"ask\\\":618.6260096059151,\\\"price\\\":613.1080372704808,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.0169752086662196,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5192473779879676,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":599.5647577023666,\\\"ask\\\":610.4549349361129,\\\"price\\\":605.0098463192397,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.019247377987967607,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5153208013328311,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":587.577829458581,\\\"ask\\\":598.2502824659014,\\\"price\\\":592.9140559622413,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.015320801332831091,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5188448028901861,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":574.3665835775796,\\\"ask\\\":584.7990745002803,\\\"price\\\":579.58282903893,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.018844802890186085,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5204024488514883,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":569.6579884797708,\\\"ask\\\":580.0049549708261,\\\"price\\\":574.8314717252985,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.020402448851488342,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5210983472847532,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":571.6010106364026,\\\"ask\\\":581.9832691545209,\\\"price\\\":576.7921398954618,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.02109834728475324,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5255152396263926,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":559.8800457061158,\\\"ask\\\":570.049410814804,\\\"price\\\":564.9647282604599,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.025515239626392572,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5260728589610209,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":558.6591317038719,\\\"ask\\\":568.8063207761925,\\\"price\\\":563.7327262400322,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.02607285896102085,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5237200215639319,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":553.6628303220126,\\\"ask\\\":563.7192692178716,\\\"price\\\":558.6910497699421,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.023720021563931937,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5247177811129997,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":555.991758963282,\\\"ask\\\":566.0904992875394,\\\"price\\\":561.0411291254107,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.024717781112999715,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5280676972833992,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":548.557349191438,\\\"ask\\\":558.5210548276094,\\\"price\\\":553.5392020095237,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.028067697283399196,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.526548658482235,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":545.6045083867178,\\\"ask\\\":555.5145801838529,\\\"price\\\":550.5595442852854,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.026548658482234977,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.521167991447784,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":534.766298259802,\\\"ask\\\":544.4795105389911,\\\"price\\\":539.6229043993966,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.02116799144778403,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.524356226164967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":542.8207255392963,\\\"ask\\\":552.6802341767406,\\\"price\\\":547.7504798580185,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.02435622616496702,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5275172309528496,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":549.8655727203414,\\\"ask\\\":559.8530402369571,\\\"price\\\":554.8593064786493,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.027517230952849636,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.526841512118647,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":548.5186190155349,\\\"ask\\\":558.4816211772701,\\\"price\\\":553.5001200964025,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.02684151211864705,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5224644062347285,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":539.7173269093919,\\\"ask\\\":549.520467055072,\\\"price\\\":544.618896982232,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.02246440623472845,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5180215740643824,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":550.3914283204467,\\\"ask\\\":560.3884472001318,\\\"price\\\":555.3899377602893,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.01802157406438243,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5181370191715696,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":550.0390766338944,\\\"ask\\\":560.029695583854,\\\"price\\\":555.0343861088743,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.018137019171569624,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.51953105877704,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":554.266762838174,\\\"ask\\\":564.3341712449219,\\\"price\\\":559.300467041548,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.019531058777039978,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5203276591080519,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":552.015294694551,\\\"ask\\\":562.0418086244217,\\\"price\\\":557.0285516594864,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.0203276591080519,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5239212146349432,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":542.4261990917781,\\\"ask\\\":552.278541759439,\\\"price\\\":547.3523704256086,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.023921214634943233,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5193248444475469,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":552.8487116958252,\\\"ask\\\":562.8903633714305,\\\"price\\\":557.8695375336279,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.019324844447546896,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5171289180681757,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":559.1308583548031,\\\"ask\\\":569.2866156205815,\\\"price\\\":564.2087369876923,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.017128918068175736,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5202712192482015,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":569.3881177392205,\\\"ask\\\":579.7301824408411,\\\"price\\\":574.5591500900308,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.020271219248201522,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5172273781875407,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":560.9649045658991,\\\"ask\\\":571.1539744772878,\\\"price\\\":566.0594395215935,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.01722737818754072,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5136443731131444,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":549.5354901288458,\\\"ask\\\":559.5169621998036,\\\"price\\\":554.5262261643247,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.01364437311314437,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5124247542897618,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":554.4475796936806,\\\"ask\\\":564.5182723621833,\\\"price\\\":559.482926027932,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.012424754289761752,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5134047969530862,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":550.1084216699691,\\\"ask\\\":560.1003001664972,\\\"price\\\":555.1043609182332,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.013404796953086162,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5106359592661055,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":561.4712266059634,\\\"ask\\\":571.6694930831654,\\\"price\\\":566.5703598445645,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.010635959266105499,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5082872414378634,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":549.3402545207683,\\\"ask\\\":559.3181804353735,\\\"price\\\":554.329217478071,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.008287241437863413,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5182872414378634,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":559.7569258867331,\\\"ask\\\":569.9240547121228,\\\"price\\\":564.840490299428,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.018287241437863422,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5190053667940608,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":557.5674032546467,\\\"ask\\\":567.6947627486766,\\\"price\\\":562.6310830016616,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.01900536679406084,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5197679865420409,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":559.8047287278121,\\\"ask\\\":569.9727258187309,\\\"price\\\":564.8887272732715,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.019767986542040927,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.521330110524237,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":564.2284690527692,\\\"ask\\\":574.4768166238588,\\\"price\\\":569.3526428383141,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.021330110524236945,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5187132623391182,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":571.1506096743816,\\\"ask\\\":581.5246873475792,\\\"price\\\":576.3376485109804,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.018713262339118186,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5158390502817064,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":562.5108785560328,\\\"ask\\\":572.7280287215308,\\\"price\\\":567.6194536387818,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.0158390502817064,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5170489461064074,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":566.8077243340898,\\\"ask\\\":577.1029201343054,\\\"price\\\":571.9553222341976,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.017048946106407392,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5206812190239559,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":578.8835461104412,\\\"ask\\\":589.398080752205,\\\"price\\\":584.1408134313232,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.02068121902395592,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5214580754833235,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":576.7172014541657,\\\"ask\\\":587.1923877570667,\\\"price\\\":581.9547946056163,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.021458075483323458,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5253184816091466,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":566.5251542796018,\\\"ask\\\":576.815217626759,\\\"price\\\":571.6701859531804,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.025318481609146626,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5217748882386645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":558.7054712724739,\\\"ask\\\":568.853502032216,\\\"price\\\":563.779486652345,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.02177488823866447,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5249885692180365,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":550.579655212288,\\\"ask\\\":560.5800929457099,\\\"price\\\":555.579874078999,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.024988569218036494,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5225599173675551,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":545.2800504529753,\\\"ask\\\":555.1842289677619,\\\"price\\\":550.2321397103686,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.022559917367555138,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5236168355392266,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":542.7373595008956,\\\"ask\\\":552.5953539216989,\\\"price\\\":547.6663567112973,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.023616835539226555,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5197732356004064,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":534.0458537844601,\\\"ask\\\":543.7459802911404,\\\"price\\\":538.8959170378002,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.019773235600406447,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5214111853953038,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":529.6583383359251,\\\"ask\\\":539.2787723319358,\\\"price\\\":534.4685553339305,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.021411185395303844,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5261491358308654,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":518.1915930864684,\\\"ask\\\":527.6037511849107,\\\"price\\\":522.8976721356896,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.026149135830865422,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5233295905111439,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":512.6637671021863,\\\"ask\\\":521.975520692337,\\\"price\\\":517.3196438972617,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.023329590511143916,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":0},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5240792176214801,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":514.3110598745278,\\\"ask\\\":523.6527340195747,\\\"price\\\":518.9818969470513,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.02407921762148013,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5272492574138654,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":521.0819880296506,\\\"ask\\\":530.5466457335191,\\\"price\\\":525.8143168815849,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.027249257413865413,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.533187762004562,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":532.4380691552552,\\\"ask\\\":542.108992712061,\\\"price\\\":537.2735309336581,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.03318776200456197,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5269312598475642,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":522.5863573361756,\\\"ask\\\":532.0783396086792,\\\"price\\\":527.3323484724275,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.02693125984756417,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.530064372504783,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":516.5766392024173,\\\"ask\\\":525.9594641324309,\\\"price\\\":521.2680516674241,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.030064372504783,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.5258261698215784,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":509.39564125136786,\\\"ask\\\":518.6480343316147,\\\"price\\\":514.0218377914913,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.02582616982157837,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0231,\\\"forecast\\\":0.521321123066645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":518.2814001403195,\\\"ask\\\":527.6951894466018,\\\"price\\\":522.9882947934607,\\\"maxShares\\\":14300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.02132112306664502,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[534.4685553339305,522.8976721356896,517.3196438972617,518.9818969470513,525.8143168815849,537.2735309336581,527.3323484724275,521.2680516674241,514.0218377914913,522.9882947934607]}],[\\\"SGC\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1597.492,\\\"ask\\\":1626.5079999999998,\\\"price\\\":1612,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.49,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1596.8840375165746,\\\"ask\\\":1625.888994807491,\\\"price\\\":1611.3865161620329,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1622.4042773861338,\\\"ask\\\":1651.8727708199888,\\\"price\\\":1637.1385241030614,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.51,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1632.4207706904942,\\\"ask\\\":1662.0711984124205,\\\"price\\\":1647.2459845514575,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1651.0265428789933,\\\"ask\\\":1681.014916008985,\\\"price\\\":1666.0207294439892,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.51,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1643.1302693677362,\\\"ask\\\":1672.9752187608938,\\\"price\\\":1658.052744064315,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.5,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1621.4193465184226,\\\"ask\\\":1650.8699501887875,\\\"price\\\":1636.1446483536051,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.49,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1641.7988729052274,\\\"ask\\\":1671.6196395170277,\\\"price\\\":1656.7092562111277,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.010000000000000009},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1636.1925071834328,\\\"ask\\\":1665.9114427326776,\\\"price\\\":1651.0519749580553,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.020000000000000018},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.477088458520538,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1612.7150730349586,\\\"ask\\\":1642.007576884231,\\\"price\\\":1627.3613249595949,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.022911541479462005},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4739194739138589,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1635.0211638145267,\\\"ask\\\":1664.718823702177,\\\"price\\\":1649.869993758352,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.026080526086141087,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.47335528000418114,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1631.4917958414167,\\\"ask\\\":1661.1253501553877,\\\"price\\\":1646.3085729984023,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.026644719995818855,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4715297193669907,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1620.3897100546324,\\\"ask\\\":1649.821611952698,\\\"price\\\":1635.1056610036653,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.028470280633009326,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4749102354994846,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1601.3752335867066,\\\"ask\\\":1630.4617665882813,\\\"price\\\":1615.918500087494,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.02508976450051542,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.47480366707744454,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1602.0554154661888,\\\"ask\\\":1631.1543029317704,\\\"price\\\":1616.6048591989797,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.025196332922555464,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.47557520532816355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1597.1647288539837,\\\"ask\\\":1626.1747844739348,\\\"price\\\":1611.6697566639593,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.024424794671836447,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4727386407655698,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1615.7133427987949,\\\"ask\\\":1645.0603056346963,\\\"price\\\":1630.3868242167457,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.027261359234430182,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.47367616800187895,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1610.1758941959001,\\\"ask\\\":1639.422277743353,\\\"price\\\":1624.7990859696267,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.02632383199812105,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4780865328578186,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1637.1532095660546,\\\"ask\\\":1666.8895948053976,\\\"price\\\":1652.0214021857262,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.021913467142181398,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4777448582099734,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1634.604535158246,\\\"ask\\\":1664.2946276232797,\\\"price\\\":1649.449581390763,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.022255141790026578,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.47905441476101496,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1644.2230183724841,\\\"ask\\\":1674.0878158807634,\\\"price\\\":1659.155417126624,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.020945585238985043,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4799572296117103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1651.310091576239,\\\"ask\\\":1681.3036149348386,\\\"price\\\":1666.306853255539,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.02004277038828972,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48045322411845276,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1655.3965562639194,\\\"ask\\\":1685.4643040063515,\\\"price\\\":1670.4304301351356,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.01954677588154724,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48190740081556027,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1667.7118307172557,\\\"ask\\\":1698.0032665930482,\\\"price\\\":1682.857548655152,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.018092599184439728,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48140489613824733,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1672.3437411840853,\\\"ask\\\":1702.7193086324337,\\\"price\\\":1687.5315249082596,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.01859510386175267,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.47905823317804946,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1651.5021319595794,\\\"ask\\\":1681.4991434381589,\\\"price\\\":1666.5006376988692,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.020941766821950536,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4826230992227194,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1623.8595654305313,\\\"ask\\\":1653.3544919469284,\\\"price\\\":1638.60702868873,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.0173769007772806,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4807410755133954,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1641.4469490608078,\\\"ask\\\":1671.2613235139806,\\\"price\\\":1656.3541362873943,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.0192589244866046,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4835651586721429,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1617.72501191519,\\\"ask\\\":1647.1085136452336,\\\"price\\\":1632.416762780212,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.016434841327857108,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48528982415466687,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1600.9249711796326,\\\"ask\\\":1630.0033258529256,\\\"price\\\":1615.4641485162792,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.014710175845333129,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.485372633255106,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1600.0242574775282,\\\"ask\\\":1629.0862520633964,\\\"price\\\":1614.5552547704624,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.01462736674489401,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4860335958498024,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1592.826797052539,\\\"ask\\\":1621.7580607729685,\\\"price\\\":1607.2924289127538,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.01396640415019762,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4870393019714704,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1581.4390204508604,\\\"ask\\\":1610.1634426184844,\\\"price\\\":1595.8012315346725,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.012960698028529616,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48683247476390534,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1583.9626855791914,\\\"ask\\\":1612.7329462657963,\\\"price\\\":1598.347815922494,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.013167525236094657,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48511174611011953,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1604.6618673216524,\\\"ask\\\":1633.8080970005522,\\\"price\\\":1619.2349821611024,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.014888253889880465,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4857707389843452,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1597.5905158143562,\\\"ask\\\":1626.608305203517,\\\"price\\\":1612.0994105089367,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.014229261015654804,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4880467780706369,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1623.1447484191415,\\\"ask\\\":1652.6266913773093,\\\"price\\\":1637.8857198982255,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.0119532219293631,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4884158308131763,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1618.1487545420969,\\\"ask\\\":1647.539952909158,\\\"price\\\":1632.8443537256276,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.0115841691868237,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4867110879509912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1594.681198545306,\\\"ask\\\":1623.6461446339188,\\\"price\\\":1609.1636715896125,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.013288912049008783,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48802782521961563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1579.035263257784,\\\"ask\\\":1607.7160248507607,\\\"price\\\":1593.3756440542725,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.01197217478038437,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48621981998345104,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1602.881423846219,\\\"ask\\\":1631.995314491256,\\\"price\\\":1617.4383691687376,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.01378018001654896,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4838734654629363,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1576.0460503579486,\\\"ask\\\":1604.6725174683856,\\\"price\\\":1590.3592839131672,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.016126534537063697,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48288672636751184,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1566.4612967370936,\\\"ask\\\":1594.9136714507842,\\\"price\\\":1580.687484093939,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.017113273632488157,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48245462983020154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1570.4164868233775,\\\"ask\\\":1598.9407015184538,\\\"price\\\":1584.6785941709156,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.017545370169798458,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4851736663641595,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1546.4508687183,\\\"ask\\\":1574.539784598148,\\\"price\\\":1560.495326658224,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.014826333635840516,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.484933807334847,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1548.9527023702394,\\\"ask\\\":1577.0870602336745,\\\"price\\\":1563.019881301957,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.015066192665153022,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4839273603423759,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1559.299966761636,\\\"ask\\\":1587.6222668642688,\\\"price\\\":1573.4611168129525,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.01607263965762412,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4844278350701174,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1564.155362284438,\\\"ask\\\":1592.5658532240138,\\\"price\\\":1578.360607754226,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.015572164929882615,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4859901104276518,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1579.847729972909,\\\"ask\\\":1608.5432487817004,\\\"price\\\":1594.1954893773047,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.014009889572348222,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48655139218358245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1573.5436023664151,\\\"ask\\\":1602.1246163347253,\\\"price\\\":1587.8341093505703,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.013448607816417546,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4845336996048479,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1597.151453023895,\\\"ask\\\":1626.1612675086883,\\\"price\\\":1611.6563602662918,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.015466300395152122,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4862581122811339,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1579.5403928060657,\\\"ask\\\":1608.2303293050659,\\\"price\\\":1593.885361055566,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.013741887718866086,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4849378941836674,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1564.509749799772,\\\"ask\\\":1592.9266776467907,\\\"price\\\":1578.7182137232815,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.015062105816332605,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4852116927186754,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1561.670948750659,\\\"ask\\\":1590.036314116463,\\\"price\\\":1575.853631433561,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.014788307281324575,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4834265100130831,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1543.0439662962215,\\\"ask\\\":1571.0710010019045,\\\"price\\\":1557.057483649063,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.01657348998691688,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4858529137411676,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1565.6345470090046,\\\"ask\\\":1594.0719050777855,\\\"price\\\":1579.8532260433951,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.014147086258832375,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48578582742535426,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1564.8924657899236,\\\"ask\\\":1593.3163450878233,\\\"price\\\":1579.1044054388735,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.014214172574645745,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4849770762686018,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1556.038989961664,\\\"ask\\\":1584.3020594059724,\\\"price\\\":1570.1705246838183,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.015022923731398186,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4854306556333788,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1560.73705798926,\\\"ask\\\":1589.0854606570767,\\\"price\\\":1574.9112593231685,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.014569344366621217,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4873372623994966,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1581.1615311845717,\\\"ask\\\":1609.8809131838877,\\\"price\\\":1595.5212221842298,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.012662737600503404,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4855361388308988,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1558.9868012061686,\\\"ask\\\":1587.303413135241,\\\"price\\\":1573.145107170705,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.0144638611691012,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4867528013917323,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1545.9823974669798,\\\"ask\\\":1574.062804282727,\\\"price\\\":1560.0226008748534,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.013247198608267674,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4885517802291562,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1566.9769465661163,\\\"ask\\\":1595.438687270647,\\\"price\\\":1581.2078169183817,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.011448219770843815,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.487279261483123,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1584.3945676375208,\\\"ask\\\":1613.1726728014714,\\\"price\\\":1598.7836202194962,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.012720738516876995,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4892377665140091,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1560.3708511065522,\\\"ask\\\":1588.7126021861868,\\\"price\\\":1574.5417266463696,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.010762233485990924,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48994989289053337,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1550.1139002937584,\\\"ask\\\":1578.2693495422825,\\\"price\\\":1564.1916249180206,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.010050107109466633,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48936306331493606,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1541.1152696346442,\\\"ask\\\":1569.1072725139816,\\\"price\\\":1555.111271074313,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.010636936685063936,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48773662363085896,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1564.6796764416385,\\\"ask\\\":1593.0996907463302,\\\"price\\\":1578.8896835939845,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.012263376369141044,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48974131890538275,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1590.2575096507612,\\\"ask\\\":1619.1421061933581,\\\"price\\\":1604.6998079220598,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.01025868109461725,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.488301316563567,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1612.579819086705,\\\"ask\\\":1641.8698662547781,\\\"price\\\":1627.2248426707415,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.011698683436432988,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.487961242757148,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1607.905732248643,\\\"ask\\\":1637.1108817748545,\\\"price\\\":1622.508307011749,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.012038757242852027,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4883188428139199,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1603.1437432655546,\\\"ask\\\":1632.2623985418209,\\\"price\\\":1617.7030709036878,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.011681157186080093,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4876355244983637,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1593.8202954066874,\\\"ask\\\":1622.7696045059004,\\\"price\\\":1608.294949956294,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.012364475501636274,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48651261371824617,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1579.4758899082174,\\\"ask\\\":1608.1646548106874,\\\"price\\\":1593.8202723594525,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.013487386281753833,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48497912273244814,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1561.7194275773688,\\\"ask\\\":1590.0856734869476,\\\"price\\\":1575.9025505321583,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.015020877267551858,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48412975009005166,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1552.9381615682337,\\\"ask\\\":1581.1449092051944,\\\"price\\\":1567.041535386714,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.015870249909948342,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48663268082248484,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1577.429878284811,\\\"ask\\\":1606.081480514,\\\"price\\\":1591.7556793994056,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.013367319177515158,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4862609803649873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1573.0557361771719,\\\"ask\\\":1601.6278888019842,\\\"price\\\":1587.3418124895782,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.013739019635012673,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48809068969287844,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1552.3817187673867,\\\"ask\\\":1580.578359471537,\\\"price\\\":1566.480039119462,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.011909310307121557,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4868567982125538,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1536.462842174999,\\\"ask\\\":1564.3703408219715,\\\"price\\\":1550.4165914984853,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.013143201787446213,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":1},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48829272445932453,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1553.249066399103,\\\"ask\\\":1581.4614611470179,\\\"price\\\":1567.3552637730604,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.011707275540675466,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48745043019570927,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1542.1538518166465,\\\"ask\\\":1570.1647189535784,\\\"price\\\":1556.1592853851125,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.012549569804290728,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4870152021939162,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1547.5021510002107,\\\"ask\\\":1575.6101618155524,\\\"price\\\":1561.5561564078816,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.012984797806083803,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4854508454658364,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1529.080399301456,\\\"ask\\\":1556.8538071596056,\\\"price\\\":1542.967103230531,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.01454915453416361,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48455868138921643,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1538.4568245728842,\\\"ask\\\":1566.4005408617961,\\\"price\\\":1552.4286827173403,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.015441318610783572,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4820292767203073,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1563.6579098757431,\\\"ask\\\":1592.0593653528,\\\"price\\\":1577.8586376142716,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.01797072327969268,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.480594872924292,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1551.2757934072058,\\\"ask\\\":1579.4523466678816,\\\"price\\\":1565.3640700375438,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.019405127075708017,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48013330163168,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1554.9656655238223,\\\"ask\\\":1583.2092396705718,\\\"price\\\":1569.0874525971972,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.01986669836832,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4820694211828911,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1539.9579244772415,\\\"ask\\\":1567.9289059510963,\\\"price\\\":1553.943415214169,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.01793057881710891,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4849621043257051,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1515.50870546539,\\\"ask\\\":1543.035604252854,\\\"price\\\":1529.272154859122,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.015037895674294921,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.4828635277078909,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1494.6504776118572,\\\"ask\\\":1521.7985185775617,\\\"price\\\":1508.2244980947096,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.017136472292109073,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48138773658243295,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1481.8884702625437,\\\"ask\\\":1508.8047088747796,\\\"price\\\":1495.3465895686618,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.018612263417567054,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.483330021327722,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1466.5839180551202,\\\"ask\\\":1493.2221728734773,\\\"price\\\":1479.9030454642989,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.016669978672277985,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0171,\\\"forecast\\\":0.48117744542176966,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1485.5217539583691,\\\"ask\\\":1512.5039856145252,\\\"price\\\":1499.0128697864473,\\\"maxShares\\\":3700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.018822554578230344,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[1552.4286827173403,1577.8586376142716,1565.3640700375438,1569.0874525971972,1553.943415214169,1529.272154859122,1508.2244980947096,1495.3465895686618,1479.9030454642989,1499.0128697864473]}],[\\\"CTYS\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.635,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1318.282,\\\"ask\\\":1355.718,\\\"price\\\":1337,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.135},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6350423799237909,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1317.8682877214808,\\\"ask\\\":1355.2925392997784,\\\"price\\\":1336.5804135106296,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.13504237992379087},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6332628534316875,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1300.7278926448714,\\\"ask\\\":1337.6653987240363,\\\"price\\\":1319.1966456844539,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.13326285343168753},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6339412579516978,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1307.3495404555717,\\\"ask\\\":1344.4750852149593,\\\"price\\\":1325.9123128352655,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.13394125795169776},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6352000470201118,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1319.6361005139747,\\\"ask\\\":1357.1105536725868,\\\"price\\\":1338.3733270932807,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.1352000470201118},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6346643120057697,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1324.8652056867716,\\\"ask\\\":1362.488152704246,\\\"price\\\":1343.6766791955088,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.13466431200576967},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6361511322041128,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1339.4929590874858,\\\"ask\\\":1377.531298696461,\\\"price\\\":1358.5121288919734,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.1361511322041128},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6347400802785124,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1325.7530338950617,\\\"ask\\\":1363.401193072609,\\\"price\\\":1344.5771134838353,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.13474008027851236},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6343593943453772,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1322.0178898090335,\\\"ask\\\":1359.5599799861661,\\\"price\\\":1340.7889348975998,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.13435939434537725},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6359722073839932,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1337.8870272099264,\\\"ask\\\":1375.879762262541,\\\"price\\\":1356.8833947362336,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.13597220738399318},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6344214674509866,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1353.1454015414304,\\\"ask\\\":1391.5714372850005,\\\"price\\\":1372.3584194132154,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.1344214674509866,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6341816925719092,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1350.7360202716986,\\\"ask\\\":1389.093635451828,\\\"price\\\":1369.9148278617633,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.13418169257190915,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6334236364309961,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1358.3669698840733,\\\"ask\\\":1396.9412854588747,\\\"price\\\":1377.654127671474,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.13342363643099608,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6347299488032392,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1345.1965382571946,\\\"ask\\\":1383.3968456316381,\\\"price\\\":1364.2966919444164,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.13472994880323919,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6347771354479654,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1345.6676681856295,\\\"ask\\\":1383.8813545032742,\\\"price\\\":1364.7745113444519,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.13477713544796543,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6351174334097087,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1342.2785572980747,\\\"ask\\\":1380.3960011158701,\\\"price\\\":1361.3372792069724,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.13511743340970872,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6364113197881591,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1355.1322350030675,\\\"ask\\\":1393.6146919808423,\\\"price\\\":1374.373463491955,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.13641131978815912,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6360244990042515,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1358.9749755780906,\\\"ask\\\":1397.5665570346694,\\\"price\\\":1378.27076630638,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.1360244990042515,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6341453312753158,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1377.749107717755,\\\"ask\\\":1416.8738288294155,\\\"price\\\":1397.3114682735852,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.1341453312753158,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6343177959776236,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1379.520418634492,\\\"ask\\\":1418.6954406646803,\\\"price\\\":1399.1079296495861,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.1343177959776236,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6336660918809818,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1372.8593647835817,\\\"ask\\\":1411.8452290979228,\\\"price\\\":1392.3522969407522,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.13366609188098177,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6341411540502119,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1377.738639240583,\\\"ask\\\":1416.8630630729729,\\\"price\\\":1397.300851156778,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.13414115405021187,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6338674355472604,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1380.5499506569897,\\\"ask\\\":1419.7542088906569,\\\"price\\\":1400.1520797738233,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.13386743554726044,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6346886186293322,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1372.1328752205384,\\\"ask\\\":1411.0981089996205,\\\"price\\\":1391.6154921100795,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.13468861862933224,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6349970745050569,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1375.2752524454593,\\\"ask\\\":1414.329722088941,\\\"price\\\":1394.8024872672001,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.13499707450505694,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6335923231186336,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1361.111807015311,\\\"ask\\\":1399.764069283494,\\\"price\\\":1380.4379381494025,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.13359232311863356,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6317171800883244,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1342.2712736315239,\\\"ask\\\":1380.3885106109183,\\\"price\\\":1361.329892121221,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.13171718008832445,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.630540879821186,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1330.3902238349367,\\\"ask\\\":1368.170067919499,\\\"price\\\":1349.2801458772178,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.130540879821186,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6289624873950401,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1314.496419567014,\\\"ask\\\":1351.8249182971117,\\\"price\\\":1333.160668932063,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.12896248739504013,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6300783886329281,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1303.2197717148224,\\\"ask\\\":1340.228041094148,\\\"price\\\":1321.7239064044852,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.1300783886329281,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6300180092940747,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1303.8246957842525,\\\"ask\\\":1340.850143534718,\\\"price\\\":1322.3374196594852,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.1300180092940747,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6305024462279056,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1308.6826446277098,\\\"ask\\\":1345.8460463007075,\\\"price\\\":1327.2643454642086,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.13050244622790563,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6297275774836498,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1300.95810152834,\\\"ask\\\":1337.9021449794488,\\\"price\\\":1319.4301232538944,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.12972757748364983,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6298982779025266,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1299.2485015516672,\\\"ask\\\":1336.1439965247368,\\\"price\\\":1317.696249038202,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.12989827790252662,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6284985789837306,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1313.2483539918492,\\\"ask\\\":1350.5414106975002,\\\"price\\\":1331.8948823446747,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.12849857898373063,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6289675632570791,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1308.4727902030281,\\\"ask\\\":1345.6302325211668,\\\"price\\\":1327.0515113620975,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.12896756325707914,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6272665767584908,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1325.7305757554223,\\\"ask\\\":1363.3780971764686,\\\"price\\\":1344.5543364659454,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.12726657675849085,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6269425798853228,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1322.3640844153315,\\\"ask\\\":1359.9160056766186,\\\"price\\\":1341.140045045975,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.12694257988532276,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6284829472598351,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1338.4101305465854,\\\"ask\\\":1376.4177204606874,\\\"price\\\":1357.4139255036364,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.1284829472598351,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.627433215847353,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1327.563669474216,\\\"ask\\\":1365.263246294985,\\\"price\\\":1346.4134578846006,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.127433215847353,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6290200527097967,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1344.0948929386388,\\\"ask\\\":1382.2639162675252,\\\"price\\\":1363.179404603082,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.12902005270979666,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6308314718750251,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1362.9657521408985,\\\"ask\\\":1401.6706619380034,\\\"price\\\":1382.318207039451,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.13083147187502508,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6301713919660705,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1369.8422803698304,\\\"ask\\\":1408.742466830637,\\\"price\\\":1389.2923736002338,\\\"maxShares\\\":15000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.13017139196607053,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6166679880702656,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1372.6942261218517,\\\"ask\\\":1411.67540090016,\\\"price\\\":1392.1848135110058,\\\"maxShares\\\":15000000,\\\"investedShares\\\":6206020,\\\"averagePrice\\\":1408.742466830637,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.11666798807026557,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6093722980014176,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1390.2350228935475,\\\"ask\\\":1429.7143136045206,\\\"price\\\":1409.974668249034,\\\"maxShares\\\":15000000,\\\"investedShares\\\":8938546,\\\"averagePrice\\\":1409.6390688732129,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.10937229800141757,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.599159845285665,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1388.3829649000565,\\\"ask\\\":1427.809661672066,\\\"price\\\":1408.0963132860613,\\\"maxShares\\\":15000000,\\\"investedShares\\\":13642201,\\\"averagePrice\\\":1416.5607544030363,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.09915984528566502,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5997060384144295,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1396.0304681140576,\\\"ask\\\":1435.6743353627328,\\\"price\\\":1415.8524017383952,\\\"maxShares\\\":15000000,\\\"investedShares\\\":13642201,\\\"averagePrice\\\":1416.5607544030363,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.09970603841442949,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5994500387434889,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1392.455277498647,\\\"ask\\\":1431.9976180361339,\\\"price\\\":1412.2264477673905,\\\"maxShares\\\":15000000,\\\"investedShares\\\":13642201,\\\"averagePrice\\\":1416.5607544030363,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.0994500387434889,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6002727293652147,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1403.9742262335533,\\\"ask\\\":1443.8436768771023,\\\"price\\\":1423.9089515553278,\\\"maxShares\\\":15000000,\\\"investedShares\\\":13642201,\\\"averagePrice\\\":1416.5607544030363,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.1002727293652147,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5976542642645041,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1399.3515227107034,\\\"ask\\\":1439.0896998262203,\\\"price\\\":1419.2206112684619,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.09765426426450408,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5988623336597358,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1382.2518479895273,\\\"ask\\\":1421.5044359648894,\\\"price\\\":1401.8781419772083,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.09886233365973585,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5997712180105195,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1369.6599693041637,\\\"ask\\\":1408.5549785744645,\\\"price\\\":1389.107473939314,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.09977121801051947,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6005615827601353,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1358.8951132926986,\\\"ask\\\":1397.4844268547631,\\\"price\\\":1378.1897700737309,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.10056158276013527,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6004108524724083,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1360.9319413317505,\\\"ask\\\":1399.5790958523278,\\\"price\\\":1380.2555185920392,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.10041085247240833,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6014103180960002,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1347.519058728212,\\\"ask\\\":1385.7853200308389,\\\"price\\\":1366.6521893795255,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.10141031809600021,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6001861128348921,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1363.786041734584,\\\"ask\\\":1402.5142457595014,\\\"price\\\":1383.1501437470426,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.1001861128348921,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6002252867943558,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1363.2529936304097,\\\"ask\\\":1401.9660603866485,\\\"price\\\":1382.609527008529,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.10022528679435583,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6006954987213233,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1369.6487629774654,\\\"ask\\\":1408.543454015365,\\\"price\\\":1389.0961084964151,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.10069549872132333,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6009461857631109,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1373.0585797124622,\\\"ask\\\":1412.050101245879,\\\"price\\\":1392.5543404791706,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.10094618576311087,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6020354519876189,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1387.8746554645602,\\\"ask\\\":1427.2869174858663,\\\"price\\\":1407.5807864752132,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.10203545198761887,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6032321649540829,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1404.1522096250776,\\\"ask\\\":1444.0267145637206,\\\"price\\\":1424.089462094399,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.10323216495408294,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6025161469591044,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1413.8914052549253,\\\"ask\\\":1454.0424796435032,\\\"price\\\":1433.9669424492142,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.10251614695910438,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6013682119942704,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1398.2345321080504,\\\"ask\\\":1437.9409894092935,\\\"price\\\":1418.087760758672,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.10136821199427037,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6004391364695532,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1411.049846258699,\\\"ask\\\":1451.1202272883577,\\\"price\\\":1431.0850367735284,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.10043913646955316,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6017142191256161,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1393.3610196494838,\\\"ask\\\":1432.9290810594084,\\\"price\\\":1413.145050354446,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.10171421912561607,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6011592621257017,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1400.9632551865564,\\\"ask\\\":1440.7472015813066,\\\"price\\\":1420.8552283839315,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.1011592621257017,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.601646308100589,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1394.2504337653563,\\\"ask\\\":1433.8437523712691,\\\"price\\\":1414.0470930683127,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.10164630810058894,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.600364756788536,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1411.8290699805964,\\\"ask\\\":1451.9215790672663,\\\"price\\\":1431.8753245239313,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.10036475678853596,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5990119288981305,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1430.8592734451374,\\\"ask\\\":1471.4921939892185,\\\"price\\\":1451.175733717178,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.09901192889813049,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.6001579224989255,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1414.4875723345826,\\\"ask\\\":1454.6555764171062,\\\"price\\\":1434.5715743758444,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.10015792249892552,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5999178488446012,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1411.1052219541184,\\\"ask\\\":1451.1771755187383,\\\"price\\\":1431.1411987364284,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.0999178488446012,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5996731217808072,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1414.561417635536,\\\"ask\\\":1454.7315187448614,\\\"price\\\":1434.6464681901987,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.09967312178080723,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5991923507882011,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1421.3845218456613,\\\"ask\\\":1461.7483825065929,\\\"price\\\":1441.566452176127,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.0991923507882011,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5999351488089536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1432.0285039790185,\\\"ask\\\":1472.6946278242647,\\\"price\\\":1452.3615659016416,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.0999351488089536,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5989982456630183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1445.4539306325764,\\\"ask\\\":1486.50130391626,\\\"price\\\":1465.9776172744182,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.09899824566301829,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5985366587662528,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1452.193470205119,\\\"ask\\\":1493.432230008104,\\\"price\\\":1472.8128501066114,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.09853665876625284,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.597255255285543,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1433.5510950127327,\\\"ask\\\":1474.2604567372323,\\\"price\\\":1453.9057758749825,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.09725525528554302,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5974782450136832,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1436.8379833974607,\\\"ask\\\":1477.6406847515466,\\\"price\\\":1457.2393340745036,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.09747824501368318,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5964078179970176,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1452.616172631213,\\\"ask\\\":1493.8669361542088,\\\"price\\\":1473.241554392711,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.09640781799701759,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5955842004130935,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1440.3115078350677,\\\"ask\\\":1481.2128488283558,\\\"price\\\":1460.7621783317118,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.09558420041309346,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5947231272140462,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1427.452260396321,\\\"ask\\\":1467.9884300627482,\\\"price\\\":1447.7203452295346,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.09472312721404619,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5952850634431531,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1435.9204894764766,\\\"ask\\\":1476.697136236458,\\\"price\\\":1456.3088128564673,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.09528506344315313,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5950125826966245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1440.0267016443656,\\\"ask\\\":1480.9199548350778,\\\"price\\\":1460.4733282397217,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.09501258269662449,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5940687288963075,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1425.8622044566403,\\\"ask\\\":1466.353220404699,\\\"price\\\":1446.1077124306696,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.09406872889630746,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.59454436548248,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1433.0717441117122,\\\"ask\\\":1473.7674934374,\\\"price\\\":1453.419618774556,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.09454436548248002,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5932673605184112,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1452.4281565405042,\\\"ask\\\":1493.6735808641695,\\\"price\\\":1473.0508687023369,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.09326736051841122,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5938812052851523,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1442.9314162690962,\\\"ask\\\":1483.9071562848517,\\\"price\\\":1463.419286276974,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.09388120528515231,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5936970755375427,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1445.7614459506344,\\\"ask\\\":1486.8175519208348,\\\"price\\\":1466.2894989357346,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.0936970755375427,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5944500071135784,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1434.2362012488288,\\\"ask\\\":1474.9650183228323,\\\"price\\\":1454.6006097858306,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.09445000711357843,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5957064176005974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1453.3149653398077,\\\"ask\\\":1494.5855728748124,\\\"price\\\":1473.95026910731,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.0957064176005974,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5946051272733957,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1470.038208710858,\\\"ask\\\":1511.7837156519374,\\\"price\\\":1490.9109621813977,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.09460512727339565,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5939333254969489,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1480.4771173463566,\\\"ask\\\":1522.5190638835759,\\\"price\\\":1501.4980906149663,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.09393332549694888,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5947415954023927,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1493.2162074756434,\\\"ask\\\":1535.6199131646067,\\\"price\\\":1514.418060320125,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.09474159540239269,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0141,\\\"forecast\\\":0.5937328370893874,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":1509.1151825351994,\\\"ask\\\":1551.9703804165238,\\\"price\\\":1530.5427814758616,\\\"maxShares\\\":15000000,\\\"investedShares\\\":15000000,\\\"averagePrice\\\":1419.0304027265272,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.0937328370893874,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[1453.419618774556,1473.0508687023369,1463.419286276974,1466.2894989357346,1454.6006097858306,1473.95026910731,1490.9109621813977,1501.4980906149663,1514.418060320125,1530.5427814758616]}],[\\\"MDYN\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.58,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26634.855,\\\"ask\\\":26795.144999999997,\\\"price\\\":26715,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.07999999999999996},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.580013714753378,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26639.42113084483,\\\"ask\\\":26799.73861006756,\\\"price\\\":26719.579870456197,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.08001371475337804},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5805895131096932,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26831.124952465976,\\\"ask\\\":26992.596115670385,\\\"price\\\":26911.860534068182,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.0805895131096932},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5808135552790084,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26905.71658613589,\\\"ask\\\":27067.636645831793,\\\"price\\\":26986.676615983844,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.08081355527900835},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.580398797619379,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26768.334045021846,\\\"ask\\\":26929.427329144342,\\\"price\\\":26848.880687083096,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.08039879761937896},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5802248196107958,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26826.259058680524,\\\"ask\\\":26987.70093867258,\\\"price\\\":26906.979998676554,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.08022481961079575},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5807085309824775,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26665.480930167865,\\\"ask\\\":26825.95523867439,\\\"price\\\":26745.71808442113,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.08070853098247754},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5802517449731702,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26515.411675567553,\\\"ask\\\":26674.982859171767,\\\"price\\\":26595.197267369662,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.08025174497317022},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5801279234550357,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26474.563708070065,\\\"ask\\\":26633.88906639345,\\\"price\\\":26554.22638723176,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.08012792345503572},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5796026668905389,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26648.110429116154,\\\"ask\\\":26808.48020100652,\\\"price\\\":26728.29531506134,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.07960266689053885},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5791068879751899,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26483.16876075142,\\\"ask\\\":26642.545904747916,\\\"price\\\":26562.85733274967,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.07910688797518994,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5791839465479361,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26457.3964258847,\\\"ask\\\":26616.618470574074,\\\"price\\\":26537.00744822939,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.07918394654793615,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5789396502643047,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26539.022107644516,\\\"ask\\\":26698.73538010777,\\\"price\\\":26618.878743876143,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.07893965026430472,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5785175835752296,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26397.880539363647,\\\"ask\\\":26556.744414224406,\\\"price\\\":26477.312476794028,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.07851758357522964,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5785326009317245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26402.92942605523,\\\"ask\\\":26561.823685389565,\\\"price\\\":26482.3765557224,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.07853260093172454,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.578424316824592,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26439.334913771967,\\\"ask\\\":26598.448263303188,\\\"price\\\":26518.89158853758,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.07842431682459206,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.578014200449279,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26577.598205561633,\\\"ask\\\":26737.54363107153,\\\"price\\\":26657.57091831658,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.07801420044927898,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5781350109444298,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26536.50455547671,\\\"ask\\\":26696.20267717466,\\\"price\\\":26616.353616325687,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.07813501094442976,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5775455355245264,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26337.803771412953,\\\"ask\\\":26496.30610103028,\\\"price\\\":26417.05493622162,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.07754553552452637,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5774910911424799,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26356.295428490255,\\\"ask\\\":26514.909041901425,\\\"price\\\":26435.60223519584,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.07749109114247987,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5776964154103155,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26426.130386056706,\\\"ask\\\":26585.164270024947,\\\"price\\\":26505.647328040828,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.07769641541031547,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5778472155668564,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26374.939542942167,\\\"ask\\\":26533.66535764392,\\\"price\\\":26454.302450293046,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.07784721556685636,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5777604680976218,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26404.329923059195,\\\"ask\\\":26563.23261066035,\\\"price\\\":26483.781266859773,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.07776046809762183,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5774999754148785,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26316.172398864375,\\\"ask\\\":26474.544549710095,\\\"price\\\":26395.358474287237,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.07749997541487852,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5775969003069128,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26283.30134140684,\\\"ask\\\":26441.475672448403,\\\"price\\\":26362.388506927622,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.0775969003069128,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5771559485289507,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26134.787919425387,\\\"ask\\\":26292.06848864961,\\\"price\\\":26213.4282040375,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.07715594852895069,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5777473656939207,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25935.98295619035,\\\"ask\\\":26092.067106378054,\\\"price\\\":26014.025031284204,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.07774736569392071,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5781265349064045,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26062.47118051436,\\\"ask\\\":26219.31654368696,\\\"price\\\":26140.89386210066,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.07812653490640453,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.578642402953119,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26234.561189581662,\\\"ask\\\":26392.44219974965,\\\"price\\\":26313.501694665658,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.07864240295311897,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5790140158226316,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26111.1767436379,\\\"ask\\\":26268.315219527394,\\\"price\\\":26189.745981582648,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.07901401582263157,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5790340448081427,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26117.795574173622,\\\"ask\\\":26274.97388254377,\\\"price\\\":26196.3847283587,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.07903404480814269,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5788732323998955,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26064.760999050686,\\\"ask\\\":26221.62014247526,\\\"price\\\":26143.190570762974,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.07887323239989552,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5786174852851891,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25980.518949400728,\\\"ask\\\":26136.871119607753,\\\"price\\\":26058.695034504242,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.07861748528518908,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5786739780772041,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25999.187977647158,\\\"ask\\\":26155.65249907733,\\\"price\\\":26077.420238362243,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.07867397807720411,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5782110282178184,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25847.09311204867,\\\"ask\\\":26002.642318339833,\\\"price\\\":25924.867715194254,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.07821102821781845,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5783669115075779,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25795.67944998756,\\\"ask\\\":25950.91924607575,\\\"price\\\":25873.299348031658,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.07836691150757791,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5789313605180092,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25611.210999888754,\\\"ask\\\":25765.34065485298,\\\"price\\\":25688.275827370868,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.0789313605180092,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5788216248889433,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25646.817409454834,\\\"ask\\\":25801.161345720357,\\\"price\\\":25723.989377587597,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.07882162488894329,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5793439416797367,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25816.767767395875,\\\"ask\\\":25972.13447412042,\\\"price\\\":25894.45112075815,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.07934394167973668,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5796979537642539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25931.955487836105,\\\"ask\\\":26088.015400501114,\\\"price\\\":26009.98544416861,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.07969795376425393,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.58023991524581,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26108.297794658763,\\\"ask\\\":26265.41894487737,\\\"price\\\":26186.858369768066,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.08023991524580998,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.579624704635204,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25909.644936747747,\\\"ask\\\":26065.570583307912,\\\"price\\\":25987.60776002783,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.07962470463520399,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5798440880204936,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25981.031645733554,\\\"ask\\\":26137.386901374877,\\\"price\\\":26059.209273554217,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.07984408802049359,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5797533090880832,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":25951.525994374777,\\\"ask\\\":26107.703683408123,\\\"price\\\":26029.61483889145,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.0797533090880832,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5791967697924103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26132.62248007162,\\\"ask\\\":26289.890017564525,\\\"price\\\":26211.256248818074,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.0791967697924103,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5791390766245584,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26113.59927659717,\\\"ask\\\":26270.752331421223,\\\"price\\\":26192.1758040092,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.07913907662455844,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5789010239950255,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26192.14973788008,\\\"ask\\\":26349.775513634624,\\\"price\\\":26270.962625757355,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.07890102399502552,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5790116538131169,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26155.4762521209,\\\"ask\\\":26312.881324851816,\\\"price\\\":26234.17878848636,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.07901165381311692,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5793685931024872,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26273.634987649413,\\\"ask\\\":26431.75114605051,\\\"price\\\":26352.693066849963,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.07936859310248723,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5795117754606018,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26321.033093962265,\\\"ask\\\":26479.434496734353,\\\"price\\\":26400.23379534831,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.07951177546060184,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5789746153760251,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26498.85088611944,\\\"ask\\\":26658.32240599578,\\\"price\\\":26578.58664605761,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.07897461537602513,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5793711096318911,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26631.88910496192,\\\"ask\\\":26792.16125604494,\\\"price\\\":26712.02518050343,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.07937110963189109,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5790277443723381,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26747.100616522264,\\\"ask\\\":26908.06611672199,\\\"price\\\":26827.58336662213,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.07902774437233806,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5790924317620787,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26725.224944179572,\\\"ask\\\":26886.0587953983,\\\"price\\\":26805.64186978894,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.0790924317620787,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5795223577996643,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26580.738910543863,\\\"ask\\\":26740.70323698645,\\\"price\\\":26660.72107376516,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.07952235779966432,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5789981144168918,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26755.969837651963,\\\"ask\\\":26916.988713304832,\\\"price\\\":26836.4792754784,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.07899811441689175,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.579014982987406,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26750.25782017354,\\\"ask\\\":26911.242320595848,\\\"price\\\":26830.750070384696,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.07901498298740595,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.578812542489571,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26681.897410656606,\\\"ask\\\":26842.47051443187,\\\"price\\\":26762.183962544237,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.07881254248957104,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5787053933275589,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26718.172638661385,\\\"ask\\\":26878.964048723537,\\\"price\\\":26798.568343692463,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.07870539332755888,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5782416045563334,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26875.61532376306,\\\"ask\\\":27037.354232431644,\\\"price\\\":26956.484778097354,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.07824160455633344,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5787427320897592,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27047.750224278836,\\\"ask\\\":27210.525050101976,\\\"price\\\":27129.137637190408,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.07874273208975924,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5784444748505717,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26945.68688503398,\\\"ask\\\":27107.84748815354,\\\"price\\\":27026.767186593763,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.07844447485057171,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5779647867097166,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26781.91541181166,\\\"ask\\\":26943.090429335098,\\\"price\\\":26862.50292057338,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.07796478670971663,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5775745578896228,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26915.964072650266,\\\"ask\\\":27077.94580227504,\\\"price\\\":26996.954937462655,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.07757455788962275,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5770367510886559,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27102.56634183039,\\\"ask\\\":27265.67105401793,\\\"price\\\":27184.11869792416,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.07703675108865593,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5772662851999971,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27022.05304338162,\\\"ask\\\":27184.673222178295,\\\"price\\\":27103.36313277996,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.07726628519999712,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.577063130931868,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27093.101436547706,\\\"ask\\\":27256.149188422612,\\\"price\\\":27174.62531248516,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.077063130931868,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5775937253201995,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27279.642619223447,\\\"ask\\\":27443.81298603923,\\\"price\\\":27361.72780263134,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.07759372532019948,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.577022563028645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27480.4462683186,\\\"ask\\\":27645.825082370666,\\\"price\\\":27563.135675344634,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.07702256302864496,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5775094007824967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27307.841157183062,\\\"ask\\\":27472.181224327593,\\\"price\\\":27390.01119075533,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.07750940078249668,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5776108585232841,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27272.14264898066,\\\"ask\\\":27436.26788056931,\\\"price\\\":27354.205264774988,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.07761085852328409,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5777146670492457,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27308.620546301652,\\\"ask\\\":27472.96530385211,\\\"price\\\":27390.792925076883,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.07771466704924568,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5779193750416485,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27236.87596564588,\\\"ask\\\":27400.788960424088,\\\"price\\\":27318.832463034985,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.07791937504164848,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.5776007281927388,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27125.94595372996,\\\"ask\\\":27289.19136568821,\\\"price\\\":27207.568659709086,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.07760072819273878,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.577203432512642,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26987.775515418252,\\\"ask\\\":27150.18941019509,\\\"price\\\":27068.98246280667,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.07720343251264195,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.42299314516297265,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27056.492591954473,\\\"ask\\\":27219.32002981979,\\\"price\\\":27137.906310887134,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.07700685483702735,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4235400214166804,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26865.701599708747,\\\"ask\\\":27027.38084704902,\\\"price\\\":26946.541223378885,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.0764599785833196,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.42363575792069846,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26832.104782721086,\\\"ask\\\":26993.58184259704,\\\"price\\\":26912.843312659064,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.07636424207930154,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4231778153493094,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26672.156675076792,\\\"ask\\\":26832.671158577752,\\\"price\\\":26752.413916827274,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.07682218465069057,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":2},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4228194123607513,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26796.591832799833,\\\"ask\\\":26957.85517381969,\\\"price\\\":26877.223503309764,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.07718058763924868,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.42243971843112865,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26665.409956616768,\\\"ask\\\":26825.88383800062,\\\"price\\\":26745.646897308696,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.07756028156887135,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4221884476471254,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26751.797451995044,\\\"ask\\\":26912.79121800504,\\\"price\\\":26832.294335000042,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.07781155235287462,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.42206693354417335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26710.08575223052,\\\"ask\\\":26870.828494972127,\\\"price\\\":26790.457123601325,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.07793306645582665,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4224897160248662,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26854.986457764127,\\\"ask\\\":27016.601220799817,\\\"price\\\":26935.793839281974,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.07751028397513382,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4227037392569178,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26781.03802123356,\\\"ask\\\":26942.207758572975,\\\"price\\\":26861.62288990327,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.07729626074308221,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4232738865039346,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26978.57843202795,\\\"ask\\\":27140.936978258807,\\\"price\\\":27059.75770514338,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.0767261134960654,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.42354965438603914,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26881.959683196954,\\\"ask\\\":27043.736772564236,\\\"price\\\":26962.848227880597,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.07645034561396086,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.42346777089185694,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26853.198090662965,\\\"ask\\\":27014.802091208578,\\\"price\\\":26934.000090935773,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.07653222910814306,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4231319208163734,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26735.871773919975,\\\"ask\\\":26896.769698336742,\\\"price\\\":26816.32073612836,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.07686807918362659,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4225735185154998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26930.092476101887,\\\"ask\\\":27092.15923122386,\\\"price\\\":27011.125853662874,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.07742648148450021,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4230600622685353,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":27099.319696707804,\\\"ask\\\":27262.40487040915,\\\"price\\\":27180.86228355848,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.07693993773146468,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4227616958669181,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26994.63683766613,\\\"ask\\\":27157.092024251884,\\\"price\\\":27075.86443095901,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.07723830413308191,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4231246410636743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26868.381476276718,\\\"ask\\\":27030.07685125932,\\\"price\\\":26949.22916376802,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.07687535893632569,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0077,\\\"forecast\\\":0.4226776434527199,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":26713.056381874518,\\\"ask\\\":26873.81700202622,\\\"price\\\":26793.43669195037,\\\"maxShares\\\":2700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.07732235654728009,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[26861.62288990327,27059.75770514338,26962.848227880597,26934.000090935773,26816.32073612836,27011.125853662874,27180.86228355848,27075.86443095901,26949.22916376802,26793.43669195037]}],[\\\"TITN\\\",{\\\"shortTermRecords\\\":[{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.61,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":19645.28,\\\"ask\\\":19842.719999999998,\\\"price\\\":19744,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:22 PM\\\",\\\"bias\\\":0.10999999999999999},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6100142045659988,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":19642.74348503428,\\\"ask\\\":19840.157992421555,\\\"price\\\":19741.45073872792,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:26 PM\\\",\\\"bias\\\":0.11001420456599875},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6094178672056777,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":19749.21793390694,\\\"ask\\\":19947.702536257762,\\\"price\\\":19848.46023508235,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:32 PM\\\",\\\"bias\\\":0.1094178672056777},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6096469944599182,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":19790.573922596504,\\\"ask\\\":19989.474163024606,\\\"price\\\":19890.024042810557,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:38 PM\\\",\\\"bias\\\":0.10964699445991821},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6092231132142513,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":19867.081748169796,\\\"ask\\\":20066.75091146798,\\\"price\\\":19966.91632981889,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:42 PM\\\",\\\"bias\\\":0.10922311321425127},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6094011446200431,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":19899.46467874669,\\\"ask\\\":20099.459298633592,\\\"price\\\":19999.461988690142,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:48 PM\\\",\\\"bias\\\":0.10940114462004313},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6089042815912046,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":19809.496639251945,\\\"ask\\\":20008.587057736888,\\\"price\\\":19909.041848494417,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:04:54 PM\\\",\\\"bias\\\":0.10890428159120458},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6093685568854521,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":19893.947495974062,\\\"ask\\\":20093.88666678787,\\\"price\\\":19993.917081380965,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:00 PM\\\",\\\"bias\\\":0.1093685568854521},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6094956644478488,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":19917.068137268692,\\\"ask\\\":20117.239676336718,\\\"price\\\":20017.153906802705,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:06 PM\\\",\\\"bias\\\":0.10949566444784875},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6100363214008881,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20015.41268293518,\\\"ask\\\":20216.572609396837,\\\"price\\\":20115.99264616601,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:12 PM\\\",\\\"bias\\\":0.11003632140088815},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6095201026606891,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20109.31196081184,\\\"ask\\\":20311.415598608943,\\\"price\\\":20210.36377971039,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:18 PM\\\",\\\"bias\\\":0.10952010266068912,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6094397430597176,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20094.56771382934,\\\"ask\\\":20296.52316823968,\\\"price\\\":20195.545441034512,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:24 PM\\\",\\\"bias\\\":0.1094397430597176,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6096940698147624,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20141.26543129287,\\\"ask\\\":20343.690209496817,\\\"price\\\":20242.477820394844,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:30 PM\\\",\\\"bias\\\":0.10969406981476237,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6101358500658727,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20222.382061525863,\\\"ask\\\":20425.622082244714,\\\"price\\\":20324.00207188529,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:36 PM\\\",\\\"bias\\\":0.11013585006587268,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6101517169825693,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20225.295434886004,\\\"ask\\\":20428.564735739128,\\\"price\\\":20326.930085312568,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:42 PM\\\",\\\"bias\\\":0.11015171698256931,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6102661215275628,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20246.30160514798,\\\"ask\\\":20449.78202329017,\\\"price\\\":20348.041814219076,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:49 PM\\\",\\\"bias\\\":0.11026612152756277,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6107004674348915,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20326.0531926611,\\\"ask\\\":20530.33513429588,\\\"price\\\":20428.194163478493,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:05:55 PM\\\",\\\"bias\\\":0.11070046743489148,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6105713402373655,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20349.762634421804,\\\"ask\\\":20554.282861903426,\\\"price\\\":20452.022748162617,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:01 PM\\\",\\\"bias\\\":0.11057134023736548,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6111996876994237,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20234.773806940666,\\\"ask\\\":20438.13836781444,\\\"price\\\":20336.456087377555,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:07 PM\\\",\\\"bias\\\":0.11119968769942368,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.611258495794145,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20245.474992522402,\\\"ask\\\":20448.947103000013,\\\"price\\\":20347.211047761208,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:13 PM\\\",\\\"bias\\\":0.11125849579414504,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6110364416109584,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20285.881726233823,\\\"ask\\\":20489.75993453768,\\\"price\\\":20387.820830385754,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:19 PM\\\",\\\"bias\\\":0.11103644161095838,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6108741098075184,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20256.2676966553,\\\"ask\\\":20459.84827652118,\\\"price\\\":20358.057986588243,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:25 PM\\\",\\\"bias\\\":0.11087410980751844,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6109671736852601,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20273.270104374238,\\\"ask\\\":20477.021562709655,\\\"price\\\":20375.14583354195,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:31 PM\\\",\\\"bias\\\":0.1109671736852601,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6112471804059418,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20324.426240832425,\\\"ask\\\":20528.691831192547,\\\"price\\\":20426.559036012488,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:37 PM\\\",\\\"bias\\\":0.11124718040594184,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6111423807053152,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20343.572737648567,\\\"ask\\\":20548.03075511237,\\\"price\\\":20445.801746380468,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:43 PM\\\",\\\"bias\\\":0.11114238070531524,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6106666472556715,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20256.865323625047,\\\"ask\\\":20460.45190979213,\\\"price\\\":20358.658616708588,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:49 PM\\\",\\\"bias\\\":0.11066664725567155,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.61002768010505,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20373.824424106842,\\\"ask\\\":20578.586478620477,\\\"price\\\":20476.20545136366,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:06:55 PM\\\",\\\"bias\\\":0.11002768010505004,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6104318710764634,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20448.668462239068,\\\"ask\\\":20654.182718140964,\\\"price\\\":20551.425590190018,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:01 PM\\\",\\\"bias\\\":0.11043187107646335,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6109811232249067,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20550.37347707047,\\\"ask\\\":20756.909893925447,\\\"price\\\":20653.641685497958,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:07 PM\\\",\\\"bias\\\":0.11098112322490672,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6113761443804505,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20623.519540489888,\\\"ask\\\":20830.79109366064,\\\"price\\\":20727.155317075263,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:13 PM\\\",\\\"bias\\\":0.11137614438045051,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6113548784560735,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20619.582481219528,\\\"ask\\\":20826.8144659554,\\\"price\\\":20723.198473587465,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:20 PM\\\",\\\"bias\\\":0.1113548784560735,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6115255463634716,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20651.185057076855,\\\"ask\\\":20858.734655640437,\\\"price\\\":20754.959856358648,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:26 PM\\\",\\\"bias\\\":0.11152554636347156,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6117979373491007,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20600.869310780552,\\\"ask\\\":20807.913223451713,\\\"price\\\":20704.391267116134,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:32 PM\\\",\\\"bias\\\":0.1117979373491007,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6117374248693257,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20612.019871489236,\\\"ask\\\":20819.175850097166,\\\"price\\\":20715.5978607932,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:38 PM\\\",\\\"bias\\\":0.1117374248693257,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6122326911636172,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20703.38083413496,\\\"ask\\\":20911.4550133725,\\\"price\\\":20807.417923753732,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:44 PM\\\",\\\"bias\\\":0.11223269116361723,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6124011866269703,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20672.3453455311,\\\"ask\\\":20880.107610310304,\\\"price\\\":20776.226477920703,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:50 PM\\\",\\\"bias\\\":0.1124011866269703,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6117913687534093,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20784.50043978261,\\\"ask\\\":20993.389891438714,\\\"price\\\":20888.94516561066,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:07:54 PM\\\",\\\"bias\\\":0.11179136875340934,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6116742992945389,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20762.757394680302,\\\"ask\\\":20971.42832327005,\\\"price\\\":20867.09285897518,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:00 PM\\\",\\\"bias\\\":0.11167429929453887,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.612231714880964,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20866.3934565322,\\\"ask\\\":21076.105953582774,\\\"price\\\":20971.24970505749,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:06 PM\\\",\\\"bias\\\":0.11223171488096395,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.612608902286388,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20796.50075134971,\\\"ask\\\":21005.51080915222,\\\"price\\\":20901.005780250965,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:12 PM\\\",\\\"bias\\\":0.11260890228638798,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6131857102444911,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20690.519288600004,\\\"ask\\\":20898.464206073368,\\\"price\\\":20794.491747336688,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:18 PM\\\",\\\"bias\\\":0.11318571024449109,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6138393857699914,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20810.012164861822,\\\"ask\\\":21019.158015764955,\\\"price\\\":20914.58509031339,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:24 PM\\\",\\\"bias\\\":0.11383938576999142,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6140756433284882,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20853.20040444254,\\\"ask\\\":21062.780308004778,\\\"price\\\":20957.99035622366,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:30 PM\\\",\\\"bias\\\":0.11407564332848819,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6139779482915823,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20835.356884998455,\\\"ask\\\":21044.75745670698,\\\"price\\\":20940.057170852717,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:36 PM\\\",\\\"bias\\\":0.11397794829158225,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.613378840144025,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20944.87484223638,\\\"ask\\\":21155.37609693222,\\\"price\\\":21050.1254695843,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:42 PM\\\",\\\"bias\\\":0.113378840144025,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.613441053867719,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20933.3881836431,\\\"ask\\\":21143.77399453398,\\\"price\\\":21038.58108908854,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:48 PM\\\",\\\"bias\\\":0.11344105386771897,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6136980872464955,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20980.818803428745,\\\"ask\\\":21191.681303965717,\\\"price\\\":21086.250053697233,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:08:54 PM\\\",\\\"bias\\\":0.11369808724649555,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.613818169819689,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":20958.683227767928,\\\"ask\\\":21169.323260207802,\\\"price\\\":21064.003243987867,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:00 PM\\\",\\\"bias\\\":0.11381816981968895,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6142054738967937,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21030.0020995941,\\\"ask\\\":21241.358904615146,\\\"price\\\":21135.680502104624,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:07 PM\\\",\\\"bias\\\":0.1142054738967937,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6143606643556765,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21058.579150805268,\\\"ask\\\":21270.22316237115,\\\"price\\\":21164.40115658821,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:13 PM\\\",\\\"bias\\\":0.11436066435567649,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6149426150898359,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21165.740609390796,\\\"ask\\\":21378.46162054045,\\\"price\\\":21272.101114965622,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:19 PM\\\",\\\"bias\\\":0.11494261508983594,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6153772931522528,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21245.783012380456,\\\"ask\\\":21459.308469791315,\\\"price\\\":21352.545741085887,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:25 PM\\\",\\\"bias\\\":0.11537729315225276,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6150013246043552,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21176.776350531032,\\\"ask\\\":21389.608273651946,\\\"price\\\":21283.19231209149,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:31 PM\\\",\\\"bias\\\":0.11500132460435519,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6150722301415295,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21163.727583674725,\\\"ask\\\":21376.428363410145,\\\"price\\\":21270.077973542437,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:37 PM\\\",\\\"bias\\\":0.11507223014152945,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6146010720890951,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21250.38151102374,\\\"ask\\\":21463.953184501366,\\\"price\\\":21357.167347762555,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:43 PM\\\",\\\"bias\\\":0.11460107208909509,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6151701472868318,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21355.904651775538,\\\"ask\\\":21570.53685933107,\\\"price\\\":21463.220755553306,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:49 PM\\\",\\\"bias\\\":0.11517014728683184,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6151886714563303,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21352.47028281754,\\\"ask\\\":21567.067974102138,\\\"price\\\":21459.76912845984,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:09:55 PM\\\",\\\"bias\\\":0.11518867145633027,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6149663737491075,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21393.677505085154,\\\"ask\\\":21608.689339307115,\\\"price\\\":21501.183422196136,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:01 PM\\\",\\\"bias\\\":0.11496637374910745,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6148486398458967,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21415.586182158026,\\\"ask\\\":21630.81820408926,\\\"price\\\":21523.202193123645,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:07 PM\\\",\\\"bias\\\":0.11484863984589666,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6143388644616052,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21510.64293416208,\\\"ask\\\":21726.83030033456,\\\"price\\\":21618.73661724832,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:13 PM\\\",\\\"bias\\\":0.11433886446160524,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6137872423584987,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21614.41994953118,\\\"ask\\\":21831.65030078275,\\\"price\\\":21723.035125156966,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:19 PM\\\",\\\"bias\\\":0.11378724235849869,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6141118893294332,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21676.088163117147,\\\"ask\\\":21893.93829540978,\\\"price\\\":21785.013229263463,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:26 PM\\\",\\\"bias\\\":0.11411188932943317,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6146375007415681,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21775.930514128308,\\\"ask\\\":21994.78408713462,\\\"price\\\":21885.357300631465,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:32 PM\\\",\\\"bias\\\":0.11463750074156809,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6150697008020417,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21858.02894111942,\\\"ask\\\":22077.70762394474,\\\"price\\\":21967.868282532083,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:38 PM\\\",\\\"bias\\\":0.11506970080204171,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6144687966110376,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21972.17350833616,\\\"ask\\\":22192.999372741546,\\\"price\\\":22082.586440538853,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:44 PM\\\",\\\"bias\\\":0.1144687966110376,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.614725702265121,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22021.486297270036,\\\"ask\\\":22242.807767594353,\\\"price\\\":22132.147032432196,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:50 PM\\\",\\\"bias\\\":0.11472570226512102,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6144984888803422,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22065.099684163055,\\\"ask\\\":22286.859479983785,\\\"price\\\":22175.97958207342,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:10:56 PM\\\",\\\"bias\\\":0.1144984888803422,\\\"countOfNegative\\\":0,\\\"countOfPositive\\\":10},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6139046713338159,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21951.25503402881,\\\"ask\\\":22171.87066251151,\\\"price\\\":22061.56284827016,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:00 PM\\\",\\\"bias\\\":0.11390467133381588,\\\"countOfNegative\\\":1,\\\"countOfPositive\\\":9},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6132731155338303,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21830.215230460737,\\\"ask\\\":22049.614378505565,\\\"price\\\":21939.914804483153,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:06 PM\\\",\\\"bias\\\":0.11327311553383035,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6127338155615779,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21934.150170473364,\\\"ask\\\":22154.593890779626,\\\"price\\\":22044.372030626495,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:12 PM\\\",\\\"bias\\\":0.11273381556157791,\\\"countOfNegative\\\":2,\\\"countOfPositive\\\":8},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6128449688415641,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21912.544840965227,\\\"ask\\\":22132.771422281457,\\\"price\\\":22022.658131623342,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:18 PM\\\",\\\"bias\\\":0.11284496884156414,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6129586608676526,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21934.621869700306,\\\"ask\\\":22155.070330702318,\\\"price\\\":22044.846100201314,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:24 PM\\\",\\\"bias\\\":0.1129586608676526,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6127345367401206,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21891.187013511695,\\\"ask\\\":22111.19894329573,\\\"price\\\":22001.192978403713,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:30 PM\\\",\\\"bias\\\":0.11273453674012057,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6123872738139666,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21823.961361976868,\\\"ask\\\":22043.29765707211,\\\"price\\\":21933.62950952449,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:36 PM\\\",\\\"bias\\\":0.11238727381396663,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.6128206873305718,\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":true,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21908.12391454319,\\\"ask\\\":22128.306064438093,\\\"price\\\":22018.214989490643,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:42 PM\\\",\\\"bias\\\":0.11282068733057182,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.38696292944138,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21866.185897663603,\\\"ask\\\":22085.946559951677,\\\"price\\\":21976.066228807642,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:48 PM\\\",\\\"bias\\\":0.11303707055862,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.38756759863404355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21983.154684169036,\\\"ask\\\":22204.09091215063,\\\"price\\\":22093.622798159835,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:11:55 PM\\\",\\\"bias\\\":0.11243240136595645,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.3874615580411374,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21962.440813281173,\\\"ask\\\":22183.168861655857,\\\"price\\\":22072.804837468517,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:01 PM\\\",\\\"bias\\\":0.11253844195886259,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.3879699037236488,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22061.64702024932,\\\"ask\\\":22283.372115930215,\\\"price\\\":22172.50956808977,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:07 PM\\\",\\\"bias\\\":0.11203009627635119,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.38757621140021603,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22139.17530383421,\\\"ask\\\":22361.679578244602,\\\"price\\\":22250.427441039406,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:13 PM\\\",\\\"bias\\\":0.11242378859978397,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.38715960968085006,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22221.21504481604,\\\"ask\\\":22444.5438392363,\\\"price\\\":22332.87944202617,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:19 PM\\\",\\\"bias\\\":0.11284039031914994,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.3874349719715948,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22167.12103459471,\\\"ask\\\":22389.906170620787,\\\"price\\\":22278.51360260775,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:25 PM\\\",\\\"bias\\\":0.11256502802840518,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.3873025611873747,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22193.196325753106,\\\"ask\\\":22416.243525006903,\\\"price\\\":22304.719925380006,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:31 PM\\\",\\\"bias\\\":0.11269743881262528,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.387763079105267,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22102.876874442674,\\\"ask\\\":22325.01634051747,\\\"price\\\":22213.946607480073,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:37 PM\\\",\\\"bias\\\":0.11223692089473303,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.38799651874395336,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22057.000898167422,\\\"ask\\\":22278.679299154028,\\\"price\\\":22167.840098660727,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:43 PM\\\",\\\"bias\\\":0.11200348125604664,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.388618815212428,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22179.55060474925,\\\"ask\\\":22402.460661078385,\\\"price\\\":22291.005632913817,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:49 PM\\\",\\\"bias\\\":0.11138118478757197,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.3889203584445252,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22239.59749138074,\\\"ask\\\":22463.11103400768,\\\"price\\\":22351.35426269421,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:12:55 PM\\\",\\\"bias\\\":0.11107964155547478,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.3890099750834821,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22257.539914951994,\\\"ask\\\":22481.23378344397,\\\"price\\\":22369.386849197985,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:01 PM\\\",\\\"bias\\\":0.11099002491651788,\\\"countOfNegative\\\":3,\\\"countOfPositive\\\":7},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.3886430965473073,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22184.20980779504,\\\"ask\\\":22407.16669028544,\\\"price\\\":22295.688249040242,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:07 PM\\\",\\\"bias\\\":0.11135690345269272,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":6},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.3880337623050744,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":22063.480568775696,\\\"ask\\\":22285.22409207997,\\\"price\\\":22174.352330427835,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:13 PM\\\",\\\"bias\\\":0.11196623769492559,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":5},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.387503785661341,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21959.53814324915,\\\"ask\\\":22180.237019060696,\\\"price\\\":22069.887581154922,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:19 PM\\\",\\\"bias\\\":0.11249621433865897,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.38783238997677716,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21895.580593084782,\\\"ask\\\":22115.63667944744,\\\"price\\\":22005.60863626611,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:26 PM\\\",\\\"bias\\\":0.11216761002322284,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":4},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.38822941059230537,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21818.353875997134,\\\"ask\\\":22037.633814449364,\\\"price\\\":21927.99384522325,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:32 PM\\\",\\\"bias\\\":0.11177058940769463,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3},{\\\"volatility\\\":0.0058,\\\"forecast\\\":0.38773987659864156,\\\"buyTrend\\\":false,\\\"sellTrend\\\":true,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":21723.21033272932,\\\"ask\\\":21941.534054666296,\\\"price\\\":21832.372193697807,\\\"maxShares\\\":4300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/11/2023, 4:13:38 PM\\\",\\\"bias\\\":0.11226012340135844,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":3}],\\\"longTermRecords\\\":[],\\\"recentTicksOfPrices\\\":[22167.840098660727,22291.005632913817,22351.35426269421,22369.386849197985,22295.688249040242,22174.352330427835,22069.887581154922,22005.60863626611,21927.99384522325,21832.372193697807]}]]\"}}],[\"data/salesLedger.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/salesLedger.txt\",\"text\":\"[{\\\"date\\\":\\\"7/11/2023, 4:11:49 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":5383.089930176384,\\\"averagePurchasePrice\\\":5177.088917519505,\\\"profit\\\":\\\"$2,163,010,632.90\\\",\\\"profitPercent\\\":\\\"3.98%\\\",\\\"shares\\\":10500000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4153416781130101}]\"}}],[\"data/stockMarketReserveMoney.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/stockMarketReserveMoney.txt\",\"text\":\"{\\\"stockMarketReserveMoneyLimit\\\":1000000000000,\\\"capitalToReserveForTrading\\\":638724880162.2621,\\\"moneyInvested\\\":1277449760324.5242,\\\"moneyRequested\\\":{},\\\"countOfVisitedWithoutFillingRequest\\\":0}\"}}],[\"data/contracts.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/contracts.txt\",\"text\":\"[]\"}}],[\"contracts/2023-07-11T21:04:22.607Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T21:04:22.607Z.txt\",\"text\":\"[]\"}}],[\"data/organizations.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/organizations.txt\",\"text\":\"{\\\"toJoinInOrderInWhichIWantToComplete\\\":[\\\"CyberSec\\\",\\\"NiteSec\\\",\\\"Chongqing\\\",\\\"The Black Hand\\\",\\\"Bachman & Associates\\\",\\\"BitRunners\\\",\\\"Daedalus\\\",\\\"NWO\\\",\\\"OmniTek Incorporated\\\",\\\"Blade Industries\\\",\\\"ECorp\\\",\\\"Illuminati\\\",\\\"Aevum\\\",\\\"Volhaven\\\",\\\"New Tokyo\\\",\\\"Ishima\\\",\\\"Tian Di Hui\\\",\\\"Netburners\\\",\\\"Sector-12\\\"],\\\"companiesWeWantToBecomePartOf\\\":[\\\"Bachman & Associates\\\",\\\"NWO\\\",\\\"OmniTek Incorporated\\\",\\\"Blade Industries\\\",\\\"ECorp\\\"],\\\"doNoWorkFor\\\":[\\\"Aevum\\\",\\\"Volhaven\\\",\\\"New Tokyo\\\",\\\"Ishima\\\",\\\"Tian Di Hui\\\",\\\"Netburners\\\",\\\"Sector-12\\\"],\\\"stopAtAugments\\\":[{\\\"final\\\":true,\\\"faction\\\":\\\"Chongqing\\\",\\\"augmentToStopAt\\\":\\\"Neuregen Gene Modification\\\"}]}\"}}],[\"data/enviroment.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/enviroment.txt\",\"text\":\"[{\\\"name\\\":\\\"n00dles\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"n00dles\\\",\\\"ip\\\":\\\"85.7.6.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":4,\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":4.216000000000001,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":196875,\\\"moneyMax\\\":196875,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000}},{\\\"name\\\":\\\"foodnstuff\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"foodnstuff\\\",\\\"ip\\\":\\\"25.2.0.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":5625000,\\\"moneyMax\\\":5625000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5}},{\\\"name\\\":\\\"sigma-cosmetics\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"ip\\\":\\\"69.2.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":6468750,\\\"moneyMax\\\":6468750,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10}},{\\\"name\\\":\\\"joesguns\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"joesguns\\\",\\\"ip\\\":\\\"77.9.5.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":7031250,\\\"moneyMax\\\":7031250,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"hong-fang-tea\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"ip\\\":\\\"67.8.9.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":8437500,\\\"moneyMax\\\":8437500,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"harakiri-sushi\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"ip\\\":\\\"37.6.4.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.086,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":11250000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40}},{\\\"name\\\":\\\"iron-gym\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"iron-gym\\\",\\\"ip\\\":\\\"59.5.2.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":18.224,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":56250000,\\\"moneyMax\\\":56250000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"darkweb\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"darkweb\\\",\\\"ip\\\":\\\"29.5.5.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"darkweb\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"7.3.8.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":2988.45,\\\"maxRam\\\":4096,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"nectar-net\\\",\\\"lineage\\\":[\\\"iron-gym\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nectar-net\\\",\\\"ip\\\":\\\"82.5.5.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":11.928,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":7734375,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25}},{\\\"name\\\":\\\"CSEC\\\",\\\"lineage\\\":[\\\"iron-gym\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"CSEC\\\",\\\"ip\\\":\\\"45.7.9.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":8,\\\"organizationName\\\":\\\"CyberSec\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":57,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"silver-helix\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"silver-helix\\\",\\\"ip\\\":\\\"70.1.9.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":126562500,\\\"moneyMax\\\":126562500,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"netlink\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"silver-helix\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"netlink\\\",\\\"ip\\\":\\\"85.1.5.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":110.25,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":33.712,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":773437500,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":395,\\\"serverGrowth\\\":50}},{\\\"name\\\":\\\"crush-fitness\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"silver-helix\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"crush-fitness\\\",\\\"ip\\\":\\\"5.6.1.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":41,\\\"hackDifficulty\\\":14.098,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":156254622.1875,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":268,\\\"serverGrowth\\\":29}},{\\\"name\\\":\\\"syscore\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"netlink\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"syscore\\\",\\\"ip\\\":\\\"91.8.0.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":27.668,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1504655265.9375,\\\"moneyMax\\\":1504655265.9375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":610,\\\"serverGrowth\\\":68}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"syscore\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"83.4.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":73.5,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":23.471999999999998,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":703125000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":44}},{\\\"name\\\":\\\"phantasy\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"phantasy\\\",\\\"ip\\\":\\\"73.3.0.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":67500000,\\\"moneyMax\\\":67500000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35}},{\\\"name\\\":\\\"computek\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\",\\\"phantasy\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"computek\\\",\\\"ip\\\":\\\"46.0.5.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"CompuTek\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":22,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":619241312.8125,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":323,\\\"serverGrowth\\\":61}},{\\\"name\\\":\\\"I.I.I.I\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\",\\\"phantasy\\\",\\\"computek\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"ip\\\":\\\"71.9.1.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":110.25,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":345,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"rho-construction\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\",\\\"phantasy\\\",\\\"computek\\\",\\\"I.I.I.I\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"rho-construction\\\",\\\"ip\\\":\\\"36.1.4.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":25.374,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":1593735660,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":56}},{\\\"name\\\":\\\"aerocorp\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\",\\\"phantasy\\\",\\\"computek\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"aerocorp\\\",\\\"ip\\\":\\\"3.4.1.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":30,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":3292617549.375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":59}},{\\\"name\\\":\\\"global-pharm\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\",\\\"phantasy\\\",\\\"computek\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"global-pharm\\\",\\\"ip\\\":\\\"47.5.8.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":33.334,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":394816381.4375,\\\"moneyMax\\\":4829170328.4375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":84}},{\\\"name\\\":\\\"deltaone\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\",\\\"phantasy\\\",\\\"computek\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"aerocorp\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"deltaone\\\",\\\"ip\\\":\\\"54.2.1.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":30.108125000000005,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":67899724.25502881,\\\"moneyMax\\\":3754998722.8125,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":58}},{\\\"name\\\":\\\"icarus\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\",\\\"phantasy\\\",\\\"computek\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"aerocorp\\\",\\\"deltaone\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"icarus\\\",\\\"ip\\\":\\\"51.9.6.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":29,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":2711972843.4375,\\\"moneyMax\\\":2711972843.4375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":95}},{\\\"name\\\":\\\"univ-energy\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\",\\\"phantasy\\\",\\\"computek\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"aerocorp\\\",\\\"deltaone\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"univ-energy\\\",\\\"ip\\\":\\\"28.1.3.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":34.168,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":3131938122.1875,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":87}},{\\\"name\\\":\\\"infocomm\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"nectar-net\\\",\\\"phantasy\\\",\\\"computek\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"aerocorp\\\",\\\"deltaone\\\",\\\"icarus\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"infocomm\\\",\\\"ip\\\":\\\"79.1.9.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"InfoComm\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":35.10600000000001,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":26938547.524208978,\\\"moneyMax\\\":1891378591.875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":891,\\\"serverGrowth\\\":36}},{\\\"name\\\":\\\"max-hardware\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"max-hardware\\\",\\\"ip\\\":\\\"85.4.3.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":9.642,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":28125000,\\\"moneyMax\\\":28125000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"neo-net\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"neo-net\\\",\\\"ip\\\":\\\"43.6.6.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":8,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":14062500,\\\"moneyMax\\\":14062500,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25}},{\\\"name\\\":\\\"omega-net\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omega-net\\\",\\\"ip\\\":\\\"50.4.3.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Omega Software\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":27,\\\"hackDifficulty\\\":9,\\\"minDifficulty\\\":9,\\\"moneyAvailable\\\":193215175.3125,\\\"moneyMax\\\":193215175.3125,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":216,\\\"serverGrowth\\\":32}},{\\\"name\\\":\\\"johnson-ortho\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"ip\\\":\\\"10.2.9.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":18.102,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":222357476.25,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":269,\\\"serverGrowth\\\":46}},{\\\"name\\\":\\\"catalyst\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"catalyst\\\",\\\"ip\\\":\\\"54.7.2.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":110.25,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":22,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":1375348286.25,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":35}},{\\\"name\\\":\\\"alpha-ent\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"alpha-ent\\\",\\\"ip\\\":\\\"41.2.5.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":60,\\\"hackDifficulty\\\":20,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":2032385231.25,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":590,\\\"serverGrowth\\\":52}},{\\\"name\\\":\\\"galactic-cyber\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"ip\\\":\\\"85.5.9.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":20.311999999999998,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":2173841181.5625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":856,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"omnia\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omnia\\\",\\\"ip\\\":\\\"80.7.8.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":31.132,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":2531368392.1875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":921,\\\"serverGrowth\\\":67}},{\\\"name\\\":\\\"unitalife\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"unitalife\\\",\\\"ip\\\":\\\"44.6.9.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":34.43600000000001,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":2807066982.662263,\\\"moneyMax\\\":2985983519.0625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":798,\\\"serverGrowth\\\":72}},{\\\"name\\\":\\\"defcomm\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"defcomm\\\",\\\"ip\\\":\\\"3.4.1.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"DefComm\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":91,\\\"hackDifficulty\\\":43.012,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":2380803710.625,\\\"moneyMax\\\":2380803710.625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":918,\\\"serverGrowth\\\":49}},{\\\"name\\\":\\\"solaris\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"solaris\\\",\\\"ip\\\":\\\"25.2.4.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":30.776,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":2008082404.6875,\\\"moneyMax\\\":2008082404.6875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":760,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"zeus-med\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zeus-med\\\",\\\"ip\\\":\\\"50.3.9.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":29,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":3857195860.3125,\\\"moneyMax\\\":3857195860.3125,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":837,\\\"serverGrowth\\\":76}},{\\\"name\\\":\\\"taiyang-digital\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"zeus-med\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"ip\\\":\\\"89.9.3.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":30.546,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":2211386853.8540354,\\\"moneyMax\\\":2353336993.125,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":923,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"titan-labs\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"zeus-med\\\",\\\"taiyang-digital\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"titan-labs\\\",\\\"ip\\\":\\\"10.4.3.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":26,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":2284614492.1875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":824,\\\"serverGrowth\\\":61}},{\\\"name\\\":\\\"microdyne\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"zeus-med\\\",\\\"taiyang-digital\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"microdyne\\\",\\\"ip\\\":\\\"95.6.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":25.425249999999995,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":1550752.3621515334,\\\"moneyMax\\\":1496875187.8125,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":70}},{\\\"name\\\":\\\"fulcrumtech\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"zeus-med\\\",\\\"taiyang-digital\\\",\\\"microdyne\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"ip\\\":\\\"63.1.1.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":110.25,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":28.13,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":5033416381.875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1158,\\\"serverGrowth\\\":84}},{\\\"name\\\":\\\".\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"zeus-med\\\",\\\"taiyang-digital\\\",\\\"microdyne\\\",\\\"fulcrumtech\\\"],\\\"server\\\":{\\\"hostname\\\":\\\".\\\",\\\"ip\\\":\\\"2.6.2.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\".\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":509,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"nwo\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"zeus-med\\\",\\\"taiyang-digital\\\",\\\"microdyne\\\",\\\"fulcrumtech\\\",\\\".\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nwo\\\",\\\"ip\\\":\\\"77.3.8.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"NWO\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":33.142,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":79748911170,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1250,\\\"serverGrowth\\\":84}},{\\\"name\\\":\\\"ecorp\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"zeus-med\\\",\\\"taiyang-digital\\\",\\\"microdyne\\\",\\\"fulcrumtech\\\",\\\".\\\",\\\"nwo\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"ecorp\\\",\\\"ip\\\":\\\"46.2.9.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"ECorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":33.142,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":106601258162.8125,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1294,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"zb-def\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-def\\\",\\\"ip\\\":\\\"92.7.2.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":21,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":2814281147.8125,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":818,\\\"serverGrowth\\\":73}},{\\\"name\\\":\\\"run4theh111z\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"run4theh111z\\\",\\\"ip\\\":\\\"54.0.4.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":481.25,\\\"maxRam\\\":512,\\\"organizationName\\\":\\\"The Runners\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":510,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"stormtech\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"stormtech\\\",\\\"ip\\\":\\\"14.5.2.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":30.13,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":2907166381.875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":945,\\\"serverGrowth\\\":74}},{\\\"name\\\":\\\"vitalife\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"vitalife\\\",\\\"ip\\\":\\\"68.4.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"VitaLife\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":30,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":2204390798.4375,\\\"moneyMax\\\":2204390798.4375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":868,\\\"serverGrowth\\\":63}},{\\\"name\\\":\\\"omnitek\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omnitek\\\",\\\"ip\\\":\\\"75.7.2.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":183.75,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":31.132,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":51689152330.3125,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":932,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"kuai-gong\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"kuai-gong\\\",\\\"ip\\\":\\\"74.0.8.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.136,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":84038932324.6875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":992,\\\"serverGrowth\\\":95}},{\\\"name\\\":\\\"powerhouse-fitness\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"kuai-gong\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"ip\\\":\\\"19.2.6.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":21,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":2349279896.597433,\\\"moneyMax\\\":2531250000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":995,\\\"serverGrowth\\\":54}},{\\\"name\\\":\\\"The-Cave\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"kuai-gong\\\",\\\"powerhouse-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"The-Cave\\\",\\\"ip\\\":\\\"80.9.7.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Helios\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"w0r1d_d43m0n\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"kuai-gong\\\",\\\"powerhouse-fitness\\\",\\\"The-Cave\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"w0r1d_d43m0n\\\",\\\"ip\\\":\\\"4.5.6.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"w0r1d_d43m0n\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":9000,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"b-and-a\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"omnitek\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"b-and-a\\\",\\\"ip\\\":\\\"43.8.4.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":28,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":61280519793.75,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":967,\\\"serverGrowth\\\":60}},{\\\"name\\\":\\\"blade\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"omnitek\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"blade\\\",\\\"ip\\\":\\\"69.6.2.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":93,\\\"hackDifficulty\\\":31.132,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":84701630095.3125,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":952,\\\"serverGrowth\\\":79}},{\\\"name\\\":\\\"clarkinc\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"omnitek\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"clarkinc\\\",\\\"ip\\\":\\\"83.7.9.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":25.964,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":52549046192.8125,\\\"moneyMax\\\":52549046192.8125,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1083,\\\"serverGrowth\\\":74}},{\\\"name\\\":\\\"megacorp\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"omnitek\\\",\\\"clarkinc\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"megacorp\\\",\\\"ip\\\":\\\"5.2.3.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":33.14,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":118059494999.0625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1202,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"fulcrumassets\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"omnitek\\\",\\\"clarkinc\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"ip\\\":\\\"37.1.8.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":100,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":2812500,\\\"moneyMax\\\":2812500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1228,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"nova-med\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"defcomm\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nova-med\\\",\\\"ip\\\":\\\"65.4.9.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":74,\\\"hackDifficulty\\\":32.932,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":3259859369.0625,\\\"moneyMax\\\":3259859369.0625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"applied-energetics\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"defcomm\\\",\\\"nova-med\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"applied-energetics\\\",\\\"ip\\\":\\\"81.7.5.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":28.852,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":2151720582.1875,\\\"moneyMax\\\":2151720582.1875,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"defcomm\\\",\\\"nova-med\\\",\\\"applied-energetics\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"1.7.3.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":40.403999999999996,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":2058488229.375,\\\"moneyMax\\\":2058488229.375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"4sigma\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"omega-net\\\",\\\"johnson-ortho\\\",\\\"catalyst\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"defcomm\\\",\\\"nova-med\\\",\\\"applied-energetics\\\",\\\"helios\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"4sigma\\\",\\\"ip\\\":\\\"46.3.3.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":20,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":59644256557.5,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1097,\\\"serverGrowth\\\":83}},{\\\"name\\\":\\\"the-hub\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"neo-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"the-hub\\\",\\\"ip\\\":\\\"23.3.5.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"The Hub\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":44,\\\"hackDifficulty\\\":20.92,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":527869676.25,\\\"moneyMax\\\":527869676.25,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":278,\\\"serverGrowth\\\":51}},{\\\"name\\\":\\\"avmnite-02h\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"neo-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"ip\\\":\\\"72.7.7.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":110.25,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"NiteSec\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":205,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"neo-net\\\",\\\"avmnite-02h\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"44.8.2.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":22,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":2218654412.1560054,\\\"moneyMax\\\":2387329391.25,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":735,\\\"serverGrowth\\\":83}},{\\\"name\\\":\\\"rothman-uni\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"neo-net\\\",\\\"the-hub\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"rothman-uni\\\",\\\"ip\\\":\\\"85.1.4.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Rothman University\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":54,\\\"hackDifficulty\\\":27.567999999999998,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":635838584.0625,\\\"moneyMax\\\":635838584.0625,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":419,\\\"serverGrowth\\\":37}},{\\\"name\\\":\\\"summit-uni\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"neo-net\\\",\\\"the-hub\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"summit-uni\\\",\\\"ip\\\":\\\"19.4.2.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Summit University\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":27.854,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":620028984.375,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":451,\\\"serverGrowth\\\":43}},{\\\"name\\\":\\\"lexo-corp\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"neo-net\\\",\\\"the-hub\\\",\\\"rothman-uni\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"lexo-corp\\\",\\\"ip\\\":\\\"81.6.5.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":21.112,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":2247900015.9375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":737,\\\"serverGrowth\\\":62}},{\\\"name\\\":\\\"aevum-police\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"neo-net\\\",\\\"the-hub\\\",\\\"rothman-uni\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"aevum-police\\\",\\\"ip\\\":\\\"48.2.8.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":34.542,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":853116837.1875,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":417,\\\"serverGrowth\\\":40}},{\\\"name\\\":\\\"snap-fitness\\\",\\\"lineage\\\":[\\\"harakiri-sushi\\\",\\\"max-hardware\\\",\\\"neo-net\\\",\\\"the-hub\\\",\\\"rothman-uni\\\",\\\"lexo-corp\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"snap-fitness\\\",\\\"ip\\\":\\\"16.5.6.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":60,\\\"hackDifficulty\\\":28.54,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":1265625000,\\\"moneyMax\\\":1265625000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":679,\\\"serverGrowth\\\":49}},{\\\"name\\\":\\\"zer0\\\",\\\"lineage\\\":[\\\"joesguns\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zer0\\\",\\\"ip\\\":\\\"5.3.9.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":8,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":21093750,\\\"moneyMax\\\":21093750,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40}}]\"}}],[\"data/batchQueue.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/batchQueue.txt\",\"text\":\"[[\\\"megacorp\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:29.846Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:29.617Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:14:21.958Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.14,\\\"originalNumberOfThreadsForFullMoney\\\":70,\\\"successes\\\":3,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":3,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":119,\\\"machineRunningOn\\\":\\\"I.I.I.I\\\",\\\"pid\\\":8525,\\\"executedAt\\\":\\\"2023-07-11T21:12:30.367Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:12:41.958Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:12:41.958Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:12:30.367Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:21.958Z\\\",\\\"type\\\":\\\"hack-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:12:30.367Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"ecorp\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:51.486Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:46.565Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:14:44.973Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.14200000000000002,\\\"originalNumberOfThreadsForFullMoney\\\":71,\\\"successes\\\":3,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":3,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":120.7,\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":9091,\\\"executedAt\\\":\\\"2023-07-11T21:12:52.601Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:04.973Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:04.973Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:12:52.601Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:44.973Z\\\",\\\"type\\\":\\\"hack-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:12:52.601Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"blade\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:14:05.043Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:10:37.837Z\\\",\\\"successfulGrowing\\\":false,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:13:18.599Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.132,\\\"originalNumberOfThreadsForFullMoney\\\":66,\\\"successes\\\":4,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":4,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"machineRunningOn\\\":\\\"catalyst\\\",\\\"pid\\\":9836,\\\"executedAt\\\":\\\"2023-07-11T21:13:20.943Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:55.043Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:55.043Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:20.943Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.043Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:20.943Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"kuai-gong\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:14:21.436Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:10:47.910Z\\\",\\\"successfulGrowing\\\":false,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:13:31.334Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.136,\\\"originalNumberOfThreadsForFullMoney\\\":68,\\\"successes\\\":4,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":4,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":10218,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.116Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:11.436Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:11.436Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:35.116Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:21.436Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:35.116Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"nwo\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:41.939Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:39.146Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:14:34.490Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.14200000000000002,\\\"originalNumberOfThreadsForFullMoney\\\":71,\\\"successes\\\":3,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":3,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":120.7,\\\"machineRunningOn\\\":\\\"I.I.I.I\\\",\\\"pid\\\":8829,\\\"executedAt\\\":\\\"2023-07-11T21:12:42.482Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:12:54.490Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:12:54.490Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:12:42.481Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:34.490Z\\\",\\\"type\\\":\\\"hack-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:12:42.482Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"b-and-a\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:13:48.201Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:10:27.418Z\\\",\\\"successfulGrowing\\\":false,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:13:03.747Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.128,\\\"originalNumberOfThreadsForFullMoney\\\":64,\\\"successes\\\":4,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":4,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"machineRunningOn\\\":\\\"millenium-fitness\\\",\\\"pid\\\":9457,\\\"executedAt\\\":\\\"2023-07-11T21:13:06.741Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:38.201Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:38.201Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:06.741Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:48.201Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:06.741Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"4sigma\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:48.522Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:12:00.849Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:48.928Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.11800000000000001,\\\"securityWeNeedToReduceAfterFullGrowth\\\":8.536,\\\"originalNumberOfThreadsForFullMoney\\\":59,\\\"successes\\\":7,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":7,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:36.928Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.949Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.012Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.012Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:50.960Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9678,\\\"executedAt\\\":\\\"2023-07-11T21:13:14.877Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.302Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:40.383Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.010Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.010Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:42.389Z\\\",\\\"machineRunningOn\\\":\\\"silver-helix\\\",\\\"pid\\\":9727,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.909Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3734.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:21.058Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:43.186Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.011Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.011Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:45.215Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9955,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":107.1,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:07.046Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.342Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.009Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.009Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.370Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":10105,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:14.877Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:52.955Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:04.808Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.016Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.016Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:06.812Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10106,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.389Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:56.343Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.014Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.014Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:58.336Z\\\",\\\"machineRunningOn\\\":\\\"global-pharm\\\",\\\"pid\\\":10156,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.105Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3734.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.174Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:59.173Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.015Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.015Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:01.183Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10388,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:23.242Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.437Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.013Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.013Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:31.095Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:08.798Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:18.770Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:21.020Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:25.020Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:58.336Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:08.339Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:13.018Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.018Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:53.172Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:03.191Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:17.019Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:21.019Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:39.376Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.437Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.017Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.017Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"clarkinc\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:41.267Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:55.528Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:46.481Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.116,\\\"securityWeNeedToReduceAfterFullGrowth\\\":9,\\\"originalNumberOfThreadsForFullMoney\\\":58,\\\"successes\\\":7,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":7,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:27.813Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.792Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:39.890Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:43.890Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.789Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9459,\\\"executedAt\\\":\\\"2023-07-11T21:13:06.742Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:16.714Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:30.742Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:31.888Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:35.888Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:32.767Z\\\",\\\"machineRunningOn\\\":\\\"global-pharm\\\",\\\"pid\\\":9518,\\\"executedAt\\\":\\\"2023-07-11T21:13:08.783Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3937.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:11.775Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:33.914Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:35.889Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:39.889Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:35.927Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9728,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.909Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":107.1,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:12:58.593Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:26.879Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:27.887Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:31.887Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:28.901Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":9888,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.974Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:06.742Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.807Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:55.828Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:55.894Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:59.894Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:57.808Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9889,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.974Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:32.767Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.828Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:47.892Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.892Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:48.855Z\\\",\\\"machineRunningOn\\\":\\\"microdyne\\\",\\\"pid\\\":9956,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3937.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:27.855Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.939Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:51.893Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:55.893Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:51.937Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10157,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.105Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":105.39999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:14.743Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:43.003Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:43.891Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:47.891Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:45.019Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10325,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.146Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:22.974Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:59.830Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:11.657Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:11.898Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:15.898Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:13.659Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10326,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.146Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:48.855Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.780Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:03.896Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:07.896Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:04.788Z\\\",\\\"machineRunningOn\\\":\\\"netlink\\\",\\\"pid\\\":10389,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.972Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.960Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:07.897Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:11.897Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:30.937Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.052Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:59.895Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.895Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:39.146Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:15.660Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:17.663Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:27.902Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:31.902Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:04.788Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:06.795Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:19.900Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:23.900Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:59.951Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.960Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:23.901Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:27.901Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:47.039Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.052Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:15.899Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:19.899Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"omnitek\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:14:02.332Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:10:37.229Z\\\",\\\"successfulGrowing\\\":false,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:13:16.399Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.132,\\\"originalNumberOfThreadsForFullMoney\\\":66,\\\"successes\\\":4,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":4,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"machineRunningOn\\\":\\\"netlink\\\",\\\"pid\\\":9786,\\\"executedAt\\\":\\\"2023-07-11T21:13:18.925Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:52.333Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:52.333Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:18.924Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:02.332Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:18.925Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"fulcrumtech\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:11:51.511Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:10:58.623Z\\\",\\\"successfulGrowing\\\":false,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:13:41.593Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.13,\\\"originalNumberOfThreadsForFullMoney\\\":65,\\\"successes\\\":4,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":4,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[]}],[\\\"global-pharm\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:18.187Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:32.059Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:22.556Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.122,\\\"securityWeNeedToReduceAfterFullGrowth\\\":9.3,\\\"originalNumberOfThreadsForFullMoney\\\":61,\\\"successes\\\":8,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":8,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:36.230Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.259Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:48.289Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:52.289Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:50.257Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9729,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.909Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:27.573Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.639Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:40.287Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:44.287Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.646Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":9730,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.909Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4068.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:22.508Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:42.620Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:44.288Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:48.288Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:44.650Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9957,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":103.7,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:08.894Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.166Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:36.286Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:40.286Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.194Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10107,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:16.909Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:52.254Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:04.139Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:04.293Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:08.293Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:06.127Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10158,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.105Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.648Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:55.606Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:56.291Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:00.291Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:57.600Z\\\",\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":10159,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.105Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4068.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:38.612Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:58.612Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:00.292Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:04.292Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:00.623Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10390,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:25.077Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.262Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:52.290Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:56.290Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:33.105Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:08.116Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:16.107Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:20.297Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:24.297Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:59.594Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:07.606Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:12.295Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:16.295Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:54.608Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.631Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:16.296Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:20.296Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:41.207Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.262Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:08.294Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:12.294Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"zeus-med\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:13:11.266Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:12:21.007Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:03.785Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.128,\\\"securityWeNeedToReduceAfterFullGrowth\\\":11.144,\\\"originalNumberOfThreadsForFullMoney\\\":64,\\\"successes\\\":6,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":6,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":421.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:41.583Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:57.576Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.586Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.586Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:59.573Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9837,\\\"executedAt\\\":\\\"2023-07-11T21:13:20.943Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:30.978Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.035Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.584Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.584Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:51.024Z\\\",\\\"machineRunningOn\\\":\\\"vitalife\\\",\\\"pid\\\":9890,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.974Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4875.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:25.225Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:53.292Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.585Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.585Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:55.287Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10160,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.105Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":107.1,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:09.744Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.049Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.583Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.583Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.063Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10327,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.146Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:20.943Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":421.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:01.547Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:13.386Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:13.590Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.590Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:15.363Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10273,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.128Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:51.024Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:04.933Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.588Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.588Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:06.938Z\\\",\\\"machineRunningOn\\\":\\\"millenium-fitness\\\",\\\"pid\\\":10328,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.146Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:45.316Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:05.300Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.589Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.589Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.956Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.095Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.587Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.587Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:37.128Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:17.364Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:21.365Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:29.594Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:33.594Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:06.938Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:10.949Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:21.592Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:25.592Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:01.283Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:05.300Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:25.593Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:29.593Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:46.063Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.095Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:17.591Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:21.591Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"deltaone\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:19.353Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:33.164Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:24.260Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.12,\\\"securityWeNeedToReduceAfterFullGrowth\\\":12.468,\\\"originalNumberOfThreadsForFullMoney\\\":60,\\\"successes\\\":8,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":8,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":456.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:38.016Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.037Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:50.108Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:54.108Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:52.034Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9732,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.909Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.455Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:40.533Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:42.106Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:46.106Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:42.536Z\\\",\\\"machineRunningOn\\\":\\\"I.I.I.I\\\",\\\"pid\\\":9787,\\\"executedAt\\\":\\\"2023-07-11T21:13:18.925Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":5454.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:21.615Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.695Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:46.107Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:50.107Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:47.715Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10054,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":102,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:08.616Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:36.919Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:38.105Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:42.105Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:38.925Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":10161,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.105Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:16.909Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":456.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:54.030Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:05.900Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:06.112Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:10.112Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:07.886Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10162,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.105Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.536Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:56.498Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:58.110Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:02.110Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:58.493Z\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":10219,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.116Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.724Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.755Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:02.111Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:06.111Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:24.799Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.988Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:54.109Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:58.109Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:33.105Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:09.874Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:17.861Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:22.116Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:26.116Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:58.494Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:06.507Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:14.114Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:18.114Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:53.730Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.755Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:18.115Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:22.115Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.933Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.988Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:10.113Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:14.113Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"aerocorp\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:13:51.768Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:10:33.072Z\\\",\\\"successfulGrowing\\\":false,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:13:07.678Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.13,\\\"originalNumberOfThreadsForFullMoney\\\":65,\\\"successes\\\":4,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":4,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"machineRunningOn\\\":\\\"unitalife\\\",\\\"pid\\\":9573,\\\"executedAt\\\":\\\"2023-07-11T21:13:10.805Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.768Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:41.768Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:10.805Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.768Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:10.805Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"nova-med\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:14:02.516Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:13:20.781Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:12:15.000Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.12,\\\"securityWeNeedToReduceAfterFullGrowth\\\":10.228,\\\"originalNumberOfThreadsForFullMoney\\\":60,\\\"successes\\\":7,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":7,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":281.75,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9891,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.974Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:52.516Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:52.516Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:22.974Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:02.516Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:22.974Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"univ-energy\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:31.034Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:44.962Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:32.887Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.124,\\\"securityWeNeedToReduceAfterFullGrowth\\\":9.064,\\\"originalNumberOfThreadsForFullMoney\\\":62,\\\"successes\\\":7,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":7,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:32.958Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.928Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.023Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.023Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.965Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9623,\\\"executedAt\\\":\\\"2023-07-11T21:13:12.854Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:24.513Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:36.526Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.021Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.021Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:38.566Z\\\",\\\"machineRunningOn\\\":\\\"lexo-corp\\\",\\\"pid\\\":9624,\\\"executedAt\\\":\\\"2023-07-11T21:13:12.854Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3965.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:19.248Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.362Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.022Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.022Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.368Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9838,\\\"executedAt\\\":\\\"2023-07-11T21:13:20.943Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":115.6,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:05.094Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:31.382Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:33.020Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:37.020Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:33.372Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":10005,\\\"executedAt\\\":\\\"2023-07-11T21:13:27.033Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:12.854Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:48.976Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:00.829Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.027Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.027Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:02.843Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10055,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.581Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:52.507Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.025Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.025Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:54.525Z\\\",\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":10056,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3965.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.347Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:55.352Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.026Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.026Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:57.345Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10274,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.128Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":105.39999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:21.274Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.480Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.024Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.024Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:49.493Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10439,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:29.062Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:04.849Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:16.815Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:17.031Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:21.031Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:56.538Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:08.534Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.029Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.029Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:51.357Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:03.372Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:13.030Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.030Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.427Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.493Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.028Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.028Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"unitalife\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:10:03.624Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:09:15.838Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:51.413Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.124,\\\"securityWeNeedToReduceAfterFullGrowth\\\":10.78,\\\"originalNumberOfThreadsForFullMoney\\\":62,\\\"successes\\\":10,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":10,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":386.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:25.618Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:37.613Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:39.441Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:43.441Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:39.590Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9409,\\\"executedAt\\\":\\\"2023-07-11T21:13:04.708Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:15.797Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:29.816Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:31.439Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:35.439Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:31.824Z\\\",\\\"machineRunningOn\\\":\\\"avmnite-02h\\\",\\\"pid\\\":9461,\\\"executedAt\\\":\\\"2023-07-11T21:13:06.742Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4716.25,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:10.659Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:34.803Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:35.440Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:39.440Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:36.814Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9733,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.910Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":105.39999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:12:56.846Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:27.156Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:27.438Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:31.438Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:29.178Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":9892,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.974Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:04.708Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":386.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:41.588Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:53.629Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:55.445Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:59.445Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:55.627Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9839,\\\"executedAt\\\":\\\"2023-07-11T21:13:20.943Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.824Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.909Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:47.443Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.443Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:47.903Z\\\",\\\"machineRunningOn\\\":\\\"aevum-police\\\",\\\"pid\\\":9893,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.974Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4716.25,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.717Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.818Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:51.444Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:55.444Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:52.815Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10163,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":105.39999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:12.984Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:43.277Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:43.442Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:47.442Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:45.293Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10329,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.146Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:20.943Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":386.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:57.607Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:09.478Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:11.449Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:15.449Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:11.458Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10275,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.128Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:47.903Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.839Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:03.447Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:07.447Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:03.846Z\\\",\\\"machineRunningOn\\\":\\\"I.I.I.I\\\",\\\"pid\\\":10330,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.146Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.827Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.835Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:07.448Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:11.448Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.178Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.325Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:59.446Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.446Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:37.128Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:13.461Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:17.465Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:27.453Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:31.453Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:03.846Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:07.860Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:19.451Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:23.451Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:58.816Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.835Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:23.452Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:27.452Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:45.293Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.325Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:15.450Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:19.450Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"stormtech\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:14:11.594Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:10:48.635Z\\\",\\\"successfulGrowing\\\":false,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:13:26.282Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.13,\\\"originalNumberOfThreadsForFullMoney\\\":65,\\\"successes\\\":4,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":4,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":10057,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:01.595Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:01.595Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:29.061Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:11.594Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:29.062Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"zb-def\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:20.672Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:40.212Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:37.331Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.114,\\\"securityWeNeedToReduceAfterFullGrowth\\\":8.388,\\\"originalNumberOfThreadsForFullMoney\\\":57,\\\"successes\\\":8,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":8,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:30.586Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:42.640Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:44.545Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:48.545Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:44.644Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9734,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.910Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:22.802Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:34.888Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:36.543Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:40.543Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:36.900Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9735,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.910Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3669.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:18.697Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:38.839Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:40.544Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:44.544Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:40.870Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9958,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":96.89999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:07.703Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:31.964Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:32.542Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:36.542Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:33.991Z\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":10058,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:16.910Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:46.643Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:58.576Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:00.549Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:04.549Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:00.569Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10164,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:38.903Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.903Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:52.547Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:56.547Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:52.900Z\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":10165,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3669.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:34.822Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.865Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:56.548Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:00.548Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:56.879Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10391,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:23.893Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.092Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:48.546Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:52.546Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:33.106Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:02.561Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:10.565Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:16.553Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:20.553Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:54.898Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.919Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:08.551Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:12.551Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:50.857Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:58.888Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:12.552Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:16.552Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.035Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.092Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:04.550Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:08.550Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"icarus\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:13:26.382Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:12:37.610Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:20.111Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.128,\\\"securityWeNeedToReduceAfterFullGrowth\\\":8.84,\\\"originalNumberOfThreadsForFullMoney\\\":64,\\\"successes\\\":6,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":6,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:54.286Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:10.117Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:10.289Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:14.289Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:12.103Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10220,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:45.733Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.648Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:02.287Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:06.287Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:03.639Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":10221,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:39.868Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:05.850Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:06.288Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:10.288Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:24.084Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.267Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:58.286Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:02.286Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:35.117Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:14.081Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:20.084Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:26.293Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:30.293Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:05.625Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:11.640Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:18.291Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:22.291Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:59.826Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:05.850Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:22.292Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:26.292Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:44.221Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.267Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:14.290Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:18.290Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"omnia\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:14:17.806Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:10:54.860Z\\\",\\\"successfulGrowing\\\":false,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:13:32.422Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.132,\\\"originalNumberOfThreadsForFullMoney\\\":66,\\\"successes\\\":4,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":4,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":10222,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:07.807Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:07.807Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:35.116Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.806Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:35.117Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"powerhouse-fitness\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:10:14.978Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:09:25.163Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:12:03.331Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.116,\\\"securityWeNeedToReduceAfterFullGrowth\\\":11.032,\\\"originalNumberOfThreadsForFullMoney\\\":58,\\\"successes\\\":10,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":10,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":421.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.582Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.599Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:51.359Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:55.359Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:51.611Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9680,\\\"executedAt\\\":\\\"2023-07-11T21:13:14.878Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:25.083Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:43.179Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:43.357Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:47.357Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:45.184Z\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":9840,\\\"executedAt\\\":\\\"2023-07-11T21:13:20.943Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4826.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:20.096Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.190Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:47.358Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.358Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:48.210Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10059,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":98.6,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:06.745Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.081Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:39.356Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:43.356Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.088Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":10223,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:14.878Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":421.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:53.605Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:05.452Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:07.363Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:11.363Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:07.456Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10108,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:41.178Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:59.132Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:59.361Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.361Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:01.121Z\\\",\\\"machineRunningOn\\\":\\\"omnia\\\",\\\"pid\\\":10276,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.128Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:36.219Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.247Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:03.362Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:07.362Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:22.944Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.142Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:55.360Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:59.360Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:31.095Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:09.443Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:19.412Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:23.367Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:27.367Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:57.137Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:07.143Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:15.365Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:19.365Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:52.226Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.247Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:19.366Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:23.366Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:39.081Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.142Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:11.364Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:15.364Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"zb-institute\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:18.380Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:41.255Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:43.086Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.114,\\\"securityWeNeedToReduceAfterFullGrowth\\\":7.684,\\\"originalNumberOfThreadsForFullMoney\\\":57,\\\"successes\\\":8,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":8,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":281.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.012Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:38.080Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:39.953Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:43.953Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:40.095Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9681,\\\"executedAt\\\":\\\"2023-07-11T21:13:14.878Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:19.610Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:31.705Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:31.951Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:35.951Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:33.723Z\\\",\\\"machineRunningOn\\\":\\\"catalyst\\\",\\\"pid\\\":9682,\\\"executedAt\\\":\\\"2023-07-11T21:13:14.878Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3361.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:15.746Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.910Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:35.952Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:39.952Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.919Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9894,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.974Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":96.89999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:05.386Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:27.644Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:27.950Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:31.950Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:29.680Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9959,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:14.878Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":281.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.102Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.044Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:55.957Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:59.957Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:56.057Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10109,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.736Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.731Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:47.955Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.955Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:49.749Z\\\",\\\"machineRunningOn\\\":\\\"catalyst\\\",\\\"pid\\\":10110,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3361.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.894Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.942Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:51.956Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:55.956Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:53.953Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10331,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":96.89999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:21.592Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:43.774Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:43.954Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:47.954Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:45.794Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":10392,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:31.095Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:58.052Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:08.055Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:11.961Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:15.961Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:51.748Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.770Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:03.959Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:07.959Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:47.943Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:57.977Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:07.960Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:11.960Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.742Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.807Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:59.958Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.958Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"defcomm\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:13:56.342Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:12:58.176Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:35.088Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.13,\\\"securityWeNeedToReduceAfterFullGrowth\\\":16.756,\\\"originalNumberOfThreadsForFullMoney\\\":65,\\\"successes\\\":5,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":5,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":491.75,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9305,\\\"executedAt\\\":\\\"2023-07-11T21:13:00.677Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.342Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:46.342Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:00.677Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:56.342Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:00.677Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"taiyang-digital\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:10:22.554Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:09:32.421Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:12:09.748Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.12,\\\"securityWeNeedToReduceAfterFullGrowth\\\":9.632,\\\"originalNumberOfThreadsForFullMoney\\\":60,\\\"successes\\\":9,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":9,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:28.642Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:40.619Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.772Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.772Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:42.614Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9463,\\\"executedAt\\\":\\\"2023-07-11T21:13:06.742Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:18.514Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:32.534Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:33.770Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:37.770Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:34.558Z\\\",\\\"machineRunningOn\\\":\\\"alpha-ent\\\",\\\"pid\\\":9523,\\\"executedAt\\\":\\\"2023-07-11T21:13:08.784Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4214,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:13.229Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:37.369Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.771Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.771Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:39.373Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9789,\\\"executedAt\\\":\\\"2023-07-11T21:13:18.925Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":102,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:12:59.047Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:29.351Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:29.769Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:33.769Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:31.386Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9960,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:06.742Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:44.632Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:56.650Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.776Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.776Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:58.627Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9895,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:34.558Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.609Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.774Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.774Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:50.634Z\\\",\\\"machineRunningOn\\\":\\\"millenium-fitness\\\",\\\"pid\\\":9961,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4214,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.301Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:53.365Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.775Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.775Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:55.363Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10224,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":102,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:15.195Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.465Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.773Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.773Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:47.484Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10393,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:22.975Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:00.649Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:12.469Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:13.780Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.780Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:14.472Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10332,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:50.634Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:04.545Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.778Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.778Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:06.551Z\\\",\\\"machineRunningOn\\\":\\\"avmnite-02h\\\",\\\"pid\\\":10394,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:45.409Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:03.383Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.779Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.779Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.386Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.497Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.777Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.777Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:39.147Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:16.472Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:18.475Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:29.784Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:33.784Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:06.551Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:08.558Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:21.782Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:25.782Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:01.375Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:03.383Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:25.783Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:29.783Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:47.484Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.497Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:17.781Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:21.781Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"titan-labs\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:10:22.557Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:09:33.686Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:12:09.527Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.122,\\\"securityWeNeedToReduceAfterFullGrowth\\\":11.928,\\\"originalNumberOfThreadsForFullMoney\\\":61,\\\"successes\\\":9,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":9,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":421.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:28.884Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:40.861Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.551Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.551Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:42.856Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9464,\\\"executedAt\\\":\\\"2023-07-11T21:13:06.742Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:17.662Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:31.686Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:33.549Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:37.549Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:33.711Z\\\",\\\"machineRunningOn\\\":\\\"millenium-fitness\\\",\\\"pid\\\":9525,\\\"executedAt\\\":\\\"2023-07-11T21:13:08.784Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":5218.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:12.557Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:36.703Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.550Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.550Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:38.707Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9790,\\\"executedAt\\\":\\\"2023-07-11T21:13:18.925Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":103.7,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:12:58.837Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:29.144Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:29.548Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:33.548Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:31.178Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9962,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:06.742Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":421.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:44.873Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:56.890Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.555Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.555Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:58.868Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9896,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:33.711Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.767Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.553Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.553Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:49.792Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9963,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":5218.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:28.633Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:52.705Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.554Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.554Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:54.703Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10225,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":103.7,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:14.987Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.259Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.552Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.552Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:47.278Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10395,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:22.975Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":421.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:00.889Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:12.707Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:13.559Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.559Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:14.710Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10333,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:49.792Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:03.711Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.557Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.557Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:05.717Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10396,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:44.744Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.725Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.558Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.558Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.178Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.291Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.556Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.556Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:39.147Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:16.709Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:18.712Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:29.563Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:33.563Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:05.717Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:07.724Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:21.561Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:25.561Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:00.717Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.725Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:25.562Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:29.562Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:47.278Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.291Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:17.560Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:21.560Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"lexo-corp\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:26.896Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:48.649Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:50.967Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.114,\\\"securityWeNeedToReduceAfterFullGrowth\\\":9.620000000000001,\\\"originalNumberOfThreadsForFullMoney\\\":57,\\\"successes\\\":8,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":8,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:34.907Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.963Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:48.840Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:52.840Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:48.956Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9897,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.868Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:38.956Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:40.838Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:44.838Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:40.961Z\\\",\\\"machineRunningOn\\\":\\\"netlink\\\",\\\"pid\\\":9898,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4208.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:23.174Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:43.292Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:44.839Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:48.839Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:45.314Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10111,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":95.2,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:13.281Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.538Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:36.837Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:40.837Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.546Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10166,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:22.975Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:50.981Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.882Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:04.844Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:08.844Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:04.889Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10334,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.990Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.957Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:56.842Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:00.842Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:56.968Z\\\",\\\"machineRunningOn\\\":\\\"catalyst\\\",\\\"pid\\\":10335,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:39.318Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:57.351Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:00.843Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:04.843Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.482Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.612Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:52.841Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:56.841Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:39.147Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:06.895Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:08.901Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:20.848Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:24.848Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:58.979Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:00.988Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:12.846Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:16.846Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:55.341Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:57.351Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:16.847Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:20.847Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:45.598Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.612Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:08.845Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:12.845Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"vitalife\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:13:53.109Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:12:58.778Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:38.693Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.13,\\\"securityWeNeedToReduceAfterFullGrowth\\\":13.192,\\\"originalNumberOfThreadsForFullMoney\\\":65,\\\"successes\\\":5,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":5,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":386.75,\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9361,\\\"executedAt\\\":\\\"2023-07-11T21:13:02.708Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:43.110Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.110Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:02.706Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.109Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:02.708Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:25.759Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:25.759Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:41.763Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:45.763Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:12.952Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:12.952Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:33.761Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:37.761Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:06.896Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:06.896Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:37.762Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:41.762Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:50.594Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.594Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:29.760Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:33.760Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"galactic-cyber\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:11:55.183Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:15.117Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:14.907Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.112,\\\"securityWeNeedToReduceAfterFullGrowth\\\":7.708,\\\"originalNumberOfThreadsForFullMoney\\\":56,\\\"successes\\\":9,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":9,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":281.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.246Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.301Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.120Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.120Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:49.293Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9899,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:27.785Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.869Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.118Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.118Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.873Z\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":9900,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3372.25,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:23.897Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.006Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.119Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.119Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.027Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10112,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":95.2,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:13.506Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.761Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.117Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.117Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.769Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10167,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:22.975Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":281.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:51.318Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:03.216Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.124Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.124Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:05.223Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10336,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.901Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:55.860Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.122Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.122Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:57.871Z\\\",\\\"machineRunningOn\\\":\\\"avmnite-02h\\\",\\\"pid\\\":10337,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.036Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:58.062Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.123Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.123Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.707Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.834Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.121Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.121Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:39.147Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:07.228Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:09.235Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:21.128Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:25.128Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:59.881Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.890Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:13.126Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.126Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:56.052Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:58.062Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:17.127Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:21.127Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:45.820Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.834Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.125Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.125Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"applied-energetics\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:48.259Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:12:07.182Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:03.911Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.116,\\\"securityWeNeedToReduceAfterFullGrowth\\\":8.828,\\\"originalNumberOfThreadsForFullMoney\\\":58,\\\"successes\\\":6,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":6,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:28.189Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:40.183Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:40.197Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:44.197Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:42.222Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9627,\\\"executedAt\\\":\\\"2023-07-11T21:13:12.854Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:19.909Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:31.946Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:32.195Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:36.195Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:33.987Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":9628,\\\"executedAt\\\":\\\"2023-07-11T21:13:12.854Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3862.25,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:15.571Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.712Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:36.196Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:40.196Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.721Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9841,\\\"executedAt\\\":\\\"2023-07-11T21:13:20.944Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":107.1,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:03.944Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:26.186Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:28.194Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:32.194Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:28.210Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9901,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:12.854Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:44.236Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:00.156Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:00.239Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:04.239Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:02.148Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10168,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:36.004Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:52.007Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:52.237Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:56.237Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:54.004Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10169,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3862.25,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.691Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:55.745Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:56.238Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:00.238Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:57.757Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10397,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":107.1,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:20.132Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.353Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:48.236Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:52.236Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:48.366Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10440,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:33.106Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:04.139Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:12.139Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:16.243Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:20.243Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:56.001Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:04.020Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:08.241Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:12.241Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:51.738Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:59.767Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:12.242Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:16.242Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.311Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.366Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:04.240Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:08.240Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"helios\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:14:03.913Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:13:10.004Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:47.163Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.132,\\\"securityWeNeedToReduceAfterFullGrowth\\\":12.112,\\\"originalNumberOfThreadsForFullMoney\\\":66,\\\"successes\\\":5,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":5,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9629,\\\"executedAt\\\":\\\"2023-07-11T21:13:12.854Z\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:53.913Z\\\",\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:53.913Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:12.854Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.913Z\\\",\\\"type\\\":\\\"weaken-dynamic\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:12.854Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"alpha-ent\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:15.880Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:43.132Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:51.823Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.11,\\\"securityWeNeedToReduceAfterFullGrowth\\\":10.756,\\\"originalNumberOfThreadsForFullMoney\\\":55,\\\"successes\\\":9,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":9,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":386.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:33.873Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.939Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:47.640Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.640Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:47.858Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10006,\\\"executedAt\\\":\\\"2023-07-11T21:13:27.033Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.677Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:38.774Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:39.638Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:43.638Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:40.728Z\\\",\\\"machineRunningOn\\\":\\\"netlink\\\",\\\"pid\\\":10007,\\\"executedAt\\\":\\\"2023-07-11T21:13:27.033Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4705.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:23.853Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:41.979Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:43.639Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:47.639Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:43.982Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10170,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":103.7,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:16.291Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:34.496Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:35.637Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:39.637Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:36.504Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10171,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:27.033Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":386.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:49.878Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.900Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:03.644Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:07.644Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:03.908Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10441,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.751Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.802Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:55.642Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:59.642Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:56.813Z\\\",\\\"machineRunningOn\\\":\\\"silver-helix\\\",\\\"pid\\\":10442,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:39.954Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.028Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:59.643Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.643Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:32.465Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.573Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:51.641Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:55.641Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:43.185Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"solaris\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:49.770Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:12:09.300Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:05.964Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.11800000000000001,\\\"securityWeNeedToReduceAfterFullGrowth\\\":8.728,\\\"originalNumberOfThreadsForFullMoney\\\":59,\\\"successes\\\":6,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":6,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:27.544Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.542Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.554Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.554Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.581Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9630,\\\"executedAt\\\":\\\"2023-07-11T21:13:12.855Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:20.006Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:32.042Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:33.552Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:37.552Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:34.085Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":9631,\\\"executedAt\\\":\\\"2023-07-11T21:13:12.855Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3818.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:15.654Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.794Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.553Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.553Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.803Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9842,\\\"executedAt\\\":\\\"2023-07-11T21:13:20.944Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":108.8,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:03.970Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:28.235Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:29.551Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:33.551Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:30.270Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9964,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:12.855Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.595Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:57.511Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.558Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.558Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:59.522Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10113,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:36.100Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.067Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.556Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.556Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:50.086Z\\\",\\\"machineRunningOn\\\":\\\"avmnite-02h\\\",\\\"pid\\\":10060,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3818.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.774Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.819Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.557Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.557Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:53.816Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10277,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":108.8,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:20.158Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.359Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.555Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.555Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.379Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10398,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:29.062Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:59.522Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:11.507Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:13.562Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.562Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:52.103Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:04.115Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.560Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.560Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:47.820Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:59.848Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.561Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.561Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:36.321Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.392Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.559Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.559Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"infocomm\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:10:55.305Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:09:56.400Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:12:42.632Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.124,\\\"securityWeNeedToReduceAfterFullGrowth\\\":19.904,\\\"originalNumberOfThreadsForFullMoney\\\":62,\\\"successes\\\":7,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":7,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":701.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.169Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:41.043Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:42.648Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:46.648Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:43.047Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9149,\\\"executedAt\\\":\\\"2023-07-11T21:12:54.623Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:08.728Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:32.717Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:34.646Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:38.646Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:34.721Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9469,\\\"executedAt\\\":\\\"2023-07-11T21:13:06.742Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":8708,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:02.973Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:37.104Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:38.647Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:42.647Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:39.113Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9740,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.910Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":105.39999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:12:47.499Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:29.895Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:30.645Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:34.645Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:31.929Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":9965,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:12:54.623Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":701.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:45.042Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:56.966Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:58.652Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:02.652Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:58.932Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9577,\\\"executedAt\\\":\\\"2023-07-11T21:13:10.805Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:24.725Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.793Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:50.650Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:54.650Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:50.783Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9902,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":8708,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:19.004Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:53.096Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:54.651Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:58.651Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:55.092Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10172,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":105.39999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:03.624Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.003Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:46.649Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:50.649Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:48.022Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10399,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:10.805Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":701.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:00.966Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:12.911Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:14.656Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:18.656Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:14.700Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10008,\\\"executedAt\\\":\\\"2023-07-11T21:13:27.033Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.773Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:04.693Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:06.654Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:10.654Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:06.699Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10338,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.088Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:05.104Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:10.655Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:14.655Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:19.803Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.034Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:02.653Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:06.653Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:27.033Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:16.707Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:30.617Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:30.660Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:34.660Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:56.710Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:10.709Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:22.658Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:26.658Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:51.080Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:05.104Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:26.659Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:30.659Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.942Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.034Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:18.657Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:22.657Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"rho-construction\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:06.024Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:37.123Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:53.198Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.108,\\\"securityWeNeedToReduceAfterFullGrowth\\\":9.412,\\\"originalNumberOfThreadsForFullMoney\\\":54,\\\"successes\\\":10,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":10,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:33.815Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.846Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.426Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.426Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:49.846Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10173,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:28.354Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:40.411Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.424Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.424Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:42.435Z\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":10114,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4117.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.014Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.126Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.425Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.425Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.130Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10278,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":100.3,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:19.755Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.923Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.423Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.423Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.932Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10226,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:31.095Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:49.846Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:59.874Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.430Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.430Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:44.438Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.483Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.428Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.428Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.121Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:52.173Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.429Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.429Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.923Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.993Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.427Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.427Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"syscore\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:26.105Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:52.149Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:00.211Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.112,\\\"securityWeNeedToReduceAfterFullGrowth\\\":8.588000000000001,\\\"originalNumberOfThreadsForFullMoney\\\":56,\\\"successes\\\":8,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":8,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:25.684Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.792Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.558Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.558Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.800Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9844,\\\"executedAt\\\":\\\"2023-07-11T21:13:20.944Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:19.742Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:31.873Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:33.556Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:37.556Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:33.880Z\\\",\\\"machineRunningOn\\\":\\\"I.I.I.I\\\",\\\"pid\\\":9792,\\\"executedAt\\\":\\\"2023-07-11T21:13:18.925Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3757.25,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:16.672Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:36.884Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.557Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.557Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:38.847Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10009,\\\"executedAt\\\":\\\"2023-07-11T21:13:27.033Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":102,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:08.448Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:28.722Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:29.555Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:33.555Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:30.725Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10010,\\\"executedAt\\\":\\\"2023-07-11T21:13:27.033Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:18.925Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:41.800Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:55.778Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.562Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.562Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:57.772Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10279,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.890Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.923Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.560Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.560Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:49.924Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10227,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3757.25,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:32.839Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:52.930Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.561Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.561Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:54.941Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10443,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":102,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:24.661Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.845Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.559Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.559Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.858Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10444,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:35.117Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:57.772Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:03.798Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:13.566Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.566Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:51.923Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:57.957Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.564Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.564Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:48.902Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.941Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.565Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.565Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.808Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.858Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.563Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.563Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"microdyne\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:20.814Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:37.584Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:31.782Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.116,\\\"securityWeNeedToReduceAfterFullGrowth\\\":8.728,\\\"originalNumberOfThreadsForFullMoney\\\":58,\\\"successes\\\":7,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":7,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:34.890Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.951Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:46.906Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:50.906Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.953Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9742,\\\"executedAt\\\":\\\"2023-07-11T21:13:16.910Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.496Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:38.597Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:38.904Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:42.904Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:40.599Z\\\",\\\"machineRunningOn\\\":\\\"I.I.I.I\\\",\\\"pid\\\":9793,\\\"executedAt\\\":\\\"2023-07-11T21:13:18.925Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3818.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:22.048Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:42.218Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:42.905Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:46.905Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:44.156Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10011,\\\"executedAt\\\":\\\"2023-07-11T21:13:27.033Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":98.6,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:10.128Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:34.410Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:34.903Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:38.903Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:36.439Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10115,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:16.910Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":316.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:48.951Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.855Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:02.910Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:06.910Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:04.846Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10228,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.599Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.581Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:54.908Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:58.908Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:56.577Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10229,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3818.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:36.174Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:58.215Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:58.909Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:02.909Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:00.224Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10445,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:24.315Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.509Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:50.907Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:54.907Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:35.117Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:06.831Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:12.844Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:18.914Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:22.914Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:58.570Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:04.595Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:10.912Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:14.912Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:54.193Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:00.224Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:14.913Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:18.913Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.461Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.509Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:06.911Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:10.911Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"catalyst\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:16.447Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:45.231Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:01.305Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.11,\\\"securityWeNeedToReduceAfterFullGrowth\\\":16.512,\\\"originalNumberOfThreadsForFullMoney\\\":55,\\\"successes\\\":9,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":9,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":596.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:34.735Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.714Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:48.482Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:52.482Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:48.734Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10061,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.376Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:40.452Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:40.480Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:44.480Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:42.476Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":10116,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":7224,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:24.031Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.165Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:44.481Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:48.481Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.169Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10280,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":98.6,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:17.738Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.935Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:36.479Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:40.479Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.944Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10230,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:29.062Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:50.751Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:02.769Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:04.486Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:08.486Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.476Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.524Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:56.484Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:00.484Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.156Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:52.212Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:00.485Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:04.485Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:33.926Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.006Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:52.483Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:56.483Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"snap-fitness\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:41.085Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:12:04.911Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:10.562Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.11,\\\"securityWeNeedToReduceAfterFullGrowth\\\":10.996,\\\"originalNumberOfThreadsForFullMoney\\\":55,\\\"successes\\\":7,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":7,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":386.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.137Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:43.220Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.108Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.108Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:45.226Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9846,\\\"executedAt\\\":\\\"2023-07-11T21:13:20.944Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:22.650Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:36.778Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.106Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.106Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:38.785Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9903,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4810.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:19.399Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.547Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.107Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.107Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.570Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10062,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":105.39999999999999,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:10.697Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:32.970Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:33.105Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:37.105Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:35.000Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10117,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:20.944Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":386.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:47.221Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:59.172Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.112Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.112Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:14:01.163Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10281,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:38.785Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:52.801Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.110Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.110Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:54.812Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10339,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.555Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:55.637Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.111Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.111Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.906Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.076Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.109Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.109Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:37.129Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:14:03.170Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:07.184Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:17.116Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:21.116Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:54.812Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:58.834Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.114Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.114Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:51.611Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:55.637Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:13.115Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:17.115Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.042Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.076Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.113Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.113Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"aevum-police\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:10:04.397Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:09:33.915Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:47.773Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.112,\\\"securityWeNeedToReduceAfterFullGrowth\\\":14.68,\\\"originalNumberOfThreadsForFullMoney\\\":56,\\\"successes\\\":11,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":11,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":526.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.121Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.134Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:51.805Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:55.805Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:53.133Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10231,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:30.174Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:42.248Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:43.803Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:47.803Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:44.252Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10174,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":6422.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:27.882Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.989Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:47.804Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.804Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:48.003Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10340,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":110.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:21.724Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:37.888Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:39.802Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:43.802Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:39.897Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10282,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:33.106Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:53.133Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:14:01.159Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:07.809Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:11.809Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:46.255Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.297Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:59.807Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.807Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.985Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:52.032Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:03.808Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:07.808Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.888Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.949Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:55.806Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:59.806Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"netlink\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:10:03.058Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:09:33.804Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:47.740Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.112,\\\"securityWeNeedToReduceAfterFullGrowth\\\":12.328,\\\"originalNumberOfThreadsForFullMoney\\\":56,\\\"successes\\\":11,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":11,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":456.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.562Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.590Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:51.772Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:55.772Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:53.587Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10283,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:30.044Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:42.119Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:43.770Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:47.770Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:44.123Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10175,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":5393.5,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:27.780Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.889Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:47.771Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.771Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:47.903Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10341,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":108.8,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:21.692Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:37.857Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:39.769Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:43.769Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:39.866Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10284,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:33.106Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:51.590Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:59.619Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:07.776Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:11.776Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:46.127Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.169Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:59.774Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.774Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.885Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.932Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:03.775Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:07.775Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.857Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.918Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:55.773Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:59.773Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"millenium-fitness\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:11.818Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:45.473Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:04.778Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.10400000000000001,\\\"securityWeNeedToReduceAfterFullGrowth\\\":9.472,\\\"originalNumberOfThreadsForFullMoney\\\":52,\\\"successes\\\":10,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":10,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.592Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.618Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.118Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.118Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:53.629Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10342,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:32.300Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.369Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.116Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.116Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.372Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10285,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4144,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:30.388Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.510Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.117Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.117Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:50.522Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10446,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":95.2,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:25.291Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.425Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.115Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.115Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.442Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10343,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:37.129Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:53.629Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:57.653Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:09.122Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:13.122Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:48.386Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:52.415Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.120Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.120Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:46.492Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.522Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.121Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.121Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:41.442Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.478Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.119Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.119Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"rothman-uni\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:13.814Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:47.128Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:06.677Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.10400000000000001,\\\"securityWeNeedToReduceAfterFullGrowth\\\":12.304,\\\"originalNumberOfThreadsForFullMoney\\\":52,\\\"successes\\\":9,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":9,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":456.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:23.582Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:37.693Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:39.238Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:43.238Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:39.723Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9966,\\\"executedAt\\\":\\\"2023-07-11T21:13:25.012Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:17.717Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:29.841Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:31.236Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:35.236Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:31.859Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9910,\\\"executedAt\\\":\\\"2023-07-11T21:13:22.975Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":5383,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:15.890Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:34.063Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:35.237Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:39.237Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:36.089Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10063,\\\"executedAt\\\":\\\"2023-07-11T21:13:29.062Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":100.3,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:11.004Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:27.219Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:27.235Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:31.235Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:29.230Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10013,\\\"executedAt\\\":\\\"2023-07-11T21:13:27.033Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:22.975Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":456.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:39.723Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:53.730Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:55.242Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:59.242Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:55.743Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10400,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:33.892Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.936Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:47.240Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.240Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:47.950Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10344,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:32.076Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.181Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:51.241Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:55.241Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":100.3,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:27.219Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:41.335Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:43.239Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:47.239Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:43.357Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10401,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:39.147Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:55.743Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:57.753Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:11.246Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:15.246Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:49.967Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.979Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:03.244Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:07.244Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:48.168Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.181Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:07.245Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:11.245Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.357Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.371Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:59.243Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.243Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"summit-uni\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:20.976Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:52.091Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:09.010Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.106,\\\"securityWeNeedToReduceAfterFullGrowth\\\":11.236,\\\"originalNumberOfThreadsForFullMoney\\\":53,\\\"successes\\\":9,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":9,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":421.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:32.741Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.782Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:48.389Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:52.389Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:48.782Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10176,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.998Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.066Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:40.387Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:44.387Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.091Z\\\",\\\"machineRunningOn\\\":\\\"run4theh111z\\\",\\\"pid\\\":10118,\\\"executedAt\\\":\\\"2023-07-11T21:13:31.095Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4915.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:24.936Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:43.059Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:44.388Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:48.388Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:45.064Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10286,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":100.3,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:19.418Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.589Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:36.386Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:40.386Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.599Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10232,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:31.095Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:48.782Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:58.814Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:04.393Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:08.393Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.095Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:53.144Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:56.391Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:00.391Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:41.054Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.109Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:00.392Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:04.392Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:35.589Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.661Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:52.390Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:56.390Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"computek\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:10:02.347Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-07-11T21:09:37.501Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:45.017Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.108,\\\"securityWeNeedToReduceAfterFullGrowth\\\":9.308,\\\"originalNumberOfThreadsForFullMoney\\\":54,\\\"successes\\\":11,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":11,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":351.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:30.717Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.794Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.049Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.049Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:50.807Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10345,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:27.319Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.417Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.047Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.047Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.423Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10177,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":4072.25,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:25.608Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:43.740Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.048Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.048Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:45.755Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10346,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":91.8,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:21.013Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:35.175Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.046Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.046Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:37.185Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10233,\\\"executedAt\\\":\\\"2023-07-11T21:13:35.117Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:33.106Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:46.793Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:54.833Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:05.053Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:09.053Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:43.428Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.477Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.051Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.051Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:41.734Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:49.787Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.052Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.052Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:37.185Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.248Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.050Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.050Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"the-hub\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:11:56.981Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:37.852Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:03.611Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.1,\\\"securityWeNeedToReduceAfterFullGrowth\\\":7.62,\\\"originalNumberOfThreadsForFullMoney\\\":50,\\\"successes\\\":11,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":11,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":281.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.344Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.468Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.009Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.009Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:46.483Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10347,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:23.954Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:36.081Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:37.007Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:41.007Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:38.088Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10178,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":3333.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:22.922Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:39.075Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.008Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.008Z\\\",\\\"type\\\":\\\"grow\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:41.083Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10287,\\\"executedAt\\\":\\\"2023-07-11T21:13:37.129Z\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":83.3,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:20.174Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:32.333Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:33.006Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:37.006Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:34.343Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10179,\\\"executedAt\\\":\\\"2023-07-11T21:13:33.106Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:33.106Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.463Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.514Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:01.013Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:05.013Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:40.096Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.152Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.011Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.011Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:39.075Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.133Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:57.012Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:01.012Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:36.353Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.419Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.010Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.010Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"johnson-ortho\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:11:44.028Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:22.351Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:47.636Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.10200000000000001,\\\"securityWeNeedToReduceAfterFullGrowth\\\":9.276,\\\"originalNumberOfThreadsForFullMoney\\\":51,\\\"successes\\\":11,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":11,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:33.609Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.698Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:52.764Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:56.764Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:30.794Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:42.863Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:44.762Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:48.762Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:44.879Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10348,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.147Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.613Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.741Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:48.763Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:52.763Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":86.7,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.449Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:40.572Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:40.761Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:44.761Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:42.594Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10402,\\\"executedAt\\\":\\\"2023-07-11T21:13:41.170Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:39.147Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:49.686Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:51.698Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:08.768Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:12.768Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:46.898Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:48.911Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:00.766Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:04.766Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:45.727Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.741Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:04.767Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:08.767Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.594Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.608Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:56.765Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:00.765Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"omega-net\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:11:33.952Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:17.545Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:48.741Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.092,\\\"securityWeNeedToReduceAfterFullGrowth\\\":6.772,\\\"originalNumberOfThreadsForFullMoney\\\":46,\\\"successes\\\":12,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":12,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:33.154Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.259Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:53.988Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:57.988Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.517Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.629Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:45.986Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:49.986Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.008Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.122Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:49.987Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:53.987Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":78.2,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.670Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:41.775Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:41.985Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:45.985Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:43.790Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10447,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:43.185Z\\\",\\\"poisonedBatch\\\":false}]}],[\\\"crush-fitness\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:12:03.310Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:43.518Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:11:09.549Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.098,\\\"securityWeNeedToReduceAfterFullGrowth\\\":10.928,\\\"originalNumberOfThreadsForFullMoney\\\":49,\\\"successes\\\":11,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":11,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:32.860Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.957Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:51.338Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:55.338Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.549Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:41.629Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:43.336Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:47.336Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:43.646Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10349,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.148Z\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:28.618Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.756Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:47.337Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:51.337Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":83.3,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:26.138Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:38.246Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:39.335Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:43.335Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:40.265Z\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10350,\\\"executedAt\\\":\\\"2023-07-11T21:13:39.148Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:39.148Z\\\",\\\"poisonedBatch\\\":false},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:48.944Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:50.957Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:07.342Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:11.342Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:45.665Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:47.678Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:59.340Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:03.340Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:44.742Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.756Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:14:03.341Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:14:07.341Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:42.286Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.301Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:55.339Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:59.339Z\\\",\\\"type\\\":\\\"hack\\\"}],\\\"poisonedBatch\\\":false}]}],[\\\"silver-helix\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-07-11T21:11:34.764Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-07-11T21:11:19.147Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-07-11T21:10:52.652Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.092,\\\"securityWeNeedToReduceAfterFullGrowth\\\":7.652,\\\"originalNumberOfThreadsForFullMoney\\\":46,\\\"successes\\\":12,\\\"failures\\\":0,\\\"successesInTheLastHour\\\":12,\\\"failuresInTheLastHour\\\":0,\\\"lastResetHour\\\":16,\\\"executionWindowSizeInSeconds\\\":4,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:32.293Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:46.401Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:54.800Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:58.800Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:31.006Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:45.120Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:46.798Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:50.798Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:30.605Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:44.721Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:50.799Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:54.799Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":78.2,\\\"firstLookStartedNowEndAt\\\":\\\"2023-07-11T21:13:29.544Z\\\",\\\"lastMissForDoneBeforeWindow\\\":\\\"2023-07-11T21:13:41.650Z\\\",\\\"endAfter\\\":\\\"2023-07-11T21:13:42.797Z\\\",\\\"endBefore\\\":\\\"2023-07-11T21:13:46.797Z\\\",\\\"type\\\":\\\"hack\\\",\\\"expectedEndTime\\\":\\\"2023-07-11T21:13:43.665Z\\\",\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10448,\\\"executedAt\\\":\\\"2023-07-11T21:13:43.185Z\\\"}],\\\"startTime\\\":\\\"2023-07-11T21:13:43.185Z\\\",\\\"poisonedBatch\\\":false}]}]]\"}}],[\"data/recordOfWhoIsBeingHacked.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/recordOfWhoIsBeingHacked.txt\",\"text\":\"[[\\\"fulcrumassets\\\",{\\\"name\\\":\\\"fulcrumassets\\\",\\\"moneyThreshhold\\\":2109375,\\\"securityThreshholdTarget\\\":38,\\\"hackDifficulty\\\":100,\\\"moneyAvailable\\\":2812500,\\\"minDifficulty\\\":33,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10029}],[\\\"phantasy\\\",{\\\"name\\\":\\\"phantasy\\\",\\\"moneyThreshhold\\\":50625000,\\\"securityThreshholdTarget\\\":12,\\\"hackDifficulty\\\":7,\\\"moneyAvailable\\\":67500000,\\\"minDifficulty\\\":7,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10450}],[\\\"max-hardware\\\",{\\\"name\\\":\\\"max-hardware\\\",\\\"moneyThreshhold\\\":21093750,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":9.642,\\\"moneyAvailable\\\":28125000,\\\"minDifficulty\\\":5,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10451}],[\\\"zer0\\\",{\\\"name\\\":\\\"zer0\\\",\\\"moneyThreshhold\\\":15820312.5,\\\"securityThreshholdTarget\\\":13,\\\"hackDifficulty\\\":8,\\\"moneyAvailable\\\":21093750,\\\"minDifficulty\\\":8,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"CLOUD-000\\\",\\\"pid\\\":10452}],[\\\"neo-net\\\",{\\\"name\\\":\\\"neo-net\\\",\\\"moneyThreshhold\\\":10546875,\\\"securityThreshholdTarget\\\":13,\\\"hackDifficulty\\\":8,\\\"moneyAvailable\\\":14062500,\\\"minDifficulty\\\":8,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10453}],[\\\"hong-fang-tea\\\",{\\\"name\\\":\\\"hong-fang-tea\\\",\\\"moneyThreshhold\\\":6328125,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":5,\\\"moneyAvailable\\\":8437500,\\\"minDifficulty\\\":5,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10454}],[\\\"joesguns\\\",{\\\"name\\\":\\\"joesguns\\\",\\\"moneyThreshhold\\\":5273437.5,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":5,\\\"moneyAvailable\\\":7031250,\\\"minDifficulty\\\":5,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10455}],[\\\"sigma-cosmetics\\\",{\\\"name\\\":\\\"sigma-cosmetics\\\",\\\"moneyThreshhold\\\":4851562.5,\\\"securityThreshholdTarget\\\":8,\\\"hackDifficulty\\\":3,\\\"moneyAvailable\\\":6468750,\\\"minDifficulty\\\":3,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":10456}],[\\\"foodnstuff\\\",{\\\"name\\\":\\\"foodnstuff\\\",\\\"moneyThreshhold\\\":4218750,\\\"securityThreshholdTarget\\\":8,\\\"hackDifficulty\\\":3,\\\"moneyAvailable\\\":5625000,\\\"minDifficulty\\\":3,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10457}],[\\\"n00dles\\\",{\\\"name\\\":\\\"n00dles\\\",\\\"moneyThreshhold\\\":147656.25,\\\"securityThreshholdTarget\\\":6,\\\"hackDifficulty\\\":4.216000000000001,\\\"moneyAvailable\\\":196875,\\\"minDifficulty\\\":1,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10458}],[\\\"iron-gym\\\",{\\\"name\\\":\\\"iron-gym\\\",\\\"moneyThreshhold\\\":42187500,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":18.224,\\\"moneyAvailable\\\":56250000,\\\"minDifficulty\\\":10,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10459}],[\\\"harakiri-sushi\\\",{\\\"name\\\":\\\"harakiri-sushi\\\",\\\"moneyThreshhold\\\":8437500,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":5.086,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":5,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10460}],[\\\"nectar-net\\\",{\\\"name\\\":\\\"nectar-net\\\",\\\"moneyThreshhold\\\":5800781.25,\\\"securityThreshholdTarget\\\":12,\\\"hackDifficulty\\\":11.928,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":7,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10461}]]\"}}]]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":2,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"scripts/coordinator.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":2162910632.8972244,\"onlineRunningTime\":563.4099999999912,\"ramUsage\":2.75,\"server\":\"home\",\"scriptKey\":\"scripts/coordinator.js*[]\",\"title\":\"scripts/coordinator.js \",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":131.41000000000108,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"fulcrumassets\\\"]\",\"title\":\"scripts/hacking/weaken.js fulcrumassets\",\"threads\":1041,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"fulcrumassets\\\"]\",\"title\":\"scripts/hacking/weaken.js fulcrumassets\",\"threads\":1041,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"unitalife\\\"]\",\"title\":\"scripts/hacking/grow.js unitalife\",\"threads\":2091,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"scripts/hacking/grow.js powerhouse-fitness\",\"threads\":2140,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"taiyang-digital\\\"]\",\"title\":\"scripts/hacking/grow.js taiyang-digital\",\"threads\":1869,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.409999999999947,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"titan-labs\\\"]\",\"title\":\"scripts/hacking/grow.js titan-labs\",\"threads\":2315,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"titan-labs\\\"]\",\"title\":\"scripts/hacking/grow.js titan-labs\",\"threads\":2315,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.409999999999926,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"infocomm\\\"]\",\"title\":\"scripts/hacking/weaken.js infocomm\",\"threads\":310,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"infocomm\\\"]\",\"title\":\"scripts/hacking/weaken.js infocomm\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"infocomm\\\"]\",\"title\":\"scripts/hacking/weaken.js infocomm\",\"threads\":310,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"infocomm\\\"]\",\"title\":\"scripts/hacking/weaken.js infocomm\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"infocomm\\\"]\",\"title\":\"scripts/hacking/grow.js infocomm\",\"threads\":3866,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"infocomm\\\"]\",\"title\":\"scripts/hacking/grow.js infocomm\",\"threads\":3866,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"microdyne\\\"]\",\"title\":\"scripts/hacking/weaken.js microdyne\",\"threads\":142,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"microdyne\\\"]\",\"title\":\"scripts/hacking/weaken.js microdyne\",\"threads\":142,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"microdyne\\\"]\",\"title\":\"scripts/hacking/weaken.js microdyne\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"scripts/hacking/weaken.js titan-labs\",\"threads\":188,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"scripts/hacking/weaken.js titan-labs\",\"threads\":188,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"scripts/hacking/grow.js global-pharm\",\"threads\":1803,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"scripts/hacking/grow.js global-pharm\",\"threads\":1803,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"microdyne\\\"]\",\"title\":\"scripts/hacking/grow.js microdyne\",\"threads\":1694,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"microdyne\\\"]\",\"title\":\"scripts/hacking/grow.js microdyne\",\"threads\":1694,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"deltaone\\\"]\",\"title\":\"scripts/hacking/grow.js deltaone\",\"threads\":2418,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"scripts/hacking/grow.js univ-energy\",\"threads\":1758,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"scripts/hacking/grow.js univ-energy\",\"threads\":1758,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"scripts/hacking/weaken.js snap-fitness\",\"threads\":173,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"scripts/hacking/weaken.js snap-fitness\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"univ-energy\\\"]\",\"title\":\"scripts/hacking/weaken.js univ-energy\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"univ-energy\\\"]\",\"title\":\"scripts/hacking/weaken.js univ-energy\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"scripts/hacking/weaken.js applied-energetics\",\"threads\":142,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"scripts/hacking/weaken.js applied-energetics\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"solaris\\\"]\",\"title\":\"scripts/hacking/weaken.js solaris\",\"threads\":142,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"deltaone\\\"]\",\"title\":\"scripts/hacking/weaken.js deltaone\",\"threads\":203,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"deltaone\\\"]\",\"title\":\"scripts/hacking/weaken.js deltaone\",\"threads\":203,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"defcomm\\\"]\",\"title\":\"scripts/hacking/weaken.js defcomm\",\"threads\":219,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/hacking/grow.js clarkinc\",\"threads\":1741,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"scripts/hacking/weaken.js unitalife\",\"threads\":173,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"scripts/hacking/weaken.js unitalife\",\"threads\":173,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"solaris\\\"]\",\"title\":\"scripts/hacking/grow.js solaris\",\"threads\":1694,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"taiyang-digital\\\"]\",\"title\":\"scripts/hacking/weaken.js taiyang-digital\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"taiyang-digital\\\"]\",\"title\":\"scripts/hacking/weaken.js taiyang-digital\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"lexo-corp\\\"]\",\"title\":\"scripts/hacking/weaken.js lexo-corp\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"lexo-corp\\\"]\",\"title\":\"scripts/hacking/weaken.js lexo-corp\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"4sigma\\\"]\",\"title\":\"scripts/hacking/grow.js 4sigma\",\"threads\":1651,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"4sigma\\\"]\",\"title\":\"scripts/hacking/grow.js 4sigma\",\"threads\":1651,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"helios\\\"]\",\"title\":\"scripts/hacking/weaken.js helios\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"zeus-med\\\"]\",\"title\":\"scripts/hacking/weaken.js zeus-med\",\"threads\":188,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"zeus-med\\\"]\",\"title\":\"scripts/hacking/weaken.js zeus-med\",\"threads\":188,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"nova-med\\\"]\",\"title\":\"scripts/hacking/weaken.js nova-med\",\"threads\":127,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"scripts/hacking/weaken.js galactic-cyber\",\"threads\":127,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"scripts/hacking/weaken.js galactic-cyber\",\"threads\":127,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"zb-def\\\"]\",\"title\":\"scripts/hacking/grow.js zb-def\",\"threads\":1626,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"zb-def\\\"]\",\"title\":\"scripts/hacking/grow.js zb-def\",\"threads\":1626,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"scripts/hacking/weaken.js powerhouse-fitness\",\"threads\":188,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"scripts/hacking/weaken.js zb-institute\",\"threads\":127,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"scripts/hacking/grow.js lexo-corp\",\"threads\":1867,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"scripts/hacking/grow.js galactic-cyber\",\"threads\":1495,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"scripts/hacking/weaken.js global-pharm\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"zeus-med\\\"]\",\"title\":\"scripts/hacking/grow.js zeus-med\",\"threads\":2161,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"scripts/hacking/grow.js alpha-ent\",\"threads\":2087,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"scripts/hacking/weaken.js rho-construction\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"aevum-police\\\"]\",\"title\":\"scripts/hacking/weaken.js aevum-police\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"aevum-police\\\"]\",\"title\":\"scripts/hacking/weaken.js aevum-police\",\"threads\":234,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"netlink\\\"]\",\"title\":\"scripts/hacking/weaken.js netlink\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"netlink\\\"]\",\"title\":\"scripts/hacking/weaken.js netlink\",\"threads\":203,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"summit-uni\\\"]\",\"title\":\"scripts/hacking/weaken.js summit-uni\",\"threads\":188,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"computek\\\"]\",\"title\":\"scripts/hacking/weaken.js computek\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"icarus\\\"]\",\"title\":\"scripts/hacking/weaken.js icarus\",\"threads\":142,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"scripts/hacking/grow.js rho-construction\",\"threads\":1827,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"syscore\\\"]\",\"title\":\"scripts/hacking/weaken.js syscore\",\"threads\":142,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"catalyst\\\"]\",\"title\":\"scripts/hacking/grow.js catalyst\",\"threads\":3208,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"millenium-fitness\\\"]\",\"title\":\"scripts/hacking/weaken.js millenium-fitness\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"millenium-fitness\\\"]\",\"title\":\"scripts/hacking/weaken.js millenium-fitness\",\"threads\":158,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"scripts/hacking/grow.js summit-uni\",\"threads\":2184,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"unitalife\\\"]\",\"title\":\"scripts/hacking/hack.js unitalife\",\"threads\":62,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"zb-institute\\\"]\",\"title\":\"scripts/hacking/grow.js zb-institute\",\"threads\":1490,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"scripts/hacking/grow.js aevum-police\",\"threads\":2853,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"netlink\\\"]\",\"title\":\"scripts/hacking/grow.js netlink\",\"threads\":2396,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"rothman-uni\\\"]\",\"title\":\"scripts/hacking/weaken.js rothman-uni\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"computek\\\"]\",\"title\":\"scripts/hacking/grow.js computek\",\"threads\":1809,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"the-hub\\\"]\",\"title\":\"scripts/hacking/weaken.js the-hub\",\"threads\":127,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"johnson-ortho\\\"]\",\"title\":\"scripts/hacking/weaken.js johnson-ortho\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"crush-fitness\\\"]\",\"title\":\"scripts/hacking/weaken.js crush-fitness\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"scripts/hacking/grow.js applied-energetics\",\"threads\":1713,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"syscore\\\"]\",\"title\":\"scripts/hacking/grow.js syscore\",\"threads\":1667,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"scripts/hacking/grow.js millenium-fitness\",\"threads\":1840,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/hack-until-worked.js*[\\\"neo-net\\\"]\",\"title\":\"scripts/hacking/hack-until-worked.js neo-net\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/hack-until-worked.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"scripts/hacking/hack-until-worked.js hong-fang-tea\",\"threads\":43,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/hack-until-worked.js*[\\\"joesguns\\\"]\",\"title\":\"scripts/hacking/hack-until-worked.js joesguns\",\"threads\":43,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/hack-until-worked.js*[\\\"foodnstuff\\\"]\",\"title\":\"scripts/hacking/hack-until-worked.js foodnstuff\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/hack-until-worked.js*[\\\"n00dles\\\"]\",\"title\":\"scripts/hacking/hack-until-worked.js n00dles\",\"threads\":43,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"iron-gym\\\"]\",\"title\":\"scripts/hacking/weaken.js iron-gym\",\"threads\":142,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"scripts/hacking/grow.js harakiri-sushi\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"nectar-net\\\"]\",\"title\":\"scripts/hacking/grow.js nectar-net\",\"threads\":1595,\"temporary\":false}}]}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"46.2.9.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":33.142,\"minDifficulty\":33,\"moneyAvailable\":0,\"moneyMax\":106601258162.8125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1294,\"serverGrowth\":99,\"runningScripts\":[]}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"5.2.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":33.14,\"minDifficulty\":33,\"moneyAvailable\":0,\"moneyMax\":118059494999.0625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1202,\"serverGrowth\":99,\"runningScripts\":[]}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"43.8.4.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":85,\"hackDifficulty\":28,\"minDifficulty\":28,\"moneyAvailable\":0,\"moneyMax\":61280519793.75,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":967,\"serverGrowth\":60,\"runningScripts\":[]}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"69.6.2.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":93,\"hackDifficulty\":31.132,\"minDifficulty\":31,\"moneyAvailable\":0,\"moneyMax\":84701630095.3125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":952,\"serverGrowth\":79,\"runningScripts\":[]}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"77.3.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\".\",\"ecorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":33.142,\"minDifficulty\":33,\"moneyAvailable\":0,\"moneyMax\":79748911170,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1250,\"serverGrowth\":84,\"runningScripts\":[]}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"83.7.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\",\"megacorp\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":57,\"hackDifficulty\":25.964,\"minDifficulty\":19,\"moneyAvailable\":52549046192.8125,\"moneyMax\":52549046192.8125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1083,\"serverGrowth\":74,\"runningScripts\":[]}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"75.7.2.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"omnitek\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"omnitek\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"omnitek\"}}]]},\"serversOnNetwork\":[\"stormtech\",\"b-and-a\",\"blade\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":92,\"hackDifficulty\":31.132,\"minDifficulty\":31,\"moneyAvailable\":0,\"moneyMax\":51689152330.3125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":932,\"serverGrowth\":99,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"scripts/hacking/weaken.js powerhouse-fitness\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"scripts/hacking/weaken.js galactic-cyber\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"scripts/hacking/weaken.js zb-def\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/hacking/weaken.js kuai-gong\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"deltaone\\\"]\",\"title\":\"scripts/hacking/weaken.js deltaone\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"omnitek\",\"scriptKey\":\"scripts/hacking/hack-until-worked.js*[\\\"sigma-cosmetics\\\"]\",\"title\":\"scripts/hacking/hack-until-worked.js sigma-cosmetics\",\"threads\":42,\"temporary\":false}}]}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"46.3.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":59,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":0,\"moneyMax\":59644256557.5,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1097,\"serverGrowth\":83,\"runningScripts\":[]}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"74.0.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"stormtech\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":95,\"hackDifficulty\":32.136,\"minDifficulty\":32,\"moneyAvailable\":0,\"moneyMax\":84038932324.6875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":992,\"serverGrowth\":95,\"runningScripts\":[]}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"63.1.1.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"fulcrumtech\"}}],[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"fulcrumtech\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"fulcrumtech\"}}]]},\"serversOnNetwork\":[\"microdyne\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":85,\"hackDifficulty\":28.13,\"minDifficulty\":28,\"moneyAvailable\":0,\"moneyMax\":5033416381.875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1158,\"serverGrowth\":84,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"univ-energy\\\"]\",\"title\":\"scripts/hacking/weaken.js univ-energy\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"stormtech\\\"]\",\"title\":\"scripts/hacking/weaken.js stormtech\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"scripts/hacking/weaken.js global-pharm\",\"threads\":21,\"temporary\":false}}]}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"37.1.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":100,\"minDifficulty\":33,\"moneyAvailable\":2812500,\"moneyMax\":2812500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1228,\"serverGrowth\":1,\"runningScripts\":[]}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"14.5.2.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"run4theh111z\",\"omnitek\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":90,\"hackDifficulty\":30.13,\"minDifficulty\":30,\"moneyAvailable\":0,\"moneyMax\":2907166381.875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":945,\"serverGrowth\":74,\"runningScripts\":[]}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"3.4.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":91,\"hackDifficulty\":43.012,\"minDifficulty\":30,\"moneyAvailable\":2380803710.625,\"moneyMax\":2380803710.625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":918,\"serverGrowth\":49,\"runningScripts\":[]}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"79.1.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":82,\"hackDifficulty\":35.10600000000001,\"minDifficulty\":27,\"moneyAvailable\":26938547.524208978,\"moneyMax\":1891378591.875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":891,\"serverGrowth\":36,\"runningScripts\":[]}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"1.7.3.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\",\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":92,\"hackDifficulty\":40.403999999999996,\"minDifficulty\":31,\"moneyAvailable\":2058488229.375,\"moneyMax\":2058488229.375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":882,\"serverGrowth\":71,\"runningScripts\":[]}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"68.4.0.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"vitalife\"}}]]},\"serversOnNetwork\":[\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":90,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":2204390798.4375,\"moneyMax\":2204390798.4375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":868,\"serverGrowth\":63,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"vitalife\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"zeus-med\\\"]\",\"title\":\"scripts/hacking/weaken.js zeus-med\",\"threads\":21,\"temporary\":false}}]}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"51.9.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":87,\"hackDifficulty\":29,\"minDifficulty\":29,\"moneyAvailable\":2711972843.4375,\"moneyMax\":2711972843.4375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":858,\"serverGrowth\":95,\"runningScripts\":[]}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"28.1.3.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":80,\"hackDifficulty\":34.168,\"minDifficulty\":27,\"moneyAvailable\":0,\"moneyMax\":3131938122.1875,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":820,\"serverGrowth\":87,\"runningScripts\":[]}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"10.4.3.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":77,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":0,\"moneyMax\":2284614492.1875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":824,\"serverGrowth\":61,\"runningScripts\":[]}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"95.6.3.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"microdyne\"}}]]},\"serversOnNetwork\":[\"taiyang-digital\",\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":66,\"hackDifficulty\":25.425249999999995,\"minDifficulty\":22,\"moneyAvailable\":1550752.3621515334,\"moneyMax\":1496875187.8125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":848,\"serverGrowth\":70,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"microdyne\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/hacking/weaken.js clarkinc\",\"threads\":21,\"temporary\":false}}]}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"89.9.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zeus-med\",\"titan-labs\",\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":71,\"hackDifficulty\":30.546,\"minDifficulty\":24,\"moneyAvailable\":2211386853.8540354,\"moneyMax\":2353336993.125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":923,\"serverGrowth\":71,\"runningScripts\":[]}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"85.5.9.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"alpha-ent\",\"omnia\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":58,\"hackDifficulty\":20.311999999999998,\"minDifficulty\":19,\"moneyAvailable\":0,\"moneyMax\":2173841181.5625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":856,\"serverGrowth\":71,\"runningScripts\":[]}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"3.4.1.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"rho-construction\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":89,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":0,\"moneyMax\":3292617549.375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":890,\"serverGrowth\":59,\"runningScripts\":[]}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"80.7.8.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"omnia\"}}]]},\"serversOnNetwork\":[\"galactic-cyber\",\"defcomm\",\"solaris\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":94,\"hackDifficulty\":31.132,\"minDifficulty\":31,\"moneyAvailable\":0,\"moneyMax\":2531368392.1875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":921,\"serverGrowth\":67,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"omnia\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"scripts/hacking/weaken.js powerhouse-fitness\",\"threads\":21,\"temporary\":false}}]}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"92.7.2.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"solaris\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":64,\"hackDifficulty\":21,\"minDifficulty\":21,\"moneyAvailable\":0,\"moneyMax\":2814281147.8125,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":818,\"serverGrowth\":73,\"runningScripts\":[]}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"81.7.5.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nova-med\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":65,\"hackDifficulty\":28.852,\"minDifficulty\":22,\"moneyAvailable\":2151720582.1875,\"moneyMax\":2151720582.1875,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":825,\"serverGrowth\":71,\"runningScripts\":[]}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"25.2.4.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":71,\"hackDifficulty\":30.776,\"minDifficulty\":24,\"moneyAvailable\":2008082404.6875,\"moneyMax\":2008082404.6875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":760,\"serverGrowth\":78,\"runningScripts\":[]}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"54.2.1.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aerocorp\",\"icarus\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":75,\"hackDifficulty\":30.108125000000005,\"minDifficulty\":25,\"moneyAvailable\":67899724.25502881,\"moneyMax\":3754998722.8125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":814,\"serverGrowth\":58,\"runningScripts\":[]}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"47.5.8.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"global-pharm\"}}]]},\"serversOnNetwork\":[\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":77,\"hackDifficulty\":33.334,\"minDifficulty\":26,\"moneyAvailable\":394816381.4375,\"moneyMax\":4829170328.4375,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":820,\"serverGrowth\":84,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"global-pharm\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"4sigma\\\"]\",\"title\":\"scripts/hacking/weaken.js 4sigma\",\"threads\":21,\"temporary\":false}}]}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"65.4.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"defcomm\",\"applied-energetics\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":74,\"hackDifficulty\":32.932,\"minDifficulty\":25,\"moneyAvailable\":3259859369.0625,\"moneyMax\":3259859369.0625,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":780,\"serverGrowth\":71,\"runningScripts\":[]}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"50.3.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\",\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":88,\"hackDifficulty\":29,\"minDifficulty\":29,\"moneyAvailable\":3857195860.3125,\"moneyMax\":3857195860.3125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":837,\"serverGrowth\":76,\"runningScripts\":[]}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"44.6.9.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"unitalife\"}}]]},\"serversOnNetwork\":[\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":80,\"hackDifficulty\":34.43600000000001,\"minDifficulty\":27,\"moneyAvailable\":2807066982.662263,\"moneyMax\":2985983519.0625,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":798,\"serverGrowth\":72,\"runningScripts\":[]}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"81.6.5.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"lexo-corp\"}}]]},\"serversOnNetwork\":[\"rothman-uni\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":64,\"hackDifficulty\":21.112,\"minDifficulty\":21,\"moneyAvailable\":0,\"moneyMax\":2247900015.9375,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":737,\"serverGrowth\":62,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"univ-energy\\\"]\",\"title\":\"scripts/hacking/weaken.js univ-energy\",\"threads\":21,\"temporary\":false}}]}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"36.1.4.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"I.I.I.I\",\"aerocorp\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":56,\"hackDifficulty\":25.374,\"minDifficulty\":19,\"moneyAvailable\":0,\"moneyMax\":1593735660,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":513,\"serverGrowth\":56,\"runningScripts\":[]}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"41.2.5.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"alpha-ent\"}}]]},\"serversOnNetwork\":[\"catalyst\",\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":60,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":0,\"moneyMax\":2032385231.25,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":590,\"serverGrowth\":52,\"runningScripts\":[]}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"48.2.8.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"aevum-police\"}}]]},\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":70,\"hackDifficulty\":34.542,\"minDifficulty\":23,\"moneyAvailable\":0,\"moneyMax\":853116837.1875,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":417,\"serverGrowth\":40,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"aevum-police\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"scripts/hacking/weaken.js unitalife\",\"threads\":21,\"temporary\":false}}]}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"85.1.4.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"the-hub\",\"lexo-corp\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":54,\"hackDifficulty\":27.567999999999998,\"minDifficulty\":18,\"moneyAvailable\":635838584.0625,\"moneyMax\":635838584.0625,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":419,\"serverGrowth\":37,\"runningScripts\":[]}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"44.8.2.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":67,\"hackDifficulty\":22,\"minDifficulty\":22,\"moneyAvailable\":2218654412.1560054,\"moneyMax\":2387329391.25,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":735,\"serverGrowth\":83,\"runningScripts\":[]}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"19.4.2.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":56,\"hackDifficulty\":27.854,\"minDifficulty\":19,\"moneyAvailable\":0,\"moneyMax\":620028984.375,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":451,\"serverGrowth\":43,\"runningScripts\":[]}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"91.8.0.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"netlink\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":62,\"hackDifficulty\":27.668,\"minDifficulty\":21,\"moneyAvailable\":1504655265.9375,\"moneyMax\":1504655265.9375,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":610,\"serverGrowth\":68,\"runningScripts\":[]}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"54.7.2.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"catalyst\"}}],[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"catalyst\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"catalyst\"}}]]},\"serversOnNetwork\":[\"johnson-ortho\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":66,\"hackDifficulty\":22,\"minDifficulty\":22,\"moneyAvailable\":0,\"moneyMax\":1375348286.25,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":445,\"serverGrowth\":35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"scripts/hacking/weaken.js zb-institute\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"blade\\\"]\",\"title\":\"scripts/hacking/weaken.js blade\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"lexo-corp\\\"]\",\"title\":\"scripts/hacking/weaken.js lexo-corp\",\"threads\":21,\"temporary\":false}}]}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"23.3.5.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"neo-net\",\"rothman-uni\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":44,\"hackDifficulty\":20.92,\"minDifficulty\":15,\"moneyAvailable\":527869676.25,\"moneyMax\":527869676.25,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":278,\"serverGrowth\":51,\"runningScripts\":[]}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":false,\"ip\":\"46.0.5.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"phantasy\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":65,\"hackDifficulty\":22,\"minDifficulty\":22,\"moneyAvailable\":0,\"moneyMax\":619241312.8125,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":323,\"serverGrowth\":61,\"runningScripts\":[]}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"85.1.5.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"netlink\"}}],[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"netlink\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"netlink\"}}]]},\"serversOnNetwork\":[\"silver-helix\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":72,\"hackDifficulty\":33.712,\"minDifficulty\":24,\"moneyAvailable\":0,\"moneyMax\":773437500,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":395,\"serverGrowth\":50,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.409999999999947,\"ramUsage\":1.75,\"server\":\"netlink\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"omnitek\\\"]\",\"title\":\"scripts/hacking/weaken.js omnitek\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"netlink\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"lexo-corp\\\"]\",\"title\":\"scripts/hacking/weaken.js lexo-corp\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"netlink\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/hacking/weaken.js clarkinc\",\"threads\":21,\"temporary\":false}}]}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"10.2.9.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omega-net\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":53,\"hackDifficulty\":18.102,\"minDifficulty\":18,\"moneyAvailable\":0,\"moneyMax\":222357476.25,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":269,\"serverGrowth\":46,\"runningScripts\":[]}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"85.7.6.9\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":4.216000000000001,\"minDifficulty\":1,\"moneyAvailable\":196875,\"moneyMax\":196875,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":1,\"serverGrowth\":3000,\"runningScripts\":[]}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"25.2.0.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":5625000,\"moneyMax\":5625000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":1,\"serverGrowth\":5,\"runningScripts\":[]}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"69.2.3.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":6468750,\"moneyMax\":6468750,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":5,\"serverGrowth\":10,\"runningScripts\":[]}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"77.9.5.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":7031250,\"moneyMax\":7031250,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":10,\"serverGrowth\":20,\"runningScripts\":[]}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"5.3.9.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"joesguns\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":8,\"minDifficulty\":8,\"moneyAvailable\":21093750,\"moneyMax\":21093750,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":75,\"serverGrowth\":40,\"runningScripts\":[]}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"82.5.5.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"iron-gym\",\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":20,\"hackDifficulty\":11.928,\"minDifficulty\":7,\"moneyAvailable\":0,\"moneyMax\":7734375,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":20,\"serverGrowth\":25,\"runningScripts\":[]}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"43.6.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"max-hardware\",\"the-hub\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":8,\"minDifficulty\":8,\"moneyAvailable\":14062500,\"moneyMax\":14062500,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":50,\"serverGrowth\":25,\"runningScripts\":[]}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"70.1.9.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"silver-helix\"}}]]},\"serversOnNetwork\":[\"CSEC\",\"netlink\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":10,\"minDifficulty\":10,\"moneyAvailable\":126562500,\"moneyMax\":126562500,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":150,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"scripts/hacking/weaken.js alpha-ent\",\"threads\":21,\"temporary\":false}}]}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"67.8.9.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":8437500,\"moneyMax\":8437500,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":30,\"serverGrowth\":20,\"runningScripts\":[]}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"37.6.4.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":5.086,\"minDifficulty\":5,\"moneyAvailable\":0,\"moneyMax\":11250000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":40,\"serverGrowth\":40,\"runningScripts\":[]}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"73.3.0.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nectar-net\",\"computek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":20,\"hackDifficulty\":7,\"minDifficulty\":7,\"moneyAvailable\":67500000,\"moneyMax\":67500000,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":100,\"serverGrowth\":35,\"runningScripts\":[]}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"85.4.3.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"harakiri-sushi\",\"neo-net\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":9.642,\"minDifficulty\":5,\"moneyAvailable\":28125000,\"moneyMax\":28125000,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":80,\"serverGrowth\":30,\"runningScripts\":[]}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"50.4.3.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"max-hardware\",\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":27,\"hackDifficulty\":9,\"minDifficulty\":9,\"moneyAvailable\":193215175.3125,\"moneyMax\":193215175.3125,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":216,\"serverGrowth\":32,\"runningScripts\":[]}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"5.6.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":41,\"hackDifficulty\":14.098,\"minDifficulty\":14,\"moneyAvailable\":0,\"moneyMax\":156254622.1875,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":268,\"serverGrowth\":29,\"runningScripts\":[]}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"59.5.2.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"iron-gym\"}}]]},\"serversOnNetwork\":[\"home\",\"nectar-net\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":18.224,\"minDifficulty\":10,\"moneyAvailable\":56250000,\"moneyMax\":56250000,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":100,\"serverGrowth\":20,\"runningScripts\":[]}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"83.4.1.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"millenium-fitness\"}}],[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"millenium-fitness\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"millenium-fitness\"}}]]},\"serversOnNetwork\":[\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":49,\"hackDifficulty\":23.471999999999998,\"minDifficulty\":16,\"moneyAvailable\":0,\"moneyMax\":703125000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":495,\"serverGrowth\":44,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"taiyang-digital\\\"]\",\"title\":\"scripts/hacking/weaken.js taiyang-digital\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"zeus-med\\\"]\",\"title\":\"scripts/hacking/weaken.js zeus-med\",\"threads\":21,\"temporary\":false}}]}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"19.2.6.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":62,\"hackDifficulty\":21,\"minDifficulty\":21,\"moneyAvailable\":2349279896.597433,\"moneyMax\":2531250000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":995,\"serverGrowth\":54,\"runningScripts\":[]}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"16.5.6.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":60,\"hackDifficulty\":28.54,\"minDifficulty\":20,\"moneyAvailable\":1265625000,\"moneyMax\":1265625000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":679,\"serverGrowth\":49,\"runningScripts\":[]}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"54.0.4.7\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"run4theh111z\"}}],[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"run4theh111z\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"run4theh111z\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"run4theh111z\"}}]]},\"serversOnNetwork\":[\"zb-def\",\"stormtech\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":510,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"scripts/hacking/weaken.js global-pharm\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"catalyst\\\"]\",\"title\":\"scripts/hacking/weaken.js catalyst\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"summit-uni\\\"]\",\"title\":\"scripts/hacking/weaken.js summit-uni\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"deltaone\\\"]\",\"title\":\"scripts/hacking/hack.js deltaone\",\"threads\":60,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"icarus\\\"]\",\"title\":\"scripts/hacking/weaken.js icarus\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"omnia\\\"]\",\"title\":\"scripts/hacking/weaken.js omnia\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"scripts/hacking/hack.js powerhouse-fitness\",\"threads\":58,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"zb-institute\\\"]\",\"title\":\"scripts/hacking/hack.js zb-institute\",\"threads\":57,\"temporary\":false}}]}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"71.9.1.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"I.I.I.I\"}}],[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"I.I.I.I\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"I.I.I.I\"}}]]},\"serversOnNetwork\":[\"computek\",\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":345,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.409999999999947,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"deltaone\\\"]\",\"title\":\"scripts/hacking/weaken.js deltaone\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.409999999999947,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"microdyne\\\"]\",\"title\":\"scripts/hacking/weaken.js microdyne\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"scripts/hacking/weaken.js unitalife\",\"threads\":21,\"temporary\":false}}]}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"72.7.7.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"avmnite-02h\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"avmnite-02h\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"avmnite-02h\"}}]]},\"serversOnNetwork\":[\"neo-net\",\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":205,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"solaris\\\"]\",\"title\":\"scripts/hacking/weaken.js solaris\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"scripts/hacking/weaken.js galactic-cyber\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"taiyang-digital\\\"]\",\"title\":\"scripts/hacking/weaken.js taiyang-digital\",\"threads\":21,\"temporary\":false}}]}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"2.6.2.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"fulcrumtech\",\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":509,\"serverGrowth\":1,\"runningScripts\":[]}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"45.7.9.7\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"iron-gym\",\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":57,\"serverGrowth\":1,\"runningScripts\":[]}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"80.9.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"powerhouse-fitness\",\"w0r1d_d43m0n\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":1,\"runningScripts\":[]}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"4.5.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":9000,\"serverGrowth\":1,\"runningScripts\":[]}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"29.5.5.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-000\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-000\",\"httpPortOpen\":false,\"ip\":\"7.3.8.8\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"CLOUD-000\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"CLOUD-000\"}}],[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"CLOUD-000\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"CLOUD-000\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/hacking/weaken.js clarkinc\",\"threads\":201,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/hacking/weaken.js clarkinc\",\"threads\":201,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"4sigma\\\"]\",\"title\":\"scripts/hacking/weaken.js 4sigma\",\"threads\":181,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"scripts/hacking/weaken.js global-pharm\",\"threads\":201,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"scripts/hacking/weaken.js zb-def\",\"threads\":181,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"scripts/hacking/weaken.js titan-labs\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"scripts/hacking/weaken.js titan-labs\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"syscore\\\"]\",\"title\":\"scripts/hacking/weaken.js syscore\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/hacking/hack.js clarkinc\",\"threads\":62,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"zeus-med\\\"]\",\"title\":\"scripts/hacking/hack.js zeus-med\",\"threads\":63,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"taiyang-digital\\\"]\",\"title\":\"scripts/hacking/hack.js taiyang-digital\",\"threads\":60,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"titan-labs\\\"]\",\"title\":\"scripts/hacking/hack.js titan-labs\",\"threads\":61,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"solaris\\\"]\",\"title\":\"scripts/hacking/hack.js solaris\",\"threads\":64,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"infocomm\\\"]\",\"title\":\"scripts/hacking/hack.js infocomm\",\"threads\":62,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"rothman-uni\\\"]\",\"title\":\"scripts/hacking/weaken.js rothman-uni\",\"threads\":261,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"rothman-uni\\\"]\",\"title\":\"scripts/hacking/hack.js rothman-uni\",\"threads\":59,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"univ-energy\\\"]\",\"title\":\"scripts/hacking/hack.js univ-energy\",\"threads\":62,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"applied-energetics\\\"]\",\"title\":\"scripts/hacking/hack.js applied-energetics\",\"threads\":63,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"scripts/hacking/weaken.js alpha-ent\",\"threads\":221,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"syscore\\\"]\",\"title\":\"scripts/hacking/hack.js syscore\",\"threads\":60,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"omega-net\\\"]\",\"title\":\"scripts/hacking/hack.js omega-net\",\"threads\":46,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack.js*[\\\"silver-helix\\\"]\",\"title\":\"scripts/hacking/hack.js silver-helix\",\"threads\":46,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack-until-worked.js*[\\\"phantasy\\\"]\",\"title\":\"scripts/hacking/hack-until-worked.js phantasy\",\"threads\":44,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack-until-worked.js*[\\\"max-hardware\\\"]\",\"title\":\"scripts/hacking/hack-until-worked.js max-hardware\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"scripts/hacking/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"CLOUD-000\",\"scriptKey\":\"scripts/hacking/hack-until-worked.js*[\\\"zer0\\\"]\",\"title\":\"scripts/hacking/hack-until-worked.js zer0\",\"threads\":45,\"temporary\":false}}]}}}","CompaniesSave":"{\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":153.7517,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":132.0972,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":240378.34302497745,\"favor\":0.02,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":143.0841,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":139.6654,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.02,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":276.2369,\"isBanned\":false,\"isMember\":true,\"name\":\"Daedalus\",\"playerReputation\":121305.09887274756}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":254.1025,\"isBanned\":false,\"isMember\":true,\"name\":\"Bachman & Associates\",\"playerReputation\":194905.59372499157}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":151.0796,\"isBanned\":false,\"isMember\":true,\"name\":\"Blade Industries\",\"playerReputation\":138038.99127451226}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":300.7643,\"isBanned\":false,\"isMember\":true,\"name\":\"NWO\",\"playerReputation\":220661.9841025077}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":355.1072,\"isBanned\":false,\"isMember\":true,\"name\":\"OmniTek Incorporated\",\"playerReputation\":250658.18970636983}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":267.3374,\"isBanned\":false,\"isMember\":true,\"name\":\"BitRunners\",\"playerReputation\":198250.15780756544}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":250.2758,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":176991.49139225733}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":245.5315,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":189046.53008546357}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":121.2427,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":50.7717,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":37.9561,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":21.363,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":178.3371,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":148774.77582956728}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":33.3771,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":247.8708,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":174745.53965756}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":252.6912,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":193335.17990600667}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":23110.504551547674,\"lastPrice\":23189.333525943264,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.47,\"b\":false,\"otlkMag\":18.791219534545917,\"otlkMagForecast\":31.08307427070475,\"cap\":437055880,\"spreadPerc\":0.3,\"shareTxForMovement\":37312,\"shareTxUntilMovement\":37312,\"totalShares\":105300000,\"maxShares\":21100000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":26332.95749498274,\"lastPrice\":26251.036822666043,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.43,\"b\":true,\"otlkMag\":18.50544908981422,\"otlkMagForecast\":69.17121749634025,\"cap\":125990171,\"spreadPerc\":0.3,\"shareTxForMovement\":79009,\"shareTxUntilMovement\":79009,\"totalShares\":99400000,\"maxShares\":19900000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":25704.92334773674,\"lastPrice\":25848.566732264186,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":false,\"otlkMag\":13.569716339338067,\"otlkMagForecast\":37.10880717387775,\"cap\":506845354,\"spreadPerc\":0.4,\"shareTxForMovement\":63110,\"shareTxUntilMovement\":63110,\"totalShares\":64400000,\"maxShares\":12900000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":22845.662224668133,\"lastPrice\":22953.431682791364,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":false,\"otlkMag\":12.301053221859235,\"otlkMagForecast\":37.785601053109,\"cap\":438741581,\"spreadPerc\":0.4,\"shareTxForMovement\":64055,\"shareTxUntilMovement\":64055,\"totalShares\":65400000,\"maxShares\":13100000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":36301.02183871336,\"lastPrice\":36485.436515309695,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":11.826752504975362,\"otlkMagForecast\":38.485547302440146,\"cap\":75026272,\"spreadPerc\":0.3,\"shareTxForMovement\":65908,\"shareTxUntilMovement\":65908,\"totalShares\":48900000,\"maxShares\":9800000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":87485.37786588115,\"lastPrice\":86817.50811678327,\"playerShares\":5300000,\"playerAvgPx\":85425.46683656149,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.06,\"b\":true,\"otlkMag\":17.6254918983667,\"otlkMagForecast\":66.69731149983654,\"cap\":1288028572,\"spreadPerc\":0.8,\"shareTxForMovement\":74458,\"shareTxUntilMovement\":61136,\"totalShares\":26300000,\"maxShares\":5300000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":17480.840161215165,\"lastPrice\":17381.18836104131,\"playerShares\":10223561,\"playerAvgPx\":17639.450402520295,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":8.891685905445053,\"otlkMagForecast\":60.1018638456765,\"cap\":387299060,\"spreadPerc\":0.4,\"shareTxForMovement\":47248,\"shareTxUntilMovement\":29285,\"totalShares\":112700000,\"maxShares\":22500000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":40652.203422942126,\"lastPrice\":40301.22686983066,\"playerShares\":13100000,\"playerAvgPx\":37810.049570648145,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.2,\"b\":true,\"otlkMag\":13.779478960814009,\"otlkMagForecast\":65.447766922391,\"cap\":618355499,\"spreadPerc\":1,\"shareTxForMovement\":36630,\"shareTxUntilMovement\":14030,\"totalShares\":65500000,\"maxShares\":13100000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":26778.60672887575,\"lastPrice\":26612.50931566491,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.86,\"b\":true,\"otlkMag\":6.570356669768605,\"otlkMagForecast\":57.1483483388961,\"cap\":492638837,\"spreadPerc\":0.7,\"shareTxForMovement\":77111,\"shareTxUntilMovement\":77111,\"totalShares\":52600000,\"maxShares\":10500000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":6620.70823682775,\"lastPrice\":6590.099140142389,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":true,\"otlkMag\":9.650389196496077,\"otlkMagForecast\":60.200711583552604,\"cap\":143418071,\"spreadPerc\":0.4,\"shareTxForMovement\":73605,\"shareTxUntilMovement\":73605,\"totalShares\":145900000,\"maxShares\":29200000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":15697.489196707533,\"lastPrice\":15761.285690513074,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":false,\"otlkMag\":9.613568256031954,\"otlkMagForecast\":40.98129785008641,\"cap\":42978302,\"spreadPerc\":0.2,\"shareTxForMovement\":44926,\"shareTxUntilMovement\":44926,\"totalShares\":53600000,\"maxShares\":10700000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":9182.332715143008,\"lastPrice\":9231.64593223308,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":true,\"otlkMag\":6.844167558313036,\"otlkMagForecast\":57.0559346790043,\"cap\":204459515,\"spreadPerc\":0.5,\"shareTxForMovement\":39208,\"shareTxUntilMovement\":39208,\"totalShares\":120600000,\"maxShares\":24100000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":20039.06238942005,\"lastPrice\":19939.21522333436,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":7.5375343898868845,\"otlkMagForecast\":57.40253377906362,\"cap\":66665971,\"spreadPerc\":1,\"shareTxForMovement\":36609,\"shareTxUntilMovement\":36609,\"totalShares\":46200000,\"maxShares\":9200000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":27823.334164127427,\"lastPrice\":27712.717541105845,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":false,\"otlkMag\":10.046151091100365,\"otlkMagForecast\":40.04328911826707,\"cap\":55677690,\"spreadPerc\":0.7,\"shareTxForMovement\":54045,\"shareTxUntilMovement\":54045,\"totalShares\":34000000,\"maxShares\":6800000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":14204.813275081387,\"lastPrice\":14271.821401803329,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":false,\"otlkMag\":5.875536299557738,\"otlkMagForecast\":44.05870067958008,\"cap\":152475609,\"spreadPerc\":0.8,\"shareTxForMovement\":67589,\"shareTxUntilMovement\":67589,\"totalShares\":45900000,\"maxShares\":9200000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":12604.61932035994,\"lastPrice\":12541.815208357604,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":false,\"otlkMag\":5.155310968375157,\"otlkMagForecast\":45.516408285676164,\"cap\":171588887,\"spreadPerc\":0.8,\"shareTxForMovement\":86386,\"shareTxUntilMovement\":86386,\"totalShares\":53100000,\"maxShares\":10600000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":19994.61159329687,\"lastPrice\":19893.549356338295,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":8.076116044909686,\"otlkMagForecast\":41.39893875667035,\"cap\":354254181,\"spreadPerc\":0.8,\"shareTxForMovement\":75100,\"shareTxUntilMovement\":75100,\"totalShares\":38600000,\"maxShares\":7700000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":24057.023303139733,\"lastPrice\":23952.723200148153,\"playerShares\":3703759,\"playerAvgPx\":24048.534092948747,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":10.145976040181553,\"otlkMagForecast\":60.615888505986746,\"cap\":33251762,\"spreadPerc\":0.4,\"shareTxForMovement\":96128,\"shareTxUntilMovement\":45243,\"totalShares\":31600000,\"maxShares\":6300000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":18108.844649360206,\"lastPrice\":18005.61282802125,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":5.348629032178992,\"otlkMagForecast\":54.92933390000903,\"cap\":111833684,\"spreadPerc\":1,\"shareTxForMovement\":69821,\"shareTxUntilMovement\":69821,\"totalShares\":35400000,\"maxShares\":7100000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":7109.832669530013,\"lastPrice\":7241.925101507407,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.56,\"b\":false,\"otlkMag\":0.9605764774326966,\"otlkMagForecast\":48.83333581799648,\"cap\":48342602,\"spreadPerc\":1.1,\"shareTxForMovement\":31160,\"shareTxUntilMovement\":31160,\"totalShares\":67000000,\"maxShares\":13400000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":6407.3368070555625,\"lastPrice\":6353.389479875226,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.17,\"b\":false,\"otlkMag\":5.5962034708576995,\"otlkMagForecast\":43.86535181296397,\"cap\":40984846,\"spreadPerc\":0.9,\"shareTxForMovement\":45975,\"shareTxUntilMovement\":45975,\"totalShares\":50500000,\"maxShares\":10100000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":6946.941613841561,\"lastPrice\":6920.323281468709,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.53,\"b\":true,\"otlkMag\":1.0387523495504216,\"otlkMagForecast\":50.81035678049648,\"cap\":165807848,\"spreadPerc\":0.9,\"shareTxForMovement\":90821,\"shareTxUntilMovement\":90821,\"totalShares\":26800000,\"maxShares\":5400000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":5501.298351057589,\"lastPrice\":5426.4728172286905,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.9,\"b\":false,\"otlkMag\":8.380143733009474,\"otlkMagForecast\":39.937252483501105,\"cap\":112361718,\"spreadPerc\":0.7,\"shareTxForMovement\":83050,\"shareTxUntilMovement\":12480,\"totalShares\":52600000,\"maxShares\":10500000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":5388.8439068620055,\"lastPrice\":5447.898154708903,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.51,\"b\":false,\"otlkMag\":1.779622826806289,\"otlkMagForecast\":49.35768590432998,\"cap\":108939834,\"spreadPerc\":0.8,\"shareTxForMovement\":87607,\"shareTxUntilMovement\":87607,\"totalShares\":36500000,\"maxShares\":7300000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":2306.3145935534694,\"lastPrice\":2291.6788423413377,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.88,\"b\":true,\"otlkMag\":5.248448272404674,\"otlkMagForecast\":53.705507791453655,\"cap\":34767235,\"spreadPerc\":0.8,\"shareTxForMovement\":121930,\"shareTxUntilMovement\":121930,\"totalShares\":81700000,\"maxShares\":16300000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":3508.961990771162,\"lastPrice\":3444.713225343633,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.57,\"b\":false,\"otlkMag\":5.711098671706781,\"otlkMagForecast\":49.19435354255425,\"cap\":20270103,\"spreadPerc\":0.9,\"shareTxForMovement\":53873,\"shareTxUntilMovement\":53873,\"totalShares\":12800000,\"maxShares\":2600000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":5680.943982059593,\"lastPrice\":5636.357457895336,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.09,\"b\":true,\"otlkMag\":1.424280212212036,\"otlkMagForecast\":48.980903540594795,\"cap\":94929177,\"spreadPerc\":0.5,\"shareTxForMovement\":36933,\"shareTxUntilMovement\":36933,\"totalShares\":10000000,\"maxShares\":2000000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":2656.7606065201057,\"lastPrice\":2671.41421576752,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":true,\"otlkMag\":1.5270582753802093,\"otlkMagForecast\":52.609649306762186,\"cap\":49634532,\"spreadPerc\":0.7,\"shareTxForMovement\":169755,\"shareTxUntilMovement\":169755,\"totalShares\":15200000,\"maxShares\":3000000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":1517.61574457794,\"lastPrice\":1499.0128697864473,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.71,\"b\":false,\"otlkMag\":1.648665984955639,\"otlkMagForecast\":49.60182839600244,\"cap\":36667178,\"spreadPerc\":0.9,\"shareTxForMovement\":48242,\"shareTxUntilMovement\":48242,\"totalShares\":18600000,\"maxShares\":3700000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":531.7559313721922,\"lastPrice\":522.9882947934607,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.31,\"b\":true,\"otlkMag\":2.4895502462126062,\"otlkMagForecast\":52.22637807338805,\"cap\":8238143,\"spreadPerc\":0.9,\"shareTxForMovement\":46420,\"shareTxUntilMovement\":46420,\"totalShares\":71300000,\"maxShares\":14300000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":1546.2046356941296,\"lastPrice\":1530.5427814758616,\"playerShares\":15000000,\"playerAvgPx\":1419.0304027265272,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.41,\"b\":true,\"otlkMag\":9.277368060730394,\"otlkMagForecast\":63.13576441770245,\"cap\":27166570,\"spreadPerc\":1.4,\"shareTxForMovement\":27959,\"shareTxUntilMovement\":14503,\"totalShares\":74800000,\"maxShares\":15000000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":26943.16286998593,\"lastPrice\":26793.43669195037,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":false,\"otlkMag\":7.77544467287537,\"otlkMagForecast\":42.283920652914176,\"cap\":124393730,\"spreadPerc\":0.3,\"shareTxForMovement\":196703,\"shareTxUntilMovement\":196703,\"totalShares\":13500000,\"maxShares\":2700000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":21740.859089775004,\"lastPrice\":21832.372193697807,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":false,\"otlkMag\":11.273265635402579,\"otlkMagForecast\":39.14683540436706,\"cap\":451560653,\"spreadPerc\":0.5,\"shareTxForMovement\":207533,\"shareTxUntilMovement\":207533,\"totalShares\":21300000,\"maxShares\":4300000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":4,\"lastUpdate\":1689110022336,\"ticksUntilCycle\":56}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":10,\"AutoexecScript\":\"\",\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":true,\"SuppressMessages\":true,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":true,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-5,\"y\":3,\"opened\":true},\"EditorTheme\":{\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}},\"base\":\"vs-dark\",\"inherit\":true},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoTabSize\":2,\"MonacoDetectIndentation\":false,\"MonacoFontFamily\":\"Lucida Console\",\"MonacoFontSize\":20,\"MonacoFontLigatures\":false,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"32","AllGangsSave":"","LastExportBonus":"1689110023191","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"isBonusCharging\":false,\"storedCycles\":0}}"}}