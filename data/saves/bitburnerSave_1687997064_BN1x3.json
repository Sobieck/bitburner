{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":2159,\"strength\":1,\"defense\":1,\"dexterity\":2,\"agility\":1,\"charisma\":1,\"intelligence\":0},\"exp\":{\"hacking\":2073637023.6520698,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1.816258286834988,\"hacking_speed\":1.8614029762714894,\"hacking_money\":5.235192674406972,\"hacking_grow\":3.1806593795706526,\"hacking\":4.439762759330329,\"strength\":1.6721180738314285,\"defense\":1.4540157163751555,\"dexterity\":2.3175556503303603,\"agility\":1.526716502193913,\"charisma\":1.7448188596501866,\"hacking_exp\":4.20871099609375,\"strength_exp\":1.8393298812145702,\"defense_exp\":1.8393298812145702,\"dexterity_exp\":1.8393298812145702,\"agility_exp\":1.8393298812145702,\"charisma_exp\":1.8393298812145702,\"company_rep\":1.4540157163751555,\"faction_rep\":1.4540157163751555,\"crime_money\":1.4540157163751555,\"crime_success\":1.4540157163751555,\"hacknet_node_money\":2.023262869336029,\"hacknet_node_purchase_cost\":0.5261291135883569,\"hacknet_node_ram_cost\":0.6877504752788978,\"hacknet_node_core_cost\":0.6877504752788978,\"hacknet_node_level_cost\":0.5845879039870632,\"work_money\":1.4540157163751555,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":16,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Augmented Targeting II\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":17,\"name\":\"NeuroFlux Governor\"},{\"level\":18,\"name\":\"NeuroFlux Governor\"},{\"level\":19,\"name\":\"NeuroFlux Governor\"},{\"level\":20,\"name\":\"NeuroFlux Governor\"},{\"level\":21,\"name\":\"NeuroFlux Governor\"},{\"level\":22,\"name\":\"NeuroFlux Governor\"},{\"level\":23,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":24,\"name\":\"NeuroFlux Governor\"},{\"level\":25,\"name\":\"NeuroFlux Governor\"},{\"level\":26,\"name\":\"NeuroFlux Governor\"},{\"level\":27,\"name\":\"NeuroFlux Governor\"},{\"level\":28,\"name\":\"NeuroFlux Governor\"},{\"level\":29,\"name\":\"NeuroFlux Governor\"},{\"level\":30,\"name\":\"NeuroFlux Governor\"},{\"level\":31,\"name\":\"NeuroFlux Governor\"},{\"level\":32,\"name\":\"NeuroFlux Governor\"},{\"level\":33,\"name\":\"NeuroFlux Governor\"},{\"level\":34,\"name\":\"NeuroFlux Governor\"},{\"level\":35,\"name\":\"NeuroFlux Governor\"}],\"city\":\"Sector-12\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"BitRunners\",\"NiteSec\",\"Sector-12\",\"Netburners\",\"Tian Di Hui\",\"CyberSec\"],\"factionInvitations\":[],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":18555.969393200434,\"onlineTimeSeconds\":21572.2000000125,\"ram\":64,\"totalMoneyGenerated\":400293082.9442537,\"name\":\"hacknet-node-23\"}}],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0,\"Company Favor\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{},\"karma\":0,\"numPeopleKilled\":0,\"location\":\"Travel Agency\",\"money\":120305324338040.28,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":375000000,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":425880196065590.94,\"hacknet\":9607033990.475725,\"hacknet_expenses\":-8273768567.3801365,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":5017695122655.342,\"total\":120305323338040.28,\"work\":0,\"servers\":-1441792000000,\"other\":-5287100000,\"augmentations\":-309147197012302.9}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":3825000000,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":711272524242034.8,\"hacknet\":20310468404.039597,\"hacknet_expenses\":-16588198425.09832,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":37925444140060.01,\"total\":170512952311220.28,\"work\":0,\"servers\":-176305120166187.6,\"other\":-15859500000,\"augmentations\":-402371583656634}},\"playtimeSinceLastAug\":45425200,\"playtimeSinceLastBitnode\":272661000,\"lastAugReset\":1687951638346,\"lastNodeReset\":1687724402367,\"purchasedServers\":[\"CLOUD-000\",\"CLOUD-001\",\"CLOUD-002\",\"CLOUD-003\",\"CLOUD-004\",\"CLOUD-005\",\"CLOUD-006\",\"CLOUD-007\",\"CLOUD-008\",\"CLOUD-009\",\"CLOUD-010\",\"CLOUD-011\",\"CLOUD-012\",\"CLOUD-013\",\"CLOUD-014\",\"CLOUD-015\",\"CLOUD-016\",\"CLOUD-017\",\"CLOUD-018\",\"CLOUD-019\",\"CLOUD-020\",\"CLOUD-021\",\"CLOUD-022\",\"CLOUD-023\",\"CLOUD-024\"],\"scriptProdSinceLastAug\":377677444174889.8,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":{\"ctor\":\"JSONMap\",\"data\":[[1,2]]},\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1686525459069},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1686525759083},{\"ID\":\"WORKOUT\",\"unlockedOn\":1686528279088},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1686532892094},{\"ID\":\"TRAVEL\",\"unlockedOn\":1686563653859},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1686567073861},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1686654552271},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1686667992269},{\"ID\":\"NITESEC\",\"unlockedOn\":1686679931301},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1686687177835},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1686697617844},{\"ID\":\"FROZE\",\"unlockedOn\":1686704316676},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1686746667786},{\"ID\":\"TOR\",\"unlockedOn\":1686746787787},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1686746893212},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1686762613218},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1686764833216},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1686767653216},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1686860173219},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1686862933218},{\"ID\":\"4S\",\"unlockedOn\":1686863833212},{\"ID\":\"DONATION\",\"unlockedOn\":1687005871880},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1687008391895},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1687017151898},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1687131964898},{\"ID\":\"SF1.1\",\"unlockedOn\":1687262446639}],\"terminalCommandHistory\":[\"connect clarkinc \",\"connect me\",\"connect megacorp \",\"analyze \",\"backdoor \",\"connect rothman-uni \",\"connect rho-construction \",\"connect global-pharm \",\"connect omnia \",\"connect univ-energy \",\"connect infocomm \",\"connect titan-labs \",\"connect vitalife \",\"connect kuai-gong \",\"backdoor\",\"analyze \",\"connect blade \",\"connect ecorp \",\"backdoor \",\"analyze \",\"home\",\"connect megacorp \",\"analyze \",\"hom\",\"home\",\"nano  data/batchQueue.txt \",\"ls\",\"rm buyOrUpgradeServerFlag.txt \",\"ls\",\"nano stuff.txt \",\"ls\",\"rm stuff.txt \",\"ls\",\"nano stuff.txt \",\"connect kuai-gong \",\"analyze \",\"an\",\"analyze \",\"an\",\"analyze \",\"an\",\"analyze \",\"an\",\"analyze \",\"home\",\"nano data/batchQueue.txt \",\"connect kau\",\"connect kuai-gong \",\"analyze \",\"home\"],\"lastUpdate\":1687997063760,\"lastSave\":1687997040291,\"totalPlaytime\":1475890000,\"currentWork\":{\"ctor\":\"FactionWork\",\"data\":{\"type\":\"FACTION\",\"singularity\":false,\"cyclesWorked\":1474,\"factionWorkType\":\"hacking\",\"factionName\":\"Tian Di Hui\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"40a77882039c0\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"43.3.1.6\",\"isConnectedTo\":true,\"maxRam\":1048576,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\",\"Formulas.exe\"],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/scan.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n/// run scripts/scan.js dispatchScript\\r\\nexport async function main(ns) {\\r\\n    const dispatchScript = ns.args[0];\\r\\n\\r\\n    if (dispatchScript === undefined){\\r\\n        ns.tprint(\\\"Must define dispatch script for scan.\\\")\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const result = new dataMonger(ns).scanEnvironment();\\r\\n\\r\\n    ns.rm('data/enviroment.txt')\\r\\n    ns.write('data/enviroment.txt', JSON.stringify(result), \\\"W\\\")\\r\\n\\r\\n    ns.run(dispatchScript)\\r\\n}\\r\\n\\r\\nexport class dataMonger {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    scanEnvironment(machineToScan = \\\"home\\\", serversToScan = [], scannedServers = [], result = []) {\\r\\n        if (serversToScan.length === 0 && machineToScan !== \\\"home\\\") {\\r\\n            return result;\\r\\n        }\\r\\n\\r\\n        let lineage = result\\r\\n            .find(x => x.name === machineToScan)\\r\\n            ?.lineage\\r\\n            .map(x => x); // so we aren't using a reference\\r\\n\\r\\n        const scan = this.ns\\r\\n            .scan(machineToScan)\\r\\n            .map(x => new ServerNode(\\r\\n                machineToScan,\\r\\n                this.ns.getServer(x),\\r\\n                lineage\\r\\n            ));\\r\\n\\r\\n        scan.forEach(x => {\\r\\n            if (!scannedServers.includes(x.name) && !serversToScan.includes(x.name)) {\\r\\n                serversToScan.push(x.name);\\r\\n                result.push(x);\\r\\n            }\\r\\n        });\\r\\n\\r\\n        scannedServers.push(machineToScan);\\r\\n        machineToScan = serversToScan.pop();\\r\\n        return this.scanEnvironment(machineToScan, serversToScan, scannedServers, result);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass ServerNode {\\r\\n    constructor(parentsName, server, lineage = []) {\\r\\n        this.name = server.hostname;\\r\\n        this.lineage = lineage\\r\\n        if (parentsName !== \\\"home\\\" && this.lineage !== undefined) {\\r\\n            if (!this.lineage.includes(parentsName)) {\\r\\n                this.lineage.push(parentsName)\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.server = server;\\r\\n    }\\r\\n}\",\"filename\":\"scripts/scan.js\",\"server\":\"home\"}}],[\"scripts/clean.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/clean.js \\r\\nexport async function main(ns) {\\r\\n    let newMachine = false;\\r\\n\\r\\n    if (ns.args[0] === \\\"new\\\") {\\r\\n        newMachine = true;\\r\\n    }\\r\\n\\r\\n    if (!newMachine && !ns.fileExists(\\\"stopTrading.txt\\\")) {\\r\\n        ns.tprint(\\\"must add stopTrading.txt to server.\\\");\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    ns.killall(\\\"home\\\", true);\\r\\n\\r\\n    if (!newMachine) {\\r\\n        const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n        enviroment\\r\\n            .filter(x => x.server.hasAdminRights)\\r\\n            .map(target => {\\r\\n                ns.killall(target.name);\\r\\n            })\\r\\n    }\\r\\n\\r\\n\\r\\n    ns.rm('data/enviroment.txt');\\r\\n    ns.rm('data/dataOnWhatHappensEachRound.txt');\\r\\n    ns.rm('data/recordOfWhoIsBeingHacked.txt');\\r\\n    ns.rm('data/salesLedger.txt');\\r\\n    ns.rm('stopTrading.txt');\\r\\n    ns.rm('data/stockHistory.txt');\\r\\n    ns.rm('data/contractData.txt');\\r\\n    ns.rm('data/serversUsedForBatching.txt');\\r\\n    ns.rm('data/batchQueue.txt')\\r\\n}\",\"filename\":\"scripts/clean.js\",\"server\":\"home\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"home\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"home\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"home\"}}],[\"scripts/advanced-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/advanced-dispatch.js \\r\\nexport async function main(ns) {\\r\\n\\r\\n    const helpers = new Helpers(ns);\\r\\n    const nameOfrecordOfWhoIsBeingHacked = 'data/recordOfWhoIsBeingHacked.txt';\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\";\\r\\n\\r\\n    const hackScript = 'scripts/advanced-hacks/hack-until-worked.js';\\r\\n    const growScript = 'scripts/advanced-hacks/grow.js';\\r\\n    const weakenScript = 'scripts/advanced-hacks/weaken.js';\\r\\n\\r\\n\\r\\n    let batchTargets = [];\\r\\n\\r\\n    const portsWeCanPop = helpers.numberOfPortsWeCanPop();\\r\\n    const currentHackingLevel = ns.getHackingLevel();\\r\\n\\r\\n    let recordOfWhoIsBeingHacked = new Map();\\r\\n\\r\\n    if (ns.fileExists(nameOfrecordOfWhoIsBeingHacked)) {\\r\\n        recordOfWhoIsBeingHacked = new Map(JSON.parse(ns.read(nameOfrecordOfWhoIsBeingHacked)));\\r\\n    }\\r\\n\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        const batchQueue = JSON.parse(ns.read(batchQueuesFileName));\\r\\n        batchTargets = batchQueue.map(x => x[0]);\\r\\n    }\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.requiredHackingSkill < currentHackingLevel)\\r\\n        .filter(x => x.server.numOpenPortsRequired <= portsWeCanPop || x.server.purchasedByPlayer);\\r\\n\\r\\n    allHackableMachines\\r\\n        .filter(x => !x.server.hasAdminRights)\\r\\n        .map(x => helpers.hackMachine(x.name));\\r\\n\\r\\n    const allMachinesByOrderOfValue = allHackableMachines\\r\\n        .filter(x => !x.server.purchasedByPlayer && !batchTargets.includes(x.name) && x.server.moneyMax > 0)\\r\\n        .sort((a, b) => b.server.moneyMax - a.server.moneyMax)\\r\\n        .map(x => new HackedRecord(\\r\\n            x.name,\\r\\n            x.server.moneyMax,\\r\\n            x.server.minDifficulty,\\r\\n            x.server.hackDifficulty,\\r\\n            x.server.moneyAvailable,\\r\\n        ));\\r\\n\\r\\n    cleanProcessesAttackingBatchTarget(ns, recordOfWhoIsBeingHacked, batchTargets);\\r\\n\\r\\n    const machinesNextInQueueToHack = getMachinesToHack(allMachinesByOrderOfValue, recordOfWhoIsBeingHacked, ns);\\r\\n\\r\\n    const hackQueue = [];\\r\\n    const growAndWeakenQueue = [];\\r\\n\\r\\n    machinesNextInQueueToHack.forEach(machineInQuestion => {\\r\\n        if (machineInQuestion.needsWeakening() || machineInQuestion.needsGrowing()) {\\r\\n            growAndWeakenQueue.push(machineInQuestion);\\r\\n        } else {\\r\\n            hackQueue.push(machineInQuestion);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    const ramNeededForOneHackThread = ns.getScriptRam(hackScript);\\r\\n\\r\\n    hackQueue.forEach(target => {\\r\\n\\r\\n        const numberOfThreads = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable));\\r\\n        const ramNeeded = ramNeededForOneHackThread * numberOfThreads;\\r\\n        let machineToRunOn = getMachineWithEnoughRam(ns, ramNeeded, enviroment);\\r\\n\\r\\n        if (machineToRunOn) {\\r\\n            ns.scp(hackScript, machineToRunOn.hostname);\\r\\n            const pid = ns.exec(hackScript, machineToRunOn.hostname, numberOfThreads, target.name);\\r\\n\\r\\n            target.hacking();\\r\\n            target.machineRunningOn = machineToRunOn.hostname;\\r\\n            target.pid = pid;\\r\\n            recordOfWhoIsBeingHacked.set(target.name, target);\\r\\n        }\\r\\n    });\\r\\n\\r\\n\\r\\n    const ramNeededForWeaken = ns.getScriptRam(weakenScript);\\r\\n    const ramNeededForGrow = ns.getScriptRam(growScript);\\r\\n    growAndWeakenQueue.map(target => {\\r\\n        let machineToRunOn;\\r\\n        let threadsNeeded;\\r\\n        let script;\\r\\n\\r\\n        if (target.needsGrowing()) {\\r\\n            target.growing();\\r\\n\\r\\n            script = growScript;\\r\\n            const serverToHack = getServer(ns, target.name);\\r\\n            const player = ns.getPlayer();\\r\\n\\r\\n            if (ns.fileExists('Formulas.exe')) {\\r\\n                threadsNeeded = Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, 1));\\r\\n            } else {\\r\\n                threadsNeeded = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable)) * 5;\\r\\n\\r\\n                if(threadsNeeded === 0){\\r\\n                    threadsNeeded = 5000;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            machineToRunOn = getMachineWithEnoughRam(ns, threadsNeeded * ramNeededForGrow, enviroment);\\r\\n\\r\\n            if (machineToRunOn && machineToRunOn.cpuCores > 1 && ns.fileExists('Formulas.exe')) {\\r\\n                threadsNeeded = Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, machineToRunOn.cpuCores));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (target.needsWeakening()) {\\r\\n            target.weakening();\\r\\n\\r\\n            script = weakenScript;\\r\\n            const amountToWeaken = target.hackDifficulty - target.minDifficulty;\\r\\n\\r\\n            threadsNeeded = getNumberOfThreadsToWeaken(ns, 1, amountToWeaken);\\r\\n\\r\\n            machineToRunOn = getMachineWithEnoughRam(ns, threadsNeeded * ramNeededForWeaken, enviroment);\\r\\n\\r\\n            if (machineToRunOn.cpuCores > 1) {\\r\\n                threadsNeeded = getNumberOfThreadsToWeaken(ns, machineToRunOn.cpuCores, amountToWeaken);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (machineToRunOn) {\\r\\n            ns.scp(script, machineToRunOn.hostname);\\r\\n            const pid = ns.exec(script, machineToRunOn.hostname, threadsNeeded, target.name);\\r\\n            target.machineRunningOn = machineToRunOn.hostname;\\r\\n            target.pid = pid;\\r\\n\\r\\n            recordOfWhoIsBeingHacked.set(target.name, target);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfrecordOfWhoIsBeingHacked);\\r\\n    ns.write(nameOfrecordOfWhoIsBeingHacked, JSON.stringify(Array.from(recordOfWhoIsBeingHacked.entries()), \\\"W\\\"));\\r\\n\\r\\n    function cleanProcessesAttackingBatchTarget(ns, recordOfWhoIsBeingHacked, batchTargets) {\\r\\n        for (const machineHackin of recordOfWhoIsBeingHacked) {\\r\\n            const whoTheyHackin = machineHackin[0];\\r\\n\\r\\n            if (batchTargets.includes(whoTheyHackin)) {\\r\\n                ns.kill(recordOfWhoIsBeingHacked.get(whoTheyHackin).pid);\\r\\n                recordOfWhoIsBeingHacked.delete(whoTheyHackin);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getMachineWithEnoughRam(ns, ramNeeded, enviroment) {\\r\\n    let machineToRunOn;\\r\\n\\r\\n    const helpers = new Helpers(ns);\\r\\n    const portsWeCanPop = helpers.numberOfPortsWeCanPop();\\r\\n    const currentHackingLevel = ns.getHackingLevel();\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.requiredHackingSkill < currentHackingLevel)\\r\\n        .filter(x => x.server.numOpenPortsRequired <= portsWeCanPop || x.server.purchasedByPlayer);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\");\\r\\n\\r\\n    allHackableMachines.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const machinesWithRamAvailable = allHackableMachines\\r\\n        .filter(x => x.server.ramUsed <= x.server.maxRam && x.server.maxRam !== 0);\\r\\n\\r\\n    const serversWithEnoughRam = machinesWithRamAvailable\\r\\n        .filter(x => (x.server.maxRam - x.server.ramUsed) > ramNeeded)\\r\\n        .sort((b, a) =>(b.server.maxRam - b.server.ramUsed) - (a.server.maxRam - a.server.ramUsed));\\r\\n\\r\\n    for (const potentialServerToRun of serversWithEnoughRam) {\\r\\n        const server = getServer(ns, potentialServerToRun.name);\\r\\n        const freeRam = server.maxRam - server.ramUsed;\\r\\n        if (freeRam > ramNeeded) {\\r\\n            machineToRunOn = server;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (machineToRunOn === undefined) {\\r\\n        const buyOrUpgradeServerFlag = 'buyOrUpgradeServerFlag.txt';\\r\\n        ns.rm(buyOrUpgradeServerFlag);\\r\\n        ns.write(buyOrUpgradeServerFlag, \\\"\\\", \\\"W\\\");\\r\\n        ns.tprint(ramNeeded);\\r\\n    }\\r\\n\\r\\n    return machineToRunOn;\\r\\n}\\r\\n\\r\\n\\r\\nfunction getServer(ns, serverName) {\\r\\n    const server = ns.getServer(serverName);\\r\\n\\r\\n    if (serverName === \\\"home\\\") {\\r\\n        server.maxRam -= 32;\\r\\n        server.ramUsed -= 32;\\r\\n\\r\\n        if (server.ramUsed < 0) {\\r\\n            server.ramUsed = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction getMachinesToHack(hackableMachinesInTheEnvironment, recordOfWhoIsBeingHacked, ns) {\\r\\n    const machinesNextInQueueToHack = [];\\r\\n    const namesOfMachinesBeingHacked = Array.from(recordOfWhoIsBeingHacked.keys());\\r\\n\\r\\n    for (const hackableMachine of hackableMachinesInTheEnvironment) {\\r\\n        if (!namesOfMachinesBeingHacked.includes(hackableMachine.name)) {\\r\\n            machinesNextInQueueToHack.push(hackableMachine);\\r\\n        } else {\\r\\n            const recordOfHackin = recordOfWhoIsBeingHacked.get(hackableMachine.name);\\r\\n            const moneyChange = recordOfHackin.moneyAvailable - hackableMachine.moneyAvailable;\\r\\n            const difficultyChange = recordOfHackin.hackDifficulty - hackableMachine.hackDifficulty;\\r\\n\\r\\n            if (moneyChange !== 0 || difficultyChange !== 0) {\\r\\n                machinesNextInQueueToHack.push(hackableMachine);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machinesNextInQueueToHack;\\r\\n}\\r\\n\\r\\nexport class HackedRecord {\\r\\n    constructor(name, maxMoney, minDifficulty, hackDifficulty, moneyAvailable) {\\r\\n        this.name = name;\\r\\n        this.moneyThreshhold = maxMoney * 0.75;\\r\\n        this.securityThreshholdTarget = minDifficulty + 5;\\r\\n        this.hackDifficulty = hackDifficulty;\\r\\n        this.moneyAvailable = moneyAvailable;\\r\\n        this.minDifficulty = minDifficulty;\\r\\n        this.machineRunningOn;\\r\\n        this.pid;\\r\\n\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    needsWeakening() {\\r\\n        return this.hackDifficulty > this.securityThreshholdTarget;\\r\\n    }\\r\\n\\r\\n    needsGrowing() {\\r\\n        return this.moneyAvailable < this.moneyThreshhold;\\r\\n    }\\r\\n\\r\\n    weakening() {\\r\\n        this.isWeakening = true;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    growing() {\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = true;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    hacking() {\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = true;\\r\\n    }\\r\\n}\\r\\n\\r\\nexport class Helpers {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    hackMachine(hostname) {\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            this.ns.brutessh(hostname);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            this.ns.ftpcrack(hostname);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            this.ns.relaysmtp(hostname)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            this.ns.httpworm(hostname)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            this.ns.sqlinject(hostname)\\r\\n        }\\r\\n\\r\\n        this.ns.nuke(hostname);\\r\\n        this.ns.killall(hostname);\\r\\n\\r\\n        if (hostname !== \\\"home\\\") {\\r\\n            this.ns\\r\\n                .ls(hostname, '.js')\\r\\n                .map(y => this.ns.rm(y, hostname))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    numberOfPortsWeCanPop() {\\r\\n        let portsWeCanPop = 0;\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        return portsWeCanPop;\\r\\n    }\\r\\n\\r\\n    fileExists(fileName) {\\r\\n        return this.ns.fileExists(fileName, \\\"home\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getNumberOfThreadsToWeaken(ns, cpuCores, amountToWeaken) {\\r\\n    let numberOfThreadsToWeaken = 0;\\r\\n    let foundNumberOfThreads = false;\\r\\n    while (!foundNumberOfThreads) {\\r\\n        numberOfThreadsToWeaken++;\\r\\n\\r\\n        const amountNumberOfThreadsWillWeaken = Math.ceil(ns.weakenAnalyze(numberOfThreadsToWeaken, cpuCores));\\r\\n        if (amountNumberOfThreadsWillWeaken > amountToWeaken) {\\r\\n            foundNumberOfThreads = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //add a small margin\\r\\n    numberOfThreadsToWeaken += 20;\\r\\n    return numberOfThreadsToWeaken;\\r\\n}\",\"filename\":\"scripts/advanced-dispatch.js\",\"server\":\"home\"}}],[\"scripts/coordinator.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/coordinator.js 1000 564 5.629 BitRunners\\r\\nexport async function main(ns) {\\r\\n    let i = 0;\\r\\n    const loopEveryXSeconds = 3;\\r\\n    const sleepTotalOfXMS = loopEveryXSeconds * 1000;\\r\\n    const numberOfDifferentSleeps = 5;\\r\\n    const individualSleepAmount = sleepTotalOfXMS / numberOfDifferentSleeps;\\r\\n    let dispatchScript = 'scripts/advanced-dispatch.js';\\r\\n\\r\\n    while (true) {\\r\\n        i++;\\r\\n\\r\\n\\r\\n        ns.run(\\\"scripts/investments/invest-in-stocks.js\\\");\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n\\r\\n        if (ns.fileExists('Formulas.exe')) {\\r\\n            dispatchScript = 'scripts/batch-dispatch.js'\\r\\n        }\\r\\n\\r\\n        ns.run(\\\"scripts/scan.js\\\", 1, dispatchScript); // this triggers all hacks. But we need to analyse the environment first. \\r\\n        await ns.sleep(individualSleepAmount); // need rest between actions for some fing reason. \\r\\n\\r\\n\\r\\n        ns.run('scripts/investments/purchase-server.js')\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        if (moneyAvailable > 1_000_000_000_000) {\\r\\n            const endDate = new Date();\\r\\n            endDate.setHours(endDate.getHours() + 24);\\r\\n            ns.run('scripts/investments/invest-in-nodes.js', 1, endDate.toISOString())\\r\\n        }\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n\\r\\n        ns.run('scripts/contracts/coding-contracts.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/coordinator.js\",\"server\":\"home\"}}],[\"scripts/investments/invest-in-nodes.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//take an hours until payoff numberz\\r\\n\\r\\n//hacknet\\r\\n\\r\\n/** @param {NS} ns */\\r\\n//run scripts/invest-in-nodes.js endDate\\r\\nexport async function main(ns) {\\r\\n    const endDate = ns.args[0];\\r\\n\\r\\n    if (endDate === undefined){\\r\\n        ns.tprint(\\\"need inputs\\\");\\r\\n    } else {\\r\\n        const timeLeftInSeconds = (new Date(endDate) - new Date()) / 1000;\\r\\n        const conservativeTimeLeft = timeLeftInSeconds / 2;\\r\\n    \\r\\n        let numberPurchased = 0\\r\\n    \\r\\n        while(buyHacknetNodeIfAboveBreakeven(ns, conservativeTimeLeft)){\\r\\n            numberPurchased++;\\r\\n        }\\r\\n\\r\\n        if(numberPurchased != 0){\\r\\n            ns.tprint(\\\"Total nodes purchase: \\\", numberPurchased);\\r\\n        }        \\r\\n    }\\r\\n}\\r\\n\\r\\nfunction buyHacknetNodeIfAboveBreakeven(ns, secondsLeft) {\\r\\n    const productionMultiplier = 2.8991;\\r\\n    const upgradeCostMultiplier = 0.8700;\\r\\n\\r\\n    const fixedCostOfFullyUpgradedNode = 409_194_200 * upgradeCostMultiplier;\\r\\n    const variableCost = ns.hacknet.getPurchaseNodeCost();\\r\\n    const totalCost = variableCost + fixedCostOfFullyUpgradedNode;\\r\\n\\r\\n    const moneyToInvest = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (totalCost > moneyToInvest) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    const revPerSecond = 9172 * productionMultiplier;\\r\\n    const expectedValue = secondsLeft * revPerSecond;\\r\\n\\r\\n    if (expectedValue < totalCost) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    const indexOfNode = ns.hacknet.purchaseNode();\\r\\n    ns.hacknet.upgradeLevel(indexOfNode, 199);\\r\\n    ns.hacknet.upgradeRam(indexOfNode, 6);\\r\\n    ns.hacknet.upgradeCore(indexOfNode, 15);\\r\\n\\r\\n    return true;\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/investments/invest-in-nodes.js\",\"server\":\"home\"}}],[\"scripts/investments/invest-in-stocks.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"\\r\\n/** @param {NS} ns */\\r\\n//run scripts/invest-in-stocks.js\\r\\nexport async function main(ns) {\\r\\n\\r\\n    let historicalData = new Map();\\r\\n    const nameOfStockHistoricalData = \\\"../../data/stockHistory.txt\\\"\\r\\n\\r\\n    if (ns.fileExists(nameOfStockHistoricalData)) {\\r\\n        historicalData = new Map(JSON.parse(ns.read(nameOfStockHistoricalData)));\\r\\n    }\\r\\n\\r\\n    const stockRecords = ns.stock\\r\\n        .getSymbols()\\r\\n        .map(x => new Stock(\\r\\n            x,\\r\\n            ns.stock.getVolatility(x),\\r\\n            ns.stock.getForecast(x),\\r\\n            ns.stock.getBidPrice(x),\\r\\n            ns.stock.getAskPrice(x),\\r\\n            ns.stock.getPrice(x),\\r\\n            ns.stock.getMaxShares(x),\\r\\n            ns.stock.getPosition(x),\\r\\n        ));\\r\\n\\r\\n\\r\\n    SaveHistoricData(stockRecords, historicalData, ns, nameOfStockHistoricalData);\\r\\n\\r\\n    const nameOfLedger = \\\"../../data/salesLedger.txt\\\"\\r\\n    let ledger = [];\\r\\n\\r\\n    if (ns.fileExists(nameOfLedger)) {\\r\\n        ledger = JSON.parse(ns.read(nameOfLedger));\\r\\n    }\\r\\n\\r\\n    const stopTradingExists = ns.fileExists(\\\"../../stopTrading.txt\\\") || ns.fileExists(\\\"../../buyOrUpgradeServerFlag.txt\\\");\\r\\n    // sell short term positions;\\r\\n    stockRecords.map(stock => {\\r\\n        const investedShares = stock.investedShares;\\r\\n\\r\\n        if (investedShares > 0) {\\r\\n            // do not allow clean to run if invest-in-stocks.js is running on server. We need clean closes for this.  \\r\\n            if (stock.forecast < 0.5 || stopTradingExists) {\\r\\n                const salePrice = ns.stock.sellStock(stock.symbol, investedShares);\\r\\n                ledger.push(new LedgerItem(\\r\\n                    stock.symbol,\\r\\n                    salePrice,\\r\\n                    stock.averagePrice,\\r\\n                    investedShares,\\r\\n                    \\\"Short-Term Long Sale\\\",\\r\\n                    stock.forecast\\r\\n                ))\\r\\n\\r\\n                if (stopTradingExists) {\\r\\n                    ns.toast(\\\"Stopped trading\\\", \\\"success\\\", null)\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfLedger);\\r\\n    ns.write(nameOfLedger, JSON.stringify(ledger), \\\"W\\\");\\r\\n\\r\\n\\r\\n    const commission = 100_001;\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\") - commission;\\r\\n\\r\\n    if (moneyAvailable > 600_000_000_000 && !stopTradingExists) {\\r\\n        const stocksToGoLong = stockRecords\\r\\n            .filter(stock => stock.investedShares !== stock.maxShares && stock.forecast > 0.6)\\r\\n            .sort((a, b) => b.volatility - a.volatility);\\r\\n\\r\\n        if (stocksToGoLong.length > 0) {\\r\\n            const stockToLookAt = stocksToGoLong[0];\\r\\n\\r\\n            let sharesToBuy = Math.round(moneyAvailable / stockToLookAt.ask);\\r\\n\\r\\n            if (stockToLookAt.maxShares < sharesToBuy) {\\r\\n                sharesToBuy = stockToLookAt.maxShares;\\r\\n            }\\r\\n\\r\\n            sharesToBuy = sharesToBuy - stockToLookAt.investedShares;\\r\\n            const ticker = stockToLookAt.symbol;\\r\\n\\r\\n            ns.stock.buyStock(ticker, sharesToBuy);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nclass LedgerItem {\\r\\n\\r\\n    constructor(symbol, price, averagePurchasePrice, shares, type, forecastAtSale) {\\r\\n        const formatter = new Intl.NumberFormat('en-US', {\\r\\n            style: 'currency',\\r\\n            currency: 'USD',\\r\\n        });\\r\\n\\r\\n        const numberProfit = (price - averagePurchasePrice) * shares\\r\\n\\r\\n        this.date = new Date().toLocaleString();\\r\\n        this.symbol = symbol;\\r\\n        this.price = price;\\r\\n        this.averagePurchasePrice = averagePurchasePrice;\\r\\n        this.profit = formatter.format(numberProfit);\\r\\n        this.profitPercent = (numberProfit / (shares * averagePurchasePrice)).toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 });\\r\\n        this.shares = shares;\\r\\n        this.type = type;\\r\\n        this.forecastAtSale = forecastAtSale;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass StockHistoricData {\\r\\n\\r\\n    constructor(shortTermRecords = [], longTermRecords = []) {\\r\\n        this.shortTermRecords = shortTermRecords;\\r\\n\\r\\n        this.longTermRecords = longTermRecords;\\r\\n    }\\r\\n\\r\\n    addRecord(record) {\\r\\n        this.shortTermRecords.push(record);\\r\\n    }\\r\\n\\r\\n    storeLongTerm() {\\r\\n        const newLongTermStock = new Stock(\\r\\n            this.shortTermRecords[0].symbol,\\r\\n            this.shortTermRecords[0].volatility,\\r\\n            this.shortTermRecords.map(x => x.forecast).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.bid).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.ask).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.price).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords[0].maxShares,\\r\\n            [\\r\\n                this.shortTermRecords.map(x => x.investedShares).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.averagePrice).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.sharesShort).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.averageShortPrice).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            ]\\r\\n        );\\r\\n\\r\\n        newLongTermStock.bias = Math.max(...this.shortTermRecords.map(x => x.bias));\\r\\n\\r\\n        this.longTermRecords.push(newLongTermStock);\\r\\n\\r\\n        this.shortTermRecords.length = 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Stock {\\r\\n    constructor(symbol, volatility, forecast, bid, ask, price, maxShares, position = {}, dateObserved = new Date()) {\\r\\n        this.symbol = symbol;\\r\\n        this.forecast = forecast;\\r\\n        this.bias = Math.abs(forecast - .5);\\r\\n        this.bid = bid;\\r\\n        this.ask = ask;\\r\\n        this.price = price;\\r\\n        this.maxShares = maxShares;\\r\\n        this.investedShares = position[0];\\r\\n        this.averagePrice = position[1];\\r\\n        this.sharesShort = position[2];\\r\\n        this.averageShortPrice = position[3];\\r\\n        this.volatility = volatility;\\r\\n        this.dateObserved = dateObserved.toLocaleString();\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction SaveHistoricData(stockRecords, historicalData, ns, nameOfStockHistoricalData) {\\r\\n    stockRecords.map(x => {\\r\\n        if (historicalData.has(x.symbol)) {\\r\\n            const data = historicalData.get(x.symbol);\\r\\n            const record = new StockHistoricData(data.shortTermRecords, data.longTermRecords);\\r\\n            if (data.shortTermRecords[data.shortTermRecords.length - 1]?.price !== x.price) {\\r\\n                record.addRecord(x);\\r\\n\\r\\n                if (record.shortTermRecords.length >= 100) {\\r\\n                    record.storeLongTerm();\\r\\n                }\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n            const stockHistoryData = new StockHistoricData();\\r\\n            stockHistoryData.addRecord(x);\\r\\n            historicalData.set(x.symbol, stockHistoryData);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfStockHistoricalData);\\r\\n    ns.write(nameOfStockHistoricalData, JSON.stringify(Array.from(historicalData.entries()), \\\"W\\\"));\\r\\n}\\r\\n\",\"filename\":\"scripts/investments/invest-in-stocks.js\",\"server\":\"home\"}}],[\"scripts/investments/purchase-server.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// replace servers with this as well. just a bool passed in, put them both in their own methods.\\r\\n\\r\\n/** @param {NS} ns */\\r\\n//run scripts/purchase-servers.js\\r\\nexport async function main(ns) {\\r\\n    const buyOrUpgradeServerFlag = \\\"../../buyOrUpgradeServerFlag.txt\\\"\\r\\n\\r\\n    if (!ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const maxRam = 1048576;\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read('../../data/enviroment.txt'));\\r\\n\\r\\n    const playerPurchasedServers = enviroment\\r\\n        .filter(x => x.server.purchasedByPlayer && x.server.maxRam < maxRam)\\r\\n        .sort((b, a) => a.server.maxRam - b.server.maxRam)\\r\\n\\r\\n\\r\\n    if (playerPurchasedServers.length === 0) {\\r\\n\\r\\n        const currentNumberOfPurchasedServers = ns.getPurchasedServers().length;\\r\\n        if (currentNumberOfPurchasedServers < ns.getPurchasedServerLimit()) {\\r\\n            purchaseServer(ns, buyOrUpgradeServerFlag);\\r\\n        } else{\\r\\n            const smallestPlayerPurchasedServer = playerPurchasedServers.pop();\\r\\n            upgradeSmallMachine(ns, smallestPlayerPurchasedServer, buyOrUpgradeServerFlag);\\r\\n        }\\r\\n    } \\r\\n}\\r\\n\\r\\nfunction purchaseServer(ns, buyOrUpgradeServerFlag) {\\r\\n    let currentNumberOfPurchasedServers = ns.getPurchasedServers().length;\\r\\n    let ram = 128;\\r\\n    const maxRam = 1048576;\\r\\n\\r\\n    if (currentNumberOfPurchasedServers < ns.getPurchasedServerLimit()) {\\r\\n\\r\\n        let purchaseCost = ns.getPurchasedServerCost(ram);\\r\\n        let moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        if (moneyAvailable > purchaseCost) {\\r\\n\\r\\n            let ramToBuy = ram;\\r\\n\\r\\n            while ((moneyAvailable > ns.getPurchasedServerCost(ramToBuy)) || (ramToBuy < 2 * maxRam)) {\\r\\n                ramToBuy = ramToBuy * 2;\\r\\n            }\\r\\n\\r\\n            ramToBuy = ramToBuy / 2;\\r\\n\\r\\n            const hostname = \\\"CLOUD-\\\" + String(currentNumberOfPurchasedServers).padStart(3, '0')\\r\\n            ns.purchaseServer(hostname, ramToBuy);\\r\\n            ns.rm(buyOrUpgradeServerFlag);\\r\\n\\r\\n            currentNumberOfPurchasedServers = ns.getPurchasedServers().length;\\r\\n        }\\r\\n        else {\\r\\n            ns.tprint(\\\"Not enough money to buy new server\\\")\\r\\n        }\\r\\n    } else {\\r\\n        ns.tprint(\\\"max servers already bought\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction upgradeSmallMachine(ns, smallestPlayerPurchasedServer, buyOrUpgradeServerFlag) {\\r\\n\\r\\n    ns.tprint(smallestPlayerPurchasedServer)\\r\\n    const ramToBuy = smallestPlayerPurchasedServer.maxRam * 4;\\r\\n    const maxRam = 1048576;\\r\\n    if (ramToBuy > maxRam) {\\r\\n        ramToBuy = maxRam;\\r\\n    }\\r\\n\\r\\n    const costOfRamToBuy = ns.getPurchasedServerCost(ramToBuy);\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (moneyAvailable > costOfRamToBuy) {\\r\\n        ns.upgradePurchasedServer(smallestPlayerPurchasedServer.name, ramToBuy);\\r\\n        ns.rm(buyOrUpgradeServerFlag);\\r\\n    } else {\\r\\n        ns.purchaseServer(ns);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/investments/purchase-server.js\",\"server\":\"home\"}}],[\"scripts/investments/upgrade-small-servers.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/upgrade-small-servers.js\\r\\nexport async function main(ns) {\\r\\n    const enviroment = JSON.parse(ns.read('../../data/enviroment.txt'));\\r\\n\\r\\n    replaceSmallMachinesWithMax(ns, enviroment);\\r\\n}\\r\\n\\r\\nfunction replaceSmallMachinesWithMax(ns, environment) {\\r\\n    const ramToBuy = 1048576;\\r\\n    const costOfRamToBuy = ns.getPurchasedServerCost(ramToBuy);\\r\\n\\r\\n    environment\\r\\n        .filter(x => x.server.purchasedByPlayer)\\r\\n        .map(x => {\\r\\n            const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\")\\r\\n\\r\\n            if (moneyAvailable > costOfRamToBuy && x.server.maxRam < ramToBuy) {\\r\\n                ns.upgradePurchasedServer(x.name, ramToBuy);\\r\\n            }\\r\\n        });\\r\\n}\\r\\n\",\"filename\":\"scripts/investments/upgrade-small-servers.js\",\"server\":\"home\"}}],[\"scripts/test.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n  const targetServer = ns.getServer(\\\"omnitek\\\");\\nns.tprint(targetServer.moneyAvailable);\\n}\",\"filename\":\"scripts/test.js\",\"server\":\"home\"}}],[\"scripts/contracts/coding-contracts.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/coding-contracts.js\\r\\nexport async function main(ns) {\\r\\n    const solverRegistry = [\\r\\n        new LzDecompression2Handler(),\\r\\n        new AlgorithmicStockTrading4Handler(),\\r\\n        new AlgorithmicStockTrading3Handler(),\\r\\n        new AlgorithmicStockTrading1Handler(),\\r\\n        new AlgorithmicStockTrading2Handler(),\\r\\n        new SpiralizeMatrixHandler(),\\r\\n    ]\\r\\n\\r\\n    const allContracts = [];\\r\\n\\r\\n    JSON\\r\\n        .parse(ns.read('../../data/enviroment.txt'))\\r\\n        .map(server => {\\r\\n            const hostName = server.name;\\r\\n            ns\\r\\n                .ls(hostName)\\r\\n                .filter(file => file.endsWith('.cct'))\\r\\n                .map(contract => {\\r\\n                    const cont = new Contract(\\r\\n                        hostName,\\r\\n                        contract,\\r\\n                        ns.codingcontract.getContractType(contract, hostName),\\r\\n                        ns.codingcontract.getNumTriesRemaining(contract, hostName),\\r\\n                        ns.codingcontract.getData(contract, hostName),\\r\\n                        ns.codingcontract.getDescription(contract, hostName),\\r\\n                    );\\r\\n\\r\\n                    allContracts.push(cont);\\r\\n                });\\r\\n        });\\r\\n\\r\\n    allContracts\\r\\n        .forEach(contract => {\\r\\n            if (contract.attemptsLeft === 10 || contract.attemptsLeft === 5) {\\r\\n                const solver = solverRegistry.find(x => x.type === contract.type);\\r\\n                if (solver) {\\r\\n                    const result = solver.solve(contract.input);\\r\\n                    const success = ns.codingcontract.attempt(result, contract.name, contract.server);\\r\\n                    if (success === \\\"\\\") {\\r\\n                        ns.alert(`${contract.name} on ${contract.server} had a problem solving. You need to figure this out.`);\\r\\n                    } else {\\r\\n                        ns.toast(`Contract completed: ${success}`, \\\"success\\\", null);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        });\\r\\n\\r\\n    ns.rm(\\\"../../data/contractData.txt\\\");\\r\\n    ns.write(\\\"../../data/contractData.txt\\\", JSON.stringify(allContracts), \\\"W\\\");\\r\\n}\\r\\n\\r\\nclass Contract {\\r\\n    constructor(server, name, type, attemptsLeft, input, description) {\\r\\n        this.server = server;\\r\\n        this.name = name;\\r\\n        this.type = type;\\r\\n        this.attemptsLeft = attemptsLeft;\\r\\n        this.input = input;\\r\\n        this.description = description;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass LzDecompression2Handler {\\r\\n    type = 'Compression II: LZ Decompression';\\r\\n\\r\\n    solve(input) {\\r\\n        return this.lzDecompression(input);\\r\\n    }\\r\\n\\r\\n    /// all need to be worked on in tests. These are just copies.\\r\\n    lzDecompression(stringToDecode) {\\r\\n        let decompressedString = '';\\r\\n        let startOfNextChunk = 0\\r\\n        let nextSectionCompressed = false;\\r\\n\\r\\n\\r\\n        while (startOfNextChunk < stringToDecode.length) {\\r\\n            const chunkLength = Number(stringToDecode[startOfNextChunk]);\\r\\n\\r\\n\\r\\n            if (chunkLength === 0) {\\r\\n                startOfNextChunk++;\\r\\n                nextSectionCompressed = !nextSectionCompressed;\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            if (nextSectionCompressed) {\\r\\n                const nextCharacterInEncoded = parseInt(stringToDecode[startOfNextChunk + 1]);\\r\\n\\r\\n                const placesBack = nextCharacterInEncoded;\\r\\n                const startText = decompressedString.length - placesBack;\\r\\n                const endOfText = startText + chunkLength;\\r\\n\\r\\n                if (chunkLength <= nextCharacterInEncoded) {\\r\\n                    decompressedString += decompressedString.slice(startText, endOfText);\\r\\n                } else {\\r\\n                    let nextChunk = \\\"\\\";\\r\\n                    const partialChunk = decompressedString.slice(startText, endOfText);\\r\\n\\r\\n                    while (nextChunk.length < chunkLength) {\\r\\n                        if (nextChunk.length + partialChunk.length > chunkLength) {\\r\\n                            const howMuchLeftInChunk = chunkLength - nextChunk.length;\\r\\n                            nextChunk += partialChunk.slice(0, howMuchLeftInChunk)\\r\\n                        } else {\\r\\n                            nextChunk += partialChunk;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    decompressedString += nextChunk;\\r\\n                }\\r\\n\\r\\n                startOfNextChunk += 2;\\r\\n                nextSectionCompressed = false;\\r\\n            } else {\\r\\n                const startText = startOfNextChunk + 1;\\r\\n                const endOfText = startText + chunkLength;\\r\\n                decompressedString += stringToDecode.slice(startText, endOfText);\\r\\n                startOfNextChunk = endOfText;\\r\\n                nextSectionCompressed = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        return decompressedString;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading1Handler {\\r\\n    type = 'Algorithmic Stock Trader I';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 1;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading2Handler {\\r\\n    type = 'Algorithmic Stock Trader II';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input.length;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading3Handler {\\r\\n    type = 'Algorithmic Stock Trader III';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 2;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading4Handler {\\r\\n    type = 'Algorithmic Stock Trader IV';\\r\\n\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input[0];\\r\\n        const stockPricesByDay = input[1];\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return this.tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n\\r\\n    tradeStock(maxNumberOfTrades, stockPricesByDay) {\\r\\n        if (maxNumberOfTrades === 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        let profitsPerTransaction = []\\r\\n\\r\\n        for (let i = stockPricesByDay.length - 1; i >= 1; i--) {\\r\\n            const priceToSeeIfHasNoVolitility = stockPricesByDay[i];\\r\\n\\r\\n            const yesterdaysPrice = stockPricesByDay[i - 1]\\r\\n            const tomorrowsPrice = stockPricesByDay[i + 1]\\r\\n\\r\\n            if (\\r\\n                (yesterdaysPrice <= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility <= tomorrowsPrice) || // rising prices filter\\r\\n                (!tomorrowsPrice && yesterdaysPrice >= priceToSeeIfHasNoVolitility) || // end price\\r\\n                (yesterdaysPrice >= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility >= tomorrowsPrice)) { // falling price filter\\r\\n                stockPricesByDay.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < stockPricesByDay.length; i++) {\\r\\n            const price = stockPricesByDay[i];\\r\\n            const potentialBuyPrice = stockPricesByDay[i - 1];\\r\\n            let potentialProfit = 0;\\r\\n\\r\\n            if (potentialBuyPrice) {\\r\\n                potentialProfit = price - potentialBuyPrice;\\r\\n            }\\r\\n\\r\\n            if (potentialProfit < 0) {\\r\\n                potentialProfit = 0;\\r\\n            }\\r\\n\\r\\n\\r\\n            profitsPerTransaction.push({ price, potentialProfit });\\r\\n        }\\r\\n\\r\\n        if (maxNumberOfTrades >= profitsPerTransaction.filter(x => x.potentialProfit > 0).length) {\\r\\n            return profitsPerTransaction\\r\\n                .reduce((acc, x) => acc + x.potentialProfit, 0);\\r\\n        }\\r\\n\\r\\n        const minProfit = Math.min(...profitsPerTransaction.filter(x => x.potentialProfit !== 0).map(x => x.potentialProfit));\\r\\n        const countOfMinProfits = profitsPerTransaction.filter(x => x.potentialProfit === minProfit).length;\\r\\n        const maxPrice = Math.max(...stockPricesByDay);\\r\\n        const arraysToWorkWith = [];\\r\\n\\r\\n        for (let i = 0; i < profitsPerTransaction.length; i++) {\\r\\n            const profitPerTranaction = profitsPerTransaction[i];\\r\\n\\r\\n            if (profitPerTranaction.potentialProfit === minProfit) {\\r\\n\\r\\n                const copyOfProfitsPerTransaction = profitsPerTransaction.map(x => x)\\r\\n                if (profitPerTranaction.price === maxPrice) {\\r\\n                    copyOfProfitsPerTransaction.splice(i - 1, 1);\\r\\n                } else {\\r\\n                    copyOfProfitsPerTransaction.splice(i, 1); // if there is a bigger price in the future, splice sell price. \\r\\n                }\\r\\n\\r\\n                arraysToWorkWith.push(copyOfProfitsPerTransaction.map(x => x.price));\\r\\n            }\\r\\n\\r\\n            if (arraysToWorkWith.length === countOfMinProfits) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const potentialProfitsForAllTrades = []\\r\\n        for (const newArrayOfPrices of arraysToWorkWith) {\\r\\n            potentialProfitsForAllTrades.push(this.tradeStock(maxNumberOfTrades, newArrayOfPrices))\\r\\n        }\\r\\n\\r\\n        return Math.max(...potentialProfitsForAllTrades);\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass SpiralizeMatrixHandler {\\r\\n    type = \\\"Spiralize Matrix\\\";\\r\\n\\r\\n    solve(matrix) {\\r\\n        return this.solveRecursively(matrix);\\r\\n    }\\r\\n\\r\\n    solveRecursively(matrix, spiralOrderResult = []){\\r\\n\\r\\n        if(matrix.length === 0){\\r\\n            return spiralOrderResult;\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < matrix.length; i++) {\\r\\n            if (i === 0 || i === matrix.length - 1) {\\r\\n                let rowToEmpty = matrix[i];\\r\\n\\r\\n                if(i === matrix.length - 1 && i !== 0){\\r\\n                    rowToEmpty.reverse()\\r\\n                }\\r\\n\\r\\n                for (let x = 0; x < rowToEmpty.length; x++) {\\r\\n                    const number = rowToEmpty[x];\\r\\n                    spiralOrderResult.push(number);\\r\\n                }\\r\\n\\r\\n                rowToEmpty.length = 0\\r\\n            } else {\\r\\n                let rowBeingUsed = matrix[i];\\r\\n\\r\\n                spiralOrderResult.push(rowBeingUsed.pop());\\r\\n            }\\r\\n        }      \\r\\n\\r\\n        \\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            if(matrix[i].length === 0){\\r\\n                matrix.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            const row = matrix[i];\\r\\n            row.reverse();\\r\\n            spiralOrderResult.push(row.pop());\\r\\n            row.reverse();            \\r\\n        }\\r\\n\\r\\n        return this.solveRecursively(matrix, spiralOrderResult)\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/contracts/coding-contracts.js\",\"server\":\"home\"}}],[\"scripts/batch-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\"\\r\\n\\r\\n    let batchQueueForDifferentTargets = new Map();\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        batchQueueForDifferentTargets = new Map(JSON.parse(ns.read(batchQueuesFileName)));\\r\\n    }\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n    const targetNames = Array.from(batchQueueForDifferentTargets.keys());\\r\\n    const player = ns.getPlayer();\\r\\n\\r\\n    giveBatchQueueStructure(targetNames, batchQueueForDifferentTargets);\\r\\n    cleanFinishedJobsFromQueue(targetNames, batchQueueForDifferentTargets);\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const targetServer = ns.getServer(nameOfTarget);\\r\\n        const batchForTarget = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n\\r\\n        prepServerForBatching(targetServer, batchForTarget, ns, player, nameOfTarget);\\r\\n        createBatchesOfJobs(batchForTarget, ns, targetServer, player);\\r\\n    }\\r\\n\\r\\n    await executeJobs(ns, targetNames, batchQueueForDifferentTargets, player, enviroment);\\r\\n    addNewTargetsToQueueIfNeeded(batchQueueForDifferentTargets, targetNames, ns, enviroment);\\r\\n\\r\\n    ns.rm(batchQueuesFileName);\\r\\n    ns.write(batchQueuesFileName, JSON.stringify(Array.from(batchQueueForDifferentTargets.entries()), \\\"W\\\"));\\r\\n\\r\\n    ns.run('scripts/advanced-dispatch.js');\\r\\n}\\r\\n\\r\\nclass BatchQueueForTarget {\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    targetMachineSaturatedWithAttacks = false;\\r\\n\\r\\n    prepStage = true;\\r\\n\\r\\n    weakeningDoneAfter;\\r\\n    successfulWeakening = false;\\r\\n\\r\\n    growDoneAfter;\\r\\n    successfulGrowing = false;\\r\\n\\r\\n    hackDoneAfter;\\r\\n    successfulHacking = false;\\r\\n\\r\\n    securityWeNeedToReduceAfterFullHack;\\r\\n    securityWeNeedToReduceAfterFullGrowth;\\r\\n    originalNumberOfThreadsForFullMoney;\\r\\n\\r\\n    batchesQueue = [];\\r\\n\\r\\n    getAllocatedMemory(machineRunningOn) {\\r\\n        return this.batchesQueue\\r\\n            .reduce((acc, x) => acc.concat(x.jobs), [])\\r\\n            .filter(x => x.machineRunningOn === machineRunningOn)\\r\\n            .reduce((acc, x) => acc + x, 0);\\r\\n    }\\r\\n\\r\\n    thereAreNoJobsRunningAfter() {\\r\\n        return Math.max(...this.batchesQueue.map(x => x.wholeBatchFinishsBefore()));\\r\\n    }\\r\\n}\\r\\n\\r\\nclass BatchOfJobs {\\r\\n    jobs = [];\\r\\n    //6 second window? 2 cycles seems like enough for each step.\\r\\n\\r\\n    startTime;\\r\\n\\r\\n    wholeBatchFinishsBefore() {\\r\\n        return Math.max(...this.jobs.map(x => new Date(x.endBefore)))\\r\\n    }\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass JobHasTo {\\r\\n    executing = false;\\r\\n    ramCost = 0;\\r\\n    machineRunningOn;\\r\\n\\r\\n    constructor(endAfter, endBefore, type) {\\r\\n        this.endAfter = endAfter;\\r\\n        this.endBefore = endBefore;\\r\\n        this.type = type;\\r\\n        // this.types = [\\\"grow\\\", \\\"hack\\\", \\\"weaken-after-hack\\\", \\\"weaken-after-grow\\\",\\r\\n        //     \\\"weaken-dynamic\\\", \\\"grow-dynamic\\\", \\\"hack-dynamic\\\"]\\r\\n    }\\r\\n}\\r\\n\\r\\nexport class Helpers {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    hackMachine(hostName) {\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            this.ns.brutessh(hostName);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            this.ns.ftpcrack(hostName);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            this.ns.relaysmtp(hostName)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            this.ns.httpworm(hostName)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            this.ns.sqlinject(hostName)\\r\\n        }\\r\\n\\r\\n        this.ns.nuke(hostName);\\r\\n        this.ns.killall(hostName);\\r\\n\\r\\n        if (hostName !== \\\"home\\\") {\\r\\n            this.ns\\r\\n                .ls(hostName, '.js')\\r\\n                .map(y => this.ns.rm(y, hostName))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    numberOfPortsWeCanPop() {\\r\\n        let portsWeCanPop = 0;\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        return portsWeCanPop;\\r\\n    }\\r\\n\\r\\n    fileExists(fileName) {\\r\\n        return this.ns.fileExists(fileName, \\\"home\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction createBatchesOfJobs(batchForTarget, ns, targetServer, player) {\\r\\n    if (batchForTarget.prepStage === false) {\\r\\n\\r\\n        if (batchForTarget.batchesQueue.length === 0 || batchForTarget.batchesQueue.every(x => new Date() > new Date(x.startTime))) {\\r\\n            const batch = new BatchOfJobs();\\r\\n\\r\\n            const secondsToPadEndTime = 15;\\r\\n            const msToPadStartTime = 1;\\r\\n\\r\\n            const noJobsRunningAfter = batchForTarget.thereAreNoJobsRunningAfter();\\r\\n\\r\\n            let noMoreJobsAfter = new Date(noJobsRunningAfter);\\r\\n\\r\\n            if (noJobsRunningAfter < 0) {\\r\\n                const defaultStartTime = getWeakenEndDate(ns, targetServer, player);\\r\\n                addSecondsToDate(defaultStartTime, 40);\\r\\n                noMoreJobsAfter = new Date(defaultStartTime);\\r\\n            }\\r\\n\\r\\n            const hackStart = createNewDataFromOldDateAndAddMilliseconds(noMoreJobsAfter, msToPadStartTime);\\r\\n            const hackEnd = createNewDataFromOldDateAndAddSeconds(hackStart, secondsToPadEndTime);\\r\\n\\r\\n            batch.jobs.push(new JobHasTo(hackStart, hackEnd, \\\"hack\\\"));\\r\\n\\r\\n            const weakenAfterhackStart = createNewDataFromOldDateAndAddMilliseconds(hackEnd, msToPadStartTime);\\r\\n            const weakenAfterHackEnd = createNewDataFromOldDateAndAddSeconds(weakenAfterhackStart, secondsToPadEndTime);\\r\\n\\r\\n            batch.jobs.push(new JobHasTo(weakenAfterhackStart, weakenAfterHackEnd, \\\"weaken-after-hack\\\"));\\r\\n\\r\\n            const growStart = createNewDataFromOldDateAndAddMilliseconds(weakenAfterHackEnd, msToPadStartTime);\\r\\n            const growEnd = createNewDataFromOldDateAndAddSeconds(growStart, secondsToPadEndTime);\\r\\n\\r\\n            batch.jobs.push(new JobHasTo(growStart, growEnd, \\\"grow\\\"));\\r\\n\\r\\n            const weakenAfterGrowStart = createNewDataFromOldDateAndAddMilliseconds(growEnd, msToPadStartTime);\\r\\n            const weakenAfterGrowEnd = createNewDataFromOldDateAndAddSeconds(weakenAfterGrowStart, secondsToPadEndTime);\\r\\n\\r\\n            batch.jobs.push(new JobHasTo(weakenAfterGrowStart, weakenAfterGrowEnd, \\\"weaken-after-grow\\\"));\\r\\n\\r\\n            batchForTarget.batchesQueue.push(batch);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nasync function executeJobs(ns, targetNames, batchQueueForDifferentTargets, player, environment) {\\r\\n    const hackScript = 'scripts/advanced-hacks/hack.js';\\r\\n    const growScript = 'scripts/advanced-hacks/grow.js';\\r\\n    const weakenScript = 'scripts/advanced-hacks/weaken.js';\\r\\n\\r\\n    const ramNeededForWeaken = ns.getScriptRam(weakenScript);\\r\\n    const ramNeededForGrow = ns.getScriptRam(growScript);\\r\\n    const ramNeededForHack = ns.getScriptRam(hackScript);\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const batchForTarget = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n\\r\\n        for (let i = 0; i < batchForTarget.batchesQueue.length; i++) {\\r\\n            const batchOfJobs = batchForTarget.batchesQueue[i];\\r\\n\\r\\n            for (let y = 0; y < batchOfJobs.jobs.length; y++) {\\r\\n                const job = batchOfJobs.jobs[y];\\r\\n\\r\\n                const targetServer = ns.getServer(nameOfTarget);\\r\\n\\r\\n                if (job.executing === false) {\\r\\n\\r\\n                    let machineToRunOn;\\r\\n                    let script;\\r\\n                    let numberOfThreads;\\r\\n                    let ramCost;\\r\\n                    let shouldExecute = false;\\r\\n\\r\\n                    if (job.type.startsWith(\\\"weaken\\\")) {\\r\\n                        script = weakenScript;\\r\\n\\r\\n                        let amountToWeaken = targetServer.hackDifficulty - targetServer.minDifficulty;\\r\\n\\r\\n                        if (job.type === \\\"weaken-after-hack\\\") {\\r\\n                            amountToWeaken = batchForTarget.securityWeNeedToReduceAfterFullHack;\\r\\n                        }\\r\\n\\r\\n                        if (job.type === \\\"weaken-after-grow\\\") {\\r\\n                            amountToWeaken = batchForTarget.securityWeNeedToReduceAfterFullGrowth;\\r\\n                        }\\r\\n\\r\\n                        numberOfThreads = getNumberOfThreadsToWeaken(ns, 1, amountToWeaken);\\r\\n                        ramCost = ramNeededForWeaken * numberOfThreads;\\r\\n\\r\\n                        machineToRunOn = getMachineWithEnoughRam(ns, ramCost, environment);\\r\\n\\r\\n                        if (machineToRunOn.cpuCores > 1) {\\r\\n                            numberOfThreads = getNumberOfThreadsToWeaken(ns, machineToRunOn.cpuCores, amountToWeaken);\\r\\n                        }\\r\\n\\r\\n                        const ifStartedNowWeakenDoneAt = getWeakenEndDate(ns, targetServer, player);\\r\\n                        if (new Date(job.endAfter) < ifStartedNowWeakenDoneAt && ifStartedNowWeakenDoneAt < new Date(job.endBefore)) {\\r\\n                            shouldExecute = true;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (job.type.startsWith(\\\"grow\\\")) {\\r\\n                        script = growScript;\\r\\n\\r\\n                        if (job.type !== \\\"grow-dynamic\\\") {\\r\\n                            targetServer.moneyAvailable = 0;\\r\\n                        }\\r\\n\\r\\n                        numberOfThreads = getGrowThreads(ns, targetServer, player, 1);\\r\\n                        ramCost = ramNeededForGrow * numberOfThreads;\\r\\n\\r\\n                        machineToRunOn = getMachineWithEnoughRam(ns, ramCost, environment);\\r\\n\\r\\n                        if(machineToRunOn.cpuCores > 1){\\r\\n                            numberOfThreads = getGrowThreads(ns, targetServer, player, machineToRunOn.cpuCores);\\r\\n                        }\\r\\n\\r\\n                        const ifStartedNowGrowDoneAt = getGrowEndDate(ns, targetServer, player);\\r\\n                        if (new Date(job.endAfter) < ifStartedNowGrowDoneAt && ifStartedNowGrowDoneAt < new Date(job.endBefore)) {\\r\\n                            shouldExecute = true;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (job.type.startsWith(\\\"hack\\\")) {\\r\\n                        script = hackScript;\\r\\n\\r\\n                        if (job.type === \\\"hack\\\") {\\r\\n                            targetServer.moneyAvailable = targetServer.moneyMax;\\r\\n                        }\\r\\n\\r\\n\\r\\n                        numberOfThreads = getHackThreadsForTotalStealing(ns, nameOfTarget, targetServer);\\r\\n\\r\\n                        if (numberOfThreads === -1) {\\r\\n                            numberOfThreads = batchForTarget.originalNumberOfThreadsForFullMoney;\\r\\n                        }\\r\\n\\r\\n                        ramCost = ramNeededForHack * numberOfThreads;\\r\\n\\r\\n                        machineToRunOn = getMachineWithEnoughRam(ns, ramCost, environment);\\r\\n\\r\\n                        const ifStartedNowHackDoneAt = getHackEndDate(ns, targetServer, player);\\r\\n                        if (new Date(job.endAfter) < ifStartedNowHackDoneAt && ifStartedNowHackDoneAt < new Date(job.endBefore)) {\\r\\n                            shouldExecute = true;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (shouldExecute) {\\r\\n                        ns.scp(script, machineToRunOn.hostname);\\r\\n                        const failure = ns.exec(script, machineToRunOn.hostname, numberOfThreads, nameOfTarget);\\r\\n\\r\\n                        if (failure === 0) {\\r\\n                            ns.tprint(\\\"failed exec\\\")\\r\\n                        }\\r\\n\\r\\n                        job.ramCost = ramCost;\\r\\n                        job.executing = true;\\r\\n                        job.machineRunningOn = machineToRunOn.hostname;\\r\\n                        job.pid = failure;\\r\\n\\r\\n                        if (!batchOfJobs.startTime) {\\r\\n                            batchOfJobs.startTime = new Date();\\r\\n                        }\\r\\n\\r\\n                        await ns.sleep(30);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getMachineWithEnoughRam(ns, ramNeeded, enviroment) {\\r\\n    let machineToRunOn;\\r\\n\\r\\n    const helpers = new Helpers(ns);\\r\\n    const portsWeCanPop = helpers.numberOfPortsWeCanPop();\\r\\n    const currentHackingLevel = ns.getHackingLevel();\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.requiredHackingSkill < currentHackingLevel)\\r\\n        .filter(x => x.server.numOpenPortsRequired <= portsWeCanPop || x.server.purchasedByPlayer);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\");\\r\\n\\r\\n    allHackableMachines.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const machinesWithRamAvailable = allHackableMachines\\r\\n        .filter(x => x.server.ramUsed <= x.server.maxRam && x.server.maxRam !== 0);\\r\\n        \\r\\n\\r\\n    const serversWithEnoughRam = machinesWithRamAvailable\\r\\n        .filter(x => (x.server.maxRam - x.server.ramUsed) > ramNeeded)\\r\\n        .sort((b, a) =>(b.server.maxRam - b.server.ramUsed) - (a.server.maxRam - a.server.ramUsed));\\r\\n\\r\\n    for (const potentialServerToRun of serversWithEnoughRam) {\\r\\n        const server = getServer(ns, potentialServerToRun.name);\\r\\n        const freeRam = server.maxRam - server.ramUsed;\\r\\n        if (freeRam > ramNeeded) {\\r\\n            machineToRunOn = server;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (machineToRunOn === undefined) {\\r\\n        const buyOrUpgradeServerFlag = 'buyOrUpgradeServerFlag.txt';\\r\\n        ns.rm(buyOrUpgradeServerFlag);\\r\\n        ns.write(buyOrUpgradeServerFlag, \\\"\\\", \\\"W\\\");\\r\\n        ns.tprint(ramNeeded);\\r\\n    }\\r\\n\\r\\n    return machineToRunOn;\\r\\n}\\r\\n\\r\\nfunction getServer(ns, serverName) {\\r\\n    const server = ns.getServer(serverName);\\r\\n\\r\\n    if (serverName === \\\"home\\\") {\\r\\n        server.maxRam -= 32;\\r\\n        server.ramUsed -= 32;\\r\\n\\r\\n        if (server.ramUsed < 0) {\\r\\n            server.ramUsed = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction prepServerForBatching(targetServer, batchForTarget, ns, player, nameOfTarget) {\\r\\n\\r\\n    const amountToWeaken = targetServer.hackDifficulty - targetServer.minDifficulty;\\r\\n    const serverHasMaxMoney = targetServer.moneyMax === targetServer.moneyAvailable;\\r\\n    const currentTime = new Date();\\r\\n\\r\\n    if (amountToWeaken === 0 && serverHasMaxMoney && batchForTarget.securityWeNeedToReduceAfterFullHack && batchForTarget.securityWeNeedToReduceAfterFullGrowth && batchForTarget.prepStage && batchForTarget.originalNumberOfThreadsForFullMoney) {\\r\\n        batchForTarget.prepStage = false;\\r\\n        batchForTarget.targetMachineSaturatedWithAttacks = false;\\r\\n    }\\r\\n\\r\\n    if (batchForTarget.prepStage) {\\r\\n        batchForTarget.targetMachineSaturatedWithAttacks = false;\\r\\n\\r\\n        if (batchForTarget.successfulWeakening === false) {\\r\\n            if (currentTime > new Date(batchForTarget.weakeningDoneAfter) || !batchForTarget.weakeningDoneAfter) {\\r\\n                if (amountToWeaken !== 0) {\\r\\n                    let endDate = new Date();\\r\\n                    endDate = getWeakenEndDate(ns, targetServer, player);\\r\\n                    addSecondsToDate(endDate, 10);\\r\\n\\r\\n                    const job = new JobHasTo(new Date(), endDate, \\\"weaken-dynamic\\\");\\r\\n                    const batchOfJobs = new BatchOfJobs();\\r\\n                    batchOfJobs.jobs.push(job);\\r\\n\\r\\n                    batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                    batchForTarget.weakeningDoneAfter = endDate;\\r\\n                } else if (amountToWeaken === 0) {\\r\\n                    batchForTarget.successfulWeakening = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (batchForTarget.successfulWeakening && batchForTarget.successfulGrowing === false) {\\r\\n            if (currentTime > new Date(batchForTarget.growDoneAfter) || !batchForTarget.growDoneAfter) {\\r\\n\\r\\n                if (serverHasMaxMoney === false) {\\r\\n\\r\\n                    if (targetServer.moneyAvailable === 0) {\\r\\n                        const growThreads = getGrowThreads(ns, targetServer, player, 1);\\r\\n                        batchForTarget.securityWeNeedToReduceAfterFullGrowth = ns.growthAnalyzeSecurity(growThreads, nameOfTarget, 1);\\r\\n                    }\\r\\n\\r\\n                    let endDate = getGrowEndDate(ns, targetServer, player);\\r\\n                    addSecondsToDate(endDate, 10);\\r\\n\\r\\n                    const job = new JobHasTo(new Date(), endDate, \\\"grow-dynamic\\\");\\r\\n                    const batchOfJobs = new BatchOfJobs();\\r\\n                    batchOfJobs.jobs.push(job);\\r\\n\\r\\n                    batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                    batchForTarget.growDoneAfter = endDate;\\r\\n                }\\r\\n\\r\\n\\r\\n                if (serverHasMaxMoney) {\\r\\n                    batchForTarget.successfulGrowing = true;\\r\\n                    batchForTarget.successfulWeakening = false;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (batchForTarget.successfulGrowing && batchForTarget.successfulHacking === false && batchForTarget.successfulWeakening) {\\r\\n\\r\\n            if (currentTime > new Date(batchForTarget.hackDoneAfter) || !batchForTarget.hackDoneAfter) {\\r\\n                if (serverHasMaxMoney) {\\r\\n                    if (currentTime > new Date(batchForTarget.hackDoneAfter)) {\\r\\n\\r\\n                        batchForTarget.successfulWeakening = false;\\r\\n                        batchForTarget.successfulGrowing = false;\\r\\n                        batchForTarget.successfulHacking = false;\\r\\n                        batchForTarget.hackDoneAfter = undefined;\\r\\n\\r\\n                    } else {\\r\\n                        const hackThreads = getHackThreadsForTotalStealing(ns, nameOfTarget, targetServer);\\r\\n                        batchForTarget.securityWeNeedToReduceAfterFullHack = ns.hackAnalyzeSecurity(hackThreads, nameOfTarget);\\r\\n                        batchForTarget.originalNumberOfThreadsForFullMoney = hackThreads;\\r\\n\\r\\n                        let endDate = getHackEndDate(ns, targetServer, player);\\r\\n                        addSecondsToDate(endDate, 100);\\r\\n\\r\\n                        const job = new JobHasTo(new Date(), endDate, \\\"hack-dynamic\\\");\\r\\n                        const batchOfJobs = new BatchOfJobs();\\r\\n                        batchOfJobs.jobs.push(job);\\r\\n\\r\\n                        batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                        batchForTarget.hackDoneAfter = endDate;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (targetServer.moneyAvailable === 0) {\\r\\n                    batchForTarget.successfulGrowing = false;\\r\\n                    batchForTarget.successfulWeakening = false;\\r\\n                    batchForTarget.successfulHacking = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nfunction giveBatchQueueStructure(targetNames, batchQueue) {\\r\\n    for (const target of targetNames) {\\r\\n        let targetObject = batchQueue.get(target);\\r\\n        targetObject = new BatchQueueForTarget(targetObject);\\r\\n\\r\\n        for (let i = 0; i < targetObject.batchesQueue.length; i++) {\\r\\n            targetObject.batchesQueue[i] = new BatchOfJobs(targetObject.batchesQueue[i]);\\r\\n        }\\r\\n\\r\\n        batchQueue.set(target, targetObject);\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction cleanFinishedJobsFromQueue(targetNames, batchQueue) {\\r\\n    for (const target of targetNames) {\\r\\n        const batch = batchQueue.get(target);\\r\\n        const currentTime = new Date();\\r\\n\\r\\n        for (let i = batch.batchesQueue.length - 1; i > -1; i--) {\\r\\n            const job = batch.batchesQueue[i];\\r\\n            if (job.wholeBatchFinishsBefore() < currentTime) {\\r\\n                batch.batchesQueue.splice(i, 1);\\r\\n                batch.targetMachineSaturatedWithAttacks = true;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction addNewTargetsToQueueIfNeeded(batchQueue, targetNames, ns, enviroment) {\\r\\n    if ((batchQueue.size < 6 ||targetNames.map(x => batchQueue.get(x)).every(x => x.targetMachineSaturatedWithAttacks)) && batchQueue.size < 10) {\\r\\n        const helpers = new Helpers(ns);\\r\\n        const portsWeCanPop = helpers.numberOfPortsWeCanPop();\\r\\n        const currentHackingLevel = ns.getHackingLevel();\\r\\n\\r\\n        const allHackableMachines = enviroment\\r\\n            .filter(x => x.server.requiredHackingSkill < currentHackingLevel)\\r\\n            .filter(x => x.server.numOpenPortsRequired <= portsWeCanPop || x.server.purchasedByPlayer);\\r\\n\\r\\n        allHackableMachines\\r\\n            .filter(x => !x.server.hasAdminRights)\\r\\n            .map(x => helpers.hackMachine(x.name));\\r\\n\\r\\n        // we can probabably refine this to account for difficulty. \\r\\n        const allMachinesByOrderOfValue = allHackableMachines\\r\\n            .filter(x => !x.server.purchasedByPlayer && x.server.moneyMax !== 0 && !targetNames.includes(x.name))\\r\\n            .sort((a, b) => b.server.moneyMax - a.server.moneyMax);\\r\\n\\r\\n        const mostValuableMachine = allMachinesByOrderOfValue[0];\\r\\n\\r\\n        batchQueue.set(mostValuableMachine.name, new BatchQueueForTarget());\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getHackThreadsForTotalStealing(ns, theTarget, targetServer) {\\r\\n    return Math.ceil(ns.hackAnalyzeThreads(theTarget, targetServer.moneyAvailable));\\r\\n}\\r\\n\\r\\nfunction getGrowThreads(ns, serverToHack, player, cpuCores) {\\r\\n    return Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, cpuCores));\\r\\n}\\r\\n\\r\\nfunction createNewDataFromOldDateAndAddSeconds(date, secondsToAdd) {\\r\\n    const newDate = new Date(date);\\r\\n    addSecondsToDate(newDate, secondsToAdd);\\r\\n    return newDate;\\r\\n}\\r\\n\\r\\nfunction createNewDataFromOldDateAndAddMilliseconds(date, secondsToAdd) {\\r\\n    const newDate = new Date(date);\\r\\n    addMillisecondsToDate(newDate, secondsToAdd);\\r\\n    return newDate;\\r\\n}\\r\\n\\r\\n\\r\\nfunction addSecondsToDate(date, secondsToAdd) {\\r\\n    date.setSeconds(date.getSeconds() + secondsToAdd);\\r\\n}\\r\\n\\r\\nfunction addMillisecondsToDate(date, msToAdd) {\\r\\n    date.setMilliseconds(date.getMilliseconds() + msToAdd);\\r\\n}\\r\\n\\r\\nfunction getWeakenEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    const howLongToWeaken = ns.formulas.hacking.weakenTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToWeaken);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getGrowEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    const howLongToGrow = ns.formulas.hacking.growTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToGrow);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getHackEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    const howLongToHack = ns.formulas.hacking.hackTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToHack);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getNumberOfThreadsToWeaken(ns, cpuCores, amountToWeaken) {\\r\\n    let numberOfThreadsToWeaken = 0;\\r\\n    let foundNumberOfThreads = false;\\r\\n    while (!foundNumberOfThreads) {\\r\\n        numberOfThreadsToWeaken++;\\r\\n\\r\\n        const amountNumberOfThreadsWillWeaken = Math.ceil(ns.weakenAnalyze(numberOfThreadsToWeaken, cpuCores));\\r\\n        if (amountNumberOfThreadsWillWeaken > amountToWeaken) {\\r\\n            foundNumberOfThreads = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //add a small margin\\r\\n    numberOfThreadsToWeaken += 20;\\r\\n    return numberOfThreadsToWeaken;\\r\\n}\\r\\n\",\"filename\":\"scripts/batch-dispatch.js\",\"server\":\"home\"}}],[\"scripts/advanced-hacks/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"server\":\"home\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"CLOUD-000\",\"CLOUD-001\",\"CLOUD-002\",\"CLOUD-003\",\"CLOUD-004\",\"CLOUD-005\",\"CLOUD-006\",\"CLOUD-007\",\"CLOUD-008\",\"CLOUD-009\",\"CLOUD-010\",\"CLOUD-011\",\"CLOUD-012\",\"CLOUD-013\",\"CLOUD-014\",\"CLOUD-015\",\"CLOUD-016\",\"CLOUD-017\",\"CLOUD-018\",\"CLOUD-019\",\"CLOUD-020\",\"CLOUD-021\",\"CLOUD-022\",\"CLOUD-023\",\"CLOUD-024\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[[\"stuff.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"stuff.txt\",\"text\":\"[{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"91.6.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":24.188,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":27239005425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":759,\\\"serverGrowth\\\":79}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":37.604,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":555084.6,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":555084.6,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":562817.85,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":563201.1,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":563584.35,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"alpha-ent\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"alpha-ent\\\",\\\"ip\\\":\\\"18.2.1.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":42.07,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":16672443200,\\\"moneyMax\\\":16672443200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":59}},{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"91.6.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":24.188,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":27239005425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":759,\\\"serverGrowth\\\":79}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":37.604,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":564846.1,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":37.604,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":558440.35,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":37.604,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":558440.35,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":37.604,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":558440.35,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":558440.35,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"91.6.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":24.188,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":27239005425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":759,\\\"serverGrowth\\\":79}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":37.604,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":550936.35,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"91.6.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":24.188,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":27239005425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":759,\\\"serverGrowth\\\":79}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":37.604,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":550936.35,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"91.6.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":24.188,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":27239005425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":759,\\\"serverGrowth\\\":79}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":37.604,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":550936.35,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":550936.35,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":551319.6,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":559509.6,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":562776.85,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}][{\\\"name\\\":\\\"alpha-ent\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"alpha-ent\\\",\\\"ip\\\":\\\"18.2.1.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":42.07,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":16672443200,\\\"moneyMax\\\":16672443200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":59}},{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"91.6.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":24.188,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":27239005425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":759,\\\"serverGrowth\\\":79}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":37.604,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"home\\\",\\\"server\\\":{\\\"hostname\\\":\\\"home\\\",\\\"ip\\\":\\\"43.3.1.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":6,\\\"isConnectedTo\\\":true,\\\"ramUsed\\\":573726.6,\\\"maxRam\\\":1048544,\\\"organizationName\\\":\\\"Home PC\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":22587.25,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":13170.5,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":841.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}}]\"}}],[\"data/stockHistory.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/stockHistory.txt\",\"text\":\"[[\\\"ECP\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.43467298750124816,\\\"bias\\\":0.06532701249875184,\\\"bid\\\":54336.54583705431,\\\"ask\\\":54554.32758389621,\\\"price\\\":54445.43671047526,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.43494598473810847,\\\"bias\\\":0.06505401526189153,\\\"bid\\\":54563.61464529544,\\\"ask\\\":54782.30648756116,\\\"price\\\":54672.9605664283,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.43501340399425525,\\\"bias\\\":0.06498659600574475,\\\"bid\\\":54507.1257436106,\\\"ask\\\":54725.59117745273,\\\"price\\\":54616.358460531665,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.6568328369319244,\\\"bias\\\":0.19649313269556556,\\\"bid\\\":35782.99581597911,\\\"ask\\\":35926.41463688485,\\\"price\\\":35854.705226431994,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.6879339308024978,\\\"bias\\\":0.19007836515969867,\\\"bid\\\":39381.10784612351,\\\"ask\\\":39538.947957731216,\\\"price\\\":39460.027901927366,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.49971852604813405,\\\"bias\\\":0.19266610350307145,\\\"bid\\\":41154.313328452445,\\\"ask\\\":41319.26047606146,\\\"price\\\":41236.786902256936,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5895646198929306,\\\"bias\\\":0.19330956119178266,\\\"bid\\\":39749.210575210505,\\\"ask\\\":39908.52604845784,\\\"price\\\":39828.86831183418,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.6522925510725056,\\\"bias\\\":0.18781434438372302,\\\"bid\\\":43001.0500069858,\\\"ask\\\":43173.39890480939,\\\"price\\\":43087.2244558976,\\\"maxShares\\\":24100000,\\\"investedShares\\\":23136000,\\\"averagePrice\\\":40493.06978717967,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.6521733130018619,\\\"bias\\\":0.1558674761733414,\\\"bid\\\":46215.598584966836,\\\"ask\\\":46400.83144502681,\\\"price\\\":46308.215014996815,\\\"maxShares\\\":24100000,\\\"investedShares\\\":24100000,\\\"averagePrice\\\":42180.28102831216,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.6562008370193244,\\\"bias\\\":0.15754775658329845,\\\"bid\\\":49576.97549468943,\\\"ask\\\":49775.68080729342,\\\"price\\\":49676.328150991416,\\\"maxShares\\\":24100000,\\\"investedShares\\\":24100000,\\\"averagePrice\\\":42180.28102831216,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.6027065561486028,\\\"bias\\\":0.1634106098201339,\\\"bid\\\":52736.6938966179,\\\"ask\\\":52948.063411233605,\\\"price\\\":52842.37865392575,\\\"maxShares\\\":24100000,\\\"investedShares\\\":19521000,\\\"averagePrice\\\":34166.02763293285,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.37344887241101815,\\\"bias\\\":0.1284612047386952,\\\"bid\\\":51460.188925125636,\\\"ask\\\":51666.44218735057,\\\"price\\\":51563.315556238085,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5211169388612071,\\\"bias\\\":0.1273261648480571,\\\"bid\\\":49465.53507048651,\\\"ask\\\":49663.79372808369,\\\"price\\\":49564.66439928513,\\\"maxShares\\\":24100000,\\\"investedShares\\\":15665000,\\\"averagePrice\\\":32143.519035762176,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5655783963528951,\\\"bias\\\":0.09247872985077854,\\\"bid\\\":49955.901970147184,\\\"ask\\\":50156.126026139755,\\\"price\\\":50056.01399814345,\\\"maxShares\\\":24100000,\\\"investedShares\\\":20244000,\\\"averagePrice\\\":41539.316907754226,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.4417861618917558,\\\"bias\\\":0.061712183233930074,\\\"bid\\\":48722.42011323429,\\\"ask\\\":48917.700354169116,\\\"price\\\":48820.06023370172,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.43587848177781585,\\\"bias\\\":0.06706264533086193,\\\"bid\\\":46989.406833939945,\\\"ask\\\":47177.74112986753,\\\"price\\\":47083.573981903755,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.43177656983487217,\\\"bias\\\":0.07074907069656233,\\\"bid\\\":45496.152813180524,\\\"ask\\\":45678.50212305299,\\\"price\\\":45587.32746811677,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.4840296322379622,\\\"bias\\\":0.07730470467931028,\\\"bid\\\":44847.30912017412,\\\"ask\\\":45027.05785412272,\\\"price\\\":44937.183487148424,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5794083559484622,\\\"bias\\\":0.0819932626408465,\\\"bid\\\":45724.60346113374,\\\"ask\\\":45907.86840486574,\\\"price\\\":45816.23593299978,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.4401374685145312,\\\"bias\\\":0.08486211469758004,\\\"bid\\\":45571.98158577487,\\\"ask\\\":45754.63481858358,\\\"price\\\":45663.30820217919,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.4740983448579605,\\\"bias\\\":0.0899992886023327,\\\"bid\\\":42834.86646252182,\\\"ask\\\":43006.549294034914,\\\"price\\\":42920.70787827837,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5890084399491551,\\\"bias\\\":0.09056197915910136,\\\"bid\\\":44322.544151456736,\\\"ask\\\":44500.18961899765,\\\"price\\\":44411.36688522719,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.45613044261545804,\\\"bias\\\":0.08897357929803917,\\\"bid\\\":44902.16705177678,\\\"ask\\\":45082.13565719473,\\\"price\\\":44992.15135448575,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5917337381064107,\\\"bias\\\":0.09421301753915179,\\\"bid\\\":44308.321729243726,\\\"ask\\\":44485.91019308838,\\\"price\\\":44397.11596116603,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5966848337166614,\\\"bias\\\":0.09933438920010784,\\\"bid\\\":46595.861376218854,\\\"ask\\\":46782.61833564255,\\\"price\\\":46689.23985593071,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.4471351814859436,\\\"bias\\\":0.10562711842552441,\\\"bid\\\":49052.56051103075,\\\"ask\\\":49249.163959972764,\\\"price\\\":49150.862235501736,\\\"maxShares\\\":24100000,\\\"investedShares\\\":1205000,\\\"averagePrice\\\":2404.7470813760388,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5192664080524733,\\\"bias\\\":0.0687879698673739,\\\"bid\\\":48354.07593807857,\\\"ask\\\":48547.87984965405,\\\"price\\\":48450.97789386628,\\\"maxShares\\\":24100000,\\\"investedShares\\\":241000,\\\"averagePrice\\\":480.9494162752077,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5076514406219603,\\\"bias\\\":0.058546520154939885,\\\"bid\\\":47763.576339721236,\\\"ask\\\":47955.013519439555,\\\"price\\\":47859.29492958042,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5596494600653656,\\\"bias\\\":0.06058208333778692,\\\"bid\\\":48915.928435003065,\\\"ask\\\":49111.98426039386,\\\"price\\\":49013.956347698484,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.5620431026139656,\\\"bias\\\":0.06383551278164912,\\\"bid\\\":51376.61291825734,\\\"ask\\\":51582.531206506865,\\\"price\\\":51479.57206238213,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.49297905485782606,\\\"bias\\\":0.06626158897897994,\\\"bid\\\":53428.61656672331,\\\"ask\\\":53642.75931849378,\\\"price\\\":53535.68794260853,\\\"maxShares\\\":24100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0046,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"MGCP\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.41867335851186627,\\\"bias\\\":0.08132664148813373,\\\"bid\\\":46180.47143228851,\\\"ask\\\":46458.38801061722,\\\"price\\\":46319.42972145287,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.41835566458314655,\\\"bias\\\":0.08164433541685345,\\\"bid\\\":46000.77426990065,\\\"ask\\\":46277.60942097326,\\\"price\\\":46139.19184543696,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.4184347591280314,\\\"bias\\\":0.08156524087196859,\\\"bid\\\":46045.33841861534,\\\"ask\\\":46322.44175914863,\\\"price\\\":46183.890088881984,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3236084938437063,\\\"bias\\\":0.1880147497462285,\\\"bid\\\":37660.98869585517,\\\"ask\\\":37887.63456563964,\\\"price\\\":37774.31163074742,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6800404970478838,\\\"bias\\\":0.18392839125656335,\\\"bid\\\":37207.45130474261,\\\"ask\\\":37431.36776194263,\\\"price\\\":37319.40953334261,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6809968706346103,\\\"bias\\\":0.18687435499667915,\\\"bid\\\":40058.179738017396,\\\"ask\\\":40299.25203333145,\\\"price\\\":40178.715885674435,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6846231092163255,\\\"bias\\\":0.18930411197725672,\\\"bid\\\":42302.752582078654,\\\"ask\\\":42557.33283833989,\\\"price\\\":42430.04271020926,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6701082080722329,\\\"bias\\\":0.1804358258981551,\\\"bid\\\":45308.35186924525,\\\"ask\\\":45581.01998480739,\\\"price\\\":45444.68592702631,\\\"maxShares\\\":16300000,\\\"investedShares\\\":12511727.2,\\\"averagePrice\\\":38786.06405046693,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6762964444996219,\\\"bias\\\":0.1795398922738497,\\\"bid\\\":47101.21716667346,\\\"ask\\\":47384.67484270157,\\\"price\\\":47242.94600468751,\\\"maxShares\\\":16300000,\\\"investedShares\\\":15469872.7,\\\"averagePrice\\\":45206.30771432061,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6797198361539558,\\\"bias\\\":0.18212187230758248,\\\"bid\\\":50039.993759618774,\\\"ask\\\":50341.137152354735,\\\"price\\\":50190.56545598675,\\\"maxShares\\\":16300000,\\\"investedShares\\\":16300000,\\\"averagePrice\\\":45301.80092918231,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6089526070397582,\\\"bias\\\":0.17831073446453782,\\\"bid\\\":54480.92797890496,\\\"ask\\\":54808.79715430461,\\\"price\\\":54644.862566604745,\\\"maxShares\\\":16300000,\\\"investedShares\\\":13203000,\\\"averagePrice\\\":36694.45875263769,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.4742714506453238,\\\"bias\\\":0.16061725864502002,\\\"bid\\\":55734.938743761246,\\\"ask\\\":56070.35462386411,\\\"price\\\":55902.64668381268,\\\"maxShares\\\":16300000,\\\"investedShares\\\":7009000,\\\"averagePrice\\\":23926.48017591212,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6458625354432027,\\\"bias\\\":0.1478083890023072,\\\"bid\\\":58865.416073042325,\\\"ask\\\":59219.67133526718,\\\"price\\\":59042.54370415476,\\\"maxShares\\\":16300000,\\\"investedShares\\\":16300000,\\\"averagePrice\\\":55642.977153283886,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6484393311164854,\\\"bias\\\":0.15170007733166258,\\\"bid\\\":62092.64558548099,\\\"ask\\\":62466.322489706545,\\\"price\\\":62279.484037593706,\\\"maxShares\\\":16300000,\\\"investedShares\\\":16300000,\\\"averagePrice\\\":55642.977153283886,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.5325161877829288,\\\"bias\\\":0.1475559434444662,\\\"bid\\\":65257.584223878315,\\\"ask\\\":65650.30790025064,\\\"price\\\":65453.946062064504,\\\"maxShares\\\":16300000,\\\"investedShares\\\":9780000,\\\"averagePrice\\\":33385.7862919704,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.37016807825208686,\\\"bias\\\":0.13170690214163328,\\\"bid\\\":63037.74721920488,\\\"ask\\\":63417.11179625122,\\\"price\\\":63227.42950772809,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3662294443865212,\\\"bias\\\":0.13600835656889898,\\\"bid\\\":57962.06374162551,\\\"ask\\\":58310.882580592166,\\\"price\\\":58136.473161108835,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.36108353421758727,\\\"bias\\\":0.1430606473789387,\\\"bid\\\":53272.041869326174,\\\"ask\\\":53592.63590264213,\\\"price\\\":53432.33888598418,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.5255614796858038,\\\"bias\\\":0.14258406613902297,\\\"bid\\\":51747.598118590824,\\\"ask\\\":52059.01796684713,\\\"price\\\":51903.308042719,\\\"maxShares\\\":16300000,\\\"investedShares\\\":9943000,\\\"averagePrice\\\":31090.600363398135,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.4196865268993472,\\\"bias\\\":0.13069334439630814,\\\"bid\\\":52594.86279538048,\\\"ask\\\":52911.38152835169,\\\"price\\\":52753.12216186611,\\\"maxShares\\\":16300000,\\\"investedShares\\\":2445000,\\\"averagePrice\\\":7645.229597556918,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3855839476021253,\\\"bias\\\":0.11580037743310179,\\\"bid\\\":49762.87648516006,\\\"ask\\\":50062.35217112894,\\\"price\\\":49912.61432814449,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.5131984805685602,\\\"bias\\\":0.11412629667460528,\\\"bid\\\":48905.25639790064,\\\"ask\\\":49199.57087973353,\\\"price\\\":49052.41363881709,\\\"maxShares\\\":16300000,\\\"investedShares\\\":9454000,\\\"averagePrice\\\":28273.259711753853,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.4590083858957932,\\\"bias\\\":0.10416228837068231,\\\"bid\\\":49120.3508485675,\\\"ask\\\":49415.95978045457,\\\"price\\\":49268.155314510965,\\\"maxShares\\\":16300000,\\\"investedShares\\\":2934000,\\\"averagePrice\\\":8774.459910544287,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.5316599624494008,\\\"bias\\\":0.09285673886722945,\\\"bid\\\":49544.278305989814,\\\"ask\\\":49842.43845627662,\\\"price\\\":49693.35838113319,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.5116735647098634,\\\"bias\\\":0.09501803649864382,\\\"bid\\\":48562.9315996827,\\\"ask\\\":48855.18595233876,\\\"price\\\":48709.05877601072,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.4391965440819694,\\\"bias\\\":0.09893619181045582,\\\"bid\\\":49116.42426166383,\\\"ask\\\":49412.00956313825,\\\"price\\\":49264.216912401054,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.40075508793403586,\\\"bias\\\":0.1023367369309719,\\\"bid\\\":48038.52968322856,\\\"ask\\\":48327.62815674846,\\\"price\\\":48183.0789199885,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.5083753283473527,\\\"bias\\\":0.10447036097301976,\\\"bid\\\":47676.729265398535,\\\"ask\\\":47963.65040440797,\\\"price\\\":47820.18983490327,\\\"maxShares\\\":16300000,\\\"investedShares\\\":4238000,\\\"averagePrice\\\":12468.131982871397,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.45828507778153366,\\\"bias\\\":0.08739636112686489,\\\"bid\\\":48233.11898060059,\\\"ask\\\":48523.38850305156,\\\"price\\\":48378.2537418261,\\\"maxShares\\\":16300000,\\\"investedShares\\\":3260000,\\\"averagePrice\\\":9590.870756054925,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.4257031406581733,\\\"bias\\\":0.0768674057710787,\\\"bid\\\":47571.81951355392,\\\"ask\\\":47858.10929999457,\\\"price\\\":47714.96440677424,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.4213232483442877,\\\"bias\\\":0.08142822850104553,\\\"bid\\\":46750.0468615578,\\\"ask\\\":47031.391175669494,\\\"price\\\":46890.719018613665,\\\"maxShares\\\":16300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0043,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"BLD\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.43336423819003556,\\\"bias\\\":0.06663576180996444,\\\"bid\\\":33383.45531031756,\\\"ask\\\":33450.28905468255,\\\"price\\\":33416.872182500054,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.4329041632466243,\\\"bias\\\":0.06709583675337571,\\\"bid\\\":33154.54555889408,\\\"ask\\\":33220.92102547845,\\\"price\\\":33187.73329218627,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.43278927881413126,\\\"bias\\\":0.06721072118586874,\\\"bid\\\":33211.3142249605,\\\"ask\\\":33277.80334252799,\\\"price\\\":33244.55878374424,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5371810207641589,\\\"bias\\\":0.11618469212191951,\\\"bid\\\":17977.18940697566,\\\"ask\\\":18013.17977615879,\\\"price\\\":17995.184591567224,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.6166018124852869,\\\"bias\\\":0.12168619795565716,\\\"bid\\\":19073.20675905791,\\\"ask\\\":19111.391357174154,\\\"price\\\":19092.29905811603,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.49997177106109375,\\\"bias\\\":0.12648874583748465,\\\"bid\\\":20150.70469765346,\\\"ask\\\":20191.0464487999,\\\"price\\\":20170.875573226684,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.37480373377098525,\\\"bias\\\":0.12883141528953296,\\\"bid\\\":20122.723835164372,\\\"ask\\\":20163.009568568108,\\\"price\\\":20142.866701866238,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5568398356989815,\\\"bias\\\":0.129071871641252,\\\"bid\\\":20231.704395834553,\\\"ask\\\":20272.20830853892,\\\"price\\\":20251.956352186742,\\\"maxShares\\\":12900000,\\\"investedShares\\\":9675000,\\\"averagePrice\\\":14702.768048652268,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.49496502824506317,\\\"bias\\\":0.0860161391452165,\\\"bid\\\":20675.36866030703,\\\"ask\\\":20716.760789757092,\\\"price\\\":20696.064725032058,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5852118776350528,\\\"bias\\\":0.08686077723946195,\\\"bid\\\":21711.70108348515,\\\"ask\\\":21755.16795252115,\\\"price\\\":21733.434518003152,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5868754998388546,\\\"bias\\\":0.09052417903717125,\\\"bid\\\":22888.920563379284,\\\"ask\\\":22934.744228170835,\\\"price\\\":22911.83239577506,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5917737488001875,\\\"bias\\\":0.0978291503231602,\\\"bid\\\":24447.070180005117,\\\"ask\\\":24496.013263448553,\\\"price\\\":24471.541721726833,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.4655147922014662,\\\"bias\\\":0.09890467081602872,\\\"bid\\\":26173.625783793806,\\\"ask\\\":26226.025435012594,\\\"price\\\":26199.825609403186,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5791911656589493,\\\"bias\\\":0.09913407804656693,\\\"bid\\\":29388.994049116085,\\\"ask\\\":29447.83087403923,\\\"price\\\":29418.41246157766,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5795941927036201,\\\"bias\\\":0.10013305252492932,\\\"bid\\\":31903.84713533181,\\\"ask\\\":31967.7187011683,\\\"price\\\":31935.78291825005,\\\"maxShares\\\":12900000,\\\"investedShares\\\":11997000,\\\"averagePrice\\\":27999.29602948663,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.57833698370931,\\\"bias\\\":0.08033410574025257,\\\"bid\\\":33939.83352181186,\\\"ask\\\":34007.78113647014,\\\"price\\\":33973.80732914101,\\\"maxShares\\\":12900000,\\\"investedShares\\\":12900000,\\\"averagePrice\\\":30106.769924179174,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.4727919023240965,\\\"bias\\\":0.08053769757696566,\\\"bid\\\":34113.79355669811,\\\"ask\\\":34182.0894396945,\\\"price\\\":34147.94149819631,\\\"maxShares\\\":12900000,\\\"investedShares\\\":1548000,\\\"averagePrice\\\":3612.8123909014957,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5150073922058414,\\\"bias\\\":0.06490470106450019,\\\"bid\\\":36725.33532430678,\\\"ask\\\":36798.859519150225,\\\"price\\\":36762.09742172848,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.4391190111685346,\\\"bias\\\":0.06337724166008335,\\\"bid\\\":35732.36556713972,\\\"ask\\\":35803.901834541386,\\\"price\\\":35768.13370084057,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.4342783868768081,\\\"bias\\\":0.06929023674730056,\\\"bid\\\":32204.40554194355,\\\"ask\\\":32268.8788263118,\\\"price\\\":32236.64218412767,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.47872994444807104,\\\"bias\\\":0.07133768311469607,\\\"bid\\\":30816.100806922284,\\\"ask\\\":30877.794702431616,\\\"price\\\":30846.947754676938,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5686715651147836,\\\"bias\\\":0.07282926749189156,\\\"bid\\\":32336.604310433686,\\\"ask\\\":32401.342257001117,\\\"price\\\":32368.97328371741,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.4515098113582248,\\\"bias\\\":0.07571893778338479,\\\"bid\\\":32057.972986557466,\\\"ask\\\":32122.15311265669,\\\"price\\\":32090.06304960709,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.4207329274755232,\\\"bias\\\":0.08437886446967696,\\\"bid\\\":29503.055675615153,\\\"ask\\\":29562.12085214292,\\\"price\\\":29532.588263879046,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.41559595267243543,\\\"bias\\\":0.08909882400485686,\\\"bid\\\":26930.20648471012,\\\"ask\\\":26984.120812006855,\\\"price\\\":26957.1636483585,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.4190280777250343,\\\"bias\\\":0.09476326668503887,\\\"bid\\\":25178.59208200913,\\\"ask\\\":25228.999673764905,\\\"price\\\":25203.795877887023,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5934660952159069,\\\"bias\\\":0.09649602431803872,\\\"bid\\\":25893.021033253073,\\\"ask\\\":25944.858913199507,\\\"price\\\":25918.939973226294,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.592451064080384,\\\"bias\\\":0.09560409122913294,\\\"bid\\\":28157.84930202589,\\\"ask\\\":28214.221372700624,\\\"price\\\":28186.035337363264,\\\"maxShares\\\":12900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.592850331436513,\\\"bias\\\":0.10028682067889061,\\\"bid\\\":29921.07834181807,\\\"ask\\\":29980.980400560442,\\\"price\\\":29951.029371189255,\\\"maxShares\\\":12900000,\\\"investedShares\\\":1935000,\\\"averagePrice\\\":4538.570824635289,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.5824655634218625,\\\"bias\\\":0.0857808112859072,\\\"bid\\\":31927.54703039876,\\\"ask\\\":31991.46604347263,\\\"price\\\":31959.506536935693,\\\"maxShares\\\":12900000,\\\"investedShares\\\":12900000,\\\"averagePrice\\\":30257.138830901928,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.502369892662951,\\\"bias\\\":0.08691234387209734,\\\"bid\\\":33827.87919916214,\\\"ask\\\":33895.60268104232,\\\"price\\\":33861.74094010225,\\\"maxShares\\\":12900000,\\\"investedShares\\\":5934000,\\\"averagePrice\\\":13918.283862214876,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"CLRK\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5948098526743051,\\\"bias\\\":0.09480985267430508,\\\"bid\\\":23985.378162723067,\\\"ask\\\":24178.031802584297,\\\"price\\\":24081.704982653682,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":21278.343893137106,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5954558375604188,\\\"bias\\\":0.09545583756041875,\\\"bid\\\":24148.80201946151,\\\"ask\\\":24342.768300742326,\\\"price\\\":24245.785160101917,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":21278.343893137106,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5956171306547189,\\\"bias\\\":0.09561713065471888,\\\"bid\\\":24108.066274990902,\\\"ask\\\":24301.705361537017,\\\"price\\\":24204.88581826396,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":21278.343893137106,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.3440765976932221,\\\"bias\\\":0.16825177476928743,\\\"bid\\\":8722.99856394769,\\\"ask\\\":8793.062809441244,\\\"price\\\":8758.030686694468,\\\"maxShares\\\":14400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6689822880462073,\\\"bias\\\":0.17517342434761685,\\\"bid\\\":8178.417611921788,\\\"ask\\\":8244.10771322236,\\\"price\\\":8211.262662572071,\\\"maxShares\\\":14400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6773334417955261,\\\"bias\\\":0.17995848645020762,\\\"bid\\\":10001.759265617833,\\\"ask\\\":10082.094681405924,\\\"price\\\":10041.926973511881,\\\"maxShares\\\":14400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6729144882482678,\\\"bias\\\":0.18406869943672033,\\\"bid\\\":11463.682516851228,\\\"ask\\\":11555.760288070915,\\\"price\\\":11509.721402461068,\\\"maxShares\\\":14400000,\\\"investedShares\\\":5040000,\\\"averagePrice\\\":4054.9032482326998,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.4282715934903084,\\\"bias\\\":0.16264041337568702,\\\"bid\\\":11286.113824934842,\\\"ask\\\":11376.765341600993,\\\"price\\\":11331.439583267917,\\\"maxShares\\\":14400000,\\\"investedShares\\\":432000,\\\"averagePrice\\\":347.56313556280287,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6313777048169255,\\\"bias\\\":0.142210015419295,\\\"bid\\\":12222.079632217425,\\\"ask\\\":12320.248946532425,\\\"price\\\":12271.164289374921,\\\"maxShares\\\":14400000,\\\"investedShares\\\":13824000,\\\"averagePrice\\\":11191.137347754691,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6284410106401043,\\\"bias\\\":0.1340754176105463,\\\"bid\\\":14515.056970191294,\\\"ask\\\":14631.643773164722,\\\"price\\\":14573.350371678012,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":11657.434737244468,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6247334214544903,\\\"bias\\\":0.12723365793466979,\\\"bid\\\":16658.68239164757,\\\"ask\\\":16792.487069492134,\\\"price\\\":16725.58473056986,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":11657.434737244468,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5204940850226482,\\\"bias\\\":0.1262277624704261,\\\"bid\\\":17514.859313863293,\\\"ask\\\":17655.540914777856,\\\"price\\\":17585.200114320574,\\\"maxShares\\\":14400000,\\\"investedShares\\\":8208000,\\\"averagePrice\\\":6644.7378002293435,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.383690740644919,\\\"bias\\\":0.11901338764379799,\\\"bid\\\":15961.702527787023,\\\"ask\\\":16089.908973793355,\\\"price\\\":16025.80575079019,\\\"maxShares\\\":14400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5535219930736054,\\\"bias\\\":0.11840559526445238,\\\"bid\\\":15500.247758045432,\\\"ask\\\":15624.747740037763,\\\"price\\\":15562.49774904159,\\\"maxShares\\\":14400000,\\\"investedShares\\\":10800000,\\\"averagePrice\\\":11571.960994389041,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.40107865668111164,\\\"bias\\\":0.10252082048897804,\\\"bid\\\":14311.977692517203,\\\"ask\\\":14426.933336633805,\\\"price\\\":14369.455514575504,\\\"maxShares\\\":14400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5229820784466558,\\\"bias\\\":0.10315308282416696,\\\"bid\\\":14161.29057096058,\\\"ask\\\":14275.035876751428,\\\"price\\\":14218.163223856003,\\\"maxShares\\\":14400000,\\\"investedShares\\\":9216000,\\\"averagePrice\\\":8996.673430598325,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5950184788644931,\\\"bias\\\":0.09660973824899499,\\\"bid\\\":15003.115211277684,\\\"ask\\\":15123.62216076586,\\\"price\\\":15063.368686021777,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":14057.3022353099,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5982412810078056,\\\"bias\\\":0.10219029709702998,\\\"bid\\\":16475.531521894616,\\\"ask\\\":16607.86510841587,\\\"price\\\":16541.698315155238,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":14057.3022353099,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6044820816041306,\\\"bias\\\":0.10686744319444275,\\\"bid\\\":18485.29173695639,\\\"ask\\\":18633.767975807452,\\\"price\\\":18559.52985638192,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":14057.3022353099,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.4527699783880448,\\\"bias\\\":0.10755903858993665,\\\"bid\\\":18843.45552609497,\\\"ask\\\":18994.808582529462,\\\"price\\\":18919.132054312206,\\\"maxShares\\\":14400000,\\\"investedShares\\\":3168000,\\\"averagePrice\\\":3445.6547054453486,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5874807615856651,\\\"bias\\\":0.08915445924251242,\\\"bid\\\":19632.380738706033,\\\"ask\\\":19790.070543836202,\\\"price\\\":19711.22564127111,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":19100.84814498381,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.589112290040647,\\\"bias\\\":0.09263276059869452,\\\"bid\\\":21154.347718066358,\\\"ask\\\":21324.26215756889,\\\"price\\\":21239.304937817644,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":19100.84814498381,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5808542581193844,\\\"bias\\\":0.098253332861307,\\\"bid\\\":22657.73006324033,\\\"ask\\\":22839.719862945072,\\\"price\\\":22748.724963092696,\\\"maxShares\\\":14400000,\\\"investedShares\\\":13392000,\\\"averagePrice\\\":17763.788774834942,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.4715900270295739,\\\"bias\\\":0.08528427846731501,\\\"bid\\\":22270.926884808738,\\\"ask\\\":22449.809831674676,\\\"price\\\":22360.36835824171,\\\"maxShares\\\":14400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.4885585908714335,\\\"bias\\\":0.09035757441267811,\\\"bid\\\":21740.570420391476,\\\"ask\\\":21915.193475976954,\\\"price\\\":21827.88194818421,\\\"maxShares\\\":14400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.42322743139896635,\\\"bias\\\":0.08971494670073954,\\\"bid\\\":19092.17232253227,\\\"ask\\\":19245.523104239357,\\\"price\\\":19168.847713385818,\\\"maxShares\\\":14400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5910428104793024,\\\"bias\\\":0.09520626083078276,\\\"bid\\\":18461.15180065776,\\\"ask\\\":18609.434144438143,\\\"price\\\":18535.292972547948,\\\"maxShares\\\":14400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.596058832767896,\\\"bias\\\":0.10022012270946101,\\\"bid\\\":19785.604721989894,\\\"ask\\\":19944.52524184523,\\\"price\\\":19865.064981917556,\\\"maxShares\\\":14400000,\\\"investedShares\\\":1584000,\\\"averagePrice\\\":2340.617828245082,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5899296822141616,\\\"bias\\\":0.09119397699260756,\\\"bid\\\":22083.13237989035,\\\"ask\\\":22260.506937158545,\\\"price\\\":22171.819658524455,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":21278.34389313708,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5896111290433906,\\\"bias\\\":0.09214103676963004,\\\"bid\\\":23332.260920723482,\\\"ask\\\":23519.668638962226,\\\"price\\\":23425.964779842867,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":21278.34389313708,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5937468167678426,\\\"bias\\\":0.09566353005078532,\\\"bid\\\":24327.11879966601,\\\"ask\\\":24522.517344241624,\\\"price\\\":24424.818071953814,\\\"maxShares\\\":14400000,\\\"investedShares\\\":14400000,\\\"averagePrice\\\":21278.34389313708,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0075,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"OMTK\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.4314708135842957,\\\"bias\\\":0.06852918641570432,\\\"bid\\\":35920.07947674736,\\\"ask\\\":35991.991547771875,\\\"price\\\":35956.03551225962,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.4318568025479428,\\\"bias\\\":0.06814319745205721,\\\"bid\\\":36122.39844442409,\\\"ask\\\":36194.71555842694,\\\"price\\\":36158.55700142552,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.4317616180518639,\\\"bias\\\":0.06823838194813608,\\\"bid\\\":36172.85531204486,\\\"ask\\\":36245.273440797704,\\\"price\\\":36209.06437642129,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6064004464341738,\\\"bias\\\":0.13263975637578151,\\\"bid\\\":19825.67762648073,\\\"ask\\\":19865.368672779987,\\\"price\\\":19845.52314963035,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6358554261463047,\\\"bias\\\":0.13905597108417556,\\\"bid\\\":21991.0397969868,\\\"ask\\\":22035.06590268648,\\\"price\\\":22013.052849836637,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6360979630286914,\\\"bias\\\":0.13915750985160102,\\\"bid\\\":24124.656768293706,\\\"ask\\\":24172.95437944144,\\\"price\\\":24148.80557386758,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.4355611938350825,\\\"bias\\\":0.13892250423659314,\\\"bid\\\":25020.65240772388,\\\"ask\\\":25070.743803935537,\\\"price\\\":25045.698105829713,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.4242748680249928,\\\"bias\\\":0.14219188456644916,\\\"bid\\\":23460.622379745975,\\\"ask\\\":23507.59059271842,\\\"price\\\":23484.106486232205,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6208796332645443,\\\"bias\\\":0.1370390632350571,\\\"bid\\\":24361.1318606005,\\\"ask\\\":24409.90289535646,\\\"price\\\":24385.517377978493,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10080000,\\\"averagePrice\\\":22370.796953127483,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6173369240016511,\\\"bias\\\":0.12079828762628242,\\\"bid\\\":26543.055449402495,\\\"ask\\\":26596.194699551445,\\\"price\\\":26569.625074476982,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":23302.91349284113,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.5729082374304707,\\\"bias\\\":0.12179482772885653,\\\"bid\\\":26921.1119551851,\\\"ask\\\":26975.008075215494,\\\"price\\\":26948.06001520031,\\\"maxShares\\\":10500000,\\\"investedShares\\\":8505000,\\\"averagePrice\\\":18875.359929201306,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.39105530027153407,\\\"bias\\\":0.11166338996465491,\\\"bid\\\":26272.651811147345,\\\"ask\\\":26325.249712671175,\\\"price\\\":26298.950761909284,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.3923784320626338,\\\"bias\\\":0.11128428791407563,\\\"bid\\\":25063.216743053872,\\\"ask\\\":25113.393353150088,\\\"price\\\":25088.305048101993,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.3941135434381004,\\\"bias\\\":0.10787143412426614,\\\"bid\\\":23725.064116971218,\\\"ask\\\":23772.56174283102,\\\"price\\\":23748.812929901127,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.47515163925536436,\\\"bias\\\":0.10795065562549,\\\"bid\\\":23196.944888042482,\\\"ask\\\":23243.38521814867,\\\"price\\\":23220.16505309558,\\\"maxShares\\\":10500000,\\\"investedShares\\\":4200000,\\\"averagePrice\\\":9201.679584504478,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.4853570707824634,\\\"bias\\\":0.09304720884122952,\\\"bid\\\":22930.7867061013,\\\"ask\\\":22976.694186994402,\\\"price\\\":22953.74044654786,\\\"maxShares\\\":10500000,\\\"investedShares\\\":3780000,\\\"averagePrice\\\":8281.51162605403,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.5580968760512924,\\\"bias\\\":0.07800417733195641,\\\"bid\\\":23101.43456809802,\\\"ask\\\":23147.683686352455,\\\"price\\\":23124.559127225257,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.5792673509165707,\\\"bias\\\":0.08060861489108351,\\\"bid\\\":24044.20688828669,\\\"ask\\\":24092.343438613578,\\\"price\\\":24068.275163450133,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.4803800492255301,\\\"bias\\\":0.08222793717110632,\\\"bid\\\":23727.983720276494,\\\"ask\\\":23775.487191187938,\\\"price\\\":23751.735455732225,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.43660505038435227,\\\"bias\\\":0.08279809727200521,\\\"bid\\\":23795.55670695615,\\\"ask\\\":23843.195459122224,\\\"price\\\":23819.37608303918,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.5253859288475801,\\\"bias\\\":0.08479578304370972,\\\"bid\\\":24047.049835575115,\\\"ask\\\":24095.192077488187,\\\"price\\\":24071.120956531653,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.5149979473092725,\\\"bias\\\":0.08275558063701038,\\\"bid\\\":24618.75559815656,\\\"ask\\\":24668.04239615085,\\\"price\\\":24643.398997153694,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.45865001364353575,\\\"bias\\\":0.08472739985923688,\\\"bid\\\":25638.504512022533,\\\"ask\\\":25689.832849383933,\\\"price\\\":25664.168680703224,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.5873441335181666,\\\"bias\\\":0.09146633263534099,\\\"bid\\\":25209.968524312204,\\\"ask\\\":25260.438931768265,\\\"price\\\":25235.203728040233,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.5904982186818293,\\\"bias\\\":0.09221601399183443,\\\"bid\\\":28262.491756999683,\\\"ask\\\":28319.073322078766,\\\"price\\\":28290.782539539225,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.45368469178049864,\\\"bias\\\":0.09564608826604115,\\\"bid\\\":29464.860956190565,\\\"ask\\\":29523.849666813538,\\\"price\\\":29494.355311502048,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.535531614557687,\\\"bias\\\":0.09792177981718436,\\\"bid\\\":29946.13635981577,\\\"ask\\\":30006.088584760342,\\\"price\\\":29976.11247228804,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.5082116850719638,\\\"bias\\\":0.10153637026750106,\\\"bid\\\":31651.403467917262,\\\"ask\\\":31714.7696410262,\\\"price\\\":31683.08655447174,\\\"maxShares\\\":10500000,\\\"investedShares\\\":2940000,\\\"averagePrice\\\":9058.284110375038,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.5809212883435422,\\\"bias\\\":0.08387157670681689,\\\"bid\\\":34524.4131946299,\\\"ask\\\":34593.5311389635,\\\"price\\\":34558.9721667967,\\\"maxShares\\\":10500000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":32351.01467991093,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.534562917710848,\\\"bias\\\":0.07970606420340787,\\\"bid\\\":36664.85583157851,\\\"ask\\\":36738.25894635647,\\\"price\\\":36701.55738896749,\\\"maxShares\\\":10500000,\\\"investedShares\\\":7350000,\\\"averagePrice\\\":22645.710275937607,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.4329193482332637,\\\"bias\\\":0.06876174885880887,\\\"bid\\\":36530.50315352554,\\\"ask\\\":36603.63729397303,\\\"price\\\":36567.07022374931,\\\"maxShares\\\":10500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"FSIG\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.3586521573480795,\\\"bias\\\":0.14134784265192052,\\\"bid\\\":332980.01042810164,\\\"ask\\\":339028.0832713971,\\\"price\\\":336004.0468497494,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.3573423814993801,\\\"bias\\\":0.14265761850061992,\\\"bid\\\":336065.51330933336,\\\"ask\\\":342169.6295954766,\\\"price\\\":339117.571452405,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.35767021034096885,\\\"bias\\\":0.14232978965903115,\\\"bid\\\":335295.0015546478,\\\"ask\\\":341385.12267269386,\\\"price\\\":338340.06211367087,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.3433967315007705,\\\"bias\\\":0.19960057040061768,\\\"bid\\\":183303.4770996508,\\\"ask\\\":186632.90453435696,\\\"price\\\":184968.19081700378,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.3149535853347635,\\\"bias\\\":0.19167319429258334,\\\"bid\\\":141777.7837806296,\\\"ask\\\":144352.96047896598,\\\"price\\\":143065.37212979782,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.498454807682973,\\\"bias\\\":0.1819019714667045,\\\"bid\\\":124104.0227976827,\\\"ask\\\":126358.18264668196,\\\"price\\\":125231.10272218226,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.4157436388736454,\\\"bias\\\":0.17948685508900442,\\\"bid\\\":137493.51344592424,\\\"ask\\\":139990.87292324676,\\\"price\\\":138742.1931845855,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.32812162007807844,\\\"bias\\\":0.18125127535058855,\\\"bid\\\":122918.65304787055,\\\"ask\\\":125151.28246750895,\\\"price\\\":124034.96775768972,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.32467251206772146,\\\"bias\\\":0.18025521843602343,\\\"bid\\\":102432.0475151374,\\\"ask\\\":104292.56906435284,\\\"price\\\":103362.3082897451,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.32120483295059193,\\\"bias\\\":0.18661830890468845,\\\"bid\\\":92457.05311501712,\\\"ask\\\":94136.39414031507,\\\"price\\\":93296.72362766607,\\\"maxShares\\\":7300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6578578684970391,\\\"bias\\\":0.18711756994060397,\\\"bid\\\":86003.40422981094,\\\"ask\\\":87565.52458918188,\\\"price\\\":86784.46440949642,\\\"maxShares\\\":7300000,\\\"investedShares\\\":6862000,\\\"averagePrice\\\":78942.91035061934,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.5220141268781819,\\\"bias\\\":0.1781436842963363,\\\"bid\\\":100285.99618637147,\\\"ask\\\":102107.53799399467,\\\"price\\\":101196.76709018301,\\\"maxShares\\\":7300000,\\\"investedShares\\\":4161000,\\\"averagePrice\\\":47869.63712750314,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.5641976248760047,\\\"bias\\\":0.18242371497847998,\\\"bid\\\":94900.51454644126,\\\"ask\\\":96624.23731317779,\\\"price\\\":95762.37592980957,\\\"maxShares\\\":7300000,\\\"investedShares\\\":4891000,\\\"averagePrice\\\":62779.95611762626,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6813930041682021,\\\"bias\\\":0.1860460330942647,\\\"bid\\\":110178.00232284203,\\\"ask\\\":112179.21729944262,\\\"price\\\":111178.60981114244,\\\"maxShares\\\":7300000,\\\"investedShares\\\":7300000,\\\"averagePrice\\\":93701.42704123323,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6779695746104244,\\\"bias\\\":0.1854736760582153,\\\"bid\\\":123325.01136494361,\\\"ask\\\":125565.02166218785,\\\"price\\\":124445.01651356569,\\\"maxShares\\\":7300000,\\\"investedShares\\\":7300000,\\\"averagePrice\\\":93701.42704123323,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.4406457083916543,\\\"bias\\\":0.1987317411793506,\\\"bid\\\":134370.56064226184,\\\"ask\\\":136811.19645614753,\\\"price\\\":135590.8785492047,\\\"maxShares\\\":7300000,\\\"investedShares\\\":2628000,\\\"averagePrice\\\":33732.51373484391,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6565716000618771,\\\"bias\\\":0.2077199661706728,\\\"bid\\\":134789.7376368014,\\\"ask\\\":137237.98715997228,\\\"price\\\":136013.86239838685,\\\"maxShares\\\":7300000,\\\"investedShares\\\":6424000,\\\"averagePrice\\\":107358.01190129787,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.7016848414529921,\\\"bias\\\":0.2097871187724245,\\\"bid\\\":166620.12288840217,\\\"ask\\\":169646.52269868596,\\\"price\\\":168133.32279354404,\\\"maxShares\\\":7300000,\\\"investedShares\\\":7300000,\\\"averagePrice\\\":121997.74079692937,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.7102910353083697,\\\"bias\\\":0.2176235830678176,\\\"bid\\\":195005.15901071706,\\\"ask\\\":198547.129608288,\\\"price\\\":196776.14430950265,\\\"maxShares\\\":7300000,\\\"investedShares\\\":7300000,\\\"averagePrice\\\":121997.74079692937,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.7056772629299312,\\\"bias\\\":0.2158638880009459,\\\"bid\\\":241798.98841619224,\\\"ask\\\":246190.897388434,\\\"price\\\":243994.9429023132,\\\"maxShares\\\":7300000,\\\"investedShares\\\":7300000,\\\"averagePrice\\\":121997.74079692937,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.5599696398285507,\\\"bias\\\":0.203113249935846,\\\"bid\\\":276263.24725100485,\\\"ask\\\":281281.1467974407,\\\"price\\\":278772.19702422287,\\\"maxShares\\\":7300000,\\\"investedShares\\\":4818000,\\\"averagePrice\\\":80518.50892597344,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.531184732023805,\\\"bias\\\":0.19564460835529507,\\\"bid\\\":254460.5949541521,\\\"ask\\\":259082.482652613,\\\"price\\\":256771.5388033827,\\\"maxShares\\\":7300000,\\\"investedShares\\\":4234000,\\\"averagePrice\\\":143774.5469820907,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6744411535151807,\\\"bias\\\":0.18283377273727774,\\\"bid\\\":301496.3209260047,\\\"ask\\\":306972.54068046296,\\\"price\\\":304234.43080323393,\\\"maxShares\\\":7300000,\\\"investedShares\\\":7300000,\\\"averagePrice\\\":247887.14996912229,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.5651852681431329,\\\"bias\\\":0.17466846818282245,\\\"bid\\\":335502.9546373787,\\\"ask\\\":341596.85290526255,\\\"price\\\":338549.90377132065,\\\"maxShares\\\":7300000,\\\"investedShares\\\":5037000,\\\"averagePrice\\\":171042.13347869407,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.5154368213964919,\\\"bias\\\":0.16973194649315532,\\\"bid\\\":333307.9446626878,\\\"ask\\\":339361.9739300223,\\\"price\\\":336334.95929635497,\\\"maxShares\\\":7300000,\\\"investedShares\\\":4015000,\\\"averagePrice\\\":181886.0661875814,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.4256291394640841,\\\"bias\\\":0.1560729387149613,\\\"bid\\\":325295.8275697457,\\\"ask\\\":331204.3289786815,\\\"price\\\":328250.07827421365,\\\"maxShares\\\":7300000,\\\"investedShares\\\":1825000,\\\"averagePrice\\\":81565.65238242963,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6421742465877851,\\\"bias\\\":0.14579030124221892,\\\"bid\\\":308410.6451591568,\\\"ask\\\":314012.4530429757,\\\"price\\\":311211.54910106637,\\\"maxShares\\\":7300000,\\\"investedShares\\\":73000,\\\"averagePrice\\\":3085.0529355709205,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6422996390398472,\\\"bias\\\":0.14929468334183194,\\\"bid\\\":367377.15382414043,\\\"ask\\\":374049.99819228845,\\\"price\\\":370713.5760082144,\\\"maxShares\\\":7300000,\\\"investedShares\\\":2044000,\\\"averagePrice\\\":109856.82951644098,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.4193758242227088,\\\"bias\\\":0.14434577569604778,\\\"bid\\\":378477.0775891519,\\\"ask\\\":385351.53510338464,\\\"price\\\":381914.306346268,\\\"maxShares\\\":7300000,\\\"investedShares\\\":1460000,\\\"averagePrice\\\":78469.16394031499,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.4492069917334394,\\\"bias\\\":0.14857692240628817,\\\"bid\\\":326261.8728877832,\\\"ask\\\":332187.92103307095,\\\"price\\\":329224.89696042705,\\\"maxShares\\\":7300000,\\\"investedShares\\\":2190000,\\\"averagePrice\\\":97146.44074662024,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.4884858365762603,\\\"bias\\\":0.14992997372876204,\\\"bid\\\":350522.56749543286,\\\"ask\\\":356889.27406951715,\\\"price\\\":353705.92078247503,\\\"maxShares\\\":7300000,\\\"investedShares\\\":3358000,\\\"averagePrice\\\":148957.8758114844,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0102,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"KGI\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.4211794830602393,\\\"bias\\\":0.07882051693976072,\\\"bid\\\":42623.76014627188,\\\"ask\\\":42880.27224344102,\\\"price\\\":42752.01619485645,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.42178813053781894,\\\"bias\\\":0.07821186946218106,\\\"bid\\\":42952.8983593315,\\\"ask\\\":43211.391228093766,\\\"price\\\":43082.144793712636,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.4219379070144965,\\\"bias\\\":0.07806209298550348,\\\"bid\\\":43035.15356974379,\\\"ask\\\":43294.141454817465,\\\"price\\\":43164.64751228063,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5588202552202671,\\\"bias\\\":0.1336814362352834,\\\"bid\\\":34435.7423718636,\\\"ask\\\":34642.978534582915,\\\"price\\\":34539.36045322328,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.36827395726220685,\\\"bias\\\":0.13564607921005573,\\\"bid\\\":33241.82321440648,\\\"ask\\\":33441.87430697061,\\\"price\\\":33341.84876068856,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.37349627089171433,\\\"bias\\\":0.12986724749710105,\\\"bid\\\":28198.40740632665,\\\"ask\\\":28368.106949393798,\\\"price\\\":28283.25717786021,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5489761885922098,\\\"bias\\\":0.1264575383788612,\\\"bid\\\":28357.541793529945,\\\"ask\\\":28528.19901595842,\\\"price\\\":28442.870404744186,\\\"maxShares\\\":13600000,\\\"investedShares\\\":7752000,\\\"averagePrice\\\":16110.275556463383,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.6128543143935294,\\\"bias\\\":0.11613953545820332,\\\"bid\\\":32073.520208993446,\\\"ask\\\":32266.54039079279,\\\"price\\\":32170.03029989312,\\\"maxShares\\\":13600000,\\\"investedShares\\\":13600000,\\\"averagePrice\\\":28263.641327128742,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5152456190005532,\\\"bias\\\":0.11689587272683688,\\\"bid\\\":35242.27585512285,\\\"ask\\\":35454.365780028274,\\\"price\\\":35348.32081757557,\\\"maxShares\\\":13600000,\\\"investedShares\\\":7344000,\\\"averagePrice\\\":15262.36631664952,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.4054467407910502,\\\"bias\\\":0.09626200242834343,\\\"bid\\\":34053.71056744186,\\\"ask\\\":34258.64764207038,\\\"price\\\":34156.17910475612,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5870716143628865,\\\"bias\\\":0.09939696728406533,\\\"bid\\\":33465.50572510675,\\\"ask\\\":33666.90295113546,\\\"price\\\":33566.204338121104,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5889150840341655,\\\"bias\\\":0.10012507682896876,\\\"bid\\\":35311.229777124725,\\\"ask\\\":35523.7346704675,\\\"price\\\":35417.48222379612,\\\"maxShares\\\":13600000,\\\"investedShares\\\":8160000,\\\"averagePrice\\\":21342.216427960204,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5861716204400653,\\\"bias\\\":0.08875903350116399,\\\"bid\\\":39334.98975291713,\\\"ask\\\":39571.70985173107,\\\"price\\\":39453.3498023241,\\\"maxShares\\\":13600000,\\\"investedShares\\\":13600000,\\\"averagePrice\\\":35570.360713267095,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5594329207229374,\\\"bias\\\":0.09058195478514752,\\\"bid\\\":44190.43985982172,\\\"ask\\\":44456.38032036224,\\\"price\\\":44323.41009009197,\\\"maxShares\\\":13600000,\\\"investedShares\\\":11424000,\\\"averagePrice\\\":29879.10299914434,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.4882839198067523,\\\"bias\\\":0.07863304638404933,\\\"bid\\\":45667.92415114599,\\\"ask\\\":45942.75619217595,\\\"price\\\":45805.340171661,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.47765846352031316,\\\"bias\\\":0.08054107621054074,\\\"bid\\\":46876.51177545327,\\\"ask\\\":47158.61716226642,\\\"price\\\":47017.56446885984,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5616953120398728,\\\"bias\\\":0.08343863233746729,\\\"bid\\\":47936.38485695417,\\\"ask\\\":48224.868617377135,\\\"price\\\":48080.62673716563,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.583295899346021,\\\"bias\\\":0.08492546764985398,\\\"bid\\\":49541.93176763911,\\\"ask\\\":49840.077796331,\\\"price\\\":49691.00478198509,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5823578746704954,\\\"bias\\\":0.08635707751529242,\\\"bid\\\":51324.17317377234,\\\"ask\\\":51633.044827777,\\\"price\\\":51478.609000774675,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.4376491554065272,\\\"bias\\\":0.08922460334646715,\\\"bid\\\":50202.985534241336,\\\"ask\\\":50505.10982030495,\\\"price\\\":50354.04767727313,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.41121977265671467,\\\"bias\\\":0.09210883354811877,\\\"bid\\\":47756.25203905265,\\\"ask\\\":48043.651750421064,\\\"price\\\":47899.95189473683,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.4113126311341728,\\\"bias\\\":0.09328888704059352,\\\"bid\\\":44632.63450312991,\\\"ask\\\":44901.236114984276,\\\"price\\\":44766.935309057124,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5441906669834822,\\\"bias\\\":0.09110899556833618,\\\"bid\\\":43700.96224601741,\\\"ask\\\":43963.95700376678,\\\"price\\\":43832.4596248921,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.4123934168653648,\\\"bias\\\":0.09003458868214687,\\\"bid\\\":43106.21600783063,\\\"ask\\\":43365.63155050563,\\\"price\\\":43235.923779168144,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.4108925839806075,\\\"bias\\\":0.0918180202496105,\\\"bid\\\":37691.51881500486,\\\"ask\\\":37918.34841669996,\\\"price\\\":37804.933615852424,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.40548106488908103,\\\"bias\\\":0.09778578908003493,\\\"bid\\\":32906.22084969565,\\\"ask\\\":33104.252269051896,\\\"price\\\":33005.23655937377,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.4632149032191639,\\\"bias\\\":0.09943308751072594,\\\"bid\\\":32013.301479591817,\\\"ask\\\":32205.95926181605,\\\"price\\\":32109.63037070393,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5914896953518343,\\\"bias\\\":0.09427732209095485,\\\"bid\\\":34186.590630711595,\\\"ask\\\":34392.32738475801,\\\"price\\\":34289.459007734826,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5876090454602089,\\\"bias\\\":0.09127200255974788,\\\"bid\\\":37058.16511039001,\\\"ask\\\":37281.18315518673,\\\"price\\\":37169.67413278837,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.584175251222537,\\\"bias\\\":0.08646142523776557,\\\"bid\\\":39691.571573511435,\\\"ask\\\":39930.43760103507,\\\"price\\\":39811.00458727325,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.493277518651415,\\\"bias\\\":0.08409762372954344,\\\"bid\\\":42708.71585781158,\\\"ask\\\":42965.73922305417,\\\"price\\\":42837.227540432876,\\\"maxShares\\\":13600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"FLCM\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6677369722382318,\\\"bias\\\":0.1677369722382318,\\\"bid\\\":14683.911368425883,\\\"ask\\\":14920.748648561783,\\\"price\\\":14802.330008493833,\\\"maxShares\\\":11400000,\\\"investedShares\\\":11400000,\\\"averagePrice\\\":13477.46876128096,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6696417593085618,\\\"bias\\\":0.16964175930856185,\\\"bid\\\":14850.65889071171,\\\"ask\\\":15090.185647013512,\\\"price\\\":14970.42226886261,\\\"maxShares\\\":11400000,\\\"investedShares\\\":11400000,\\\"averagePrice\\\":13477.46876128096,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6701195028211767,\\\"bias\\\":0.17011950282117672,\\\"bid\\\":14808.954054843773,\\\"ask\\\":15047.808152502545,\\\"price\\\":14928.381103673159,\\\"maxShares\\\":11400000,\\\"investedShares\\\":11400000,\\\"averagePrice\\\":13477.46876128096,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.3555650744851508,\\\"bias\\\":0.16388836324067751,\\\"bid\\\":10037.958039988174,\\\"ask\\\":10199.860589020247,\\\"price\\\":10118.909314504208,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5683168666306608,\\\"bias\\\":0.16179886777326657,\\\"bid\\\":9182.099901180864,\\\"ask\\\":9330.198286683786,\\\"price\\\":9256.149093932323,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.35891577206067987,\\\"bias\\\":0.1566410182855188,\\\"bid\\\":7766.257246226576,\\\"ask\\\":7891.519459875391,\\\"price\\\":7828.88835305098,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5681145582749432,\\\"bias\\\":0.1564273245249374,\\\"bid\\\":6692.459970875266,\\\"ask\\\":6800.402873631318,\\\"price\\\":6746.431422253293,\\\"maxShares\\\":11400000,\\\"investedShares\\\":6498000,\\\"averagePrice\\\":3759.6162407037523,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.43005897780601515,\\\"bias\\\":0.14829855898666577,\\\"bid\\\":7158.725378826244,\\\"ask\\\":7274.188691387958,\\\"price\\\":7216.457035107099,\\\"maxShares\\\":11400000,\\\"investedShares\\\":2850000,\\\"averagePrice\\\":1799.860749724109,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5138941974312843,\\\"bias\\\":0.12469320244004323,\\\"bid\\\":7600.448346007211,\\\"ask\\\":7723.036222555713,\\\"price\\\":7661.742284281462,\\\"maxShares\\\":11400000,\\\"investedShares\\\":6156000,\\\"averagePrice\\\":3932.1479718156293,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5392794242168407,\\\"bias\\\":0.10810957124414583,\\\"bid\\\":7160.820173533019,\\\"ask\\\":7276.317273106136,\\\"price\\\":7218.568723319578,\\\"maxShares\\\":11400000,\\\"investedShares\\\":7980000,\\\"averagePrice\\\":4770.312888231105,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.41122657261234097,\\\"bias\\\":0.1077100204088331,\\\"bid\\\":7835.607358745631,\\\"ask\\\":7961.988122596373,\\\"price\\\":7898.797740671001,\\\"maxShares\\\":11400000,\\\"investedShares\\\":684000,\\\"averagePrice\\\":408.88396184837967,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.4881370553407522,\\\"bias\\\":0.11360856036983813,\\\"bid\\\":7031.708991679866,\\\"ask\\\":7145.123652835996,\\\"price\\\":7088.41632225793,\\\"maxShares\\\":11400000,\\\"investedShares\\\":4902000,\\\"averagePrice\\\":2959.1557019428897,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6154443372704713,\\\"bias\\\":0.1204773185699668,\\\"bid\\\":7470.986063434747,\\\"ask\\\":7591.485838651438,\\\"price\\\":7531.235951043092,\\\"maxShares\\\":11400000,\\\"investedShares\\\":11400000,\\\"averagePrice\\\":6881.757446378816,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5796226925633432,\\\"bias\\\":0.12696049036907964,\\\"bid\\\":8415.051922350749,\\\"ask\\\":8550.77856625963,\\\"price\\\":8482.91524430519,\\\"maxShares\\\":11400000,\\\"investedShares\\\":9576000,\\\"averagePrice\\\":5780.676254958205,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.47467050225091606,\\\"bias\\\":0.12234871951922516,\\\"bid\\\":7607.747320159029,\\\"ask\\\":7730.452922097082,\\\"price\\\":7669.10012112806,\\\"maxShares\\\":11400000,\\\"investedShares\\\":4560000,\\\"averagePrice\\\":2848.6266005755624,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6044531296150132,\\\"bias\\\":0.11158312283809313,\\\"bid\\\":7951.219018867641,\\\"ask\\\":8079.464486913887,\\\"price\\\":8015.34175289076,\\\"maxShares\\\":11400000,\\\"investedShares\\\":11400000,\\\"averagePrice\\\":7121.566501438892,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6127802795252949,\\\"bias\\\":0.11792232946723546,\\\"bid\\\":9446.593215070512,\\\"ask\\\":9598.957621765196,\\\"price\\\":9522.775418417854,\\\"maxShares\\\":11400000,\\\"investedShares\\\":11400000,\\\"averagePrice\\\":7121.566501438892,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6152173283694573,\\\"bias\\\":0.12563518404677254,\\\"bid\\\":10490.208744585032,\\\"ask\\\":10659.40565982028,\\\"price\\\":10574.80720220266,\\\"maxShares\\\":11400000,\\\"investedShares\\\":11400000,\\\"averagePrice\\\":7121.566501438892,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.474610427131868,\\\"bias\\\":0.12828238901266054,\\\"bid\\\":10731.22143326708,\\\"ask\\\":10904.305649932676,\\\"price\\\":10817.763541599877,\\\"maxShares\\\":11400000,\\\"investedShares\\\":4446000,\\\"averagePrice\\\":2777.410935561173,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5863858824373304,\\\"bias\\\":0.1280764475753674,\\\"bid\\\":11317.714997069883,\\\"ask\\\":11500.258787345201,\\\"price\\\":11408.986892207537,\\\"maxShares\\\":11400000,\\\"investedShares\\\":9690000,\\\"averagePrice\\\":9521.03836424213,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6187735174030204,\\\"bias\\\":0.12411678406159621,\\\"bid\\\":11466.653908645972,\\\"ask\\\":11651.599939430575,\\\"price\\\":11559.126924038272,\\\"maxShares\\\":11400000,\\\"investedShares\\\":11400000,\\\"averagePrice\\\":11201.221604990746,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.4779760087763941,\\\"bias\\\":0.12869775162570285,\\\"bid\\\":12602.10280037891,\\\"ask\\\":12805.36252296566,\\\"price\\\":12703.732661672291,\\\"maxShares\\\":11400000,\\\"investedShares\\\":4788000,\\\"averagePrice\\\":4704.5130740961,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5729934643645113,\\\"bias\\\":0.12407423422600589,\\\"bid\\\":12090.807467561423,\\\"ask\\\":12285.820491231767,\\\"price\\\":12188.31397939659,\\\"maxShares\\\":11400000,\\\"investedShares\\\":9348000,\\\"averagePrice\\\":9589.103282708207,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5417182954063311,\\\"bias\\\":0.13042135214039074,\\\"bid\\\":13183.50606394181,\\\"ask\\\":13396.143258521526,\\\"price\\\":13289.824661231663,\\\"maxShares\\\":11400000,\\\"investedShares\\\":7866000,\\\"averagePrice\\\":8068.879591547151,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.3621077472065414,\\\"bias\\\":0.15045633378452306,\\\"bid\\\":11195.652654476136,\\\"ask\\\":11376.227697290258,\\\"price\\\":11285.940175883195,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5633986872747339,\\\"bias\\\":0.14360806165129136,\\\"bid\\\":9891.836683947717,\\\"ask\\\":10051.382436914613,\\\"price\\\":9971.609560431169,\\\"maxShares\\\":11400000,\\\"investedShares\\\":8550000,\\\"averagePrice\\\":7577.7108872181325,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.36332296104607203,\\\"bias\\\":0.1439577578121407,\\\"bid\\\":9441.80836816304,\\\"ask\\\":9594.095599907601,\\\"price\\\":9517.951984035319,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5204867189639646,\\\"bias\\\":0.15814899794541692,\\\"bid\\\":8692.471805343896,\\\"ask\\\":8832.672963494608,\\\"price\\\":8762.57238441925,\\\"maxShares\\\":11400000,\\\"investedShares\\\":3306000,\\\"averagePrice\\\":2582.86029766382,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6493296858088806,\\\"bias\\\":0.15446115856619913,\\\"bid\\\":10528.396270031702,\\\"ask\\\":10698.209113096733,\\\"price\\\":10613.30269156422,\\\"maxShares\\\":11400000,\\\"investedShares\\\":11400000,\\\"averagePrice\\\":8906.414819530419,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5560199511143923,\\\"bias\\\":0.16350433335006387,\\\"bid\\\":14188.848171937372,\\\"ask\\\":14417.700561807327,\\\"price\\\":14303.274366872354,\\\"maxShares\\\":11400000,\\\"investedShares\\\":7980000,\\\"averagePrice\\\":6234.490373671285,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.5176205934583874,\\\"bias\\\":0.16973828484476527,\\\"bid\\\":13924.207313146231,\\\"ask\\\":14148.79130206795,\\\"price\\\":14036.499307607082,\\\"maxShares\\\":11400000,\\\"investedShares\\\":6156000,\\\"averagePrice\\\":7277.833131091719,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"STM\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.44199167244620485,\\\"bias\\\":0.05800832755379515,\\\"bid\\\":70402.34732070914,\\\"ask\\\":70684.52105746549,\\\"price\\\":70543.43418908732,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.442439609399869,\\\"bias\\\":0.05756039060013102,\\\"bid\\\":69862.8702731188,\\\"ask\\\":70142.88177721946,\\\"price\\\":70002.87602516913,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.44232938070236366,\\\"bias\\\":0.05767061929763634,\\\"bid\\\":69996.65833664473,\\\"ask\\\":70277.20606544893,\\\"price\\\":70136.93220104683,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5641877416039697,\\\"bias\\\":0.06660612709855696,\\\"bid\\\":44701.18508043345,\\\"ask\\\":44880.34814688807,\\\"price\\\":44790.76661366075,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.561954429382372,\\\"bias\\\":0.06556874165586091,\\\"bid\\\":50780.081875680626,\\\"ask\\\":50983.60925794789,\\\"price\\\":50881.84556681426,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5622833367871097,\\\"bias\\\":0.06469541249624777,\\\"bid\\\":57672.61839063054,\\\"ask\\\":57903.77116975128,\\\"price\\\":57788.19478019095,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5632304107818185,\\\"bias\\\":0.06521537915809883,\\\"bid\\\":56777.57757319184,\\\"ask\\\":57005.14301436695,\\\"price\\\":56891.36029377941,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5323274206476062,\\\"bias\\\":0.0626186760850892,\\\"bid\\\":56768.0100641099,\\\"ask\\\":56995.53715855524,\\\"price\\\":56881.77361133259,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.49638018521800836,\\\"bias\\\":0.0633364305894768,\\\"bid\\\":53593.0060595063,\\\"ask\\\":53807.80768699933,\\\"price\\\":53700.40687325283,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.4738891028590391,\\\"bias\\\":0.06346835196052253,\\\"bid\\\":52586.75161912948,\\\"ask\\\":52797.520162693116,\\\"price\\\":52692.135890911304,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.4631690798616922,\\\"bias\\\":0.06220225574872967,\\\"bid\\\":49917.9032234608,\\\"ask\\\":50117.97497986747,\\\"price\\\":50017.93910166414,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5600483861194914,\\\"bias\\\":0.061379436261304265,\\\"bid\\\":53560.5139265109,\\\"ask\\\":53775.18532501395,\\\"price\\\":53667.84962576246,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.4810948897290778,\\\"bias\\\":0.06070242435810902,\\\"bid\\\":57377.43553068585,\\\"ask\\\":57607.40521217159,\\\"price\\\":57492.42037142873,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.549689979237101,\\\"bias\\\":0.06090307360600322,\\\"bid\\\":56407.43250615835,\\\"ask\\\":56633.51439997065,\\\"price\\\":56520.47345306452,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5098972642210309,\\\"bias\\\":0.05977229004245821,\\\"bid\\\":57525.9234123409,\\\"ask\\\":57756.488235636854,\\\"price\\\":57641.205823988916,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.4390818383705447,\\\"bias\\\":0.06354378067683308,\\\"bid\\\":53669.909066793916,\\\"ask\\\":53885.018922773066,\\\"price\\\":53777.46399478351,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5477659663740486,\\\"bias\\\":0.0629076346727338,\\\"bid\\\":50510.368719918144,\\\"ask\\\":50712.815087533054,\\\"price\\\":50611.59190372557,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5629236598601929,\\\"bias\\\":0.0648494112508814,\\\"bid\\\":52903.63356441789,\\\"ask\\\":53115.67217589856,\\\"price\\\":53009.65287015821,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5632427968085654,\\\"bias\\\":0.06580976850307307,\\\"bid\\\":57111.303897650316,\\\"ask\\\":57340.206919284166,\\\"price\\\":57225.75540846726,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.45005285209101814,\\\"bias\\\":0.07081860551830965,\\\"bid\\\":58056.53360436361,\\\"ask\\\":58289.22512181596,\\\"price\\\":58172.87936308981,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.4788421354525286,\\\"bias\\\":0.07849720697717233,\\\"bid\\\":54829.47129735977,\\\"ask\\\":55049.22869734923,\\\"price\\\":54939.34999735451,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5761962230533169,\\\"bias\\\":0.07900188044439105,\\\"bid\\\":62235.49001589909,\\\"ask\\\":62484.930857646184,\\\"price\\\":62360.21043677264,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.577596280993885,\\\"bias\\\":0.080552244968912,\\\"bid\\\":67388.35471496958,\\\"ask\\\":67658.44832104161,\\\"price\\\":67523.40151800566,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5273932314376201,\\\"bias\\\":0.08380553522207562,\\\"bid\\\":69587.02670965595,\\\"ask\\\":69865.93262833191,\\\"price\\\":69726.47966899391,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.41977719117694884,\\\"bias\\\":0.08261668038710046,\\\"bid\\\":64546.70974432744,\\\"ask\\\":64805.413991799716,\\\"price\\\":64676.06186806355,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.4349647476008147,\\\"bias\\\":0.07636311930558143,\\\"bid\\\":64218.29986123161,\\\"ask\\\":64475.68783662734,\\\"price\\\":64346.99384892945,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.572283356637264,\\\"bias\\\":0.07486125290583745,\\\"bid\\\":64508.0619193807,\\\"ask\\\":64766.611265750944,\\\"price\\\":64637.336592565785,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5706458992650159,\\\"bias\\\":0.07222955194327807,\\\"bid\\\":70456.29605906732,\\\"ask\\\":70738.68602323195,\\\"price\\\":70597.49104114962,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5663058036101531,\\\"bias\\\":0.06923464539159907,\\\"bid\\\":74603.18788966298,\\\"ask\\\":74902.1986627678,\\\"price\\\":74752.69327621537,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5241764754376838,\\\"bias\\\":0.06399934665480222,\\\"bid\\\":74846.66964954333,\\\"ask\\\":75146.65630144536,\\\"price\\\":74996.66297549431,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.4421409567453221,\\\"bias\\\":0.05974431075947251,\\\"bid\\\":69657.54256362388,\\\"ask\\\":69936.73111097308,\\\"price\\\":69797.13683729849,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0085,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"DCOMM\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.40852256695402894,\\\"bias\\\":0.09147743304597106,\\\"bid\\\":30055.29660834579,\\\"ask\\\":30175.75871900048,\\\"price\\\":30115.527663673136,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4090959841095378,\\\"bias\\\":0.09090401589046221,\\\"bid\\\":30243.695234272156,\\\"ask\\\":30364.91244963998,\\\"price\\\":30304.30384195607,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4092372977803562,\\\"bias\\\":0.09076270221964378,\\\"bid\\\":30196.7532591784,\\\"ask\\\":30317.782330357473,\\\"price\\\":30257.267794767937,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5919448063240903,\\\"bias\\\":0.09505202967708792,\\\"bid\\\":22241.797550503576,\\\"ask\\\":22330.943031667917,\\\"price\\\":22286.370291085743,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5940166807265971,\\\"bias\\\":0.09543934743849325,\\\"bid\\\":25148.139196872202,\\\"ask\\\":25248.933341949858,\\\"price\\\":25198.536269411034,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5953069901841274,\\\"bias\\\":0.09764310115543207,\\\"bid\\\":27506.89207778336,\\\"ask\\\":27617.140142223383,\\\"price\\\":27562.016110003347,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.596963961624573,\\\"bias\\\":0.10105078634008846,\\\"bid\\\":29594.974775228427,\\\"ask\\\":29713.59190859604,\\\"price\\\":29654.283341912233,\\\"maxShares\\\":17200000,\\\"investedShares\\\":5848000,\\\"averagePrice\\\":10140.701448773865,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.42496086419012724,\\\"bias\\\":0.09345460902717984,\\\"bid\\\":29527.51960545067,\\\"ask\\\":29645.866377416434,\\\"price\\\":29586.69299143356,\\\"maxShares\\\":17200000,\\\"investedShares\\\":516000,\\\"averagePrice\\\":894.767774891812,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.42044711979754823,\\\"bias\\\":0.08308181018770205,\\\"bid\\\":27201.45588338573,\\\"ask\\\":27310.47975466181,\\\"price\\\":27255.967819023765,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.41671050315342145,\\\"bias\\\":0.08529983235068106,\\\"bid\\\":24761.822480727686,\\\"ask\\\":24861.06826221358,\\\"price\\\":24811.445371470625,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.41728336993768395,\\\"bias\\\":0.08574974448683192,\\\"bid\\\":22830.44027374775,\\\"ask\\\":22921.945044384032,\\\"price\\\":22876.19265906588,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4905187325171716,\\\"bias\\\":0.08351687159506005,\\\"bid\\\":21986.35442762898,\\\"ask\\\":22074.476088661566,\\\"price\\\":22030.41525814526,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5834367641238949,\\\"bias\\\":0.08496804259423774,\\\"bid\\\":22987.16888870058,\\\"ask\\\":23079.301830138247,\\\"price\\\":23033.235359419417,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5550741679760667,\\\"bias\\\":0.08488188886449233,\\\"bid\\\":23024.824841416055,\\\"ask\\\":23117.108708515912,\\\"price\\\":23070.96677496599,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.48567397362881215,\\\"bias\\\":0.09365373992992465,\\\"bid\\\":24183.18881948583,\\\"ask\\\":24280.11542798076,\\\"price\\\":24231.652123733304,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.584688711369755,\\\"bias\\\":0.08937578890745224,\\\"bid\\\":25563.432928815553,\\\"ask\\\":25665.891577828843,\\\"price\\\":25614.662253322185,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5603556409659425,\\\"bias\\\":0.0854538710802083,\\\"bid\\\":26617.660355130778,\\\"ask\\\":26724.34436457015,\\\"price\\\":26671.002359850467,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.42034642571529707,\\\"bias\\\":0.08168653920463348,\\\"bid\\\":27244.44685568478,\\\"ask\\\":27353.643035467096,\\\"price\\\":27299.044945575934,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5207586492921561,\\\"bias\\\":0.08406797897548879,\\\"bid\\\":27742.286048204674,\\\"ask\\\":27853.47757545198,\\\"price\\\":27797.88181182831,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5814636770765782,\\\"bias\\\":0.0837482760610263,\\\"bid\\\":27635.97122610981,\\\"ask\\\":27746.736641845728,\\\"price\\\":27691.353933977756,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5847481439998952,\\\"bias\\\":0.08596311315118921,\\\"bid\\\":28666.672012607207,\\\"ask\\\":28781.56849361966,\\\"price\\\":28724.12025311342,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5848281711232678,\\\"bias\\\":0.08894572098103626,\\\"bid\\\":31207.07121543875,\\\"ask\\\":31332.149657183978,\\\"price\\\":31269.610436311355,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4560363639420631,\\\"bias\\\":0.09167516769463202,\\\"bid\\\":31424.265053826388,\\\"ask\\\":31550.214011957964,\\\"price\\\":31487.23953289219,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5338036125978907,\\\"bias\\\":0.0940684785021092,\\\"bid\\\":32187.76029733724,\\\"ask\\\":32316.7693566452,\\\"price\\\":32252.26482699123,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4097943490761712,\\\"bias\\\":0.0933891737489953,\\\"bid\\\":30871.4836448966,\\\"ask\\\":30995.21704627894,\\\"price\\\":30933.350345587776,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5463210847600098,\\\"bias\\\":0.09403439442942851,\\\"bid\\\":30574.013269718842,\\\"ask\\\":30696.554405068426,\\\"price\\\":30635.283837393643,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.46518332461544476,\\\"bias\\\":0.09219587559046671,\\\"bid\\\":30705.43203274673,\\\"ask\\\":30828.499896605434,\\\"price\\\":30766.965964676092,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.588664531367084,\\\"bias\\\":0.0910925161861238,\\\"bid\\\":31522.274954192653,\\\"ask\\\":31648.616737576165,\\\"price\\\":31585.44584588441,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.578496710012217,\\\"bias\\\":0.09096777808407297,\\\"bid\\\":32346.72797607177,\\\"ask\\\":32476.374180384675,\\\"price\\\":32411.551078228225,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4081592553385112,\\\"bias\\\":0.09457965742961244,\\\"bid\\\":31088.24981304228,\\\"ask\\\":31212.85201670176,\\\"price\\\":31150.55091487202,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4081108919115303,\\\"bias\\\":0.0937999246960714,\\\"bid\\\":30602.840002630433,\\\"ask\\\":30725.496675987677,\\\"price\\\":30664.168339309046,\\\"maxShares\\\":17200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0069,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"HLS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5745512914392193,\\\"bias\\\":0.07455129143921935,\\\"bid\\\":17848.0628435276,\\\"ask\\\":18208.62976965947,\\\"price\\\":18028.346306593536,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5741178376867945,\\\"bias\\\":0.07411783768679447,\\\"bid\\\":17744.89106114348,\\\"ask\\\":18103.37370884335,\\\"price\\\":17924.132384993416,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5740109679518346,\\\"bias\\\":0.0740109679518346,\\\"bid\\\":17719.341727633535,\\\"ask\\\":18077.308227181686,\\\"price\\\":17898.32497740761,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.46011735980941443,\\\"bias\\\":0.07977655027054048,\\\"bid\\\":19767.65510358603,\\\"ask\\\":20167.001671335238,\\\"price\\\":19967.32838746063,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.46129979167760643,\\\"bias\\\":0.08481245582086938,\\\"bid\\\":19042.19721412066,\\\"ask\\\":19426.888066931184,\\\"price\\\":19234.542640525902,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5874209094645759,\\\"bias\\\":0.09051028794599769,\\\"bid\\\":19084.95253035237,\\\"ask\\\":19470.507126925146,\\\"price\\\":19277.729828638756,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4579494921188263,\\\"bias\\\":0.08834774181088179,\\\"bid\\\":18994.974371683595,\\\"ask\\\":19378.711227677202,\\\"price\\\":19186.842799680395,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4158063949216718,\\\"bias\\\":0.08700088930257688,\\\"bid\\\":18279.154248356717,\\\"ask\\\":18648.430091757862,\\\"price\\\":18463.792170057284,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.41735839707713296,\\\"bias\\\":0.08463135456250287,\\\"bid\\\":17644.842550534675,\\\"ask\\\":18001.304016202044,\\\"price\\\":17823.073283368365,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5353474700283883,\\\"bias\\\":0.08454237816243515,\\\"bid\\\":17375.717628530947,\\\"ask\\\":17726.742227087136,\\\"price\\\":17551.22992780904,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4256112815907533,\\\"bias\\\":0.08426598748323288,\\\"bid\\\":17847.393385490297,\\\"ask\\\":18207.946787217363,\\\"price\\\":18027.67008635384,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4903946757898957,\\\"bias\\\":0.0826630287269815,\\\"bid\\\":17100.26838158034,\\\"ask\\\":17445.72834888499,\\\"price\\\":17272.998365232666,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5776485010169196,\\\"bias\\\":0.08064458359337279,\\\"bid\\\":18282.42426832172,\\\"ask\\\":18651.766172732263,\\\"price\\\":18467.095220526982,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.46126754749570337,\\\"bias\\\":0.07793395666510877,\\\"bid\\\":18180.77523505567,\\\"ask\\\":18548.06362364265,\\\"price\\\":18364.419429349153,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5761047815151129,\\\"bias\\\":0.0779200601714245,\\\"bid\\\":18235.35897363224,\\\"ask\\\":18603.75006400865,\\\"price\\\":18419.554518820438,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5745586201172894,\\\"bias\\\":0.07689930024122338,\\\"bid\\\":19169.348269169954,\\\"ask\\\":19556.607830163288,\\\"price\\\":19362.978049666617,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5733375345306111,\\\"bias\\\":0.07498000570947927,\\\"bid\\\":19435.463914646614,\\\"ask\\\":19828.09954928594,\\\"price\\\":19631.78173196628,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5743329254772536,\\\"bias\\\":0.07569955303442077,\\\"bid\\\":19972.540986133066,\\\"ask\\\":20376.026662620596,\\\"price\\\":20174.28382437683,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5738979720616421,\\\"bias\\\":0.07665980945543505,\\\"bid\\\":20583.78021873299,\\\"ask\\\":20999.614162545786,\\\"price\\\":20791.69719063939,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5592109998855095,\\\"bias\\\":0.07743662494245107,\\\"bid\\\":19912.90275231825,\\\"ask\\\":20315.18361600145,\\\"price\\\":20114.043184159844,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.42522989014561724,\\\"bias\\\":0.07617137757962694,\\\"bid\\\":19167.513622461254,\\\"ask\\\":19554.73611988472,\\\"price\\\":19361.124871172986,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5140217238631419,\\\"bias\\\":0.07674888277590797,\\\"bid\\\":17936.58296497455,\\\"ask\\\":18298.938176388183,\\\"price\\\":18117.76057068136,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5763729642990478,\\\"bias\\\":0.07776171976916935,\\\"bid\\\":18180.465120395875,\\\"ask\\\":18547.747244040245,\\\"price\\\":18364.106182218067,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5277437993790985,\\\"bias\\\":0.07945273716534973,\\\"bid\\\":18878.333628563814,\\\"ask\\\":19259.714105908548,\\\"price\\\":19069.02386723618,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4229090391358711,\\\"bias\\\":0.07842978473701406,\\\"bid\\\":18080.15032764525,\\\"ask\\\":18445.405889819904,\\\"price\\\":18262.778108732567,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5497603922143293,\\\"bias\\\":0.08122870873514065,\\\"bid\\\":17952.713544895156,\\\"ask\\\":18315.39462661021,\\\"price\\\":18134.05408575269,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5317088749596902,\\\"bias\\\":0.08276425009462551,\\\"bid\\\":19647.73419989633,\\\"ask\\\":20044.658123126574,\\\"price\\\":19846.19616151145,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.424777065711409,\\\"bias\\\":0.07779745613033717,\\\"bid\\\":20286.788235723976,\\\"ask\\\":20696.622341496168,\\\"price\\\":20491.70528861006,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5372090189073452,\\\"bias\\\":0.07700002562740704,\\\"bid\\\":21370.21070914448,\\\"ask\\\":21801.932137612053,\\\"price\\\":21586.071423378264,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4231596131940685,\\\"bias\\\":0.07856281147636951,\\\"bid\\\":20244.264637143988,\\\"ask\\\":20653.239680318606,\\\"price\\\":20448.752158731295,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.5074285700018359,\\\"bias\\\":0.07586717426745004,\\\"bid\\\":18321.79939894007,\\\"ask\\\":18691.936760534838,\\\"price\\\":18506.868079737458,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"VITA\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.559491401114117,\\\"bias\\\":0.05949140111411699,\\\"bid\\\":24382.884358265313,\\\"ask\\\":24627.93847241873,\\\"price\\\":24505.411415342023,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5590644394223708,\\\"bias\\\":0.05906443942237083,\\\"bid\\\":24557.877001912853,\\\"ask\\\":24804.68983610293,\\\"price\\\":24681.283419007894,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5591695642254687,\\\"bias\\\":0.05916956422546871,\\\"bid\\\":24601.585907128498,\\\"ask\\\":24848.838026798127,\\\"price\\\":24725.211966963314,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5272123438785302,\\\"bias\\\":0.05985685834546545,\\\"bid\\\":15265.575512974763,\\\"ask\\\":15418.998382451897,\\\"price\\\":15342.286947713335,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.47119888960744133,\\\"bias\\\":0.06287500939850854,\\\"bid\\\":15462.942153847844,\\\"ask\\\":15618.348607655364,\\\"price\\\":15540.64538075161,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5001188763923062,\\\"bias\\\":0.06353488937630558,\\\"bid\\\":16458.586114559763,\\\"ask\\\":16623.99904033423,\\\"price\\\":16541.29257744699,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5282138088601492,\\\"bias\\\":0.06232575782451577,\\\"bid\\\":17220.401309299938,\\\"ask\\\":17393.4706691924,\\\"price\\\":17306.935989246176,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4692230644710623,\\\"bias\\\":0.0630790783225037,\\\"bid\\\":17773.7728503351,\\\"ask\\\":17952.403733253028,\\\"price\\\":17863.088291794065,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5620372990062176,\\\"bias\\\":0.06350724630266447,\\\"bid\\\":19861.2374413737,\\\"ask\\\":20060.847867920187,\\\"price\\\":19961.042654646953,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4759891481534285,\\\"bias\\\":0.060889189770431784,\\\"bid\\\":20689.891418439238,\\\"ask\\\":20897.83002565972,\\\"price\\\":20793.860722049492,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5293038058876707,\\\"bias\\\":0.05949462425305552,\\\"bid\\\":20360.797136971596,\\\"ask\\\":20565.42826397634,\\\"price\\\":20463.11270047397,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4938158061501866,\\\"bias\\\":0.05829611157259729,\\\"bid\\\":19885.01336080632,\\\"ask\\\":20084.86274131693,\\\"price\\\":19984.938051061636,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4793269257698728,\\\"bias\\\":0.06230274652792789,\\\"bid\\\":19587.88931032231,\\\"ask\\\":19784.75251947127,\\\"price\\\":19686.3209148968,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.44101263523600354,\\\"bias\\\":0.06100952316833996,\\\"bid\\\":18464.49843214947,\\\"ask\\\":18650.071280713786,\\\"price\\\":18557.284856431623,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.440092914646848,\\\"bias\\\":0.061277920030707644,\\\"bid\\\":18122.52529756301,\\\"ask\\\":18304.66123020183,\\\"price\\\":18213.593263882423,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4411180810531327,\\\"bias\\\":0.06057588647292156,\\\"bid\\\":18003.792538148988,\\\"ask\\\":18184.73517672335,\\\"price\\\":18094.26385743617,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4579872636151563,\\\"bias\\\":0.05974589232979577,\\\"bid\\\":18099.356387980337,\\\"ask\\\":18281.259467256525,\\\"price\\\":18190.307927618444,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.557367562145077,\\\"bias\\\":0.05963321916082309,\\\"bid\\\":18709.50904644719,\\\"ask\\\":18897.54431324565,\\\"price\\\":18803.52667984643,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.48445937111393983,\\\"bias\\\":0.06071305332975341,\\\"bid\\\":19119.996064300045,\\\"ask\\\":19312.156828765364,\\\"price\\\":19216.076446532712,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5294137082144084,\\\"bias\\\":0.05988252336001576,\\\"bid\\\":19019.814290620823,\\\"ask\\\":19210.968203089375,\\\"price\\\":19115.391246855103,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4422941376598291,\\\"bias\\\":0.05919565514939007,\\\"bid\\\":19310.8868898382,\\\"ask\\\":19504.966155062702,\\\"price\\\":19407.92652245046,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4456677758038504,\\\"bias\\\":0.05743671108494902,\\\"bid\\\":19567.05663664684,\\\"ask\\\":19763.710472191015,\\\"price\\\":19665.383554418917,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5359272111279402,\\\"bias\\\":0.055075050976199136,\\\"bid\\\":19744.269724801296,\\\"ask\\\":19942.704596407333,\\\"price\\\":19843.487160604316,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5198187073379519,\\\"bias\\\":0.05687761365080324,\\\"bid\\\":19962.229918919216,\\\"ask\\\":20162.855345240012,\\\"price\\\":20062.542632079618,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4456944536984526,\\\"bias\\\":0.05664828512755932,\\\"bid\\\":19843.02316948659,\\\"ask\\\":20042.450538024143,\\\"price\\\":19942.736853755363,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5273197496603674,\\\"bias\\\":0.05725093744527043,\\\"bid\\\":20551.831022891747,\\\"ask\\\":20758.382088448445,\\\"price\\\":20655.1065556701,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.48007488254003006,\\\"bias\\\":0.05265957576919078,\\\"bid\\\":19520.08343443089,\\\"ask\\\":19716.265177490488,\\\"price\\\":19618.174305960696,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5526348031429966,\\\"bias\\\":0.055832926108351555,\\\"bid\\\":20237.042094162738,\\\"ask\\\":20440.42945189301,\\\"price\\\":20338.735773027875,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5552771692188903,\\\"bias\\\":0.056261500960229416,\\\"bid\\\":21482.087040492246,\\\"ask\\\":21697.9874127585,\\\"price\\\":21590.037226625383,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5207944761355522,\\\"bias\\\":0.05860552249152434,\\\"bid\\\":22517.296014259522,\\\"ask\\\":22743.600496814885,\\\"price\\\":22630.448255537205,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.5059770441272244,\\\"bias\\\":0.061039504358949226,\\\"bid\\\":23188.16578765835,\\\"ask\\\":23421.21267999662,\\\"price\\\":23304.68923382749,\\\"maxShares\\\":20500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"ICRS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5647709339502588,\\\"bias\\\":0.06477093395025879,\\\"bid\\\":41608.346938836745,\\\"ask\\\":42026.521279930574,\\\"price\\\":41817.43410938366,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5651828282875072,\\\"bias\\\":0.06518282828750721,\\\"bid\\\":41872.944674906714,\\\"ask\\\":42293.7782897299,\\\"price\\\":42083.36148231831,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5652856259544619,\\\"bias\\\":0.06528562595446186,\\\"bid\\\":41807.01222870323,\\\"ask\\\":42227.18320587612,\\\"price\\\":42017.097717289675,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5696793545782625,\\\"bias\\\":0.07509695604705524,\\\"bid\\\":27167.91920114827,\\\"ask\\\":27440.96361523015,\\\"price\\\":27304.44140818921,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.46484992172994877,\\\"bias\\\":0.07465580012816453,\\\"bid\\\":25381.45288399861,\\\"ask\\\":25636.54286273227,\\\"price\\\":25508.997873365435,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.4998736736483075,\\\"bias\\\":0.07466009653534156,\\\"bid\\\":24620.06879593713,\\\"ask\\\":24867.506673283242,\\\"price\\\":24743.78773461019,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5336628776055532,\\\"bias\\\":0.0735721674066882,\\\"bid\\\":22901.253876063845,\\\"ask\\\":23131.417231602176,\\\"price\\\":23016.335553833014,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5367527581132164,\\\"bias\\\":0.07131911774515953,\\\"bid\\\":24022.825491022864,\\\"ask\\\":24264.260923093436,\\\"price\\\":24143.543207058156,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.42684995803640713,\\\"bias\\\":0.07522394391459097,\\\"bid\\\":24152.143237779503,\\\"ask\\\":24394.8783456969,\\\"price\\\":24273.510791738216,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5325833443650659,\\\"bias\\\":0.07697634643005591,\\\"bid\\\":24181.31618039694,\\\"ask\\\":24424.344483717497,\\\"price\\\":24302.830332057234,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5453689741746431,\\\"bias\\\":0.07747182853594159,\\\"bid\\\":26189.67568626481,\\\"ask\\\":26452.888507232303,\\\"price\\\":26321.282096748575,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.4910716583204324,\\\"bias\\\":0.0771933096595373,\\\"bid\\\":25959.783773505384,\\\"ask\\\":26220.686122987856,\\\"price\\\":26090.234948246634,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5743452361329157,\\\"bias\\\":0.07641105907744528,\\\"bid\\\":27266.435153306582,\\\"ask\\\":27540.469677460416,\\\"price\\\":27403.452415383515,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5497202225005937,\\\"bias\\\":0.07687461307048304,\\\"bid\\\":28804.153112713695,\\\"ask\\\":29093.64208872088,\\\"price\\\":28948.89760071728,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.48680168507370297,\\\"bias\\\":0.07772091930160696,\\\"bid\\\":29916.827704084582,\\\"ask\\\":30217.499339301503,\\\"price\\\":30067.16352169304,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.47738288263413614,\\\"bias\\\":0.07917843817337988,\\\"bid\\\":31836.289599490203,\\\"ask\\\":32156.252309032803,\\\"price\\\":31996.270954261487,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5624037785644582,\\\"bias\\\":0.08230198238208908,\\\"bid\\\":32793.81231244656,\\\"ask\\\":33123.39836583798,\\\"price\\\":32958.60533914226,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5780755292938713,\\\"bias\\\":0.08019009533904875,\\\"bid\\\":35871.083098560346,\\\"ask\\\":36231.59649653581,\\\"price\\\":36051.33979754809,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5751565501095149,\\\"bias\\\":0.07839825548214752,\\\"bid\\\":37584.74870707471,\\\"ask\\\":37962.484874985006,\\\"price\\\":37773.61679102986,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.4652876219395559,\\\"bias\\\":0.07266082259289197,\\\"bid\\\":37903.26219564893,\\\"ask\\\":38284.19950414791,\\\"price\\\":38093.73084989843,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5704662836807342,\\\"bias\\\":0.07251221144013753,\\\"bid\\\":38905.84442063076,\\\"ask\\\":39296.85793239592,\\\"price\\\":39101.35117651334,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.4883724954345184,\\\"bias\\\":0.07303827541791752,\\\"bid\\\":40980.60038298307,\\\"ask\\\":41392.465713465295,\\\"price\\\":41186.533048224184,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.44353281249471593,\\\"bias\\\":0.0692312847122849,\\\"bid\\\":39509.32591988802,\\\"ask\\\":39906.4045723492,\\\"price\\\":39707.86524611863,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5229864097506897,\\\"bias\\\":0.06571657280276177,\\\"bid\\\":40243.690212911664,\\\"ask\\\":40648.14941103136,\\\"price\\\":40445.91981197153,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5083368337507861,\\\"bias\\\":0.0678176342171316,\\\"bid\\\":40273.9926631642,\\\"ask\\\":40678.75640852265,\\\"price\\\":40476.374535843424,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.45767663165190564,\\\"bias\\\":0.06971276392142967,\\\"bid\\\":41878.87170880469,\\\"ask\\\":42299.76489180776,\\\"price\\\":42089.31830030622,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.43124400306918026,\\\"bias\\\":0.07120103772170089,\\\"bid\\\":41677.75201095983,\\\"ask\\\":42096.62389046695,\\\"price\\\":41887.18795071341,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.4314519819658208,\\\"bias\\\":0.07137981881605143,\\\"bid\\\":40915.45569836407,\\\"ask\\\":41326.6663083979,\\\"price\\\":41121.06100338098,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.44030055197491186,\\\"bias\\\":0.06952955234118013,\\\"bid\\\":40363.54624670158,\\\"ask\\\":40769.21002807548,\\\"price\\\":40566.37813738853,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5695270455052316,\\\"bias\\\":0.07144018054997125,\\\"bid\\\":40087.49917093801,\\\"ask\\\":40490.38860984187,\\\"price\\\":40288.94389038994,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5657734676799081,\\\"bias\\\":0.06750881271784315,\\\"bid\\\":41504.433524669876,\\\"ask\\\":41921.56350984242,\\\"price\\\":41712.99851725616,\\\"maxShares\\\":8200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"UNV\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.4031786862306949,\\\"bias\\\":0.09682131376930508,\\\"bid\\\":7935.573325935299,\\\"ask\\\":8015.327831723593,\\\"price\\\":7975.450578829446,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.4026949136132376,\\\"bias\\\":0.09730508638676238,\\\"bid\\\":7975.223821569555,\\\"ask\\\":8055.376824801409,\\\"price\\\":8015.300323185483,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.40281548666400213,\\\"bias\\\":0.09718451333599787,\\\"bid\\\":7985.106111410756,\\\"ask\\\":8065.358434138502,\\\"price\\\":8025.23227277463,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.3977857929920105,\\\"bias\\\":0.11539990003550488,\\\"bid\\\":12949.566559768431,\\\"ask\\\":13079.712957354039,\\\"price\\\":13014.639758561238,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5503864485250862,\\\"bias\\\":0.10665092110091134,\\\"bid\\\":12873.953922476114,\\\"ask\\\":13003.340394058789,\\\"price\\\":12938.64715826745,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.4998827742773825,\\\"bias\\\":0.10778687792504948,\\\"bid\\\":12489.237875467963,\\\"ask\\\":12614.757854115876,\\\"price\\\":12551.997864791916,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.6049277681820834,\\\"bias\\\":0.10668439888076808,\\\"bid\\\":13187.140303977278,\\\"ask\\\":13319.674377384083,\\\"price\\\":13253.407340680684,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.39563322531999356,\\\"bias\\\":0.11473620859671191,\\\"bid\\\":13411.171119549617,\\\"ask\\\":13545.956758942082,\\\"price\\\":13478.56393924585,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.49099086412429627,\\\"bias\\\":0.11822664750709544,\\\"bid\\\":13401.422830454681,\\\"ask\\\":13536.110497092413,\\\"price\\\":13468.76666377355,\\\"maxShares\\\":9300000,\\\"investedShares\\\":4278000,\\\"averagePrice\\\":6182.83853196368,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.45628272523528624,\\\"bias\\\":0.11328875364039348,\\\"bid\\\":14330.20052390702,\\\"ask\\\":14474.222639725178,\\\"price\\\":14402.211581816098,\\\"maxShares\\\":9300000,\\\"investedShares\\\":2790000,\\\"averagePrice\\\":4032.285999106749,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.43352906622503307,\\\"bias\\\":0.11192463263552171,\\\"bid\\\":13169.512960641872,\\\"ask\\\":13301.869874819176,\\\"price\\\":13235.69141773053,\\\"maxShares\\\":9300000,\\\"investedShares\\\":1674000,\\\"averagePrice\\\":2310.3745453205906,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.6037994182290912,\\\"bias\\\":0.10603576638718226,\\\"bid\\\":13331.501855225404,\\\"ask\\\":13465.486798494005,\\\"price\\\":13398.494326859704,\\\"maxShares\\\":9300000,\\\"investedShares\\\":9300000,\\\"averagePrice\\\":12835.414140669951,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.6048152241970314,\\\"bias\\\":0.1075532857347844,\\\"bid\\\":14524.294511814704,\\\"ask\\\":14670.267320978683,\\\"price\\\":14597.280916396689,\\\"maxShares\\\":9300000,\\\"investedShares\\\":9300000,\\\"averagePrice\\\":12835.414140669951,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.4178325271790441,\\\"bias\\\":0.10728864578771802,\\\"bid\\\":14690.699939346421,\\\"ask\\\":14838.3451648675,\\\"price\\\":14764.522552106962,\\\"maxShares\\\":9300000,\\\"investedShares\\\":837000,\\\"averagePrice\\\":1155.1872726602953,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.40319567525726574,\\\"bias\\\":0.09927137288642807,\\\"bid\\\":14315.127514007552,\\\"ask\\\":14458.998142289038,\\\"price\\\":14387.062828148308,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.4062238120462919,\\\"bias\\\":0.09794536518959263,\\\"bid\\\":13074.407298456248,\\\"ask\\\":13205.808376832692,\\\"price\\\":13140.107837644457,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.435160103378036,\\\"bias\\\":0.09161781526662283,\\\"bid\\\":11819.439588872303,\\\"ask\\\":11938.227926448908,\\\"price\\\":11878.833757660608,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5209890712131049,\\\"bias\\\":0.09008947962081387,\\\"bid\\\":11823.932883733032,\\\"ask\\\":11942.766380051955,\\\"price\\\":11883.349631892494,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.40914147465349343,\\\"bias\\\":0.09292816633084572,\\\"bid\\\":11811.240779106403,\\\"ask\\\":11929.946716584853,\\\"price\\\":11870.593747845627,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.4072964815813397,\\\"bias\\\":0.09365292460640195,\\\"bid\\\":11421.676738443492,\\\"ask\\\":11536.467459432863,\\\"price\\\":11479.072098938177,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.40425137854882953,\\\"bias\\\":0.09777231403274761,\\\"bid\\\":10628.823939997339,\\\"ask\\\":10735.646291153082,\\\"price\\\":10682.235115575208,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.4064442110566205,\\\"bias\\\":0.09719715792339395,\\\"bid\\\":9802.336962539532,\\\"ask\\\":9900.852911911787,\\\"price\\\":9851.594937225658,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5586808321835319,\\\"bias\\\":0.09101806156185799,\\\"bid\\\":9574.028926194384,\\\"ask\\\":9670.25032243754,\\\"price\\\":9622.139624315967,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5315379244547637,\\\"bias\\\":0.0971914583173582,\\\"bid\\\":9932.581263667204,\\\"ask\\\":10032.406200990496,\\\"price\\\":9982.493732328852,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5092416545881057,\\\"bias\\\":0.10065244734989165,\\\"bid\\\":9626.559285824205,\\\"ask\\\":9723.308625380225,\\\"price\\\":9674.933955602217,\\\"maxShares\\\":9300000,\\\"investedShares\\\":5022000,\\\"averagePrice\\\":5171.810514875205,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.45637142511926804,\\\"bias\\\":0.09529635773249756,\\\"bid\\\":9621.468627406182,\\\"ask\\\":9718.16680456604,\\\"price\\\":9669.81771598611,\\\"maxShares\\\":9300000,\\\"investedShares\\\":1860000,\\\"averagePrice\\\":1915.4853758797067,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5337577259787583,\\\"bias\\\":0.09004249140456533,\\\"bid\\\":9401.084622771195,\\\"ask\\\":9495.56788531161,\\\"price\\\":9448.326254041403,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5103340680941559,\\\"bias\\\":0.08921974311252162,\\\"bid\\\":8891.60635164791,\\\"ask\\\":8980.969229553915,\\\"price\\\":8936.28779060091,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.4438682389087629,\\\"bias\\\":0.0911968496487312,\\\"bid\\\":8991.87768934596,\\\"ask\\\":9082.248319389633,\\\"price\\\":9037.063004367796,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.40795450230108093,\\\"bias\\\":0.09504777585636931,\\\"bid\\\":8574.168677583795,\\\"ask\\\":8660.34122710725,\\\"price\\\":8617.254952345524,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.40455977370093726,\\\"bias\\\":0.09738119881927476,\\\"bid\\\":8112.618923165666,\\\"ask\\\":8194.152781689943,\\\"price\\\":8153.385852427807,\\\"maxShares\\\":9300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0055000000000000005,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"AERO\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.42160112833172514,\\\"bias\\\":0.07839887166827486,\\\"bid\\\":9039.144511748778,\\\"ask\\\":9093.542573003033,\\\"price\\\":9066.343542375906,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.42203558580215456,\\\"bias\\\":0.07796441419784544,\\\"bid\\\":8989.328984454341,\\\"ask\\\":9043.427253167205,\\\"price\\\":9016.378118810773,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.4219284392321955,\\\"bias\\\":0.07807156076780453,\\\"bid\\\":8976.991895795605,\\\"ask\\\":9031.015919240714,\\\"price\\\":9004.00390751816,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.4739022760836319,\\\"bias\\\":0.08793673629376031,\\\"bid\\\":12302.51373057596,\\\"ask\\\":12376.55092454131,\\\"price\\\":12339.532327558638,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5411575888330923,\\\"bias\\\":0.08874304396986488,\\\"bid\\\":12096.701579054408,\\\"ask\\\":12169.500184344608,\\\"price\\\":12133.100881699509,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.49861300999496294,\\\"bias\\\":0.08876500864411196,\\\"bid\\\":11421.117506969964,\\\"ask\\\":11489.850410723036,\\\"price\\\":11455.483958846493,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.46131523360174564,\\\"bias\\\":0.0830072825930459,\\\"bid\\\":11521.97343919853,\\\"ask\\\":11591.313299414369,\\\"price\\\":11556.64336930645,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.41855243886747373,\\\"bias\\\":0.08359448484728044,\\\"bid\\\":10847.494793722239,\\\"ask\\\":10912.775604918152,\\\"price\\\":10880.135199320197,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.42407484303155923,\\\"bias\\\":0.07925811714419845,\\\"bid\\\":9801.512861429612,\\\"ask\\\":9860.498896704012,\\\"price\\\":9831.005879066806,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.42392137149341125,\\\"bias\\\":0.07720826327587943,\\\"bid\\\":9336.588752931675,\\\"ask\\\":9392.776849739686,\\\"price\\\":9364.682801335683,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.42211467771537514,\\\"bias\\\":0.08056678910313037,\\\"bid\\\":8899.372475688322,\\\"ask\\\":8952.929381259157,\\\"price\\\":8926.150928473739,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.4897670892207842,\\\"bias\\\":0.08183305077480779,\\\"bid\\\":8535.872441796173,\\\"ask\\\":8587.241784474983,\\\"price\\\":8561.557113135577,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.582655326231419,\\\"bias\\\":0.08492263625470287,\\\"bid\\\":8978.987304236023,\\\"ask\\\":9033.023336157205,\\\"price\\\":9006.005320196611,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5558035647843522,\\\"bias\\\":0.08629131055702444,\\\"bid\\\":9358.86996428297,\\\"ask\\\":9415.192150627701,\\\"price\\\":9387.031057455339,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.48559436572191883,\\\"bias\\\":0.08548461720076561,\\\"bid\\\":8952.369929611701,\\\"ask\\\":9006.245776730722,\\\"price\\\":8979.30785317121,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.4764697560157204,\\\"bias\\\":0.08335421245153452,\\\"bid\\\":9156.603079278366,\\\"ask\\\":9211.708012553861,\\\"price\\\":9184.155545916114,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.541266736797746,\\\"bias\\\":0.08415404111024016,\\\"bid\\\":9379.747669528564,\\\"ask\\\":9436.19549903425,\\\"price\\\":9407.971584281406,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.4803552624575038,\\\"bias\\\":0.08347350700818418,\\\"bid\\\":9363.867222942246,\\\"ask\\\":9420.21948306025,\\\"price\\\":9392.043353001245,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5831867427854238,\\\"bias\\\":0.0850137950482509,\\\"bid\\\":9433.715467940166,\\\"ask\\\":9490.488078579725,\\\"price\\\":9462.10177325994,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.45858481735730033,\\\"bias\\\":0.08569816448406731,\\\"bid\\\":9852.619630031586,\\\"ask\\\":9911.913228607502,\\\"price\\\":9882.266429319543,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5247819783406781,\\\"bias\\\":0.08336554117179029,\\\"bid\\\":9546.064222300643,\\\"ask\\\":9603.512953829038,\\\"price\\\":9574.788588064845,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.4216564004169962,\\\"bias\\\":0.08217660552329292,\\\"bid\\\":9465.652608834507,\\\"ask\\\":9522.617418917767,\\\"price\\\":9494.135013876134,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5508481760063595,\\\"bias\\\":0.07808333025495917,\\\"bid\\\":9457.992009154306,\\\"ask\\\":9514.91071733377,\\\"price\\\":9486.451363244041,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5285194795853566,\\\"bias\\\":0.0821855852810407,\\\"bid\\\":9544.201841594793,\\\"ask\\\":9601.63936521523,\\\"price\\\":9572.920603405008,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.42218202316150744,\\\"bias\\\":0.07982858200976234,\\\"bid\\\":9078.168825784494,\\\"ask\\\":9132.801737474278,\\\"price\\\":9105.48528162939,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5372643087270279,\\\"bias\\\":0.07739380284887237,\\\"bid\\\":9140.705358351339,\\\"ask\\\":9195.714618281234,\\\"price\\\":9168.209988316283,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.47064130643203833,\\\"bias\\\":0.07773620857711727,\\\"bid\\\":9319.514754414684,\\\"ask\\\":9375.600098974852,\\\"price\\\":9347.557426694768,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5734975551824993,\\\"bias\\\":0.07509016553541459,\\\"bid\\\":9280.772539454438,\\\"ask\\\":9336.624731266604,\\\"price\\\":9308.698635360524,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5647674171104264,\\\"bias\\\":0.07503138012738075,\\\"bid\\\":9821.336821028328,\\\"ask\\\":9880.442157965306,\\\"price\\\":9850.889489496818,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.42110895665982484,\\\"bias\\\":0.08225726524221855,\\\"bid\\\":9813.998498336614,\\\"ask\\\":9873.059672850171,\\\"price\\\":9843.529085593394,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.4212480834927775,\\\"bias\\\":0.08040682975826313,\\\"bid\\\":9509.985118732651,\\\"ask\\\":9567.216724261636,\\\"price\\\":9538.600921497142,\\\"maxShares\\\":10300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0060999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"OMN\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5592790470469413,\\\"bias\\\":0.05927904704694131,\\\"bid\\\":26744.226075568877,\\\"ask\\\":27339.1431369061,\\\"price\\\":27041.68460623749,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5596775582685468,\\\"bias\\\":0.059677558268546815,\\\"bid\\\":26924.01766695237,\\\"ask\\\":27522.934136793574,\\\"price\\\":27223.475901872975,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5595780647515897,\\\"bias\\\":0.059578064751589666,\\\"bid\\\":26879.205065322025,\\\"ask\\\":27477.124692659825,\\\"price\\\":27178.164878990927,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5524430905482187,\\\"bias\\\":0.0572789205378601,\\\"bid\\\":18116.69777323297,\\\"ask\\\":18519.698128148168,\\\"price\\\":18318.197950690574,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.4470686227102913,\\\"bias\\\":0.054263064363684,\\\"bid\\\":19237.37739142572,\\\"ask\\\":19665.30691883863,\\\"price\\\":19451.342155132166,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5000715381609185,\\\"bias\\\":0.05370948028214362,\\\"bid\\\":18094.7904716726,\\\"ask\\\":18497.303505420612,\\\"price\\\":18296.046988546605,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.4756168351292028,\\\"bias\\\":0.05210765600674877,\\\"bid\\\":17949.505023115595,\\\"ask\\\":18348.78622686539,\\\"price\\\":18149.145624990488,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5430927431700965,\\\"bias\\\":0.05158905736150077,\\\"bid\\\":18873.304961177535,\\\"ask\\\":19293.13580965671,\\\"price\\\":19083.22038541713,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5493052307610106,\\\"bias\\\":0.05156273576727055,\\\"bid\\\":21674.88479106825,\\\"ask\\\":22157.035918877642,\\\"price\\\":21915.960354972944,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5507508849174264,\\\"bias\\\":0.052860661384208196,\\\"bid\\\":23962.346759913853,\\\"ask\\\":24495.381773784524,\\\"price\\\":24228.86426684919,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.4531499427116856,\\\"bias\\\":0.0539513012310458,\\\"bid\\\":24413.059989475667,\\\"ask\\\":24956.120980141448,\\\"price\\\":24684.59048480856,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.49369367058036195,\\\"bias\\\":0.05398907074925746,\\\"bid\\\":24197.449049937524,\\\"ask\\\":24735.713841746074,\\\"price\\\":24466.581445841814,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5549381926460987,\\\"bias\\\":0.055875145421567796,\\\"bid\\\":25249.300667602198,\\\"ask\\\":25810.963574262703,\\\"price\\\":25530.132120932463,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5555434055872706,\\\"bias\\\":0.05722495082392032,\\\"bid\\\":26680.923048127363,\\\"ask\\\":27274.43195314133,\\\"price\\\":26977.677500634385,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5108423509112512,\\\"bias\\\":0.05650235747204513,\\\"bid\\\":26130.47806649399,\\\"ask\\\":26711.742492644513,\\\"price\\\":26421.110279569235,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.516482081701102,\\\"bias\\\":0.05555726473804112,\\\"bid\\\":24897.878746349816,\\\"ask\\\":25451.724380747877,\\\"price\\\":25174.80156354884,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5566422694288586,\\\"bias\\\":0.059538949260665275,\\\"bid\\\":24817.729338256042,\\\"ask\\\":25369.792073788536,\\\"price\\\":25093.76070602228,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5575513295203783,\\\"bias\\\":0.061099743175210386,\\\"bid\\\":25256.151598163786,\\\"ask\\\":25817.966901661875,\\\"price\\\":25537.059249912832,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.48688888631349153,\\\"bias\\\":0.058238538591385614,\\\"bid\\\":25703.495727169397,\\\"ask\\\":26275.26206285971,\\\"price\\\":25989.378895014554,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.45553780939998245,\\\"bias\\\":0.059959948892431614,\\\"bid\\\":25054.810191794615,\\\"ask\\\":25612.146717800144,\\\"price\\\":25333.478454797383,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5613725201758375,\\\"bias\\\":0.0640775741192211,\\\"bid\\\":26233.603261849523,\\\"ask\\\":26817.161676167707,\\\"price\\\":26525.382469008597,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5627998404124686,\\\"bias\\\":0.06470912776684135,\\\"bid\\\":28850.914246731238,\\\"ask\\\":29492.693936749507,\\\"price\\\":29171.804091740378,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.4596517344140205,\\\"bias\\\":0.06260297672431692,\\\"bid\\\":29562.33736594377,\\\"ask\\\":30219.942443851516,\\\"price\\\":29891.139904897627,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.4360084006105276,\\\"bias\\\":0.06705624336193383,\\\"bid\\\":27323.470065729158,\\\"ask\\\":27931.272230993112,\\\"price\\\":27627.371148361137,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.4359981916094478,\\\"bias\\\":0.06631177107679692,\\\"bid\\\":24749.143275655657,\\\"ask\\\":25299.680335377012,\\\"price\\\":25024.411805516338,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.530355030713296,\\\"bias\\\":0.06313640278929222,\\\"bid\\\":23933.81803005116,\\\"ask\\\":24466.21843112408,\\\"price\\\":24200.018230587637,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.4372525199305659,\\\"bias\\\":0.06579928538000773,\\\"bid\\\":23949.391672935453,\\\"ask\\\":24482.13850489154,\\\"price\\\":24215.765088913497,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5080918795476249,\\\"bias\\\":0.06749000687082196,\\\"bid\\\":24672.40145193257,\\\"ask\\\":25221.23141345179,\\\"price\\\":24946.816432692172,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.46856340220976195,\\\"bias\\\":0.06372806754786497,\\\"bid\\\":25208.80754692961,\\\"ask\\\":25769.569696608512,\\\"price\\\":25489.18862176906,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5228663999830869,\\\"bias\\\":0.06269536251872176,\\\"bid\\\":25444.633006074604,\\\"ask\\\":26010.64102036543,\\\"price\\\":25727.63701322003,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5058572128839053,\\\"bias\\\":0.05990847529482246,\\\"bid\\\":26396.548839153344,\\\"ask\\\":26983.73192758748,\\\"price\\\":26690.14038337042,\\\"maxShares\\\":9000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"SLRS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5851621685640704,\\\"bias\\\":0.08516216856407044,\\\"bid\\\":31738.981226479817,\\\"ask\\\":32315.471299211033,\\\"price\\\":32027.226262845426,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5845509712669494,\\\"bias\\\":0.08455097126694944,\\\"bid\\\":31512.818019005943,\\\"ask\\\":32085.2001828224,\\\"price\\\":31799.009100914172,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5847014578252423,\\\"bias\\\":0.0847014578252423,\\\"bid\\\":31568.905553598746,\\\"ask\\\":32142.306461736764,\\\"price\\\":31855.606007667757,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.584728124917323,\\\"bias\\\":0.09064836264153375,\\\"bid\\\":25699.36656590017,\\\"ask\\\":26166.156271436197,\\\"price\\\":25932.76141866817,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5410928746024152,\\\"bias\\\":0.08752843126124077,\\\"bid\\\":26849.631450115285,\\\"ask\\\":27337.313958795472,\\\"price\\\":27093.472704455377,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5000978979278702,\\\"bias\\\":0.08295728381844086,\\\"bid\\\":24722.91396644558,\\\"ask\\\":25171.967903273035,\\\"price\\\":24947.4409348593,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5821241472073111,\\\"bias\\\":0.08476414652600872,\\\"bid\\\":25554.736754279147,\\\"ask\\\":26018.89948039116,\\\"price\\\":25786.818117335144,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4263964636973425,\\\"bias\\\":0.07965007288159781,\\\"bid\\\":24988.574059959225,\\\"ask\\\":25442.453306255167,\\\"price\\\":25215.51368310718,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.424063444874389,\\\"bias\\\":0.07750616021418272,\\\"bid\\\":24257.65061565896,\\\"ask\\\":24698.253754994817,\\\"price\\\":24477.952185326893,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.42607100115337465,\\\"bias\\\":0.07629571152560244,\\\"bid\\\":23815.59669982908,\\\"ask\\\":24248.170605577732,\\\"price\\\":24031.883652703407,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.42732134941158245,\\\"bias\\\":0.07610254714048748,\\\"bid\\\":22327.847631761804,\\\"ask\\\":22733.398850098554,\\\"price\\\":22530.62324093019,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4922314855512736,\\\"bias\\\":0.07359750851868019,\\\"bid\\\":21519.129728063755,\\\"ask\\\":21909.99182201447,\\\"price\\\":21714.560775039114,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5747411634528516,\\\"bias\\\":0.07769740572675565,\\\"bid\\\":21617.97301556317,\\\"ask\\\":22010.630446723742,\\\"price\\\":21814.301731143452,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5509058162961099,\\\"bias\\\":0.07820283829605801,\\\"bid\\\":22874.526557845224,\\\"ask\\\":23290.007363134035,\\\"price\\\":23082.266960489615,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.42636245475181916,\\\"bias\\\":0.07660996840991102,\\\"bid\\\":23555.457956480746,\\\"ask\\\":23983.30683964589,\\\"price\\\":23769.382398063317,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5209853150531183,\\\"bias\\\":0.07225041390750009,\\\"bid\\\":24730.72417737055,\\\"ask\\\":25179.919974739543,\\\"price\\\":24955.322076055043,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5713042816751883,\\\"bias\\\":0.07311353916173513,\\\"bid\\\":25141.461923503623,\\\"ask\\\":25598.11814411216,\\\"price\\\":25369.790033807873,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.570101859030816,\\\"bias\\\":0.07182893185079375,\\\"bid\\\":25708.521938711805,\\\"ask\\\":26175.477937598596,\\\"price\\\":25941.999938155197,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5701639313853637,\\\"bias\\\":0.07217007237315587,\\\"bid\\\":25993.0420600153,\\\"ask\\\":26465.165931942953,\\\"price\\\":26229.10399597913,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5537935817512374,\\\"bias\\\":0.07077661090019527,\\\"bid\\\":26517.598478237305,\\\"ask\\\":26999.250115581657,\\\"price\\\":26758.424296909478,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.42991262525008467,\\\"bias\\\":0.07168637764198638,\\\"bid\\\":24193.59521260991,\\\"ask\\\":24633.03488347467,\\\"price\\\":24413.31504804227,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5130429244665858,\\\"bias\\\":0.07311209206308267,\\\"bid\\\":22413.36224238073,\\\"ask\\\":22820.46670288815,\\\"price\\\":22616.91447263445,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4619806792039453,\\\"bias\\\":0.07680683814944289,\\\"bid\\\":23757.55019678443,\\\"ask\\\":24189.06977654438,\\\"price\\\":23973.309986664397,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5764064304116521,\\\"bias\\\":0.07891455281436432,\\\"bid\\\":24104.75218602287,\\\"ask\\\":24542.578159129243,\\\"price\\\":24323.66517257606,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4899578173666847,\\\"bias\\\":0.08273951165394355,\\\"bid\\\":26143.73901308677,\\\"ask\\\":26618.600064787628,\\\"price\\\":26381.169538937214,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5496092008932694,\\\"bias\\\":0.0833163733097092,\\\"bid\\\":25665.45900605188,\\\"ask\\\":26131.63283259975,\\\"price\\\":25898.545919325818,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5807758817845624,\\\"bias\\\":0.08374463460445747,\\\"bid\\\":28576.732547445852,\\\"ask\\\":29095.785207238016,\\\"price\\\":28836.258877341923,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4909648056861829,\\\"bias\\\":0.08474277391146368,\\\"bid\\\":29321.291371028987,\\\"ask\\\":29853.867803600668,\\\"price\\\":29587.579587314816,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5404764227384301,\\\"bias\\\":0.08307669878153834,\\\"bid\\\":29306.145277863772,\\\"ask\\\":29838.446604807817,\\\"price\\\":29572.295941335815,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.470001588035713,\\\"bias\\\":0.08409520528256498,\\\"bid\\\":29101.56659245682,\\\"ask\\\":29630.152060331922,\\\"price\\\":29365.859326394362,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5829506486428072,\\\"bias\\\":0.08511092121550978,\\\"bid\\\":31298.69133729399,\\\"ask\\\":31867.184217285187,\\\"price\\\":31582.937777289586,\\\"maxShares\\\":5300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0079,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"GPH\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5980388497704631,\\\"bias\\\":0.09803884977046307,\\\"bid\\\":20493.218975632313,\\\"ask\\\":20865.446969135217,\\\"price\\\":20679.332972383767,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5974866483509029,\\\"bias\\\":0.09748664835090293,\\\"bid\\\":20378.43792326387,\\\"ask\\\":20748.58109442305,\\\"price\\\":20563.50950884346,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5976228206739617,\\\"bias\\\":0.09762282067396166,\\\"bid\\\":20406.903146751014,\\\"ask\\\":20777.563345178376,\\\"price\\\":20592.233245964697,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.37855991762882657,\\\"bias\\\":0.12441425490599373,\\\"bid\\\":19073.037174644156,\\\"ask\\\":19419.46973684757,\\\"price\\\":19246.253455745868,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.44124057164950764,\\\"bias\\\":0.12325864160151534,\\\"bid\\\":17119.7765453706,\\\"ask\\\":17430.73111430771,\\\"price\\\":17275.25382983916,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6190847687305536,\\\"bias\\\":0.12181702762183222,\\\"bid\\\":17272.872289604216,\\\"ask\\\":17586.60760868885,\\\"price\\\":17429.739949146548,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6198717191348477,\\\"bias\\\":0.12381609370355617,\\\"bid\\\":18358.673178147834,\\\"ask\\\":18692.130410445177,\\\"price\\\":18525.401794296507,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6163954060137331,\\\"bias\\\":0.12019207957526767,\\\"bid\\\":19681.43231798358,\\\"ask\\\":20038.915447876312,\\\"price\\\":19860.17388292995,\\\"maxShares\\\":5200000,\\\"investedShares\\\":5044000,\\\"averagePrice\\\":18408.69011507672,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6151940225475517,\\\"bias\\\":0.11854531422973635,\\\"bid\\\":22003.507434265877,\\\"ask\\\":22403.16750875305,\\\"price\\\":22203.337471509465,\\\"maxShares\\\":5200000,\\\"investedShares\\\":5200000,\\\"averagePrice\\\":18978.031046470845,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.45088869269912485,\\\"bias\\\":0.12038322760207665,\\\"bid\\\":21448.76180658062,\\\"ask\\\":21838.345774813162,\\\"price\\\":21643.553790696893,\\\"maxShares\\\":5200000,\\\"investedShares\\\":1560000,\\\"averagePrice\\\":5693.4093139412425,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.43057515389132706,\\\"bias\\\":0.1169325246656559,\\\"bid\\\":19569.287274310558,\\\"ask\\\":19924.733460927695,\\\"price\\\":19747.01036761913,\\\"maxShares\\\":5200000,\\\"investedShares\\\":988000,\\\"averagePrice\\\":3675.5078488768554,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5140071550168311,\\\"bias\\\":0.11708934670170135,\\\"bid\\\":20394.651095025612,\\\"ask\\\":20765.088753663826,\\\"price\\\":20579.869924344715,\\\"maxShares\\\":5200000,\\\"investedShares\\\":2964000,\\\"averagePrice\\\":11026.523546630551,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5385448612934775,\\\"bias\\\":0.11669220598545993,\\\"bid\\\":20671.085708321625,\\\"ask\\\":21046.544379108505,\\\"price\\\":20858.815043715073,\\\"maxShares\\\":5200000,\\\"investedShares\\\":3432000,\\\"averagePrice\\\":13873.123990779408,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.4446180967756323,\\\"bias\\\":0.11230305698777321,\\\"bid\\\":20559.55464351366,\\\"ask\\\":20932.98752301239,\\\"price\\\":20746.271083263026,\\\"maxShares\\\":5200000,\\\"investedShares\\\":1300000,\\\"averagePrice\\\":5235.063408826942,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5209162381149868,\\\"bias\\\":0.1108498444425815,\\\"bid\\\":20798.966315367878,\\\"ask\\\":21176.747741883137,\\\"price\\\":20987.85702862551,\\\"maxShares\\\":5200000,\\\"investedShares\\\":3120000,\\\"averagePrice\\\":12537.276651452446,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.40019937214868884,\\\"bias\\\":0.10167949349644195,\\\"bid\\\":19481.362562652474,\\\"ask\\\":19835.211731298015,\\\"price\\\":19658.287146975243,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.4018590375188573,\\\"bias\\\":0.09962076167775491,\\\"bid\\\":19347.590949075267,\\\"ask\\\":19699.010360864726,\\\"price\\\":19523.300654969997,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.47698698477923485,\\\"bias\\\":0.0997261183336342,\\\"bid\\\":18816.8385083844,\\\"ask\\\":19158.617613481194,\\\"price\\\":18987.7280609328,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.47854711962452773,\\\"bias\\\":0.10033935021284546,\\\"bid\\\":18406.096894999733,\\\"ask\\\":18740.41550661427,\\\"price\\\":18573.256200807005,\\\"maxShares\\\":5200000,\\\"investedShares\\\":260000,\\\"averagePrice\\\":949.7652972864607,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5643908228429205,\\\"bias\\\":0.09294420578194057,\\\"bid\\\":18284.064878531393,\\\"ask\\\":18616.16696512428,\\\"price\\\":18450.11592182784,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5265212893635305,\\\"bias\\\":0.09328673488175349,\\\"bid\\\":19514.14683636038,\\\"ask\\\":19868.591481218595,\\\"price\\\":19691.369158789494,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5162162230409385,\\\"bias\\\":0.09571854362416699,\\\"bid\\\":19109.197544870003,\\\"ask\\\":19456.28690491809,\\\"price\\\":19282.742224894046,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5930905326850321,\\\"bias\\\":0.0954480515048044,\\\"bid\\\":20073.844952563453,\\\"ask\\\":20438.455658059054,\\\"price\\\":20256.150305311257,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5345690733333472,\\\"bias\\\":0.09689114808744126,\\\"bid\\\":20583.412894663885,\\\"ask\\\":20957.27912282125,\\\"price\\\":20770.346008742563,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.40248391635820396,\\\"bias\\\":0.100381220347591,\\\"bid\\\":19342.74951759343,\\\"ask\\\":19694.080992181414,\\\"price\\\":19518.415254887423,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5601774900257293,\\\"bias\\\":0.09832120338633576,\\\"bid\\\":18380.500788887814,\\\"ask\\\":18714.354486365082,\\\"price\\\":18547.427637626453,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5969170432120903,\\\"bias\\\":0.09835505088942953,\\\"bid\\\":19212.18102041274,\\\"ask\\\":19561.14091785716,\\\"price\\\":19386.66096913495,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5970863206325471,\\\"bias\\\":0.09945804172857209,\\\"bid\\\":19245.949453358164,\\\"ask\\\":19595.522702763254,\\\"price\\\":19420.736078060712,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5822928715196217,\\\"bias\\\":0.09604648751516776,\\\"bid\\\":20222.273381847222,\\\"ask\\\":20589.58006284949,\\\"price\\\":20405.92672234836,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.4645708863970915,\\\"bias\\\":0.09959031973785593,\\\"bid\\\":19779.347017839602,\\\"ask\\\":20138.608618567258,\\\"price\\\":19958.97781820343,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5983475388864565,\\\"bias\\\":0.09978607115422133,\\\"bid\\\":20443.223823648186,\\\"ask\\\":20814.543731645826,\\\"price\\\":20628.883777647014,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"NVMD\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5543483418992885,\\\"bias\\\":0.0543483418992885,\\\"bid\\\":31225.412134097216,\\\"ask\\\":31792.574009388583,\\\"price\\\":31508.9930717429,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5539977900443493,\\\"bias\\\":0.05399779004434935,\\\"bid\\\":31426.818943621078,\\\"ask\\\":31997.639065705007,\\\"price\\\":31712.229004663044,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5540841647046264,\\\"bias\\\":0.0540841647046264,\\\"bid\\\":31477.08916408036,\\\"ask\\\":32048.82236786789,\\\"price\\\":31762.955765974126,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.45619226292666,\\\"bias\\\":0.055040212962933543,\\\"bid\\\":37869.99282569704,\\\"ask\\\":38557.84335128992,\\\"price\\\":38213.91808849349,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4737657567178532,\\\"bias\\\":0.05434158730934707,\\\"bid\\\":36491.58390335557,\\\"ask\\\":37154.397738128944,\\\"price\\\":36822.99082074225,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5515813785474086,\\\"bias\\\":0.053186289667404796,\\\"bid\\\":36850.430420096505,\\\"ask\\\":37519.76215325668,\\\"price\\\":37185.096286676606,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4732910150901186,\\\"bias\\\":0.056303272265574855,\\\"bid\\\":39239.79527466223,\\\"ask\\\":39952.52616764299,\\\"price\\\":39596.1607211526,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4452967570973363,\\\"bias\\\":0.05565487460913915,\\\"bid\\\":39660.1656265961,\\\"ask\\\":40380.53190437485,\\\"price\\\":40020.34876548548,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.49632044208376674,\\\"bias\\\":0.05578325733212752,\\\"bid\\\":40036.77138883107,\\\"ask\\\":40763.97813454145,\\\"price\\\":40400.37476168625,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4774105707134067,\\\"bias\\\":0.0563513269181955,\\\"bid\\\":40329.79011238713,\\\"ask\\\":41062.31909525592,\\\"price\\\":40696.05460382152,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4487479219628439,\\\"bias\\\":0.05303784403690953,\\\"bid\\\":40765.539051535845,\\\"ask\\\":41505.98274772921,\\\"price\\\":41135.76089963253,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.446949646267464,\\\"bias\\\":0.05376896686330679,\\\"bid\\\":39111.03060319099,\\\"ask\\\":39821.42268276461,\\\"price\\\":39466.22664297781,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.44582177097505027,\\\"bias\\\":0.05607854826851694,\\\"bid\\\":39400.79387724469,\\\"ask\\\":40116.44906371329,\\\"price\\\":39758.62147047899,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4471739555411531,\\\"bias\\\":0.05421336388160297,\\\"bid\\\":37805.82669759808,\\\"ask\\\":38492.51174356858,\\\"price\\\":38149.16922058334,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4478374197622854,\\\"bias\\\":0.053644178726083624,\\\"bid\\\":36139.0218609981,\\\"ask\\\":36795.43194525437,\\\"price\\\":36467.22690312624,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5168050792504215,\\\"bias\\\":0.05619505828119009,\\\"bid\\\":35557.80583553789,\\\"ask\\\":36203.659019230785,\\\"price\\\":35880.732427384326,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.47173018974293235,\\\"bias\\\":0.058420738746192136,\\\"bid\\\":35430.26915254618,\\\"ask\\\":36073.805827365366,\\\"price\\\":35752.03748995575,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.558374166272584,\\\"bias\\\":0.05975754218218643,\\\"bid\\\":34573.709609824306,\\\"ask\\\":35201.68819002294,\\\"price\\\":34887.69889992363,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5599592239680233,\\\"bias\\\":0.06438864899040064,\\\"bid\\\":37158.4285180154,\\\"ask\\\":37833.35456576946,\\\"price\\\":37495.89154189245,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.45696364470488526,\\\"bias\\\":0.06204707659588404,\\\"bid\\\":37616.316848935385,\\\"ask\\\":38299.559738219774,\\\"price\\\":37957.93829357758,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.43822939462939176,\\\"bias\\\":0.06285959411204667,\\\"bid\\\":37151.51414339563,\\\"ask\\\":37826.31460210512,\\\"price\\\":37488.91437275037,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5113786001687237,\\\"bias\\\":0.06264510266755652,\\\"bid\\\":37334.92323603467,\\\"ask\\\":38013.055040523686,\\\"price\\\":37673.98913827918,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.46062733555035124,\\\"bias\\\":0.061591224207485196,\\\"bid\\\":36884.70455495425,\\\"ask\\\":37554.65882537726,\\\"price\\\":37219.681690165744,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.47854803337034746,\\\"bias\\\":0.061568516511017746,\\\"bid\\\":34502.78009764424,\\\"ask\\\":35129.470351688215,\\\"price\\\":34816.12522466623,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.557927958654762,\\\"bias\\\":0.060457711071194575,\\\"bid\\\":35351.176280059844,\\\"ask\\\":35993.27635376425,\\\"price\\\":35672.22631691205,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.46654132876741644,\\\"bias\\\":0.05598360979375416,\\\"bid\\\":35209.830916446255,\\\"ask\\\":35849.36366770359,\\\"price\\\":35529.597292074905,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.44754449485758035,\\\"bias\\\":0.05393348239963541,\\\"bid\\\":33923.46697966507,\\\"ask\\\":34539.63489655102,\\\"price\\\":34231.55093810804,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4488249143899578,\\\"bias\\\":0.052911139578355915,\\\"bid\\\":32424.34843836367,\\\"ask\\\":33013.28715873759,\\\"price\\\":32718.817798550634,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.44853843819184264,\\\"bias\\\":0.055198622253554874,\\\"bid\\\":33073.55904296683,\\\"ask\\\":33674.28968148691,\\\"price\\\":33373.924362226884,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4460198103113392,\\\"bias\\\":0.055700714766217185,\\\"bid\\\":32771.94567451118,\\\"ask\\\":33367.19796728738,\\\"price\\\":33069.571820899284,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5054873966113865,\\\"bias\\\":0.0550372772353126,\\\"bid\\\":31574.850606589058,\\\"ask\\\":32148.35949752611,\\\"price\\\":31861.60505205759,\\\"maxShares\\\":4900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"WDS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4479806530533119,\\\"bias\\\":0.05201934694668808,\\\"bid\\\":29813.405018077363,\\\"ask\\\":30233.734998191238,\\\"price\\\":30023.570008134302,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4468133880334285,\\\"bias\\\":0.053186611966571484,\\\"bid\\\":29159.102299508082,\\\"ask\\\":29570.207467879794,\\\"price\\\":29364.65488369394,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4471093604899913,\\\"bias\\\":0.05289063951000872,\\\"bid\\\":29321.366651750963,\\\"ask\\\":29734.759535058627,\\\"price\\\":29528.063093404795,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.44231382672446073,\\\"bias\\\":0.06941287533105195,\\\"bid\\\":2787.2526082301342,\\\"ask\\\":2826.54922103499,\\\"price\\\":2806.900914632562,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5297996246887116,\\\"bias\\\":0.0676115815845656,\\\"bid\\\":2778.7991582430004,\\\"ask\\\":2817.9765884699923,\\\"price\\\":2798.3878733564966,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.49981171434850347,\\\"bias\\\":0.06099493907915443,\\\"bid\\\":3480.6497156243263,\\\"ask\\\":3529.722319872805,\\\"price\\\":3505.186017748565,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.47375916754066716,\\\"bias\\\":0.06306119826501344,\\\"bid\\\":4008.3632004585706,\\\"ask\\\":4064.875873979639,\\\"price\\\":4036.619537219104,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5560093748437811,\\\"bias\\\":0.06500519411632721,\\\"bid\\\":5829.384496464256,\\\"ask\\\":5911.571186243211,\\\"price\\\":5870.477841353734,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5588617459099033,\\\"bias\\\":0.0696445678579487,\\\"bid\\\":8371.500928541209,\\\"ask\\\":8489.528131964751,\\\"price\\\":8430.514530252982,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5564568494102448,\\\"bias\\\":0.06233779058792277,\\\"bid\\\":8978.344788965198,\\\"ask\\\":9104.92769636249,\\\"price\\\":9041.636242663846,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5550551449723539,\\\"bias\\\":0.058364399184451354,\\\"bid\\\":9516.217763632689,\\\"ask\\\":9650.383975808785,\\\"price\\\":9583.300869720739,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5535147429241245,\\\"bias\\\":0.057971454228800234,\\\"bid\\\":9350.026661447959,\\\"ask\\\":9481.849796654675,\\\"price\\\":9415.938229051319,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4735730721022531,\\\"bias\\\":0.06729453245206007,\\\"bid\\\":10777.825704901144,\\\"ask\\\":10929.77893739724,\\\"price\\\":10853.802321149195,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5555728177718533,\\\"bias\\\":0.0699142808836275,\\\"bid\\\":10622.987035780716,\\\"ask\\\":10772.757245751438,\\\"price\\\":10697.872140766087,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5106769335760719,\\\"bias\\\":0.06309202894297916,\\\"bid\\\":10415.26174332632,\\\"ask\\\":10562.103298619946,\\\"price\\\":10488.682520973136,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.506182607680165,\\\"bias\\\":0.0597271062807585,\\\"bid\\\":11921.789275100597,\\\"ask\\\":12089.8708963004,\\\"price\\\":12005.830085700489,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5632384541330064,\\\"bias\\\":0.06869867733863766,\\\"bid\\\":15418.210999754048,\\\"ask\\\":15635.587589881494,\\\"price\\\":15526.899294817771,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5654213847162112,\\\"bias\\\":0.070099595898934,\\\"bid\\\":15992.179489147893,\\\"ask\\\":16217.648283556826,\\\"price\\\":16104.913886352357,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5679085641139721,\\\"bias\\\":0.07311553245116231,\\\"bid\\\":16950.51428753857,\\\"ask\\\":17189.49434798725,\\\"price\\\":17070.00431776291,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.46022455534379875,\\\"bias\\\":0.08066376878017756,\\\"bid\\\":17299.172329645386,\\\"ask\\\":17543.06801203716,\\\"price\\\":17421.120170841274,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5703121722296319,\\\"bias\\\":0.07833908414598545,\\\"bid\\\":17457.0865417796,\\\"ask\\\":17703.208607826837,\\\"price\\\":17580.147574803217,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5939890327472657,\\\"bias\\\":0.10160161788184463,\\\"bid\\\":23606.33361326963,\\\"ask\\\":23939.152012651077,\\\"price\\\":23772.742812960354,\\\"maxShares\\\":14000000,\\\"investedShares\\\":10500000,\\\"averagePrice\\\":17291.276200742854,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5955875973855834,\\\"bias\\\":0.10672657099911831,\\\"bid\\\":31035.86518529535,\\\"ask\\\":31473.430253365972,\\\"price\\\":31254.64771933065,\\\"maxShares\\\":14000000,\\\"investedShares\\\":14000000,\\\"averagePrice\\\":23055.03493432379,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5357357802774315,\\\"bias\\\":0.0929836955414387,\\\"bid\\\":41112.600244329406,\\\"ask\\\":41692.23408463214,\\\"price\\\":41402.41716448077,\\\"maxShares\\\":14000000,\\\"investedShares\\\":9660000,\\\"averagePrice\\\":15907.974104683428,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5042988764571895,\\\"bias\\\":0.06379953124328835,\\\"bid\\\":42725.28598366947,\\\"ask\\\":43327.65658162653,\\\"price\\\":43026.47128264801,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5220639657321906,\\\"bias\\\":0.056656457345971245,\\\"bid\\\":45733.06403760451,\\\"ask\\\":46377.840368446865,\\\"price\\\":46055.45220302571,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5086533444117811,\\\"bias\\\":0.029742812797885376,\\\"bid\\\":46867.612418674,\\\"ask\\\":47528.384396379384,\\\"price\\\":47197.998407526684,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5367930653481746,\\\"bias\\\":0.05922269663914592,\\\"bid\\\":45576.41397964479,\\\"ask\\\":46218.981749750565,\\\"price\\\":45897.69786469769,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4613407202697921,\\\"bias\\\":0.06565550911755819,\\\"bid\\\":46133.18802296035,\\\"ask\\\":46783.605578168266,\\\"price\\\":46458.396800564304,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.43701460705906825,\\\"bias\\\":0.07034028986737134,\\\"bid\\\":37158.05092826998,\\\"ask\\\":37681.93080037045,\\\"price\\\":37419.99086432022,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.44188735339356966,\\\"bias\\\":0.06654711571613875,\\\"bid\\\":32825.93975863313,\\\"ask\\\":33288.74253468637,\\\"price\\\":33057.34114665977,\\\"maxShares\\\":14000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.024700000000000003,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"LXO\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5604847084354395,\\\"bias\\\":0.060484708435439516,\\\"bid\\\":10197.787201619236,\\\"ask\\\":10341.562650584663,\\\"price\\\":10269.67492610195,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5597593926244433,\\\"bias\\\":0.0597593926244433,\\\"bid\\\":10320.076231125006,\\\"ask\\\":10465.575795310051,\\\"price\\\":10392.82601321753,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5599371109135431,\\\"bias\\\":0.059937110913543146,\\\"bid\\\":10289.476386334012,\\\"ask\\\":10434.544532767724,\\\"price\\\":10362.01045955087,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5498587549657195,\\\"bias\\\":0.06303011503497413,\\\"bid\\\":8095.812918118796,\\\"ask\\\":8209.95328151624,\\\"price\\\":8152.88309981752,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5315691775239924,\\\"bias\\\":0.06992676526690589,\\\"bid\\\":8934.023685494096,\\\"ask\\\":9059.981723356044,\\\"price\\\":8997.002704425071,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.44003431208731436,\\\"bias\\\":0.06378468109299434,\\\"bid\\\":8040.583147201283,\\\"ask\\\":8153.94484313363,\\\"price\\\":8097.2639951674555,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5269349101742419,\\\"bias\\\":0.058137777534390866,\\\"bid\\\":7251.489120826472,\\\"ask\\\":7353.725624040539,\\\"price\\\":7302.607372433506,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5568625621320863,\\\"bias\\\":0.05930378013391813,\\\"bid\\\":7594.501223342078,\\\"ask\\\":7701.573748142469,\\\"price\\\":7648.037485742278,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5532881000055226,\\\"bias\\\":0.056131838867965356,\\\"bid\\\":8439.62553324798,\\\"ask\\\":8558.613204411598,\\\"price\\\":8499.119368829792,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5530386624800276,\\\"bias\\\":0.055384053800615174,\\\"bid\\\":8388.93741856736,\\\"ask\\\":8507.210453673037,\\\"price\\\":8448.073936120198,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5536926205180608,\\\"bias\\\":0.055442197406549765,\\\"bid\\\":8791.806767806576,\\\"ask\\\":8915.759733314417,\\\"price\\\":8853.783250560497,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.505850257328603,\\\"bias\\\":0.056280930740899626,\\\"bid\\\":8762.999350460947,\\\"ask\\\":8886.546169097861,\\\"price\\\":8824.772759779407,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5206818670143335,\\\"bias\\\":0.057096643547680404,\\\"bid\\\":8121.508326203266,\\\"ask\\\":8236.010961215192,\\\"price\\\":8178.759643709228,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5368789368761198,\\\"bias\\\":0.05718835351631424,\\\"bid\\\":9100.235999974473,\\\"ask\\\":9228.5374138714,\\\"price\\\":9164.386706922935,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.44626911343381515,\\\"bias\\\":0.055998742965297,\\\"bid\\\":9437.41839291963,\\\"ask\\\":9570.473637129979,\\\"price\\\":9503.946015024803,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4653036501974207,\\\"bias\\\":0.053033208342556815,\\\"bid\\\":8957.746041348146,\\\"ask\\\":9084.03853337118,\\\"price\\\":9020.892287359664,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4438413578571951,\\\"bias\\\":0.060106008622159146,\\\"bid\\\":8502.636416122577,\\\"ask\\\":8622.51245824313,\\\"price\\\":8562.574437182853,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4417168006072673,\\\"bias\\\":0.061805178239043246,\\\"bid\\\":7926.288098783456,\\\"ask\\\":8038.03838416409,\\\"price\\\":7982.163241473767,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4359807107339834,\\\"bias\\\":0.07125794001487051,\\\"bid\\\":7024.55467920542,\\\"ask\\\":7123.591703887065,\\\"price\\\":7074.073191546244,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5517687343876099,\\\"bias\\\":0.07508921995507933,\\\"bid\\\":6474.780618736037,\\\"ask\\\":6566.0665489095545,\\\"price\\\":6520.423583822799,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5760154585276747,\\\"bias\\\":0.07953501982371025,\\\"bid\\\":6907.079435272753,\\\"ask\\\":7004.460212809324,\\\"price\\\":6955.769824041032,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.48931465998293544,\\\"bias\\\":0.07460263641926079,\\\"bid\\\":7361.518052376505,\\\"ask\\\":7465.305819479496,\\\"price\\\":7413.411935928,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5352058894454457,\\\"bias\\\":0.07259349558601746,\\\"bid\\\":7157.558615549123,\\\"ask\\\":7258.47082160923,\\\"price\\\":7208.014718579173,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4725480858455151,\\\"bias\\\":0.07206955128012593,\\\"bid\\\":7019.58683799472,\\\"ask\\\":7118.553822619014,\\\"price\\\":7069.070330306863,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5589018283357089,\\\"bias\\\":0.06131584763070397,\\\"bid\\\":6866.103184014439,\\\"ask\\\":6962.906250052912,\\\"price\\\":6914.504717033673,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.558289904941532,\\\"bias\\\":0.06026671666801209,\\\"bid\\\":7572.391818127979,\\\"ask\\\":7679.152629259687,\\\"price\\\":7625.772223693835,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5577591356471384,\\\"bias\\\":0.05982308514300838,\\\"bid\\\":8157.439594922313,\\\"ask\\\":8272.448813783263,\\\"price\\\":8214.944204352785,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.49232078994649564,\\\"bias\\\":0.06284010179566046,\\\"bid\\\":8430.62800119018,\\\"ask\\\":8549.488818931031,\\\"price\\\":8490.0584100606,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5347352546664699,\\\"bias\\\":0.058365290997186736,\\\"bid\\\":8949.1703864496,\\\"ask\\\":9075.3419729655,\\\"price\\\":9012.25617970755,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5238441829497151,\\\"bias\\\":0.05631911761455122,\\\"bid\\\":10085.871488302582,\\\"ask\\\":10228.06907222628,\\\"price\\\":10156.970280264428,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.5072099257544257,\\\"bias\\\":0.0609159392910541,\\\"bid\\\":10368.06014886949,\\\"ask\\\":10514.236223475902,\\\"price\\\":10441.148186172695,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0132,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"RHOC\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5567037188532787,\\\"bias\\\":0.05670371885327874,\\\"bid\\\":7762.246810489384,\\\"ask\\\":7808.960432217504,\\\"price\\\":7785.603621353444,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5563585799082889,\\\"bias\\\":0.05635857990828885,\\\"bid\\\":7715.2861213832775,\\\"ask\\\":7761.717131140849,\\\"price\\\":7738.501626262064,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5562735078654262,\\\"bias\\\":0.056273507865426176,\\\"bid\\\":7703.657618816067,\\\"ask\\\":7750.01864761536,\\\"price\\\":7726.838133215714,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.48333989898536606,\\\"bias\\\":0.023096012083040574,\\\"bid\\\":3498.004517417364,\\\"ask\\\":3519.0556980638053,\\\"price\\\":3508.530107740584,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.48775206487558803,\\\"bias\\\":0.029055246206622032,\\\"bid\\\":3595.678612445477,\\\"ask\\\":3617.317601086069,\\\"price\\\":3606.498106765775,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5180226212024645,\\\"bias\\\":0.02223220264398218,\\\"bid\\\":3861.936366760431,\\\"ask\\\":3885.177708987674,\\\"price\\\":3873.5570378740504,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5137370636259454,\\\"bias\\\":0.02037705236191567,\\\"bid\\\":4043.5713398403027,\\\"ask\\\":4067.9057711733462,\\\"price\\\":4055.7385555068236,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4916258785843233,\\\"bias\\\":0.02325913167105298,\\\"bid\\\":4062.5308415736113,\\\"ask\\\":4086.9793722149752,\\\"price\\\":4074.7551068942935,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5026136101009206,\\\"bias\\\":0.022943201344212016,\\\"bid\\\":4171.833512851156,\\\"ask\\\":4196.939832888376,\\\"price\\\":4184.386672869765,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5063184994190548,\\\"bias\\\":0.024439954862751134,\\\"bid\\\":4307.338181855489,\\\"ask\\\":4333.259976330044,\\\"price\\\":4320.299079092767,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5081013606815348,\\\"bias\\\":0.021740603248563584,\\\"bid\\\":4335.121934227784,\\\"ask\\\":4361.210932828953,\\\"price\\\":4348.166433528372,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.502715351458614,\\\"bias\\\":0.02574010811947125,\\\"bid\\\":4427.193399779475,\\\"ask\\\":4453.836489447157,\\\"price\\\":4440.514944613316,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4811622923550075,\\\"bias\\\":0.02287303381911765,\\\"bid\\\":4413.225423974375,\\\"ask\\\":4439.784453607116,\\\"price\\\":4426.504938790746,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.48947160588148025,\\\"bias\\\":0.018829395409745542,\\\"bid\\\":4374.965672067139,\\\"ask\\\":4401.294452440662,\\\"price\\\":4388.1300622539,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4989515811108016,\\\"bias\\\":0.04140590656074766,\\\"bid\\\":4185.424048736927,\\\"ask\\\":4210.612157355205,\\\"price\\\":4198.018103046068,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5087118034384188,\\\"bias\\\":0.04148591827370274,\\\"bid\\\":4278.846792060307,\\\"ask\\\":4304.597123807913,\\\"price\\\":4291.721957934109,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.48885634754013824,\\\"bias\\\":0.0344482338578872,\\\"bid\\\":4384.992896540598,\\\"ask\\\":4411.382021294099,\\\"price\\\":4398.187458917348,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5042302894546298,\\\"bias\\\":0.019728503810465703,\\\"bid\\\":4419.9855152567925,\\\"ask\\\":4446.585227485019,\\\"price\\\":4433.285371370906,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.47909559479095476,\\\"bias\\\":0.025913158797776836,\\\"bid\\\":4269.5251539823985,\\\"ask\\\":4295.219387607165,\\\"price\\\":4282.372270794784,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5189120708187867,\\\"bias\\\":0.03181320449086922,\\\"bid\\\":4275.508099116563,\\\"ask\\\":4301.238338429199,\\\"price\\\":4288.373218772882,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5252557304290785,\\\"bias\\\":0.03127044156975045,\\\"bid\\\":4401.052720699364,\\\"ask\\\":4427.538494344495,\\\"price\\\":4414.29560752193,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5293400736552927,\\\"bias\\\":0.0340490486495818,\\\"bid\\\":4670.47627737592,\\\"ask\\\":4698.583456577781,\\\"price\\\":4684.52986697685,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5272893329913009,\\\"bias\\\":0.03739400354540123,\\\"bid\\\":5039.917778272291,\\\"ask\\\":5070.2482764364195,\\\"price\\\":5055.083027354353,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5163176169287318,\\\"bias\\\":0.05191772723533311,\\\"bid\\\":5619.829202936118,\\\"ask\\\":5653.649639463318,\\\"price\\\":5636.739421199722,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.44831379658846926,\\\"bias\\\":0.05231899381202282,\\\"bid\\\":5542.101502960003,\\\"ask\\\":5575.4541699788215,\\\"price\\\":5558.777836469412,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5331990735752783,\\\"bias\\\":0.05418404806888111,\\\"bid\\\":5471.102737293038,\\\"ask\\\":5504.028129894601,\\\"price\\\":5487.565433593824,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5537614380921403,\\\"bias\\\":0.05515395859019778,\\\"bid\\\":5983.972144289039,\\\"ask\\\":6019.984012760187,\\\"price\\\":6001.978078524614,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5509613599380238,\\\"bias\\\":0.051607570588947826,\\\"bid\\\":6493.604284611335,\\\"ask\\\":6532.683146905887,\\\"price\\\":6513.143715758609,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5509668385997678,\\\"bias\\\":0.05195273748005169,\\\"bid\\\":6781.981961823171,\\\"ask\\\":6822.7962965984325,\\\"price\\\":6802.389129210804,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5523123672282886,\\\"bias\\\":0.05386087688239782,\\\"bid\\\":7328.563414713126,\\\"ask\\\":7372.6671062760915,\\\"price\\\":7350.615260494607,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.5552774461126583,\\\"bias\\\":0.056770876033633844,\\\"bid\\\":7672.270866790501,\\\"ask\\\":7718.443008416116,\\\"price\\\":7695.356937603309,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"APHE\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.40435914093322156,\\\"bias\\\":0.09564085906677844,\\\"bid\\\":78039.6883590161,\\\"ask\\\":79298.39300996797,\\\"price\\\":78669.04068449204,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.40606211157759153,\\\"bias\\\":0.09393788842240847,\\\"bid\\\":76674.4318372053,\\\"ask\\\":77911.11622167636,\\\"price\\\":77292.77402944083,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.4056473018974643,\\\"bias\\\":0.09435269810253571,\\\"bid\\\":77013.00977501582,\\\"ask\\\":78255.15509396768,\\\"price\\\":77634.08243449175,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5207038459125425,\\\"bias\\\":0.085877547620904,\\\"bid\\\":110510.02498723738,\\\"ask\\\":112292.44474509606,\\\"price\\\":111401.23486616668,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.4285075808145983,\\\"bias\\\":0.07768710812030272,\\\"bid\\\":85276.32798036559,\\\"ask\\\":86651.75262521017,\\\"price\\\":85964.0403027879,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.42541964711154795,\\\"bias\\\":0.08110394572739993,\\\"bid\\\":82474.15995737938,\\\"ask\\\":83804.38834378877,\\\"price\\\":83139.27415058402,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.4127582398609213,\\\"bias\\\":0.09401789688925388,\\\"bid\\\":78773.59499874915,\\\"ask\\\":80044.13685356767,\\\"price\\\":79408.86592615843,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5786502060224684,\\\"bias\\\":0.0899338889342251,\\\"bid\\\":77550.74497788341,\\\"ask\\\":78801.5634452686,\\\"price\\\":78176.15421157601,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5831680297336053,\\\"bias\\\":0.09347405797383534,\\\"bid\\\":81430.41154716977,\\\"ask\\\":82743.80528180156,\\\"price\\\":82087.10841448567,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.460403334344317,\\\"bias\\\":0.09599858719999055,\\\"bid\\\":80442.69815197583,\\\"ask\\\":81740.16102539483,\\\"price\\\":81091.42958868534,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5487118290743768,\\\"bias\\\":0.10050459265542022,\\\"bid\\\":75677.95300587268,\\\"ask\\\":76898.56515112874,\\\"price\\\":76288.25907850073,\\\"maxShares\\\":8000000,\\\"investedShares\\\":1520000,\\\"averagePrice\\\":14283.79101260093,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.4172090058197131,\\\"bias\\\":0.08699160005250134,\\\"bid\\\":76125.85066726626,\\\"ask\\\":77353.6869683512,\\\"price\\\":76739.76881780876,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5288802628735688,\\\"bias\\\":0.08559261338945323,\\\"bid\\\":88524.64986551221,\\\"ask\\\":89952.46679882694,\\\"price\\\":89238.55833216957,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5821770555424404,\\\"bias\\\":0.08858854064065558,\\\"bid\\\":109010.57392311281,\\\"ask\\\":110768.80898638876,\\\"price\\\":109889.6914547508,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5783880718453723,\\\"bias\\\":0.083923991301326,\\\"bid\\\":124448.0878686658,\\\"ask\\\":126455.31509235394,\\\"price\\\":125451.70148050983,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5814791991293188,\\\"bias\\\":0.0889220960413889,\\\"bid\\\":130735.03821465188,\\\"ask\\\":132843.66786327533,\\\"price\\\":131789.35303896357,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5607353309476956,\\\"bias\\\":0.09028459993223581,\\\"bid\\\":157314.2939045334,\\\"ask\\\":159851.62122557423,\\\"price\\\":158582.95756505377,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.4071606651115905,\\\"bias\\\":0.10033325167377499,\\\"bid\\\":132798.19487206035,\\\"ask\\\":134940.1012409646,\\\"price\\\":133869.14805651244,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5181295934768285,\\\"bias\\\":0.09770012670688577,\\\"bid\\\":104379.66709134275,\\\"ask\\\":106063.21010894503,\\\"price\\\":105221.43860014388,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.43321679891792364,\\\"bias\\\":0.09934432481284616,\\\"bid\\\":116039.76736343473,\\\"ask\\\":117911.37651445784,\\\"price\\\":116975.57193894632,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.4177304153022905,\\\"bias\\\":0.08936983161017109,\\\"bid\\\":98251.57889364612,\\\"ask\\\":99836.28177902759,\\\"price\\\":99043.93033633693,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5186965284796948,\\\"bias\\\":0.0935843848574206,\\\"bid\\\":81751.60729639161,\\\"ask\\\":83070.18160762373,\\\"price\\\":82410.89445200766,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5823296160611854,\\\"bias\\\":0.10566359515537227,\\\"bid\\\":100420.79125451714,\\\"ask\\\":102040.48143604163,\\\"price\\\":101230.6363452794,\\\"maxShares\\\":8000000,\\\"investedShares\\\":4640000,\\\"averagePrice\\\":56266.62708053386,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.46135552721246675,\\\"bias\\\":0.10477617465206251,\\\"bid\\\":102148.01516042594,\\\"ask\\\":103795.56379204565,\\\"price\\\":102971.78947623575,\\\"maxShares\\\":8000000,\\\"investedShares\\\":2480000,\\\"averagePrice\\\":30622.86252273928,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.590554713028808,\\\"bias\\\":0.09752991025134561,\\\"bid\\\":109462.2723157154,\\\"ask\\\":111227.7928369366,\\\"price\\\":110345.032576326,\\\"maxShares\\\":8000000,\\\"investedShares\\\":8000000,\\\"averagePrice\\\":98783.42749270733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.4610591955709652,\\\"bias\\\":0.09777893419700967,\\\"bid\\\":133539.3198564139,\\\"ask\\\":135693.17985409807,\\\"price\\\":134616.24985525594,\\\"maxShares\\\":8000000,\\\"investedShares\\\":1600000,\\\"averagePrice\\\":19756.685498541457,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5348770538797345,\\\"bias\\\":0.0985695338371666,\\\"bid\\\":143201.72776365143,\\\"ask\\\":145511.4330501619,\\\"price\\\":144356.58040690658,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3981125102551654,\\\"bias\\\":0.11200067165757743,\\\"bid\\\":135913.04218546953,\\\"ask\\\":138105.1880271707,\\\"price\\\":137009.1151063201,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.41645610257331955,\\\"bias\\\":0.1088508019655628,\\\"bid\\\":105140.86542697251,\\\"ask\\\":106836.68583708498,\\\"price\\\":105988.77563202879,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.5371380926382991,\\\"bias\\\":0.1042099920172278,\\\"bid\\\":94229.65011479579,\\\"ask\\\":95749.4831811635,\\\"price\\\":94989.5666479796,\\\"maxShares\\\":8000000,\\\"investedShares\\\":1760000,\\\"averagePrice\\\":22352.13861580107,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.40129042136229814,\\\"bias\\\":0.10395543792061807,\\\"bid\\\":77387.68694511236,\\\"ask\\\":78635.87544422707,\\\"price\\\":78011.78119466972,\\\"maxShares\\\":8000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0196,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"SYSC\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4154352393279697,\\\"bias\\\":0.08456476067203028,\\\"bid\\\":9762.566530596576,\\\"ask\\\":9860.682777135235,\\\"price\\\":9811.624653865905,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4141676429479276,\\\"bias\\\":0.08583235705207243,\\\"bid\\\":9908.904010839666,\\\"ask\\\":10008.490985822978,\\\"price\\\":9958.697498331323,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4144867137034772,\\\"bias\\\":0.08551328629652277,\\\"bid\\\":9872.205356274499,\\\"ask\\\":9971.423500558663,\\\"price\\\":9921.814428416581,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.44514317796747926,\\\"bias\\\":0.08379358234621676,\\\"bid\\\":4669.293186491818,\\\"ask\\\":4716.220756205304,\\\"price\\\":4692.756971348559,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5674713836596815,\\\"bias\\\":0.07320046902377075,\\\"bid\\\":4379.508922160682,\\\"ask\\\":4423.524087207525,\\\"price\\\":4401.516504684102,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5592686077142784,\\\"bias\\\":0.06583042252882587,\\\"bid\\\":4697.650416811399,\\\"ask\\\":4744.862983814531,\\\"price\\\":4721.256700312964,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5561477333493942,\\\"bias\\\":0.05952982936012807,\\\"bid\\\":4895.792469754357,\\\"ask\\\":4944.996414173999,\\\"price\\\":4920.39444196418,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.43973608373928613,\\\"bias\\\":0.06534359282725732,\\\"bid\\\":5186.618686111603,\\\"ask\\\":5238.7455070775495,\\\"price\\\":5212.682096594577,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.44276772376825874,\\\"bias\\\":0.060418873170563936,\\\"bid\\\":4851.572667805271,\\\"ask\\\":4900.332192104821,\\\"price\\\":4875.952429955042,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5223773647654497,\\\"bias\\\":0.056858219077351446,\\\"bid\\\":4301.747393639669,\\\"ask\\\":4344.981035786798,\\\"price\\\":4323.364214713234,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.47195457732708973,\\\"bias\\\":0.06076026397356715,\\\"bid\\\":4377.368592629841,\\\"ask\\\":4421.362246827126,\\\"price\\\":4399.365419728481,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5622613880742692,\\\"bias\\\":0.06829484578399503,\\\"bid\\\":3955.126565352687,\\\"ask\\\":3994.8765810848745,\\\"price\\\":3975.0015732187794,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5732660013493385,\\\"bias\\\":0.07789906957058679,\\\"bid\\\":3492.758380243847,\\\"ask\\\":3527.861479542781,\\\"price\\\":3510.3099298933153,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5745483466098643,\\\"bias\\\":0.0788310681353035,\\\"bid\\\":3416.1109090574714,\\\"ask\\\":3450.4436820128212,\\\"price\\\":3433.2772955351434,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.572812402846906,\\\"bias\\\":0.07630891247598481,\\\"bid\\\":3813.2414766624734,\\\"ask\\\":3851.5655116038047,\\\"price\\\":3832.4034941331415,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5639511266576981,\\\"bias\\\":0.0736711256738607,\\\"bid\\\":4654.562193466103,\\\"ask\\\":4701.341712998424,\\\"price\\\":4677.951953232266,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5418764143434237,\\\"bias\\\":0.061720038603548244,\\\"bid\\\":5317.914144343109,\\\"ask\\\":5371.360517653089,\\\"price\\\":5344.637330998097,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4865822497285109,\\\"bias\\\":0.05726223581089873,\\\"bid\\\":5294.463110013839,\\\"ask\\\":5347.673794536593,\\\"price\\\":5321.068452275215,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.55566055672299,\\\"bias\\\":0.058787692568694094,\\\"bid\\\":5001.100704829644,\\\"ask\\\":5051.363023471151,\\\"price\\\":5026.231864150397,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5457430596662658,\\\"bias\\\":0.06159245491571874,\\\"bid\\\":5192.354104007407,\\\"ask\\\":5244.538567364266,\\\"price\\\":5218.446335685838,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.44012236951735195,\\\"bias\\\":0.0634938379409068,\\\"bid\\\":5202.99999526728,\\\"ask\\\":5255.291452506144,\\\"price\\\":5229.145723886713,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5089196338476494,\\\"bias\\\":0.0603222125748637,\\\"bid\\\":5889.458564801592,\\\"ask\\\":5948.649103141306,\\\"price\\\":5919.053833971452,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4637221142298435,\\\"bias\\\":0.055944742007738024,\\\"bid\\\":5988.616096974722,\\\"ask\\\":6048.803193426728,\\\"price\\\":6018.70964520073,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.47698684365834054,\\\"bias\\\":0.0629577661246335,\\\"bid\\\":5283.532554472485,\\\"ask\\\":5336.633384165678,\\\"price\\\":5310.0829693190835,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4943447969344286,\\\"bias\\\":0.054692700874020894,\\\"bid\\\":5330.960618525643,\\\"ask\\\":5384.538112179167,\\\"price\\\":5357.749365352407,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4539500437849344,\\\"bias\\\":0.058272854499358484,\\\"bid\\\":5499.713665735532,\\\"ask\\\":5554.987169913778,\\\"price\\\":5527.350417824658,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5651478278298124,\\\"bias\\\":0.07107201427772902,\\\"bid\\\":5705.843323483114,\\\"ask\\\":5763.188482513094,\\\"price\\\":5734.515902998104,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.570660955926859,\\\"bias\\\":0.07538900228777412,\\\"bid\\\":6717.103484994658,\\\"ask\\\":6784.612062733304,\\\"price\\\":6750.8577738639815,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4626497450199586,\\\"bias\\\":0.08385008137959193,\\\"bid\\\":7351.736984981199,\\\"ask\\\":7425.623788850361,\\\"price\\\":7388.680386915786,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5781642032541582,\\\"bias\\\":0.08572092582790669,\\\"bid\\\":7570.6745902919965,\\\"ask\\\":7646.7617721039815,\\\"price\\\":7608.71818119799,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.48959488232583953,\\\"bias\\\":0.08818677715075351,\\\"bid\\\":9094.740551499523,\\\"ask\\\":9186.14497915279,\\\"price\\\":9140.442765326157,\\\"maxShares\\\":8600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"CTK\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5514223336139006,\\\"bias\\\":0.051422333613900584,\\\"bid\\\":1269.3139751366566,\\\"ask\\\":1289.786781187248,\\\"price\\\":1279.5503781619523,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5510439394561502,\\\"bias\\\":0.051043939456150156,\\\"bid\\\":1260.0418854729764,\\\"ask\\\":1280.3651416902826,\\\"price\\\":1270.2035135816295,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5509507898074475,\\\"bias\\\":0.050950789807447494,\\\"bid\\\":1262.3413251367836,\\\"ask\\\":1282.7016690906028,\\\"price\\\":1272.5214971136932,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.530874011471686,\\\"bias\\\":0.0676957555826081,\\\"bid\\\":1123.860659583233,\\\"ask\\\":1141.987444415221,\\\"price\\\":1132.9240519992265,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5586252127135396,\\\"bias\\\":0.06209889014087755,\\\"bid\\\":1230.7668339661393,\\\"ask\\\":1250.6179119333349,\\\"price\\\":1240.692372949737,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5580481049934893,\\\"bias\\\":0.059509531143211225,\\\"bid\\\":1356.8667956307575,\\\"ask\\\":1378.7517439473834,\\\"price\\\":1367.8092697890702,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.4735647689902197,\\\"bias\\\":0.05706730289078343,\\\"bid\\\":1328.7972225598987,\\\"ask\\\":1350.2294358269944,\\\"price\\\":1339.5133291934462,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.4709123454881455,\\\"bias\\\":0.0569135097189043,\\\"bid\\\":1304.8972440052894,\\\"ask\\\":1325.9439737473103,\\\"price\\\":1315.4206088762992,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5560333463471802,\\\"bias\\\":0.057292411721850844,\\\"bid\\\":1270.912877898772,\\\"ask\\\":1291.4114727035908,\\\"price\\\":1281.1621753011814,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.4771847213346604,\\\"bias\\\":0.05497958837286476,\\\"bid\\\":1288.4723266514316,\\\"ask\\\":1309.254138371616,\\\"price\\\":1298.8632325115232,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5490996395043297,\\\"bias\\\":0.05589629406973484,\\\"bid\\\":1211.5804502653552,\\\"ask\\\":1231.1220704309255,\\\"price\\\":1221.3512603481408,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5069976979826797,\\\"bias\\\":0.05643362622887027,\\\"bid\\\":1176.1447883523354,\\\"ask\\\":1195.1148655838253,\\\"price\\\":1185.6298269680801,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.44569271352288,\\\"bias\\\":0.05613448726977405,\\\"bid\\\":1062.2238748169545,\\\"ask\\\":1079.3565179591633,\\\"price\\\":1070.790196388059,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.44675860865874994,\\\"bias\\\":0.05476334911736669,\\\"bid\\\":1064.5697030349772,\\\"ask\\\":1081.7401821161866,\\\"price\\\":1073.154942575582,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.4912517940418015,\\\"bias\\\":0.057170272893337426,\\\"bid\\\":1129.46604316767,\\\"ask\\\":1147.6832374123098,\\\"price\\\":1138.5746402899902,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5562322160352594,\\\"bias\\\":0.057895183892158975,\\\"bid\\\":1173.1938711218004,\\\"ask\\\":1192.1163529140874,\\\"price\\\":1182.6551120179445,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5398057978021349,\\\"bias\\\":0.056926117341812466,\\\"bid\\\":1236.2947469283192,\\\"ask\\\":1256.2349847820024,\\\"price\\\":1246.2648658551607,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.44367055161208696,\\\"bias\\\":0.057499392849901076,\\\"bid\\\":1181.3211290089598,\\\"ask\\\":1200.3746956058783,\\\"price\\\":1190.8479123074187,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5131156688509416,\\\"bias\\\":0.056535541754955454,\\\"bid\\\":1144.5683900219287,\\\"ask\\\":1163.0291705061527,\\\"price\\\":1153.798780264041,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.4707413760293406,\\\"bias\\\":0.05929760482467494,\\\"bid\\\":1132.3944462956965,\\\"ask\\\":1150.6588728488525,\\\"price\\\":1141.5266595722744,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5171338761999321,\\\"bias\\\":0.05836825749525171,\\\"bid\\\":1174.4442962057103,\\\"ask\\\":1193.3869461445124,\\\"price\\\":1183.9156211751106,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.44008788328553144,\\\"bias\\\":0.06142929825059634,\\\"bid\\\":1220.5656975673664,\\\"ask\\\":1240.252241076518,\\\"price\\\":1230.4089693219423,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5295549010397983,\\\"bias\\\":0.06105451820180374,\\\"bid\\\":1172.9290481124592,\\\"ask\\\":1191.8472585658858,\\\"price\\\":1182.388153339172,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.4405803866845687,\\\"bias\\\":0.06326511517302313,\\\"bid\\\":1192.7672529956849,\\\"ask\\\":1212.0054344956159,\\\"price\\\":1202.3863437456512,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.4385848880486302,\\\"bias\\\":0.06397616604485434,\\\"bid\\\":1119.765630862149,\\\"ask\\\":1137.8263668437967,\\\"price\\\":1128.7959988529728,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5373377536299856,\\\"bias\\\":0.061800812611201184,\\\"bid\\\":1024.006352689115,\\\"ask\\\":1040.5225841841007,\\\"price\\\":1032.264468436608,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5579218385449466,\\\"bias\\\":0.05926190752859806,\\\"bid\\\":1083.6616887401706,\\\"ask\\\":1101.14010307469,\\\"price\\\":1092.4008959074301,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5529169889449735,\\\"bias\\\":0.05565804385348683,\\\"bid\\\":1173.4837620046087,\\\"ask\\\":1192.4109194562952,\\\"price\\\":1182.947340730452,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5457152149645976,\\\"bias\\\":0.053484369893167294,\\\"bid\\\":1249.9455556940745,\\\"ask\\\":1270.1059678826882,\\\"price\\\":1260.0257617883815,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.4501135118150102,\\\"bias\\\":0.05248843532479591,\\\"bid\\\":1251.3779234587173,\\\"ask\\\":1271.5614383532138,\\\"price\\\":1261.469680905966,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5051672982132602,\\\"bias\\\":0.05319739102861659,\\\"bid\\\":1207.3216490495904,\\\"ask\\\":1226.7945788729714,\\\"price\\\":1217.0581139612807,\\\"maxShares\\\":27300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"NTLK\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5580216207701024,\\\"bias\\\":0.05802162077010242,\\\"bid\\\":51161.25899099011,\\\"ask\\\":52614.11421588637,\\\"price\\\":51887.68660343824,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5568567178020101,\\\"bias\\\":0.05685671780201007,\\\"bid\\\":50154.30844404522,\\\"ask\\\":51578.56872440351,\\\"price\\\":50866.438584224365,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5571398088111961,\\\"bias\\\":0.05713980881119607,\\\"bid\\\":49905.82609718675,\\\"ask\\\":51323.03008371943,\\\"price\\\":50614.42809045309,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5570024531969637,\\\"bias\\\":0.06852549557936416,\\\"bid\\\":18317.010988449285,\\\"ask\\\":18837.169515504647,\\\"price\\\":18577.090251976973,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4355356082167829,\\\"bias\\\":0.07686322268265611,\\\"bid\\\":20256.44044144182,\\\"ask\\\":20831.67404424138,\\\"price\\\":20544.057242841598,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4990171695824053,\\\"bias\\\":0.07958054924332247,\\\"bid\\\":21801.7301388345,\\\"ask\\\":22420.846207685787,\\\"price\\\":22111.288173260138,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5639014616824409,\\\"bias\\\":0.0745502245227001,\\\"bid\\\":27934.038384605767,\\\"ask\\\":28727.297081126,\\\"price\\\":28330.667732865884,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5726627927019199,\\\"bias\\\":0.08061476495686026,\\\"bid\\\":33824.72419379793,\\\"ask\\\":34785.26402891592,\\\"price\\\":34304.994111356915,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5832808911368943,\\\"bias\\\":0.09058743559818483,\\\"bid\\\":40372.842888850064,\\\"ask\\\":41519.33335628192,\\\"price\\\":40946.088122565976,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5805803821411178,\\\"bias\\\":0.08590293370369029,\\\"bid\\\":46877.06656386246,\\\"ask\\\":48208.26115188288,\\\"price\\\":47542.66385787267,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4333282110199528,\\\"bias\\\":0.07766714550080278,\\\"bid\\\":47528.17927936196,\\\"ask\\\":48877.863883644066,\\\"price\\\":48203.021581503024,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.49163773521756426,\\\"bias\\\":0.07616901215319982,\\\"bid\\\":42235.103099304855,\\\"ask\\\":43434.477223828704,\\\"price\\\":42834.79016156678,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5741261745220158,\\\"bias\\\":0.08322604816419765,\\\"bid\\\":47407.44384268857,\\\"ask\\\":48753.69985444848,\\\"price\\\":48080.571848568485,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5609681479407026,\\\"bias\\\":0.06580601579438594,\\\"bid\\\":58185.76289883785,\\\"ask\\\":59838.09693653299,\\\"price\\\":59011.9299176854,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5122628865042383,\\\"bias\\\":0.07148740765758665,\\\"bid\\\":67983.68425972218,\\\"ask\\\":69914.25541517064,\\\"price\\\":68948.9698374464,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5138704169785667,\\\"bias\\\":0.06461173899215455,\\\"bid\\\":81939.23484881646,\\\"ask\\\":84266.10967210942,\\\"price\\\":83102.67226046298,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5295210697742219,\\\"bias\\\":0.0567959698323931,\\\"bid\\\":84876.81845836261,\\\"ask\\\":87287.1135058618,\\\"price\\\":86081.96598211219,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.44542677995466307,\\\"bias\\\":0.05659145152010092,\\\"bid\\\":75136.5879022858,\\\"ask\\\":77270.28411046433,\\\"price\\\":76203.43600637505,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.448692479624765,\\\"bias\\\":0.05645588859396666,\\\"bid\\\":69256.7312097772,\\\"ask\\\":71223.45379991291,\\\"price\\\":70240.09250484506,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5273511595345732,\\\"bias\\\":0.06162423511234538,\\\"bid\\\":62893.09735724454,\\\"ask\\\":64679.108235543536,\\\"price\\\":63786.10279639404,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.48321868967419573,\\\"bias\\\":0.0604737081031026,\\\"bid\\\":67511.45514544367,\\\"ask\\\":69428.6161434887,\\\"price\\\":68470.03564446617,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5574936621091164,\\\"bias\\\":0.06661154113291701,\\\"bid\\\":69043.77798822567,\\\"ask\\\":71004.45322521385,\\\"price\\\":70024.11560671977,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4672490901106313,\\\"bias\\\":0.06848052768592483,\\\"bid\\\":64665.66070008032,\\\"ask\\\":66502.00806276005,\\\"price\\\":65583.83438142018,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5211998340387097,\\\"bias\\\":0.07469004026305048,\\\"bid\\\":66953.42751546884,\\\"ask\\\":68854.74188710486,\\\"price\\\":67904.08470128689,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.508337523783133,\\\"bias\\\":0.07558974283377085,\\\"bid\\\":61003.429570722015,\\\"ask\\\":62735.778483480855,\\\"price\\\":61869.60402710144,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5629185811395185,\\\"bias\\\":0.06870692692631375,\\\"bid\\\":71377.4527865848,\\\"ask\\\":73404.39870750207,\\\"price\\\":72390.92574704344,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5590971452562414,\\\"bias\\\":0.06358725866860959,\\\"bid\\\":84076.42417651573,\\\"ask\\\":86463.98997463178,\\\"price\\\":85270.20707557372,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4913846079571897,\\\"bias\\\":0.06478241366796367,\\\"bid\\\":76295.934920106,\\\"ask\\\":78462.55376165058,\\\"price\\\":77379.24434087824,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5334321386535325,\\\"bias\\\":0.0659782439770259,\\\"bid\\\":66269.38304419407,\\\"ask\\\":68151.27221786285,\\\"price\\\":67210.32763102846,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5188159478992069,\\\"bias\\\":0.06697823514918427,\\\"bid\\\":57093.85503590925,\\\"ask\\\":58715.18154808515,\\\"price\\\":57904.51829199722,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5017710791444042,\\\"bias\\\":0.07413615592938144,\\\"bid\\\":50636.96853650675,\\\"ask\\\":52074.93518865906,\\\"price\\\":51355.95186258291,\\\"maxShares\\\":2800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.022099999999999998,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"OMGA\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.4312191255336552,\\\"bias\\\":0.06878087446634479,\\\"bid\\\":1316.4372831740754,\\\"ask\\\":1327.0110766132245,\\\"price\\\":1321.72417989365,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.43185022336644663,\\\"bias\\\":0.06814977663355337,\\\"bid\\\":1304.46815610711,\\\"ask\\\":1314.945811979456,\\\"price\\\":1309.706984043283,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.4316951497810579,\\\"bias\\\":0.06830485021894211,\\\"bid\\\":1307.4364498269963,\\\"ask\\\":1317.937947415968,\\\"price\\\":1312.6871986214821,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5197236543499651,\\\"bias\\\":0.05988383932629504,\\\"bid\\\":1336.436943843044,\\\"ask\\\":1347.1713771269235,\\\"price\\\":1341.8041604849848,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5289170486365636,\\\"bias\\\":0.06300066197103399,\\\"bid\\\":1356.407345739945,\\\"ask\\\":1367.3021838583384,\\\"price\\\":1361.8547647991422,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.49953886900963496,\\\"bias\\\":0.062111376083271,\\\"bid\\\":1309.2176370701147,\\\"ask\\\":1319.733441383931,\\\"price\\\":1314.4755392270226,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.4738943772480002,\\\"bias\\\":0.057637344356368025,\\\"bid\\\":1377.7445082193713,\\\"ask\\\":1388.8107291689244,\\\"price\\\":1383.277618694148,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.44594751226609586,\\\"bias\\\":0.0562964970036644,\\\"bid\\\":1255.4297321916674,\\\"ask\\\":1265.513505140998,\\\"price\\\":1260.4716186663327,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.4457445823719193,\\\"bias\\\":0.05582537754220668,\\\"bid\\\":1240.567120523664,\\\"ask\\\":1250.5315150660228,\\\"price\\\":1245.5493177948438,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5236694137592605,\\\"bias\\\":0.05747190854510387,\\\"bid\\\":1156.6628172954934,\\\"ask\\\":1165.9532816914407,\\\"price\\\":1161.3080494934663,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5334347273505402,\\\"bias\\\":0.05747190854510387,\\\"bid\\\":1165.6578581701822,\\\"ask\\\":1175.0205718904244,\\\"price\\\":1170.3392150303032,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.44436658028991327,\\\"bias\\\":0.05840942524298215,\\\"bid\\\":1142.2371333969807,\\\"ask\\\":1151.4117288459518,\\\"price\\\":1146.824431121466,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.518516253164875,\\\"bias\\\":0.05992698241588301,\\\"bid\\\":1024.6995967316113,\\\"ask\\\":1032.930115580861,\\\"price\\\":1028.8148561562361,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5346642467752357,\\\"bias\\\":0.056092743074804885,\\\"bid\\\":979.1824490949177,\\\"ask\\\":987.0473683647564,\\\"price\\\":983.1149087298373,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.4911828870674059,\\\"bias\\\":0.0557578063918347,\\\"bid\\\":931.9419224289489,\\\"ask\\\":939.4273997175349,\\\"price\\\":935.6846610732418,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5526907578382483,\\\"bias\\\":0.05598238167496883,\\\"bid\\\":927.416895844098,\\\"ask\\\":934.8660275376245,\\\"price\\\":931.1414616908618,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5519316243614225,\\\"bias\\\":0.05367683617568819,\\\"bid\\\":961.1380081750209,\\\"ask\\\":968.8579921764266,\\\"price\\\":964.9980001757235,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5127680661239691,\\\"bias\\\":0.0577750584661329,\\\"bid\\\":1031.522647302248,\\\"ask\\\":1039.807969770539,\\\"price\\\":1035.6653085363932,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.446160278291839,\\\"bias\\\":0.057669956110152354,\\\"bid\\\":989.0650925354068,\\\"ask\\\":997.0093904674186,\\\"price\\\":993.0372415014125,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5375302420184905,\\\"bias\\\":0.053386790449613364,\\\"bid\\\":960.9555373424956,\\\"ask\\\":968.6740557147251,\\\"price\\\":964.8147965286105,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5147099950307988,\\\"bias\\\":0.05360233844927059,\\\"bid\\\":975.7049166251662,\\\"ask\\\":983.5419039072958,\\\"price\\\":979.6234102662314,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.44260847502384465,\\\"bias\\\":0.060617567669620176,\\\"bid\\\":941.3211060736061,\\\"ask\\\":948.881918170583,\\\"price\\\":945.1015121220947,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5371204555679779,\\\"bias\\\":0.05831640950991657,\\\"bid\\\":950.347978790083,\\\"ask\\\":957.9812958887981,\\\"price\\\":954.1646373394402,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5216867595986101,\\\"bias\\\":0.06113742778105202,\\\"bid\\\":1000.0238766949935,\\\"ask\\\":1008.0561969897328,\\\"price\\\":1004.0400368423627,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5081296689394726,\\\"bias\\\":0.06313778056748964,\\\"bid\\\":1020.3268487938885,\\\"ask\\\":1028.5222451697439,\\\"price\\\":1024.424546981816,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5662400319725894,\\\"bias\\\":0.06956018719746804,\\\"bid\\\":1136.7294395233753,\\\"ask\\\":1145.8597964673384,\\\"price\\\":1141.2946179953572,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5654499587187023,\\\"bias\\\":0.06827418643339045,\\\"bid\\\":1247.9014083318182,\\\"ask\\\":1257.9247128164116,\\\"price\\\":1252.9130605741157,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.49153351834779746,\\\"bias\\\":0.06767300754327338,\\\"bid\\\":1251.675777116584,\\\"ask\\\":1261.729397816316,\\\"price\\\":1256.7025874664496,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.542666711330932,\\\"bias\\\":0.07008043913350415,\\\"bid\\\":1159.48374095388,\\\"ask\\\":1168.7968633711798,\\\"price\\\":1164.14030216253,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5670416441822329,\\\"bias\\\":0.07057141822111013,\\\"bid\\\":1184.5341906017297,\\\"ask\\\":1194.0485214499363,\\\"price\\\":1189.2913560258332,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.49337064738672914,\\\"bias\\\":0.06939119636333091,\\\"bid\\\":1308.3979673243352,\\\"ask\\\":1318.907187945415,\\\"price\\\":1313.6525776348758,\\\"maxShares\\\":8300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0101,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"FNS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4476579838259106,\\\"bias\\\":0.0523420161740894,\\\"bid\\\":2180.9813535553717,\\\"ask\\\":2220.595545648204,\\\"price\\\":2200.7884496017878,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4480193701067188,\\\"bias\\\":0.05198062989328123,\\\"bid\\\":2166.026403719868,\\\"ask\\\":2205.3689620114496,\\\"price\\\":2185.697682865659,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.44793036659390956,\\\"bias\\\":0.05206963340609044,\\\"bid\\\":2169.7351690650416,\\\"ask\\\":2209.1450914093107,\\\"price\\\":2189.440130237176,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4464266166810998,\\\"bias\\\":0.05739982344709377,\\\"bid\\\":1969.569227637561,\\\"ask\\\":2005.3434416612488,\\\"price\\\":1987.4563346494042,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4481536112892672,\\\"bias\\\":0.05345802966575536,\\\"bid\\\":1788.928396857322,\\\"ask\\\":1821.4215463461521,\\\"price\\\":1805.1749716017368,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4927655078508392,\\\"bias\\\":0.05253880768912267,\\\"bid\\\":1686.9180068437731,\\\"ask\\\":1717.5582935472921,\\\"price\\\":1702.2381501955329,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4811243029584643,\\\"bias\\\":0.045759309814360716,\\\"bid\\\":1713.9566624372567,\\\"ask\\\":1745.0880649840492,\\\"price\\\":1729.5223637106517,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.47687758677565717,\\\"bias\\\":0.051918675806236214,\\\"bid\\\":1671.0677733706427,\\\"ask\\\":1701.420164814307,\\\"price\\\":1686.2439690924753,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.5533310375052368,\\\"bias\\\":0.05505025811308617,\\\"bid\\\":1790.1711096622719,\\\"ask\\\":1822.6868311293965,\\\"price\\\":1806.4289703958336,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.5528635666803268,\\\"bias\\\":0.05380072774731104,\\\"bid\\\":1919.8954272793208,\\\"ask\\\":1954.7673926587624,\\\"price\\\":1937.3314099690417,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.5303161789046765,\\\"bias\\\":0.05233007547053259,\\\"bid\\\":1917.759595371795,\\\"ask\\\":1952.5927666298091,\\\"price\\\":1935.176181000802,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4477792344480105,\\\"bias\\\":0.05372204218776688,\\\"bid\\\":1915.5897115341882,\\\"ask\\\":1950.383470169522,\\\"price\\\":1932.9865908518557,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.518590942731707,\\\"bias\\\":0.053627557294578465,\\\"bid\\\":1935.0776525644185,\\\"ask\\\":1970.2253798562024,\\\"price\\\":1952.651516210311,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.535021362772382,\\\"bias\\\":0.05474760901897602,\\\"bid\\\":2088.1769871741235,\\\"ask\\\":2126.105529827134,\\\"price\\\":2107.1412585006287,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4905336960599169,\\\"bias\\\":0.0564298318175942,\\\"bid\\\":2116.661408441634,\\\"ask\\\":2155.107327061158,\\\"price\\\":2135.8843677513946,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4847915578075802,\\\"bias\\\":0.056403186946443196,\\\"bid\\\":2322.8310319402854,\\\"ask\\\":2365.0217065870306,\\\"price\\\":2343.926369263659,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.46075090346323166,\\\"bias\\\":0.0557528651241862,\\\"bid\\\":2287.652606975837,\\\"ask\\\":2329.2043193124323,\\\"price\\\":2308.428463144135,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.5525614138917282,\\\"bias\\\":0.055559314998668174,\\\"bid\\\":2341.0473531407038,\\\"ask\\\":2383.568899413695,\\\"price\\\":2362.308126277199,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.552018501811544,\\\"bias\\\":0.054921140943188895,\\\"bid\\\":2534.7394558631404,\\\"ask\\\":2580.7791230735697,\\\"price\\\":2557.7592894683553,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.556155591923404,\\\"bias\\\":0.05855312936768453,\\\"bid\\\":2599.0131870173104,\\\"ask\\\":2646.2202882951224,\\\"price\\\":2622.6167376562166,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.5175507076077688,\\\"bias\\\":0.061629348532386996,\\\"bid\\\":2722.380427609133,\\\"ask\\\":2771.828306213539,\\\"price\\\":2747.104366911338,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.43930784114628557,\\\"bias\\\":0.0619759944413506,\\\"bid\\\":2792.734269298496,\\\"ask\\\":2843.460017883131,\\\"price\\\":2818.097143590814,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.44246709972220827,\\\"bias\\\":0.0619759944413506,\\\"bid\\\":2675.492537489052,\\\"ask\\\":2724.0887692497,\\\"price\\\":2699.7906533693777,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.47928516779860103,\\\"bias\\\":0.05828160797534793,\\\"bid\\\":2584.602367188304,\\\"ask\\\":2631.5477179545906,\\\"price\\\":2608.0750425714486,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4914851611050587,\\\"bias\\\":0.06244306370723046,\\\"bid\\\":2535.7188791483186,\\\"ask\\\":2581.77633608542,\\\"price\\\":2558.74760761687,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4398491654814801,\\\"bias\\\":0.061039061744014966,\\\"bid\\\":2408.2262289214104,\\\"ask\\\":2451.967976772657,\\\"price\\\":2430.097102847033,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.44119492099187757,\\\"bias\\\":0.06104452133588967,\\\"bid\\\":2341.6599286897404,\\\"ask\\\":2384.192601461098,\\\"price\\\":2362.92626507542,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.5070144432400587,\\\"bias\\\":0.0588287621358089,\\\"bid\\\":2256.8760501015595,\\\"ask\\\":2297.8687533324655,\\\"price\\\":2277.372401717012,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.46633838771325015,\\\"bias\\\":0.05895634501446101,\\\"bid\\\":2136.20336413045,\\\"ask\\\":2175.004232500124,\\\"price\\\":2155.603798315287,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.478909808962348,\\\"bias\\\":0.05641295348418607,\\\"bid\\\":2129.4919674955045,\\\"ask\\\":2168.1709336054137,\\\"price\\\":2148.831450550459,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4954737749717401,\\\"bias\\\":0.05476462973199836,\\\"bid\\\":2148.4505992503246,\\\"ask\\\":2187.473919922883,\\\"price\\\":2167.962259586604,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"JGN\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5898210634213326,\\\"bias\\\":0.08982106342133256,\\\"bid\\\":2132.987859591797,\\\"ask\\\":2163.060195980805,\\\"price\\\":2148.0240277863013,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5919834417907905,\\\"bias\\\":0.09198344179079054,\\\"bid\\\":2184.3380288528992,\\\"ask\\\":2215.134335402688,\\\"price\\\":2199.7361821277937,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5914342708516491,\\\"bias\\\":0.09143427085164912,\\\"bid\\\":2171.3742214846966,\\\"ask\\\":2201.9877553223455,\\\"price\\\":2186.680988403521,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5144443017937649,\\\"bias\\\":0.09898275948405216,\\\"bid\\\":10269.289602480665,\\\"ask\\\":10414.073141689862,\\\"price\\\":10341.681372085264,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.46855989441061796,\\\"bias\\\":0.07926978972096776,\\\"bid\\\":9562.456513082261,\\\"ask\\\":9697.274631091474,\\\"price\\\":9629.865572086866,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.49732578561032065,\\\"bias\\\":0.09189490983093912,\\\"bid\\\":9476.926302568054,\\\"ask\\\":9610.538556582102,\\\"price\\\":9543.732429575077,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5465557992788049,\\\"bias\\\":0.10973569924987248,\\\"bid\\\":9113.81767544446,\\\"ask\\\":9242.310573184861,\\\"price\\\":9178.064124314664,\\\"maxShares\\\":6100000,\\\"investedShares\\\":3538000,\\\"averagePrice\\\":5207.207353902241,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.4563647049789463,\\\"bias\\\":0.11296991988219618,\\\"bid\\\":10644.965806282316,\\\"ask\\\":10795.045888143299,\\\"price\\\":10720.005847212808,\\\"maxShares\\\":6100000,\\\"investedShares\\\":366000,\\\"averagePrice\\\":638.2959652965109,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5050784857581708,\\\"bias\\\":0.1355682380994212,\\\"bid\\\":12770.210927747159,\\\"ask\\\":12950.25418352606,\\\"price\\\":12860.232555636612,\\\"maxShares\\\":6100000,\\\"investedShares\\\":3294000,\\\"averagePrice\\\":6641.23776997993,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5646385890686768,\\\"bias\\\":0.15984800862787463,\\\"bid\\\":10461.828390836403,\\\"ask\\\":10609.32647489653,\\\"price\\\":10535.577432866468,\\\"maxShares\\\":6100000,\\\"investedShares\\\":4270000,\\\"averagePrice\\\":6729.079427419485,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5989181442460112,\\\"bias\\\":0.1848488515591371,\\\"bid\\\":16909.16074134089,\\\"ask\\\":17147.55777092676,\\\"price\\\":17028.35925613383,\\\"maxShares\\\":6100000,\\\"investedShares\\\":4941000,\\\"averagePrice\\\":7786.506194585405,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.32743765577090306,\\\"bias\\\":0.1866602824439731,\\\"bid\\\":16942.753096323282,\\\"ask\\\":17181.6237341365,\\\"price\\\":17062.188415229888,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5416890919339562,\\\"bias\\\":0.16702910383548647,\\\"bid\\\":14431.611953325897,\\\"ask\\\":14635.078788518817,\\\"price\\\":14533.345370922352,\\\"maxShares\\\":6100000,\\\"investedShares\\\":4087000,\\\"averagePrice\\\":9014.548428648292,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.3951095695273726,\\\"bias\\\":0.1428049617942685,\\\"bid\\\":16224.945683839884,\\\"ask\\\":16453.69617686481,\\\"price\\\":16339.320930352354,\\\"maxShares\\\":6100000,\\\"investedShares\\\":549000,\\\"averagePrice\\\":1210.9094904154408,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.3820735961201448,\\\"bias\\\":0.13063016663101623,\\\"bid\\\":16550.51679214553,\\\"ask\\\":16783.857411571542,\\\"price\\\":16667.187101858537,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.39334623726557644,\\\"bias\\\":0.11957102854628976,\\\"bid\\\":13031.46751854695,\\\"ask\\\":13215.194150228372,\\\"price\\\":13123.330834387654,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.4255742737343152,\\\"bias\\\":0.12464882922079701,\\\"bid\\\":8360.027454764626,\\\"ask\\\":8477.892897228572,\\\"price\\\":8418.960175996603,\\\"maxShares\\\":6100000,\\\"investedShares\\\":793000,\\\"averagePrice\\\":965.8027449973966,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5289867832556616,\\\"bias\\\":0.12534695263166495,\\\"bid\\\":6729.064720158144,\\\"ask\\\":6823.935723262081,\\\"price\\\":6776.500221710113,\\\"maxShares\\\":6100000,\\\"investedShares\\\":3843000,\\\"averagePrice\\\":4680.428687295078,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.37319267179038546,\\\"bias\\\":0.13247660425574126,\\\"bid\\\":5818.3326232976,\\\"ask\\\":5900.363496133624,\\\"price\\\":5859.348059715607,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.3950846709483673,\\\"bias\\\":0.14982101937984588,\\\"bid\\\":4803.83014590666,\\\"ask\\\":4871.557861961738,\\\"price\\\":4837.694003934198,\\\"maxShares\\\":6100000,\\\"investedShares\\\":610000,\\\"averagePrice\\\":388.9254901418174,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5387094809449643,\\\"bias\\\":0.11979968514117967,\\\"bid\\\":4867.789228276601,\\\"ask\\\":4936.418683660154,\\\"price\\\":4902.1039559683795,\\\"maxShares\\\":6100000,\\\"investedShares\\\":4026000,\\\"averagePrice\\\":2566.9082349359933,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.39989534680631533,\\\"bias\\\":0.11452633028915066,\\\"bid\\\":4350.052358384278,\\\"ask\\\":4411.382401704904,\\\"price\\\":4380.71738004459,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.38848229311335436,\\\"bias\\\":0.15418431919201525,\\\"bid\\\":3303.508897770265,\\\"ask\\\":3350.0840483934116,\\\"price\\\":3326.7964730818408,\\\"maxShares\\\":6100000,\\\"investedShares\\\":427000,\\\"averagePrice\\\":210.19861153553717,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.6371583963082632,\\\"bias\\\":0.14742951819341032,\\\"bid\\\":3232.648163596922,\\\"ask\\\":3278.224270636555,\\\"price\\\":3255.436217116739,\\\"maxShares\\\":6100000,\\\"investedShares\\\":6100000,\\\"averagePrice\\\":3002.837307650536,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.49400565289902365,\\\"bias\\\":0.13279771259318596,\\\"bid\\\":3712.622591964554,\\\"ask\\\":3764.9657100788586,\\\"price\\\":3738.7941510217042,\\\"maxShares\\\":6100000,\\\"investedShares\\\":2745000,\\\"averagePrice\\\":1351.2767884427406,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5631532040675569,\\\"bias\\\":0.11413901899878431,\\\"bid\\\":3401.514354291968,\\\"ask\\\":3449.471253546841,\\\"price\\\":3425.4928039194037,\\\"maxShares\\\":6100000,\\\"investedShares\\\":4880000,\\\"averagePrice\\\":2462.922876556398,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5363034067177597,\\\"bias\\\":0.13496760718681666,\\\"bid\\\":4686.991010460139,\\\"ask\\\":4753.071447667026,\\\"price\\\":4720.031229063583,\\\"maxShares\\\":6100000,\\\"investedShares\\\":61000,\\\"averagePrice\\\":30.786535956954907,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.38314697931207237,\\\"bias\\\":0.13134204988078613,\\\"bid\\\":4055.5164084191806,\\\"ask\\\":4112.693880441203,\\\"price\\\":4084.1051444301916,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.4022726912831407,\\\"bias\\\":0.12510653550589257,\\\"bid\\\":2841.2573060223804,\\\"ask\\\":2881.315314365093,\\\"price\\\":2861.2863101937373,\\\"maxShares\\\":6100000,\\\"investedShares\\\":305000,\\\"averagePrice\\\":128.5457723102438,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5448901217222991,\\\"bias\\\":0.13016017015161419,\\\"bid\\\":2643.2797393902974,\\\"ask\\\":2680.54652322863,\\\"price\\\":2661.9131313094636,\\\"maxShares\\\":6100000,\\\"investedShares\\\":4270000,\\\"averagePrice\\\":1799.6408123434157,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5003711867913185,\\\"bias\\\":0.1267331887954476,\\\"bid\\\":2179.9305491188898,\\\"ask\\\":2210.6647159745444,\\\"price\\\":2195.2976325467166,\\\"maxShares\\\":6100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0265,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"SGC\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5105451292485585,\\\"bias\\\":0.010545129248558549,\\\"bid\\\":144.2825352766852,\\\"ask\\\":148.37980808373104,\\\"price\\\":146.33117168020812,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5085237770816302,\\\"bias\\\":0.008523777081630213,\\\"bid\\\":147.04822745984455,\\\"ask\\\":151.22403919298415,\\\"price\\\":149.13613332641435,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.49852377708163026,\\\"bias\\\":0.0014762229183697406,\\\"bid\\\":146.35250721712296,\\\"ask\\\":150.508562188806,\\\"price\\\":148.43053470296448,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.43688792856611924,\\\"bias\\\":0.07120884649295012,\\\"bid\\\":543.4343218285076,\\\"ask\\\":558.8665338074105,\\\"price\\\":551.1504278179588,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5340937058462523,\\\"bias\\\":0.07380384423778996,\\\"bid\\\":534.9791587318545,\\\"ask\\\":550.1712646593311,\\\"price\\\":542.5752116955932,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4390893376575706,\\\"bias\\\":0.06687208236509046,\\\"bid\\\":459.90588740995327,\\\"ask\\\":472.96609516601734,\\\"price\\\":466.43599128798553,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.44667899358513824,\\\"bias\\\":0.05726498252926321,\\\"bid\\\":499.4429768572352,\\\"ask\\\":513.6259417172787,\\\"price\\\":506.5344592872568,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4432757320480821,\\\"bias\\\":0.05994134583038879,\\\"bid\\\":534.0408532316997,\\\"ask\\\":549.2063135668799,\\\"price\\\":541.6235833992896,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.43885609103177503,\\\"bias\\\":0.06609231044928188,\\\"bid\\\":411.0283584519205,\\\"ask\\\":422.700563357249,\\\"price\\\":416.86446090458463,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4351524175654082,\\\"bias\\\":0.06951880325768323,\\\"bid\\\":403.5462817176893,\\\"ask\\\":415.0060138557167,\\\"price\\\":409.276147786703,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5291692251784379,\\\"bias\\\":0.06128153175581902,\\\"bid\\\":389.1601466994182,\\\"ask\\\":400.2113476198885,\\\"price\\\":394.6857471596533,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4437863698259813,\\\"bias\\\":0.06167591922617244,\\\"bid\\\":389.98677568230363,\\\"ask\\\":401.06145085380894,\\\"price\\\":395.5241132680561,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.43705908968023655,\\\"bias\\\":0.06927137765841634,\\\"bid\\\":338.79007547132755,\\\"ask\\\":348.41088897355604,\\\"price\\\":343.6004822224419,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.528779066600684,\\\"bias\\\":0.0636328823922071,\\\"bid\\\":291.96481975102915,\\\"ask\\\":300.2559099670828,\\\"price\\\":296.11036485905595,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4447804646899913,\\\"bias\\\":0.059067713875619154,\\\"bid\\\":259.5065524578289,\\\"ask\\\":266.87590688868005,\\\"price\\\":263.19122967325455,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5159489162499244,\\\"bias\\\":0.05896472053476198,\\\"bid\\\":233.1647337534596,\\\"ask\\\":239.78604465112375,\\\"price\\\":236.4753892022919,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5580017710041856,\\\"bias\\\":0.06243388682740514,\\\"bid\\\":222.65107468140425,\\\"ask\\\":228.9738232524787,\\\"price\\\":225.81244896694145,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.550314453871393,\\\"bias\\\":0.05767397217542802,\\\"bid\\\":207.2476840529198,\\\"ask\\\":213.13301382318537,\\\"price\\\":210.19034893805264,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5559840994775097,\\\"bias\\\":0.06131454355468324,\\\"bid\\\":230.84021710952024,\\\"ask\\\":237.3955173925493,\\\"price\\\":234.11786725103477,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5423814065684023,\\\"bias\\\":0.05756416086105265,\\\"bid\\\":241.06556425397628,\\\"ask\\\":247.9112395066247,\\\"price\\\":244.48840188030056,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4480146821852456,\\\"bias\\\":0.05529172241883429,\\\"bid\\\":231.2597921430229,\\\"ask\\\":237.8270073357253,\\\"price\\\":234.54339973937422,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5127036388798072,\\\"bias\\\":0.06103916343939597,\\\"bid\\\":226.43336203880378,\\\"ask\\\":232.86351836444928,\\\"price\\\":229.64844020162658,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5495328219747913,\\\"bias\\\":0.06382360183253477,\\\"bid\\\":235.84545543054807,\\\"ask\\\":242.54289229875852,\\\"price\\\":239.19417386465338,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4473032896380756,\\\"bias\\\":0.05811756597821338,\\\"bid\\\":249.65147141016115,\\\"ask\\\":256.74096552728537,\\\"price\\\":253.19621846872326,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.44109315354835055,\\\"bias\\\":0.06757062681767678,\\\"bid\\\":221.66310705891036,\\\"ask\\\":227.9577997542952,\\\"price\\\":224.8104534066028,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.523918681034385,\\\"bias\\\":0.05956673517886335,\\\"bid\\\":180.21903986409737,\\\"ask\\\":185.3368219292036,\\\"price\\\":182.7779308966505,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4779540088224739,\\\"bias\\\":0.03570664810215057,\\\"bid\\\":166.95117105672006,\\\"ask\\\":171.6921779427122,\\\"price\\\":169.3216744997161,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5011025421655372,\\\"bias\\\":0.0323162515296766,\\\"bid\\\":156.73432348752843,\\\"ask\\\":161.18519677114983,\\\"price\\\":158.95976012933914,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5121953998319928,\\\"bias\\\":0.022172374770913827,\\\"bid\\\":145.8609484398202,\\\"ask\\\":150.00304433871975,\\\"price\\\":147.93199638927,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5095226761190472,\\\"bias\\\":0.023798723046771997,\\\"bid\\\":132.8648862377777,\\\"ask\\\":136.63792560355637,\\\"price\\\":134.751405920667,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5119210644547192,\\\"bias\\\":0.02738660571345375,\\\"bid\\\":146.1908907282867,\\\"ask\\\":150.3423561850738,\\\"price\\\":148.2666234566803,\\\"maxShares\\\":2200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.021099999999999997,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"CTYS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5851114595648413,\\\"bias\\\":0.08511145956484134,\\\"bid\\\":3533.601307394345,\\\"ask\\\":3590.5948768684475,\\\"price\\\":3562.0980921313962,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.584005773852548,\\\"bias\\\":0.08400577385254804,\\\"bid\\\":3488.2848860959125,\\\"ask\\\":3544.5475455490728,\\\"price\\\":3516.4162158224926,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5842764170975163,\\\"bias\\\":0.08427641709751632,\\\"bid\\\":3499.5231700572485,\\\"ask\\\":3555.967092154946,\\\"price\\\":3527.7451311060972,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5654484217109031,\\\"bias\\\":0.10315508177896071,\\\"bid\\\":1465.0699565678253,\\\"ask\\\":1488.7001171576298,\\\"price\\\":1476.8850368627277,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.536924998419974,\\\"bias\\\":0.0816746798238851,\\\"bid\\\":1633.6379686370658,\\\"ask\\\":1659.9869681312114,\\\"price\\\":1646.81246838414,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.4183552101927209,\\\"bias\\\":0.08672638601368621,\\\"bid\\\":1330.160457229431,\\\"ask\\\":1351.6146581524874,\\\"price\\\":1340.8875576909588,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.41174873992573224,\\\"bias\\\":0.09290225632067961,\\\"bid\\\":1101.8775102122497,\\\"ask\\\":1119.6497281188995,\\\"price\\\":1110.7636191655752,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.4083353668984938,\\\"bias\\\":0.09553868362109069,\\\"bid\\\":1008.7713482491803,\\\"ask\\\":1025.0418538661024,\\\"price\\\":1016.9066010576411,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.4971139529339457,\\\"bias\\\":0.09717556752665613,\\\"bid\\\":919.1058876233458,\\\"ask\\\":933.9301761333998,\\\"price\\\":926.5180318783724,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5945093097090838,\\\"bias\\\":0.09845236402506208,\\\"bid\\\":1059.8729998652439,\\\"ask\\\":1076.9677256695215,\\\"price\\\":1068.4203627673826,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5891391265504695,\\\"bias\\\":0.09421798340888232,\\\"bid\\\":1279.5687408737094,\\\"ask\\\":1300.2069463716723,\\\"price\\\":1289.8878436226908,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5833084396388765,\\\"bias\\\":0.0864448085465197,\\\"bid\\\":1526.0982361331519,\\\"ask\\\":1550.7127238127193,\\\"price\\\":1538.4054799729347,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5852830595197955,\\\"bias\\\":0.09024757296398733,\\\"bid\\\":1765.3418570892927,\\\"ask\\\":1793.8151128487973,\\\"price\\\":1779.5784849690451,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5867384342341312,\\\"bias\\\":0.0916073204722535,\\\"bid\\\":2153.714893450115,\\\"ask\\\":2188.4522304412462,\\\"price\\\":2171.0835619456807,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5145730965993459,\\\"bias\\\":0.09376733833918449,\\\"bid\\\":2526.4866137393938,\\\"ask\\\":2567.2363978319654,\\\"price\\\":2546.8615057856787,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.526472563931948,\\\"bias\\\":0.09529083051919363,\\\"bid\\\":2299.0588235074815,\\\"ask\\\":2336.140417435021,\\\"price\\\":2317.5996204712515,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5613247093331942,\\\"bias\\\":0.09360886860002848,\\\"bid\\\":2199.648457805113,\\\"ask\\\":2235.126658737453,\\\"price\\\":2217.3875582712835,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.4064389937058953,\\\"bias\\\":0.0973370342525402,\\\"bid\\\":2362.1371473547165,\\\"ask\\\":2400.2361336023737,\\\"price\\\":2381.1866404785455,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.42156992992326836,\\\"bias\\\":0.0888588540668046,\\\"bid\\\":2132.23784944067,\\\"ask\\\":2166.6287824961632,\\\"price\\\":2149.433315968418,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5542287797264762,\\\"bias\\\":0.07829001948662229,\\\"bid\\\":2077.127738017332,\\\"ask\\\":2110.629798307934,\\\"price\\\":2093.8787681626327,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5717582013390914,\\\"bias\\\":0.07765911618595456,\\\"bid\\\":2484.1780793237763,\\\"ask\\\":2524.2454676999664,\\\"price\\\":2504.2117735118723,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.4893868903437861,\\\"bias\\\":0.07325266554706134,\\\"bid\\\":2483.1589272485317,\\\"ask\\\":2523.209877688024,\\\"price\\\":2503.184402468277,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5375389881029804,\\\"bias\\\":0.07613401167486022,\\\"bid\\\":2316.4043594380705,\\\"ask\\\":2353.765720074171,\\\"price\\\":2335.0850397561208,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.4772696438883565,\\\"bias\\\":0.07270162330850638,\\\"bid\\\":2105.642892138325,\\\"ask\\\":2139.6048742695893,\\\"price\\\":2122.623883203956,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5741611374516669,\\\"bias\\\":0.0788478614148429,\\\"bid\\\":2199.360247104095,\\\"ask\\\":2234.833799476741,\\\"price\\\":2217.0970232904174,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.4613766955614647,\\\"bias\\\":0.0806737546622791,\\\"bid\\\":2563.5180933632955,\\\"ask\\\":2604.8651593852837,\\\"price\\\":2584.191626374289,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5785069895341438,\\\"bias\\\":0.08451713784115089,\\\"bid\\\":2750.150667651652,\\\"ask\\\":2794.5079364847415,\\\"price\\\":2772.3293020681954,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5909338166652699,\\\"bias\\\":0.10086932156045914,\\\"bid\\\":2933.5530179868992,\\\"ask\\\":2980.8683892447543,\\\"price\\\":2957.210703615827,\\\"maxShares\\\":14800000,\\\"investedShares\\\":3552000,\\\"averagePrice\\\":730.5476258683012,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5846117413629285,\\\"bias\\\":0.08966785002063438,\\\"bid\\\":2999.330208782397,\\\"ask\\\":3047.7065024724347,\\\"price\\\":3023.518355627416,\\\"maxShares\\\":14800000,\\\"investedShares\\\":14800000,\\\"averagePrice\\\":3043.9484411179205,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5390644382251554,\\\"bias\\\":0.09636232262587408,\\\"bid\\\":3408.17077196574,\\\"ask\\\":3463.141268287767,\\\"price\\\":3435.656020126756,\\\"maxShares\\\":14800000,\\\"investedShares\\\":10360000,\\\"averagePrice\\\":2130.763908782542,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.5112829154755225,\\\"bias\\\":0.08710182973127456,\\\"bid\\\":3261.349489547024,\\\"ask\\\":3313.9519006687506,\\\"price\\\":3287.650695107888,\\\"maxShares\\\":14800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0143,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"MDYN\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.4117872852920163,\\\"bias\\\":0.0882127147079837,\\\"bid\\\":22409.406789767047,\\\"ask\\\":22544.267813577077,\\\"price\\\":22476.83730167206,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.41235626549802523,\\\"bias\\\":0.08764373450197477,\\\"bid\\\":22553.949545695024,\\\"ask\\\":22689.680435639024,\\\"price\\\":22621.814990667026,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.41221607091252827,\\\"bias\\\":0.08778392908747173,\\\"bid\\\":22517.929950300433,\\\"ask\\\":22653.44407236844,\\\"price\\\":22585.687011334438,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5236551851784056,\\\"bias\\\":0.08063962503348049,\\\"bid\\\":44342.95218818457,\\\"ask\\\":44609.810476177634,\\\"price\\\":44476.381332181096,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.42066702279133844,\\\"bias\\\":0.08271298744873934,\\\"bid\\\":42904.098278088764,\\\"ask\\\":43162.29746531899,\\\"price\\\":43033.19787170391,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.49985038862714753,\\\"bias\\\":0.08306467532804307,\\\"bid\\\":38843.38283871082,\\\"ask\\\":39077.1444204884,\\\"price\\\":38960.26362959959,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5802091502538477,\\\"bias\\\":0.08212704507991309,\\\"bid\\\":39016.21654075839,\\\"ask\\\":39251.018245116,\\\"price\\\":39133.617392937194,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5810463692190656,\\\"bias\\\":0.08398322626862675,\\\"bid\\\":39955.780009756854,\\\"ask\\\":40196.23605796002,\\\"price\\\":40076.00803385843,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5051472475550601,\\\"bias\\\":0.09034903605775207,\\\"bid\\\":39238.30860397033,\\\"ask\\\":39474.446870393425,\\\"price\\\":39356.37773718188,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.41784244592769376,\\\"bias\\\":0.08484589319114838,\\\"bid\\\":37790.49761566018,\\\"ask\\\":38017.92287713855,\\\"price\\\":37904.210246399365,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.41818424290481226,\\\"bias\\\":0.08329612113558538,\\\"bid\\\":36782.758704272404,\\\"ask\\\":37004.11933840041,\\\"price\\\":36893.43902133639,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.4179884682524609,\\\"bias\\\":0.0848180135755301,\\\"bid\\\":34518.64394900969,\\\"ask\\\":34726.37901791045,\\\"price\\\":34622.51148346007,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5296746745489318,\\\"bias\\\":0.08448071622080688,\\\"bid\\\":33641.277205260325,\\\"ask\\\":33843.73223357682,\\\"price\\\":33742.50471941856,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.45767076284697983,\\\"bias\\\":0.08642757508189719,\\\"bid\\\":33165.77069926489,\\\"ask\\\":33365.3641036737,\\\"price\\\":33265.5674014693,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5154122061263413,\\\"bias\\\":0.0833662598273538,\\\"bid\\\":33230.93183370247,\\\"ask\\\":33430.91738134762,\\\"price\\\":33330.92460752505,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.4216638678358882,\\\"bias\\\":0.07999965764963557,\\\"bid\\\":31060.092043280158,\\\"ask\\\":31247.013359488483,\\\"price\\\":31153.552701384295,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.445613628644127,\\\"bias\\\":0.07779001725489854,\\\"bid\\\":28914.46138249155,\\\"ask\\\":29088.470177170537,\\\"price\\\":29001.46577983104,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5168406162581541,\\\"bias\\\":0.0732895428410657,\\\"bid\\\":27297.313512008648,\\\"ask\\\":27461.5902232143,\\\"price\\\":27379.45186761148,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5168736184848894,\\\"bias\\\":0.07144408548890963,\\\"bid\\\":25787.955620467757,\\\"ask\\\":25943.148934131557,\\\"price\\\":25865.55227729965,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.46451089699276216,\\\"bias\\\":0.07211745530249053,\\\"bid\\\":27723.102093504494,\\\"ask\\\":27889.941223455364,\\\"price\\\":27806.52165847994,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5712976377042184,\\\"bias\\\":0.07258924739918182,\\\"bid\\\":26482.35714030811,\\\"ask\\\":26641.7293999288,\\\"price\\\":26562.043270118455,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.48392820915233065,\\\"bias\\\":0.08087340515555574,\\\"bid\\\":28479.805655383036,\\\"ask\\\":28651.198668354256,\\\"price\\\":28565.502161868637,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5385796723177086,\\\"bias\\\":0.08013498024856192,\\\"bid\\\":28237.332722264076,\\\"ask\\\":28407.266519990837,\\\"price\\\":28322.29962112745,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.47187072319492956,\\\"bias\\\":0.0777606280226893,\\\"bid\\\":28452.931803267646,\\\"ask\\\":28624.16308794127,\\\"price\\\":28538.54744560445,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5764180461483698,\\\"bias\\\":0.07864072961558088,\\\"bid\\\":29752.815336246113,\\\"ask\\\":29931.86939042615,\\\"price\\\":29842.34236333614,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5687800408710497,\\\"bias\\\":0.08015497660870352,\\\"bid\\\":32143.70989115094,\\\"ask\\\":32337.15247825915,\\\"price\\\":32240.43118470504,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.41869198499232213,\\\"bias\\\":0.08434273390667707,\\\"bid\\\":30539.400422542883,\\\"ask\\\":30723.188188375636,\\\"price\\\":30631.294305459265,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5087142374440343,\\\"bias\\\":0.08478840141591976,\\\"bid\\\":28521.690287794336,\\\"ask\\\":28693.33536475197,\\\"price\\\":28607.512826273152,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.4457331406266667,\\\"bias\\\":0.08790792411731391,\\\"bid\\\":28774.01775678088,\\\"ask\\\":28947.181354113567,\\\"price\\\":28860.59955544722,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.40958880281047355,\\\"bias\\\":0.09262827994836992,\\\"bid\\\":26728.931804238437,\\\"ask\\\":26889.787963541778,\\\"price\\\":26809.35988389011,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.41033165934907445,\\\"bias\\\":0.09170065273088596,\\\"bid\\\":24017.20737423568,\\\"ask\\\":24161.744229045515,\\\"price\\\":24089.47580164059,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0070999999999999995,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}],[\\\"TITN\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.3872157796904566,\\\"bias\\\":0.11278422030954338,\\\"bid\\\":13452.543656374952,\\\"ask\\\":13533.501792722242,\\\"price\\\":13493.022724548597,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:11 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.3878202959342524,\\\"bias\\\":0.11217970406574762,\\\"bid\\\":13380.823295007098,\\\"ask\\\":13461.349814335124,\\\"price\\\":13421.086554671112,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:17 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.3876711819689697,\\\"bias\\\":0.11232881803103029,\\\"bid\\\":13363.060554730479,\\\"ask\\\":13443.480176925445,\\\"price\\\":13403.270365827962,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:20 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.5348055752553589,\\\"bias\\\":0.10447509279766332,\\\"bid\\\":15000.89931986626,\\\"ask\\\":15091.175544459233,\\\"price\\\":15046.037432162742,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 12:34:55 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.5494004751055478,\\\"bias\\\":0.1117035253263336,\\\"bid\\\":15920.835949740134,\\\"ask\\\":16016.648402797739,\\\"price\\\":15968.74217626894,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 12:44:51 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.4989347879954778,\\\"bias\\\":0.11394253943539906,\\\"bid\\\":15107.568319605109,\\\"ask\\\":15198.486484015973,\\\"price\\\":15153.027401810537,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 12:54:44 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6069987656740807,\\\"bias\\\":0.10853631188954771,\\\"bid\\\":15321.79773205842,\\\"ask\\\":15414.005140676622,\\\"price\\\":15367.90143636751,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 1:04:37 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.4481418421993256,\\\"bias\\\":0.10652385883756177,\\\"bid\\\":14726.395584473941,\\\"ask\\\":14815.01983071952,\\\"price\\\":14770.707707596734,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 1:14:32 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.5064334211483486,\\\"bias\\\":0.10457895853718269,\\\"bid\\\":14619.359600181475,\\\"ask\\\":14707.339698076234,\\\"price\\\":14663.349649128848,\\\"maxShares\\\":4400000,\\\"investedShares\\\":1892000,\\\"averagePrice\\\":6080.7804515002435,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 1:24:26 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.3959203130471329,\\\"bias\\\":0.10635230559715625,\\\"bid\\\":13536.104377373735,\\\"ask\\\":13617.565386665852,\\\"price\\\":13576.834882019793,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 1:34:20 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.4372500231174143,\\\"bias\\\":0.10728346000129829,\\\"bid\\\":13079.754719074694,\\\"ask\\\":13158.469391406137,\\\"price\\\":13119.112055240415,\\\"maxShares\\\":4400000,\\\"investedShares\\\":836000,\\\"averagePrice\\\":2471.5890421221393,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 1:44:14 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.5134878456278915,\\\"bias\\\":0.10700467573130101,\\\"bid\\\":13288.207871416109,\\\"ask\\\":13368.177026108666,\\\"price\\\":13328.192448762387,\\\"maxShares\\\":4400000,\\\"investedShares\\\":2508000,\\\"averagePrice\\\":7414.76712636642,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 1:54:08 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.5385664321705386,\\\"bias\\\":0.10867242475606614,\\\"bid\\\":13220.586438428147,\\\"ask\\\":13300.148643674453,\\\"price\\\":13260.367541051302,\\\"maxShares\\\":4400000,\\\"investedShares\\\":2904000,\\\"averagePrice\\\":8681.38847425847,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 2:04:02 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.4468432648743184,\\\"bias\\\":0.10810043887588244,\\\"bid\\\":13479.225006199838,\\\"ask\\\":13560.3437123555,\\\"price\\\":13519.784359277668,\\\"maxShares\\\":4400000,\\\"investedShares\\\":1100000,\\\"averagePrice\\\":3297.3640377250717,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 2:13:56 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6097081365888992,\\\"bias\\\":0.11281377220744426,\\\"bid\\\":13256.891733973951,\\\"ask\\\":13336.672426455241,\\\"price\\\":13296.782080214596,\\\"maxShares\\\":4400000,\\\"investedShares\\\":4400000,\\\"averagePrice\\\":13209.614604311388,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 2:23:50 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.4665433569359735,\\\"bias\\\":0.114669931257676,\\\"bid\\\":13254.842413252234,\\\"ask\\\":13334.61077281042,\\\"price\\\":13294.726593031313,\\\"maxShares\\\":4400000,\\\"investedShares\\\":1584000,\\\"averagePrice\\\":4755.461257552108,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 2:33:45 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.4203153308568812,\\\"bias\\\":0.11424387845890438,\\\"bid\\\":12681.828480934613,\\\"ask\\\":12758.148411612257,\\\"price\\\":12719.988446273439,\\\"maxShares\\\":4400000,\\\"investedShares\\\":572000,\\\"averagePrice\\\":1659.395237176615,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 2:43:39 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.5274145496177739,\\\"bias\\\":0.11440801395000377,\\\"bid\\\":13160.529440496879,\\\"ask\\\":13239.730219476796,\\\"price\\\":13200.129829986845,\\\"maxShares\\\":4400000,\\\"investedShares\\\":2772000,\\\"averagePrice\\\":8041.684610932827,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 2:53:33 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.391785517081497,\\\"bias\\\":0.11181889519239585,\\\"bid\\\":12320.043264888121,\\\"ask\\\":12394.185952540405,\\\"price\\\":12357.114608714268,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 3:03:26 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.5794216971997722,\\\"bias\\\":0.11239272958659607,\\\"bid\\\":11788.637152486697,\\\"ask\\\":11859.58180937227,\\\"price\\\":11824.109480929485,\\\"maxShares\\\":4400000,\\\"investedShares\\\":3740000,\\\"averagePrice\\\":9909.769390884161,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 3:13:21 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6089096682392297,\\\"bias\\\":0.11215062642269791,\\\"bid\\\":12099.787585142582,\\\"ask\\\":12172.604762184561,\\\"price\\\":12136.196173663568,\\\"maxShares\\\":4400000,\\\"investedShares\\\":4400000,\\\"averagePrice\\\":11658.55222456959,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 3:23:14 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6016086146942883,\\\"bias\\\":0.10709827072182909,\\\"bid\\\":12934.048584334112,\\\"ask\\\":13011.886389254865,\\\"price\\\":12972.967486794492,\\\"maxShares\\\":4400000,\\\"investedShares\\\":4400000,\\\"averagePrice\\\":11658.55222456959,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 3:33:09 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.43256540727270765,\\\"bias\\\":0.10389936129108868,\\\"bid\\\":13199.661040977127,\\\"ask\\\":13279.097316048203,\\\"price\\\":13239.379178512661,\\\"maxShares\\\":4400000,\\\"investedShares\\\":792000,\\\"averagePrice\\\":2098.5394004225273,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 3:43:02 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.39214382156829847,\\\"bias\\\":0.11055292246907683,\\\"bid\\\":12499.364038941185,\\\"ask\\\":12574.585888724181,\\\"price\\\":12536.974963832694,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 3:52:57 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.3902619296499147,\\\"bias\\\":0.11307900978331387,\\\"bid\\\":11808.960367508502,\\\"ask\\\":11880.027330602843,\\\"price\\\":11844.493849055667,\\\"maxShares\\\":4400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 6:23:05 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.5712118639209955,\\\"bias\\\":0.11637909633199828,\\\"bid\\\":11300.72724424954,\\\"ask\\\":11368.735632880933,\\\"price\\\":11334.731438565232,\\\"maxShares\\\":4400000,\\\"investedShares\\\":3476000,\\\"averagePrice\\\":8850.032483575204,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 6:29:57 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6138721003870218,\\\"bias\\\":0.11570644063797364,\\\"bid\\\":11572.250488589138,\\\"ask\\\":11641.892918811338,\\\"price\\\":11607.071703700243,\\\"maxShares\\\":4400000,\\\"investedShares\\\":44000,\\\"averagePrice\\\":112.02572764019234,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 6:36:46 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6152865449448783,\\\"bias\\\":0.11753496190354795,\\\"bid\\\":12446.749671025449,\\\"ask\\\":12521.654884692607,\\\"price\\\":12484.202277859024,\\\"maxShares\\\":4400000,\\\"investedShares\\\":1188000,\\\"averagePrice\\\":3432.871685964417,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 6:43:40 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6026191353742039,\\\"bias\\\":0.11836671840326085,\\\"bid\\\":13472.050710142124,\\\"ask\\\":13553.126240995536,\\\"price\\\":13512.588475568833,\\\"maxShares\\\":4400000,\\\"investedShares\\\":4180000,\\\"averagePrice\\\":12078.622598763694,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 6:50:32 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.45703721915231504,\\\"bias\\\":0.11602091874304976,\\\"bid\\\":13663.62507368084,\\\"ask\\\":13745.85350943017,\\\"price\\\":13704.739291555505,\\\"maxShares\\\":4400000,\\\"investedShares\\\":1276000,\\\"averagePrice\\\":3891.035537834525,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 6:57:22 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.4883185087359645,\\\"bias\\\":0.11700902513636485,\\\"bid\\\":14007.555573879274,\\\"ask\\\":14091.853802006926,\\\"price\\\":14049.704687943098,\\\"maxShares\\\":4400000,\\\"investedShares\\\":2024000,\\\"averagePrice\\\":6171.987404840974,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0059,\\\"dateObserved\\\":\\\"6/28/2023, 7:04:08 PM\\\"}]}]]\"}}],[\"data/salesLedger.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/salesLedger.txt\",\"text\":\"[{\\\"date\\\":\\\"6/28/2023, 1:04:49 PM\\\",\\\"symbol\\\":\\\"CLRK\\\",\\\"price\\\":11834.04547462754,\\\"averagePurchasePrice\\\":11585.437852093428,\\\"profit\\\":\\\"$3,579,949,764.49\\\",\\\"profitPercent\\\":\\\"2.15%\\\",\\\"shares\\\":14400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.33815660831259514},{\\\"date\\\":\\\"6/28/2023, 1:04:49 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":7115.309006681423,\\\"averagePurchasePrice\\\":6595.817966146935,\\\"profit\\\":\\\"$5,922,197,862.09\\\",\\\"profitPercent\\\":\\\"7.88%\\\",\\\"shares\\\":11400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3525336781308775},{\\\"date\\\":\\\"6/28/2023, 1:04:49 PM\\\",\\\"symbol\\\":\\\"DCOMM\\\",\\\"price\\\":30439.52117080361,\\\"averagePurchasePrice\\\":29825.592496393736,\\\"profit\\\":\\\"$10,559,573,199.85\\\",\\\"profitPercent\\\":\\\"2.06%\\\",\\\"shares\\\":17200000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.40661167455980424},{\\\"date\\\":\\\"6/28/2023, 1:04:49 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":10451.291404826557,\\\"averagePurchasePrice\\\":8977.943713624554,\\\"profit\\\":\\\"$8,987,420,916.33\\\",\\\"profitPercent\\\":\\\"16.41%\\\",\\\"shares\\\":6100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39883692842346813},{\\\"date\\\":\\\"6/28/2023, 1:12:19 PM\\\",\\\"symbol\\\":\\\"BLD\\\",\\\"price\\\":20924.10010210244,\\\"averagePurchasePrice\\\":19603.690731536335,\\\"profit\\\":\\\"$17,033,280,880.30\\\",\\\"profitPercent\\\":\\\"6.74%\\\",\\\"shares\\\":12900000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3979159556186187},{\\\"date\\\":\\\"6/28/2023, 1:19:48 PM\\\",\\\"symbol\\\":\\\"KGI\\\",\\\"price\\\":35829.36865481731,\\\"averagePurchasePrice\\\":28263.641327128724,\\\"profit\\\":\\\"$102,893,891,656.56\\\",\\\"profitPercent\\\":\\\"26.77%\\\",\\\"shares\\\":13600000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.38772557710754874},{\\\"date\\\":\\\"6/28/2023, 1:19:48 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":7973.124129616761,\\\"averagePurchasePrice\\\":7281.755503362274,\\\"profit\\\":\\\"$7,881,602,339.30\\\",\\\"profitPercent\\\":\\\"9.49%\\\",\\\"shares\\\":11400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.38132099209364595},{\\\"date\\\":\\\"6/28/2023, 1:19:48 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":13854.294505083431,\\\"averagePurchasePrice\\\":12298.588462925807,\\\"profit\\\":\\\"$9,489,806,857.16\\\",\\\"profitPercent\\\":\\\"12.65%\\\",\\\"shares\\\":6100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.36731249055350823},{\\\"date\\\":\\\"6/28/2023, 1:19:48 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":14999.818082844547,\\\"averagePurchasePrice\\\":14141.349887209866,\\\"profit\\\":\\\"$3,777,260,060.79\\\",\\\"profitPercent\\\":\\\"6.07%\\\",\\\"shares\\\":4400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3986788940146519},{\\\"date\\\":\\\"6/28/2023, 1:27:21 PM\\\",\\\"symbol\\\":\\\"UNV\\\",\\\"price\\\":14623.798010020835,\\\"averagePurchasePrice\\\":13440.953330355838,\\\"profit\\\":\\\"$11,000,455,520.88\\\",\\\"profitPercent\\\":\\\"8.80%\\\",\\\"shares\\\":9300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3871841315826732},{\\\"date\\\":\\\"6/28/2023, 1:27:21 PM\\\",\\\"symbol\\\":\\\"GPH\\\",\\\"price\\\":22183.699300782635,\\\"averagePurchasePrice\\\":18978.03104647081,\\\"profit\\\":\\\"$16,669,474,922.42\\\",\\\"profitPercent\\\":\\\"16.89%\\\",\\\"shares\\\":5200000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.38007823945277147},{\\\"date\\\":\\\"6/28/2023, 1:34:50 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":7989.422952422472,\\\"averagePurchasePrice\\\":6814.732697472995,\\\"profit\\\":\\\"$13,391,468,906.42\\\",\\\"profitPercent\\\":\\\"17.24%\\\",\\\"shares\\\":11400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4020658522242333},{\\\"date\\\":\\\"6/28/2023, 1:42:19 PM\\\",\\\"symbol\\\":\\\"ECP\\\",\\\"price\\\":53537.85255135415,\\\"averagePurchasePrice\\\":42180.28102831211,\\\"profit\\\":\\\"$273,717,473,705.31\\\",\\\"profitPercent\\\":\\\"26.93%\\\",\\\"shares\\\":24100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.337589526724565},{\\\"date\\\":\\\"6/28/2023, 1:42:19 PM\\\",\\\"symbol\\\":\\\"MGCP\\\",\\\"price\\\":56105.87023415056,\\\"averagePurchasePrice\\\":45301.8009291824,\\\"profit\\\":\\\"$176,106,329,670.98\\\",\\\"profitPercent\\\":\\\"23.85%\\\",\\\"shares\\\":16300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3245854183643819},{\\\"date\\\":\\\"6/28/2023, 1:42:19 PM\\\",\\\"symbol\\\":\\\"OMTK\\\",\\\"price\\\":27099.353177164736,\\\"averagePurchasePrice\\\":23302.91349284109,\\\"profit\\\":\\\"$39,862,616,685.40\\\",\\\"profitPercent\\\":\\\"16.29%\\\",\\\"shares\\\":10500000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3784639115530725},{\\\"date\\\":\\\"6/28/2023, 1:42:19 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":79615.47298337327,\\\"averagePurchasePrice\\\":75177.84743474175,\\\"profit\\\":\\\"$35,501,004,389.05\\\",\\\"profitPercent\\\":\\\"5.90%\\\",\\\"shares\\\":8000000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4069823058423148},{\\\"date\\\":\\\"6/28/2023, 1:42:19 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":19933.078690416594,\\\"averagePurchasePrice\\\":9612.97061059926,\\\"profit\\\":\\\"$62,952,659,286.89\\\",\\\"profitPercent\\\":\\\"107.36%\\\",\\\"shares\\\":6100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3213268038063525},{\\\"date\\\":\\\"6/28/2023, 1:49:48 PM\\\",\\\"symbol\\\":\\\"CLRK\\\",\\\"price\\\":17688.818300570838,\\\"averagePurchasePrice\\\":11657.434737244457,\\\"profit\\\":\\\"$86,851,923,311.90\\\",\\\"profitPercent\\\":\\\"51.74%\\\",\\\"shares\\\":14400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.37786188416494393},{\\\"date\\\":\\\"6/28/2023, 1:49:48 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":103471.1907257167,\\\"averagePurchasePrice\\\":83981.81952193534,\\\"profit\\\":\\\"$142,272,409,787.60\\\",\\\"profitPercent\\\":\\\"23.21%\\\",\\\"shares\\\":7300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3225644587235212},{\\\"date\\\":\\\"6/28/2023, 1:49:48 PM\\\",\\\"symbol\\\":\\\"GPH\\\",\\\"price\\\":20935.249189910333,\\\"averagePurchasePrice\\\":19344.778151983446,\\\"profit\\\":\\\"$8,270,449,397.22\\\",\\\"profitPercent\\\":\\\"8.22%\\\",\\\"shares\\\":5200000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3859776728575114},{\\\"date\\\":\\\"6/28/2023, 1:49:48 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":13263.107507131599,\\\"averagePurchasePrice\\\":13008.363379590202,\\\"profit\\\":\\\"$1,120,874,161.18\\\",\\\"profitPercent\\\":\\\"1.96%\\\",\\\"shares\\\":4400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3952902134407589},{\\\"date\\\":\\\"6/28/2023, 2:04:50 PM\\\",\\\"symbol\\\":\\\"UNV\\\",\\\"price\\\":15343.873004392923,\\\"averagePurchasePrice\\\":12835.41414066995,\\\"profit\\\":\\\"$23,328,667,432.62\\\",\\\"profitPercent\\\":\\\"19.54%\\\",\\\"shares\\\":9300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39354463389825584},{\\\"date\\\":\\\"6/28/2023, 2:04:50 PM\\\",\\\"symbol\\\":\\\"GPH\\\",\\\"price\\\":20825.09285109003,\\\"averagePurchasePrice\\\":21019.88483451429,\\\"profit\\\":\\\"-$1,012,918,313.81\\\",\\\"profitPercent\\\":\\\"-0.93%\\\",\\\"shares\\\":5200000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3889625634244816},{\\\"date\\\":\\\"6/28/2023, 2:04:50 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":17247.804162132474,\\\"averagePurchasePrice\\\":13454.549893504898,\\\"profit\\\":\\\"$23,138,851,038.63\\\",\\\"profitPercent\\\":\\\"28.19%\\\",\\\"shares\\\":6100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3571950382057315},{\\\"date\\\":\\\"6/28/2023, 2:04:50 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":13768.600148485199,\\\"averagePurchasePrice\\\":13153.618900391619,\\\"profit\\\":\\\"$2,705,917,491.61\\\",\\\"profitPercent\\\":\\\"4.68%\\\",\\\"shares\\\":4400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.392378714200339},{\\\"date\\\":\\\"6/28/2023, 2:12:19 PM\\\",\\\"symbol\\\":\\\"ECP\\\",\\\"price\\\":50501.90342950331,\\\"averagePurchasePrice\\\":49451.567747326386,\\\"profit\\\":\\\"$25,313,089,940.46\\\",\\\"profitPercent\\\":\\\"2.12%\\\",\\\"shares\\\":24100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.40785192042191887},{\\\"date\\\":\\\"6/28/2023, 2:12:19 PM\\\",\\\"symbol\\\":\\\"CLRK\\\",\\\"price\\\":15620.655368697328,\\\"averagePurchasePrice\\\":15429.281325852065,\\\"profit\\\":\\\"$2,755,786,216.97\\\",\\\"profitPercent\\\":\\\"1.24%\\\",\\\"shares\\\":14400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39539195931134785},{\\\"date\\\":\\\"6/28/2023, 2:12:19 PM\\\",\\\"symbol\\\":\\\"KGI\\\",\\\"price\\\":45608.19202275103,\\\"averagePurchasePrice\\\":35570.360713267015,\\\"profit\\\":\\\"$136,514,505,808.98\\\",\\\"profitPercent\\\":\\\"28.22%\\\",\\\"shares\\\":13600000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4103245897243828},{\\\"date\\\":\\\"6/28/2023, 2:12:19 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":8544.391764840422,\\\"averagePurchasePrice\\\":6881.7574463788105,\\\"profit\\\":\\\"$18,954,031,230.46\\\",\\\"profitPercent\\\":\\\"24.16%\\\",\\\"shares\\\":11400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3764385616813514},{\\\"date\\\":\\\"6/28/2023, 2:19:49 PM\\\",\\\"symbol\\\":\\\"MGCP\\\",\\\"price\\\":66914.49498488732,\\\"averagePurchasePrice\\\":55642.977153283995,\\\"profit\\\":\\\"$183,725,740,655.13\\\",\\\"profitPercent\\\":\\\"20.26%\\\",\\\"shares\\\":16300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.35289556280973694},{\\\"date\\\":\\\"6/28/2023, 2:19:49 PM\\\",\\\"symbol\\\":\\\"GPH\\\",\\\"price\\\":21218.609767449667,\\\"averagePurchasePrice\\\":20895.461085754094,\\\"profit\\\":\\\"$1,680,373,144.82\\\",\\\"profitPercent\\\":\\\"1.55%\\\",\\\"shares\\\":5200000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3969605052553935},{\\\"date\\\":\\\"6/28/2023, 2:27:19 PM\\\",\\\"symbol\\\":\\\"OMTK\\\",\\\"price\\\":23321.086130135453,\\\"averagePurchasePrice\\\":23004.198961261205,\\\"profit\\\":\\\"$3,327,315,273.18\\\",\\\"profitPercent\\\":\\\"1.38%\\\",\\\"shares\\\":10500000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.41025024016129236},{\\\"date\\\":\\\"6/28/2023, 2:27:19 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":143823.7446498392,\\\"averagePurchasePrice\\\":93701.42704123317,\\\"profit\\\":\\\"$365,892,918,542.82\\\",\\\"profitPercent\\\":\\\"53.49%\\\",\\\"shares\\\":7300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3090207706291752},{\\\"date\\\":\\\"6/28/2023, 2:27:19 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":13425.71478723347,\\\"averagePurchasePrice\\\":13209.61460431141,\\\"profit\\\":\\\"$950,840,804.86\\\",\\\"profitPercent\\\":\\\"1.64%\\\",\\\"shares\\\":4400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3857836628904107},{\\\"date\\\":\\\"6/28/2023, 2:34:51 PM\\\",\\\"symbol\\\":\\\"BLD\\\",\\\"price\\\":33895.72627024131,\\\"averagePurchasePrice\\\":30106.769924179134,\\\"profit\\\":\\\"$48,877,536,864.20\\\",\\\"profitPercent\\\":\\\"12.59%\\\",\\\"shares\\\":12900000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.41946230242303434},{\\\"date\\\":\\\"6/28/2023, 2:49:50 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":6930.473476421779,\\\"averagePurchasePrice\\\":7429.251884595357,\\\"profit\\\":\\\"-$3,042,548,289.86\\\",\\\"profitPercent\\\":\\\"-6.71%\\\",\\\"shares\\\":6100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.38744014948526845},{\\\"date\\\":\\\"6/28/2023, 2:49:50 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":13325.598314314751,\\\"averagePurchasePrice\\\":12764.578747512423,\\\"profit\\\":\\\"$2,468,486,093.93\\\",\\\"profitPercent\\\":\\\"4.40%\\\",\\\"shares\\\":4400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39019498266834485},{\\\"date\\\":\\\"6/28/2023, 2:57:18 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":10515.299805465409,\\\"averagePurchasePrice\\\":7121.5665014389015,\\\"profit\\\":\\\"$38,688,559,665.90\\\",\\\"profitPercent\\\":\\\"47.65%\\\",\\\"shares\\\":11400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3748831663342898},{\\\"date\\\":\\\"6/28/2023, 2:57:18 PM\\\",\\\"symbol\\\":\\\"GPH\\\",\\\"price\\\":18587.528232479024,\\\"averagePurchasePrice\\\":18995.305945729215,\\\"profit\\\":\\\"-$2,120,444,108.90\\\",\\\"profitPercent\\\":\\\"-2.15%\\\",\\\"shares\\\":5200000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4031298008932914},{\\\"date\\\":\\\"6/28/2023, 3:04:51 PM\\\",\\\"symbol\\\":\\\"MGCP\\\",\\\"price\\\":53409.1153415238,\\\"averagePurchasePrice\\\":50968.197317046135,\\\"profit\\\":\\\"$39,786,963,798.99\\\",\\\"profitPercent\\\":\\\"4.79%\\\",\\\"shares\\\":16300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.36930665560369186},{\\\"date\\\":\\\"6/28/2023, 3:04:51 PM\\\",\\\"symbol\\\":\\\"CLRK\\\",\\\"price\\\":18974.890764973075,\\\"averagePurchasePrice\\\":14057.302235309895,\\\"profit\\\":\\\"$70,813,274,827.15\\\",\\\"profitPercent\\\":\\\"34.98%\\\",\\\"shares\\\":14400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39325958990584226},{\\\"date\\\":\\\"6/28/2023, 3:19:48 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":289409.9855457119,\\\"averagePurchasePrice\\\":121997.74079692962,\\\"profit\\\":\\\"$1,222,109,386,666.11\\\",\\\"profitPercent\\\":\\\"137.23%\\\",\\\"shares\\\":7300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.2999410542144274},{\\\"date\\\":\\\"6/28/2023, 3:19:48 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":5738.910366773112,\\\"averagePurchasePrice\\\":3889.2549014181745,\\\"profit\\\":\\\"$11,282,898,338.67\\\",\\\"profitPercent\\\":\\\"47.56%\\\",\\\"shares\\\":6100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39164919117109465},{\\\"date\\\":\\\"6/28/2023, 3:27:19 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":12661.23774615798,\\\"averagePurchasePrice\\\":11201.22160499072,\\\"profit\\\":\\\"$16,644,184,009.31\\\",\\\"profitPercent\\\":\\\"13.03%\\\",\\\"shares\\\":11400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.37890322746269783},{\\\"date\\\":\\\"6/28/2023, 3:34:51 PM\\\",\\\"symbol\\\":\\\"MGCP\\\",\\\"price\\\":50111.912920566036,\\\"averagePurchasePrice\\\":48746.99950302383,\\\"profit\\\":\\\"$22,248,088,705.94\\\",\\\"profitPercent\\\":\\\"2.80%\\\",\\\"shares\\\":16300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39640155456374787},{\\\"date\\\":\\\"6/28/2023, 3:34:51 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":13858.503783892444,\\\"averagePurchasePrice\\\":11658.55222456959,\\\"profit\\\":\\\"$9,679,786,861.02\\\",\\\"profitPercent\\\":\\\"18.87%\\\",\\\"shares\\\":4400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3982973633044942},{\\\"date\\\":\\\"6/28/2023, 3:42:20 PM\\\",\\\"symbol\\\":\\\"CLRK\\\",\\\"price\\\":23535.89406322359,\\\"averagePurchasePrice\\\":19100.84814498378,\\\"profit\\\":\\\"$63,864,661,222.65\\\",\\\"profitPercent\\\":\\\"23.22%\\\",\\\"shares\\\":14400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.40336034149617817},{\\\"date\\\":\\\"6/28/2023, 3:42:20 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":111400.26623886335,\\\"averagePurchasePrice\\\":97011.4260009205,\\\"profit\\\":\\\"$115,110,721,903.54\\\",\\\"profitPercent\\\":\\\"14.83%\\\",\\\"shares\\\":8000000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3969990388888231},{\\\"date\\\":\\\"6/28/2023, 3:49:50 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":344668.1535190835,\\\"averagePurchasePrice\\\":247887.149969122,\\\"profit\\\":\\\"$706,501,325,914.72\\\",\\\"profitPercent\\\":\\\"39.04%\\\",\\\"shares\\\":7300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.33340626410968865},{\\\"date\\\":\\\"6/28/2023, 3:49:50 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":13501.77450318806,\\\"averagePurchasePrice\\\":11694.028393546609,\\\"profit\\\":\\\"$20,608,305,649.91\\\",\\\"profitPercent\\\":\\\"15.46%\\\",\\\"shares\\\":11400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.37023616857521474},{\\\"date\\\":\\\"6/28/2023, 3:49:50 PM\\\",\\\"symbol\\\":\\\"WDS\\\",\\\"price\\\":44284.837238186956,\\\"averagePurchasePrice\\\":23055.03493432382,\\\"profit\\\":\\\"$297,217,232,254.08\\\",\\\"profitPercent\\\":\\\"92.08%\\\",\\\"shares\\\":14000000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4263127063093555},{\\\"date\\\":\\\"6/28/2023, 3:57:19 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":4065.0078104423847,\\\"averagePurchasePrice\\\":3002.837307650531,\\\"profit\\\":\\\"$6,479,240,067.03\\\",\\\"profitPercent\\\":\\\"35.37%\\\",\\\"shares\\\":6100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3845848720036951},{\\\"date\\\":\\\"6/28/2023, 6:24:27 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":348938.723640895,\\\"averagePurchasePrice\\\":330701.93852287513,\\\"profit\\\":\\\"$133,128,531,361.54\\\",\\\"profitPercent\\\":\\\"5.51%\\\",\\\"shares\\\":7300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3450537885721833},{\\\"date\\\":\\\"6/28/2023, 6:24:27 PM\\\",\\\"symbol\\\":\\\"UNV\\\",\\\"price\\\":9826.16093569354,\\\"averagePurchasePrice\\\":9577.426879398536,\\\"profit\\\":\\\"$2,313,226,723.54\\\",\\\"profitPercent\\\":\\\"2.60%\\\",\\\"shares\\\":9300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4055777321475198},{\\\"date\\\":\\\"6/28/2023, 6:24:27 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":133143.79496901747,\\\"averagePurchasePrice\\\":98783.42749270731,\\\"profit\\\":\\\"$274,882,939,810.48\\\",\\\"profitPercent\\\":\\\"34.78%\\\",\\\"shares\\\":8000000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4059002718047289},{\\\"date\\\":\\\"6/28/2023, 6:29:36 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":10357.7114016148,\\\"averagePurchasePrice\\\":10103.614516290854,\\\"profit\\\":\\\"$2,896,704,492.69\\\",\\\"profitPercent\\\":\\\"2.51%\\\",\\\"shares\\\":11400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.36601504531769924},{\\\"date\\\":\\\"6/28/2023, 6:30:03 PM\\\",\\\"symbol\\\":\\\"ECP\\\",\\\"price\\\":48046.94136600738,\\\"averagePurchasePrice\\\":48094.94162752077,\\\"profit\\\":\\\"-$1,156,806,302.47\\\",\\\"profitPercent\\\":\\\"-0.10%\\\",\\\"shares\\\":24100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.5687879698673739},{\\\"date\\\":\\\"6/28/2023, 6:30:03 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":299029.2419213854,\\\"averagePurchasePrice\\\":308505.293557092,\\\"profit\\\":\\\"-$69,175,176,940.66\\\",\\\"profitPercent\\\":\\\"-3.07%\\\",\\\"shares\\\":7300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.6457378423782418},{\\\"date\\\":\\\"6/28/2023, 6:30:03 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":4173.75014470298,\\\"averagePurchasePrice\\\":3078.653595695491,\\\"profit\\\":\\\"$6,680,088,948.95\\\",\\\"profitPercent\\\":\\\"35.57%\\\",\\\"shares\\\":6100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.6121635574161797},{\\\"date\\\":\\\"6/28/2023, 6:30:03 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":11390.231022663984,\\\"averagePurchasePrice\\\":11202.572764019234,\\\"profit\\\":\\\"$825,696,338.04\\\",\\\"profitPercent\\\":\\\"1.68%\\\",\\\"shares\\\":4400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.6147024206785245},{\\\"date\\\":\\\"6/28/2023, 6:45:02 PM\\\",\\\"symbol\\\":\\\"MGCP\\\",\\\"price\\\":48345.04812910435,\\\"averagePurchasePrice\\\":47954.35378027462,\\\"profit\\\":\\\"$6,368,317,885.92\\\",\\\"profitPercent\\\":\\\"0.81%\\\",\\\"shares\\\":16300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.41305228639671343},{\\\"date\\\":\\\"6/28/2023, 6:45:02 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":412766.95003959397,\\\"averagePurchasePrice\\\":392345.8197015751,\\\"profit\\\":\\\"$149,074,251,467.54\\\",\\\"profitPercent\\\":\\\"5.20%\\\",\\\"shares\\\":7300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.35766046164664983},{\\\"date\\\":\\\"6/28/2023, 6:50:11 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":13767.972434051759,\\\"averagePurchasePrice\\\":12714.339577645984,\\\"profit\\\":\\\"$4,635,984,568.19\\\",\\\"profitPercent\\\":\\\"8.29%\\\",\\\"shares\\\":4400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3855858066836207},{\\\"date\\\":\\\"6/28/2023, 6:55:21 PM\\\",\\\"symbol\\\":\\\"OMTK\\\",\\\"price\\\":37005.71461408643,\\\"averagePurchasePrice\\\":32351.01467991086,\\\"profit\\\":\\\"$48,874,349,308.84\\\",\\\"profitPercent\\\":\\\"14.39%\\\",\\\"shares\\\":10500000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.42178293254008553},{\\\"date\\\":\\\"6/28/2023, 6:55:21 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":15475.757178334668,\\\"averagePurchasePrice\\\":8906.414819530411,\\\"profit\\\":\\\"$74,890,502,890.37\\\",\\\"profitPercent\\\":\\\"73.76%\\\",\\\"shares\\\":11400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3391936006940566},{\\\"date\\\":\\\"6/28/2023, 6:55:21 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":94137.11267002537,\\\"averagePurchasePrice\\\":101600.63007182308,\\\"profit\\\":\\\"-$59,708,139,214.38\\\",\\\"profitPercent\\\":\\\"-7.35%\\\",\\\"shares\\\":8000000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39648375131587016},{\\\"date\\\":\\\"6/28/2023, 6:55:21 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":2873.3957637495987,\\\"averagePurchasePrice\\\":2570.915446204876,\\\"profit\\\":\\\"$1,845,129,937.02\\\",\\\"profitPercent\\\":\\\"11.77%\\\",\\\"shares\\\":6100000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.37244261380449606},{\\\"date\\\":\\\"6/28/2023, 6:55:21 PM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":3553.282982336558,\\\"averagePurchasePrice\\\":3043.948441117922,\\\"profit\\\":\\\"$7,538,151,210.04\\\",\\\"profitPercent\\\":\\\"16.73%\\\",\\\"shares\\\":14800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4071433554231055},{\\\"date\\\":\\\"6/28/2023, 7:00:29 PM\\\",\\\"symbol\\\":\\\"BLD\\\",\\\"price\\\":34176.92025939799,\\\"averagePurchasePrice\\\":30257.138830901917,\\\"profit\\\":\\\"$50,565,180,427.60\\\",\\\"profitPercent\\\":\\\"12.95%\\\",\\\"shares\\\":12900000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.41421988902145435},{\\\"date\\\":\\\"6/28/2023, 7:00:29 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":368612.25204381545,\\\"averagePurchasePrice\\\":323821.4691554007,\\\"profit\\\":\\\"$326,972,715,085.43\\\",\\\"profitPercent\\\":\\\"13.83%\\\",\\\"shares\\\":7300000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3554965874657402},{\\\"date\\\":\\\"6/28/2023, 7:00:29 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":14320.65201519011,\\\"averagePurchasePrice\\\":13417.363923567318,\\\"profit\\\":\\\"$3,974,467,603.14\\\",\\\"profitPercent\\\":\\\"6.73%\\\",\\\"shares\\\":4400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3849643492255532}]\"}}],[\"data/enviroment.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/enviroment.txt\",\"text\":\"[{\\\"name\\\":\\\"n00dles\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"n00dles\\\",\\\"ip\\\":\\\"55.4.8.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":4,\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":2.584,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000}},{\\\"name\\\":\\\"foodnstuff\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"foodnstuff\\\",\\\"ip\\\":\\\"90.7.2.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":50000000,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5}},{\\\"name\\\":\\\"sigma-cosmetics\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"ip\\\":\\\"63.1.0.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.096,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10}},{\\\"name\\\":\\\"joesguns\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"joesguns\\\",\\\"ip\\\":\\\"83.7.7.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"hong-fang-tea\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"ip\\\":\\\"84.4.8.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":18.802,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":75000000,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"harakiri-sushi\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"ip\\\":\\\"43.0.1.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":12.568,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40}},{\\\"name\\\":\\\"iron-gym\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"iron-gym\\\",\\\"ip\\\":\\\"23.6.6.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":28.828,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"darkweb\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"darkweb\\\",\\\"ip\\\":\\\"8.9.9.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"darkweb\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"70.3.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"6.9.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"84.9.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"14.3.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"16.7.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"88.8.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"89.5.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"16.0.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"16.3.5.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"0.3.5.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"22.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"72.5.5.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"56.2.9.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"12.7.3.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"74.4.6.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"94.0.6.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"10.5.0.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"43.2.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"19.2.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"62.6.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"29.3.0.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"12.2.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"26.4.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"38.0.1.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"69.8.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":1048576,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CSEC\\\",\\\"lineage\\\":[\\\"iron-gym\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"CSEC\\\",\\\"ip\\\":\\\"36.2.3.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":8,\\\"organizationName\\\":\\\"CyberSec\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":58,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"silver-helix\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"silver-helix\\\",\\\"ip\\\":\\\"89.5.5.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"the-hub\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"silver-helix\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"the-hub\\\",\\\"ip\\\":\\\"95.8.7.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":8,\\\"organizationName\\\":\\\"The Hub\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":44,\\\"hackDifficulty\\\":28.666,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":4067377975,\\\"moneyMax\\\":4067377975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":310,\\\"serverGrowth\\\":50}},{\\\"name\\\":\\\"zer0\\\",\\\"lineage\\\":[\\\"foodnstuff\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zer0\\\",\\\"ip\\\":\\\"94.5.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":8,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40}},{\\\"name\\\":\\\"omega-net\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omega-net\\\",\\\"ip\\\":\\\"88.3.8.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Omega Software\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":31,\\\"hackDifficulty\\\":10.114,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":1694716800,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":34}},{\\\"name\\\":\\\"netlink\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"netlink\\\",\\\"ip\\\":\\\"76.7.5.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":69,\\\"hackDifficulty\\\":44.4,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":6875000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":419,\\\"serverGrowth\\\":49}},{\\\"name\\\":\\\"crush-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"crush-fitness\\\",\\\"ip\\\":\\\"54.9.0.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":30.796,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1362675750,\\\"moneyMax\\\":1362675750,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"avmnite-02h\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"ip\\\":\\\"31.8.6.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"NiteSec\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":217,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"syscore\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"avmnite-02h\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"syscore\\\",\\\"ip\\\":\\\"67.2.7.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":24.17,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":13568499650,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":614,\\\"serverGrowth\\\":66}},{\\\"name\\\":\\\"rothman-uni\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"rothman-uni\\\",\\\"ip\\\":\\\"68.3.4.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Rothman University\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16.134,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":4485803725,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":401,\\\"serverGrowth\\\":39}},{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"91.6.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":110.25,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":39.62,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":27239005425,\\\"moneyMax\\\":27239005425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":759,\\\"serverGrowth\\\":79}},{\\\"name\\\":\\\"rho-construction\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"rho-construction\\\",\\\"ip\\\":\\\"81.3.6.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":26.188000000000002,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":15482964150,\\\"moneyMax\\\":15482964150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":498,\\\"serverGrowth\\\":58}},{\\\"name\\\":\\\"aevum-police\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"aevum-police\\\",\\\"ip\\\":\\\"63.0.4.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":25.154,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":8077477925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":430,\\\"serverGrowth\\\":38}},{\\\"name\\\":\\\"global-pharm\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"global-pharm\\\",\\\"ip\\\":\\\"84.8.7.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":44.629999999999995,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":38138032075,\\\"moneyMax\\\":38138032075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":762,\\\"serverGrowth\\\":88}},{\\\"name\\\":\\\"omnia\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omnia\\\",\\\"ip\\\":\\\"81.4.2.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":31.222,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":23830212175,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":857,\\\"serverGrowth\\\":68}},{\\\"name\\\":\\\"defcomm\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"defcomm\\\",\\\"ip\\\":\\\"5.4.1.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"DefComm\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":62.104,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":21651736550,\\\"moneyMax\\\":21651736550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":916,\\\"serverGrowth\\\":48}},{\\\"name\\\":\\\"univ-energy\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"univ-energy\\\",\\\"ip\\\":\\\"62.6.0.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":44.19,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":28320749950,\\\"moneyMax\\\":28320749950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":846,\\\"serverGrowth\\\":89}},{\\\"name\\\":\\\"solaris\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"solaris\\\",\\\"ip\\\":\\\"52.8.1.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":79,\\\"hackDifficulty\\\":26.196,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":21452570575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"infocomm\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"infocomm\\\",\\\"ip\\\":\\\"24.8.6.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"InfoComm\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":24.216,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16088536100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":945,\\\"serverGrowth\\\":40}},{\\\"name\\\":\\\"taiyang-digital\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"ip\\\":\\\"43.3.2.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":24.202,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":21681395275,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":79}},{\\\"name\\\":\\\"zb-def\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-def\\\",\\\"ip\\\":\\\"92.6.7.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":37.296,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":26412851375,\\\"moneyMax\\\":26412851375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":66}},{\\\"name\\\":\\\"applied-energetics\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"zb-def\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"applied-energetics\\\",\\\"ip\\\":\\\"64.2.2.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":37.995999999999995,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":23580959425,\\\"moneyMax\\\":23580959425,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":798,\\\"serverGrowth\\\":70}},{\\\"name\\\":\\\"microdyne\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"taiyang-digital\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"microdyne\\\",\\\"ip\\\":\\\"54.5.4.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":38.251999999999995,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":14907271200,\\\"moneyMax\\\":14907271200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":84}},{\\\"name\\\":\\\"run4theh111z\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"taiyang-digital\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"run4theh111z\\\",\\\"ip\\\":\\\"85.8.8.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"The Runners\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":522,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"fulcrumtech\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"ip\\\":\\\"21.9.0.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":911.15,\\\"maxRam\\\":1024,\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":32.314,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":35575964800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1231,\\\"serverGrowth\\\":83}},{\\\"name\\\":\\\"4sigma\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"fulcrumtech\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"4sigma\\\",\\\"ip\\\":\\\"74.7.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":32.978,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":391328933750,\\\"moneyMax\\\":391328933750,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1109,\\\"serverGrowth\\\":83}},{\\\"name\\\":\\\"b-and-a\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"fulcrumtech\\\",\\\"4sigma\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"b-and-a\\\",\\\"ip\\\":\\\"26.9.7.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":25,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":568493601225,\\\"moneyMax\\\":568493601225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1006,\\\"serverGrowth\\\":65}},{\\\"name\\\":\\\"clarkinc\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"fulcrumtech\\\",\\\"4sigma\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"clarkinc\\\",\\\"ip\\\":\\\"37.3.8.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":38.024,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":541964841325,\\\"moneyMax\\\":541964841325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1190,\\\"serverGrowth\\\":66}},{\\\"name\\\":\\\"megacorp\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"fulcrumtech\\\",\\\"4sigma\\\",\\\"clarkinc\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"megacorp\\\",\\\"ip\\\":\\\"40.7.1.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":58.182,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":8354999950,\\\"moneyMax\\\":1342939870650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1298,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"titan-labs\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"titan-labs\\\",\\\"ip\\\":\\\"60.5.8.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":42.172,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":20419319225,\\\"moneyMax\\\":20419319225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":66}},{\\\"name\\\":\\\"stormtech\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"stormtech\\\",\\\"ip\\\":\\\"22.1.3.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":42.166,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":29138851425,\\\"moneyMax\\\":29138851425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":908,\\\"serverGrowth\\\":83}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"39.3.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":110.25,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":32.216,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":16179534900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"vitalife\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"vitalife\\\",\\\"ip\\\":\\\"42.1.9.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"VitaLife\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":43.846000000000004,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":18565963950,\\\"moneyMax\\\":18565963950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":834,\\\"serverGrowth\\\":80}},{\\\"name\\\":\\\"kuai-gong\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"vitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"kuai-gong\\\",\\\"ip\\\":\\\"71.5.2.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":32,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":585459194900,\\\"moneyMax\\\":585459194900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1158,\\\"serverGrowth\\\":90}},{\\\"name\\\":\\\".\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"vitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\".\\\",\\\"ip\\\":\\\"0.6.0.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\".\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":547,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"nwo\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"vitalife\\\",\\\".\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nwo\\\",\\\"ip\\\":\\\"77.0.5.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"NWO\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":33,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":537001962075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1211,\\\"serverGrowth\\\":84}},{\\\"name\\\":\\\"fulcrumassets\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"vitalife\\\",\\\".\\\",\\\"nwo\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"ip\\\":\\\"60.7.0.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":100,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":25000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1156,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"The-Cave\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"vitalife\\\",\\\".\\\",\\\"nwo\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"The-Cave\\\",\\\"ip\\\":\\\"80.3.2.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Helios\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"blade\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"vitalife\\\",\\\"kuai-gong\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"blade\\\",\\\"ip\\\":\\\"69.5.7.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":354.65,\\\"maxRam\\\":512,\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":58.70200000000001,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":969165395650,\\\"moneyMax\\\":969165395650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":973,\\\"serverGrowth\\\":64}},{\\\"name\\\":\\\"ecorp\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"vitalife\\\",\\\"kuai-gong\\\",\\\"blade\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"ecorp\\\",\\\"ip\\\":\\\"87.3.8.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"ECorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":92.46800000000002,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1208807709250,\\\"moneyMax\\\":1208807709250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1113,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"omnitek\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"helios\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omnitek\\\",\\\"ip\\\":\\\"85.5.4.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":220.5,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":51.215999999999994,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":381088884100,\\\"moneyMax\\\":381088884100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1036,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"powerhouse-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"rho-construction\\\",\\\"global-pharm\\\",\\\"omnia\\\",\\\"univ-energy\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"helios\\\",\\\"omnitek\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"ip\\\":\\\"87.3.0.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":19.21,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":987,\\\"serverGrowth\\\":59}},{\\\"name\\\":\\\"catalyst\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"catalyst\\\",\\\"ip\\\":\\\"42.4.2.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":39.727999999999994,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":7532577800,\\\"moneyMax\\\":7532577800,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":52}},{\\\"name\\\":\\\"alpha-ent\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"alpha-ent\\\",\\\"ip\\\":\\\"18.2.1.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":36.75,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":42.07,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":16672443200,\\\"moneyMax\\\":16672443200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":59}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"44.5.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":73.5,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15.14,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":481,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"galactic-cyber\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\",\\\"millenium-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"ip\\\":\\\"16.8.4.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":32.18,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":20958659050,\\\"moneyMax\\\":20958659050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":828,\\\"serverGrowth\\\":74}},{\\\"name\\\":\\\"aerocorp\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\",\\\"millenium-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"aerocorp\\\",\\\"ip\\\":\\\"35.3.3.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":29.224,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":26082461025,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":915,\\\"serverGrowth\\\":60}},{\\\"name\\\":\\\"snap-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\",\\\"millenium-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"snap-fitness\\\",\\\"ip\\\":\\\"19.8.5.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":38.684,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":11250000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":701,\\\"serverGrowth\\\":46}},{\\\"name\\\":\\\"unitalife\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\",\\\"millenium-fitness\\\",\\\"snap-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"unitalife\\\",\\\"ip\\\":\\\"84.7.3.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":79,\\\"hackDifficulty\\\":26,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":26964987700,\\\"moneyMax\\\":26964987700,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":812,\\\"serverGrowth\\\":74}},{\\\"name\\\":\\\"zeus-med\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\",\\\"millenium-fitness\\\",\\\"snap-fitness\\\",\\\"unitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zeus-med\\\",\\\"ip\\\":\\\"67.9.8.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":29.208,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":32746813200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":809,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"nova-med\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\",\\\"millenium-fitness\\\",\\\"snap-fitness\\\",\\\"unitalife\\\",\\\"zeus-med\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nova-med\\\",\\\"ip\\\":\\\"33.6.8.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":79,\\\"hackDifficulty\\\":43.272000000000006,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":27884055200,\\\"moneyMax\\\":27884055200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":847,\\\"serverGrowth\\\":77}},{\\\"name\\\":\\\"deltaone\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\",\\\"millenium-fitness\\\",\\\"aerocorp\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"deltaone\\\",\\\"ip\\\":\\\"34.5.8.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":28.204,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":34805092800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":812,\\\"serverGrowth\\\":52}},{\\\"name\\\":\\\"icarus\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"zer0\\\",\\\"omega-net\\\",\\\"netlink\\\",\\\"catalyst\\\",\\\"millenium-fitness\\\",\\\"aerocorp\\\",\\\"deltaone\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"icarus\\\",\\\"ip\\\":\\\"46.7.9.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":30.22,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":23999099175,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":874,\\\"serverGrowth\\\":86}}]\"}}],[\"data/batchQueue.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/batchQueue.txt\",\"text\":\"[[\\\"megacorp\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-06-28T19:57:50.672Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-06-28T19:42:34.195Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-06-28T20:01:50.539Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.374,\\\"securityWeNeedToReduceAfterFullGrowth\\\":26.728,\\\"originalNumberOfThreadsForFullMoney\\\":187,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":317.9,\\\"endAfter\\\":\\\"2023-06-29T00:03:42.120Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:03:57.120Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":9942},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:03:57.121Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:12.121Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:04:12.122Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:27.122Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:04:27.123Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:42.123Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-28T23:59:53.776Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":317.9,\\\"endAfter\\\":\\\"2023-06-29T00:04:42.124Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:57.124Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10199},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:04:57.125Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:12.125Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:05:12.126Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:27.126Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:05:27.127Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:42.127Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:00:53.940Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":317.9,\\\"endAfter\\\":\\\"2023-06-29T00:05:42.128Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:57.128Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10463},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:05:57.129Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:12.129Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:12.130Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:27.130Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:27.131Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:42.131Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:01:54.155Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":317.9,\\\"endAfter\\\":\\\"2023-06-29T00:06:42.132Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:57.132Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10735},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:57.133Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:12.133Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:12.134Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:27.134Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:27.135Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:42.135Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:02:54.382Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":317.9,\\\"endAfter\\\":\\\"2023-06-29T00:07:42.136Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:57.136Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"blade\\\",\\\"pid\\\":11001},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:57.137Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:12.137Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:12.138Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:27.138Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:27.139Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:42.139Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:03:54.503Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:42.140Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:57.140Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:57.141Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:12.141Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:12.142Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:27.142Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:27.143Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:42.143Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}]}]}],[\\\"ecorp\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-06-28T20:10:09.753Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-06-28T19:57:08.679Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-06-28T19:42:23.626Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.304,\\\"securityWeNeedToReduceAfterFullGrowth\\\":26.588,\\\"originalNumberOfThreadsForFullMoney\\\":152,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:56.210Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:26.210Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:10:26.211Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:56.211Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"global-pharm\\\",\\\"pid\\\":7268},{\\\"executing\\\":true,\\\"ramCost\\\":30910.25,\\\"endAfter\\\":\\\"2023-06-29T00:10:56.212Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:11:26.212Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":8469},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:11:26.213Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:11:56.213Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":7530}],\\\"startTime\\\":\\\"2023-06-28T23:49:29.205Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:11:56.214Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:12:26.214Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:12:26.215Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:12:56.215Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"millenium-fitness\\\",\\\"pid\\\":7786},{\\\"executing\\\":true,\\\"ramCost\\\":30910.25,\\\"endAfter\\\":\\\"2023-06-29T00:12:56.216Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:13:26.216Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9002},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:13:26.217Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:13:56.217Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":8048}],\\\"startTime\\\":\\\"2023-06-28T23:51:30.195Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:13:56.218Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:14:26.218Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:14:26.219Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:14:56.219Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"zb-institute\\\",\\\"pid\\\":8299},{\\\"executing\\\":true,\\\"ramCost\\\":30910.25,\\\"endAfter\\\":\\\"2023-06-29T00:14:56.220Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:15:26.220Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9521},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:15:26.221Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:15:56.221Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":8553}],\\\"startTime\\\":\\\"2023-06-28T23:53:30.960Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:15:56.222Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:16:26.222Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:16:26.223Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:16:56.223Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":8816},{\\\"executing\\\":true,\\\"ramCost\\\":30910.25,\\\"endAfter\\\":\\\"2023-06-29T00:16:56.224Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:17:26.224Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10032},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:17:26.225Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:17:56.225Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9076}],\\\"startTime\\\":\\\"2023-06-28T23:55:31.584Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:17:56.226Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:18:26.226Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:18:26.227Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:18:56.227Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":9336},{\\\"executing\\\":true,\\\"ramCost\\\":30910.25,\\\"endAfter\\\":\\\"2023-06-29T00:18:56.228Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:19:26.228Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10556},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:19:26.229Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:19:56.229Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9596}],\\\"startTime\\\":\\\"2023-06-28T23:57:32.189Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:19:56.230Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:20:11.230Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:20:11.231Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:20:26.231Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"titan-labs\\\",\\\"pid\\\":9787},{\\\"executing\\\":true,\\\"ramCost\\\":30910.25,\\\"endAfter\\\":\\\"2023-06-29T00:20:26.232Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:20:41.232Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10954},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:20:41.233Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:20:56.233Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9916}],\\\"startTime\\\":\\\"2023-06-28T23:59:17.715Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:20:56.234Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:21:11.234Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:21:11.235Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:21:26.235Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"alpha-ent\\\",\\\"pid\\\":10046},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:21:26.236Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:21:41.236Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:21:41.237Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:21:56.237Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10172}],\\\"startTime\\\":\\\"2023-06-29T00:00:17.832Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:21:56.238Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:22:11.238Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:22:11.239Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:22:26.239Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"rothman-uni\\\",\\\"pid\\\":10305},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:22:26.240Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:22:41.240Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:22:41.241Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:22:56.241Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10437}],\\\"startTime\\\":\\\"2023-06-29T00:01:17.992Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:22:56.242Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:23:11.242Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:23:11.243Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:23:26.243Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"helios\\\",\\\"pid\\\":10569},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:23:26.244Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:23:41.244Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:23:41.245Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:23:56.245Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10708}],\\\"startTime\\\":\\\"2023-06-29T00:02:18.285Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:23:56.246Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:24:11.246Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:24:11.247Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:24:26.247Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":10841},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:24:26.248Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:24:41.248Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":946.75,\\\"endAfter\\\":\\\"2023-06-29T00:24:41.249Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:24:56.249Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10973}],\\\"startTime\\\":\\\"2023-06-29T00:03:18.435Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:24:56.250Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:25:11.250Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:25:11.251Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:25:26.251Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":11105},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:25:26.252Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:25:41.252Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:25:41.253Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:25:56.253Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:04:18.562Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:25:56.254Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:26:11.254Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:26:11.255Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:26:26.255Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:26:26.256Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:26:41.256Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:26:41.257Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:26:56.257Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}]}]}],[\\\"blade\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-06-28T19:54:48.967Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-06-28T19:41:33.200Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-06-28T19:28:50.457Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.262,\\\"securityWeNeedToReduceAfterFullGrowth\\\":38.636,\\\"originalNumberOfThreadsForFullMoney\\\":131,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":362.09999999999997,\\\"endAfter\\\":\\\"2023-06-29T00:03:36.859Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:06.859Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":10131},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:04:06.860Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:36.860Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"millenium-fitness\\\",\\\"pid\\\":9401},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:04:36.861Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:06.861Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:05:06.862Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:36.862Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-28T23:57:47.225Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":353.59999999999997,\\\"endAfter\\\":\\\"2023-06-29T00:05:36.863Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:51.863Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10677},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:05:51.864Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:06.864Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:06.865Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:21.865Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:21.866Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:36.866Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:02:42.368Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":353.59999999999997,\\\"endAfter\\\":\\\"2023-06-29T00:06:36.867Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:51.867Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":10943},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:51.868Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:06.868Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:06.869Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:21.869Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:21.870Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:36.870Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:03:42.486Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:36.871Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:51.871Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:51.872Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:06.872Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:06.873Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:21.873Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:21.874Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:36.874Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}]}]}],[\\\"kuai-gong\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-06-28T20:11:15.542Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-06-28T19:57:51.112Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-06-28T19:42:54.895Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.316,\\\"securityWeNeedToReduceAfterFullGrowth\\\":27.244,\\\"originalNumberOfThreadsForFullMoney\\\":158,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":268.59999999999997,\\\"endAfter\\\":\\\"2023-06-29T00:02:31.300Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:03:01.300Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10132},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:03:01.301Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:03:31.301Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"rho-construction\\\",\\\"pid\\\":7168},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:03:31.302Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:01.302Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":981.75,\\\"endAfter\\\":\\\"2023-06-29T00:04:01.303Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:31.303Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":7376}],\\\"startTime\\\":\\\"2023-06-28T23:49:05.172Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":358.7,\\\"endAfter\\\":\\\"2023-06-29T00:04:31.304Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:01.304Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10394},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:05:01.305Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:31.305Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":11919.25,\\\"endAfter\\\":\\\"2023-06-29T00:05:31.306Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:01.306Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9837},{\\\"executing\\\":true,\\\"ramCost\\\":981.75,\\\"endAfter\\\":\\\"2023-06-29T00:06:01.307Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:31.307Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9597}],\\\"startTime\\\":\\\"2023-06-28T23:58:32.563Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:31.308Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:46.308Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:06:46.309Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:01.309Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"zb-institute\\\",\\\"pid\\\":9775},{\\\"executing\\\":true,\\\"ramCost\\\":12022.5,\\\"endAfter\\\":\\\"2023-06-29T00:07:01.310Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:16.310Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10211},{\\\"executing\\\":true,\\\"ramCost\\\":981.75,\\\"endAfter\\\":\\\"2023-06-29T00:07:16.311Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:31.311Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9901}],\\\"startTime\\\":\\\"2023-06-28T23:59:14.712Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:31.312Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:46.312Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:07:46.313Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:01.313Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"zb-institute\\\",\\\"pid\\\":10033},{\\\"executing\\\":true,\\\"ramCost\\\":11919.25,\\\"endAfter\\\":\\\"2023-06-29T00:08:01.314Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:16.314Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10520},{\\\"executing\\\":true,\\\"ramCost\\\":981.75,\\\"endAfter\\\":\\\"2023-06-29T00:08:16.315Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:31.315Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10133}],\\\"startTime\\\":\\\"2023-06-29T00:00:14.841Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:31.316Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:46.316Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:08:46.317Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:01.317Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"helios\\\",\\\"pid\\\":10293},{\\\"executing\\\":true,\\\"ramCost\\\":11919.25,\\\"endAfter\\\":\\\"2023-06-29T00:09:01.318Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:16.318Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10761},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:16.319Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:31.319Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:01:14.987Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:31.320Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:46.320Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:09:46.321Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:01.321Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"helios\\\",\\\"pid\\\":10557},{\\\"executing\\\":true,\\\"ramCost\\\":11919.25,\\\"endAfter\\\":\\\"2023-06-29T00:10:01.322Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:16.322Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11028},{\\\"executing\\\":true,\\\"ramCost\\\":981.75,\\\"endAfter\\\":\\\"2023-06-29T00:10:16.323Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:31.323Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10691}],\\\"startTime\\\":\\\"2023-06-29T00:02:15.314Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:10:31.324Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:46.324Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:10:46.325Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:11:01.325Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"rho-construction\\\",\\\"pid\\\":10827},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:11:01.326Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:11:16.326Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":981.75,\\\"endAfter\\\":\\\"2023-06-29T00:11:16.327Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:11:31.327Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10955}],\\\"startTime\\\":\\\"2023-06-29T00:03:15.430Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:11:31.328Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:11:46.328Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:11:46.329Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:12:01.329Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":11090},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:12:01.330Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:12:16.330Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:12:16.331Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:12:31.331Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:04:15.550Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:12:31.332Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:12:46.332Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:12:46.333Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:13:01.333Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:13:01.334Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:13:16.334Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:13:16.335Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:13:31.335Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}]}]}],[\\\"b-and-a\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-06-28T20:45:10.369Z\\\",\\\"successfulWeakening\\\":false,\\\"growDoneAfter\\\":\\\"2023-06-28T20:34:54.189Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-06-28T20:24:51.087Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.23800000000000002,\\\"securityWeNeedToReduceAfterFullGrowth\\\":29.312,\\\"originalNumberOfThreadsForFullMoney\\\":119,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":202.29999999999998,\\\"endAfter\\\":\\\"2023-06-29T00:02:22.381Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:02:52.381Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"blade\\\",\\\"pid\\\":10253},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:02:52.382Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:03:22.382Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"silver-helix\\\",\\\"pid\\\":9444},{\\\"executing\\\":true,\\\"ramCost\\\":23611,\\\"endAfter\\\":\\\"2023-06-29T00:03:22.383Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:03:52.383Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":8832},{\\\"executing\\\":true,\\\"ramCost\\\":1051.75,\\\"endAfter\\\":\\\"2023-06-29T00:03:52.384Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:22.384Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9636}],\\\"startTime\\\":\\\"2023-06-28T23:55:34.588Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":202.29999999999998,\\\"endAfter\\\":\\\"2023-06-29T00:04:22.385Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:52.385Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":10787},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:04:52.386Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:22.386Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"avmnite-02h\\\",\\\"pid\\\":9957},{\\\"executing\\\":true,\\\"ramCost\\\":23611,\\\"endAfter\\\":\\\"2023-06-29T00:05:22.387Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:52.387Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9353},{\\\"executing\\\":true,\\\"ramCost\\\":1051.75,\\\"endAfter\\\":\\\"2023-06-29T00:05:52.388Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:22.388Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10146}],\\\"startTime\\\":\\\"2023-06-28T23:57:35.227Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:22.389Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:37.389Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:37.390Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:52.390Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":12934.25,\\\"endAfter\\\":\\\"2023-06-29T00:06:52.391Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:07.391Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10692},{\\\"executing\\\":true,\\\"ramCost\\\":1051.75,\\\"endAfter\\\":\\\"2023-06-29T00:07:07.392Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:22.392Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10487}],\\\"startTime\\\":\\\"2023-06-29T00:02:00.188Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:22.393Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:37.393Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:07:37.394Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:52.394Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":10613},{\\\"executing\\\":true,\\\"ramCost\\\":12824,\\\"endAfter\\\":\\\"2023-06-29T00:07:52.395Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:07.395Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11002},{\\\"executing\\\":true,\\\"ramCost\\\":1051.75,\\\"endAfter\\\":\\\"2023-06-29T00:08:07.396Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:22.396Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10748}],\\\"startTime\\\":\\\"2023-06-29T00:02:27.331Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:22.397Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:37.397Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:37.398Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:52.398Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:52.399Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:07.399Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":1051.75,\\\"endAfter\\\":\\\"2023-06-29T00:09:07.400Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:22.400Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11029}],\\\"startTime\\\":\\\"2023-06-29T00:04:00.561Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:22.401Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:37.401Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:37.402Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:52.402Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:52.403Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:07.403Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:10:07.404Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:22.404Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}]}]}],[\\\"clarkinc\\\",{\\\"targetMachineSaturatedWithAttacks\\\":true,\\\"prepStage\\\":false,\\\"weakeningDoneAfter\\\":\\\"2023-06-28T23:30:12.466Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-06-28T20:54:37.951Z\\\",\\\"successfulGrowing\\\":true,\\\"hackDoneAfter\\\":\\\"2023-06-28T23:33:13.033Z\\\",\\\"successfulHacking\\\":false,\\\"securityWeNeedToReduceAfterFullHack\\\":0.26,\\\"securityWeNeedToReduceAfterFullGrowth\\\":23.328,\\\"originalNumberOfThreadsForFullMoney\\\":130,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":221,\\\"endAfter\\\":\\\"2023-06-29T00:02:49.534Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:03:19.534Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10395},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:03:19.535Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:03:49.535Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":9585},{\\\"executing\\\":true,\\\"ramCost\\\":10206,\\\"endAfter\\\":\\\"2023-06-29T00:03:49.536Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:19.536Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10070},{\\\"executing\\\":true,\\\"ramCost\\\":841.75,\\\"endAfter\\\":\\\"2023-06-29T00:04:19.537Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:04:49.537Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9825}],\\\"startTime\\\":\\\"2023-06-28T23:58:29.512Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":221,\\\"endAfter\\\":\\\"2023-06-29T00:04:49.538Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:04.538Z\\\",\\\"type\\\":\\\"hack\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10929},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:05:04.539Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:19.539Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":10071},{\\\"executing\\\":true,\\\"ramCost\\\":10206,\\\"endAfter\\\":\\\"2023-06-29T00:05:19.540Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:34.540Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10342},{\\\"executing\\\":true,\\\"ramCost\\\":841.75,\\\"endAfter\\\":\\\"2023-06-29T00:05:34.541Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:05:49.541Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10158}],\\\"startTime\\\":\\\"2023-06-29T00:00:23.891Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:05:49.542Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:04.542Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:06:04.543Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:19.543Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"millenium-fitness\\\",\\\"pid\\\":10268},{\\\"executing\\\":true,\\\"ramCost\\\":10206,\\\"endAfter\\\":\\\"2023-06-29T00:06:19.544Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:34.544Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10614},{\\\"executing\\\":true,\\\"ramCost\\\":841.75,\\\"endAfter\\\":\\\"2023-06-29T00:06:34.545Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:06:49.545Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10420}],\\\"startTime\\\":\\\"2023-06-29T00:01:08.972Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:06:49.546Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:04.546Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:07:04.547Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:19.547Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"omnitek\\\",\\\"pid\\\":10597},{\\\"executing\\\":true,\\\"ramCost\\\":10206,\\\"endAfter\\\":\\\"2023-06-29T00:07:19.548Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:34.548Z\\\",\\\"type\\\":\\\"grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10879},{\\\"executing\\\":true,\\\"ramCost\\\":841.75,\\\"endAfter\\\":\\\"2023-06-29T00:07:34.549Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:07:49.549Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10693}],\\\"startTime\\\":\\\"2023-06-29T00:02:24.313Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:07:49.550Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:04.550Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:08:04.551Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:19.551Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"silver-helix\\\",\\\"pid\\\":10799},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:19.552Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:34.552Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":841.75,\\\"endAfter\\\":\\\"2023-06-29T00:08:34.553Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:08:49.553Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\",\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10956}],\\\"startTime\\\":\\\"2023-06-29T00:03:09.423Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:08:49.554Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:04.554Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":true,\\\"ramCost\\\":36.75,\\\"endAfter\\\":\\\"2023-06-29T00:09:04.555Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:19.555Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\",\\\"machineRunningOn\\\":\\\"blade\\\",\\\"pid\\\":11091},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:19.556Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:34.556Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:34.557Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:09:49.557Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}],\\\"startTime\\\":\\\"2023-06-29T00:04:15.581Z\\\"},{\\\"jobs\\\":[{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:09:49.558Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:04.558Z\\\",\\\"type\\\":\\\"hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:10:04.559Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:19.559Z\\\",\\\"type\\\":\\\"weaken-after-hack\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:10:19.560Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:34.560Z\\\",\\\"type\\\":\\\"grow\\\"},{\\\"executing\\\":false,\\\"ramCost\\\":0,\\\"endAfter\\\":\\\"2023-06-29T00:10:34.561Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:49.561Z\\\",\\\"type\\\":\\\"weaken-after-grow\\\"}]}]}],[\\\"nwo\\\",{\\\"targetMachineSaturatedWithAttacks\\\":false,\\\"prepStage\\\":true,\\\"weakeningDoneAfter\\\":\\\"2023-06-29T00:03:37.676Z\\\",\\\"successfulWeakening\\\":true,\\\"growDoneAfter\\\":\\\"2023-06-29T00:10:20.180Z\\\",\\\"successfulGrowing\\\":false,\\\"hackDoneAfter\\\":\\\"2023-06-28T23:55:09.712Z\\\",\\\"successfulHacking\\\":true,\\\"securityWeNeedToReduceAfterFullHack\\\":0.314,\\\"securityWeNeedToReduceAfterFullGrowth\\\":29.812,\\\"originalNumberOfThreadsForFullMoney\\\":157,\\\"batchesQueue\\\":[{\\\"jobs\\\":[{\\\"executing\\\":true,\\\"ramCost\\\":13042.75,\\\"machineRunningOn\\\":\\\"home\\\",\\\"endAfter\\\":\\\"2023-06-29T00:03:39.475Z\\\",\\\"endBefore\\\":\\\"2023-06-29T00:10:20.180Z\\\",\\\"type\\\":\\\"grow-dynamic\\\",\\\"pid\\\":10930}],\\\"startTime\\\":\\\"2023-06-29T00:03:39.508Z\\\"}]}]]\"}}],[\"data/recordOfWhoIsBeingHacked.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/recordOfWhoIsBeingHacked.txt\",\"text\":\"[[\\\"n00dles\\\",{\\\"name\\\":\\\"n00dles\\\",\\\"moneyThreshhold\\\":1312500,\\\"securityThreshholdTarget\\\":6,\\\"hackDifficulty\\\":2.584,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":1,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"blade\\\",\\\"pid\\\":11123}],[\\\"omnitek\\\",{\\\"name\\\":\\\"omnitek\\\",\\\"moneyThreshhold\\\":285816663075,\\\"securityThreshholdTarget\\\":37,\\\"hackDifficulty\\\":51.215999999999994,\\\"moneyAvailable\\\":381088884100,\\\"minDifficulty\\\":32,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10628}],[\\\"global-pharm\\\",{\\\"name\\\":\\\"global-pharm\\\",\\\"moneyThreshhold\\\":28603524056.25,\\\"securityThreshholdTarget\\\":33,\\\"hackDifficulty\\\":44.629999999999995,\\\"moneyAvailable\\\":38138032075,\\\"minDifficulty\\\":28,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9879}],[\\\"deltaone\\\",{\\\"name\\\":\\\"deltaone\\\",\\\"moneyThreshhold\\\":26103819600,\\\"securityThreshholdTarget\\\":33,\\\"hackDifficulty\\\":28.204,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":28,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10856}],[\\\"zeus-med\\\",{\\\"name\\\":\\\"zeus-med\\\",\\\"moneyThreshhold\\\":24560109900,\\\"securityThreshholdTarget\\\":34,\\\"hackDifficulty\\\":29.208,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":29,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10229}],[\\\"stormtech\\\",{\\\"name\\\":\\\"stormtech\\\",\\\"moneyThreshhold\\\":21854138568.75,\\\"securityThreshholdTarget\\\":31,\\\"hackDifficulty\\\":42.166,\\\"moneyAvailable\\\":29138851425,\\\"minDifficulty\\\":26,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10151}],[\\\"univ-energy\\\",{\\\"name\\\":\\\"univ-energy\\\",\\\"moneyThreshhold\\\":21240562462.5,\\\"securityThreshholdTarget\\\":33,\\\"hackDifficulty\\\":44.19,\\\"moneyAvailable\\\":28320749950,\\\"minDifficulty\\\":28,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9906}],[\\\"nova-med\\\",{\\\"name\\\":\\\"nova-med\\\",\\\"moneyThreshhold\\\":20913041400,\\\"securityThreshholdTarget\\\":31,\\\"hackDifficulty\\\":43.272000000000006,\\\"moneyAvailable\\\":27884055200,\\\"minDifficulty\\\":26,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10425}],[\\\"zb-institute\\\",{\\\"name\\\":\\\"zb-institute\\\",\\\"moneyThreshhold\\\":20429254068.75,\\\"securityThreshholdTarget\\\":29,\\\"hackDifficulty\\\":39.62,\\\"moneyAvailable\\\":27239005425,\\\"minDifficulty\\\":24,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10426}],[\\\"unitalife\\\",{\\\"name\\\":\\\"unitalife\\\",\\\"moneyThreshhold\\\":20223740775,\\\"securityThreshholdTarget\\\":31,\\\"hackDifficulty\\\":26,\\\"moneyAvailable\\\":26964987700,\\\"minDifficulty\\\":26,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"millenium-fitness\\\",\\\"pid\\\":11117}],[\\\"zb-def\\\",{\\\"name\\\":\\\"zb-def\\\",\\\"moneyThreshhold\\\":19809638531.25,\\\"securityThreshholdTarget\\\":26,\\\"hackDifficulty\\\":37.296,\\\"moneyAvailable\\\":26412851375,\\\"minDifficulty\\\":21,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10400}],[\\\"aerocorp\\\",{\\\"name\\\":\\\"aerocorp\\\",\\\"moneyThreshhold\\\":19561845768.75,\\\"securityThreshholdTarget\\\":34,\\\"hackDifficulty\\\":29.224,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":29,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10961}],[\\\"icarus\\\",{\\\"name\\\":\\\"icarus\\\",\\\"moneyThreshhold\\\":17999324381.25,\\\"securityThreshholdTarget\\\":35,\\\"hackDifficulty\\\":30.22,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":30,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10962}],[\\\"omnia\\\",{\\\"name\\\":\\\"omnia\\\",\\\"moneyThreshhold\\\":17872659131.25,\\\"securityThreshholdTarget\\\":36,\\\"hackDifficulty\\\":31.222,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":31,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10600}],[\\\"applied-energetics\\\",{\\\"name\\\":\\\"applied-energetics\\\",\\\"moneyThreshhold\\\":17685719568.75,\\\"securityThreshholdTarget\\\":27,\\\"hackDifficulty\\\":37.995999999999995,\\\"moneyAvailable\\\":23580959425,\\\"minDifficulty\\\":22,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10358}],[\\\"powerhouse-fitness\\\",{\\\"name\\\":\\\"powerhouse-fitness\\\",\\\"moneyThreshhold\\\":16875000000,\\\"securityThreshholdTarget\\\":24,\\\"hackDifficulty\\\":19.21,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":19,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10815}],[\\\"taiyang-digital\\\",{\\\"name\\\":\\\"taiyang-digital\\\",\\\"moneyThreshhold\\\":16261046456.25,\\\"securityThreshholdTarget\\\":29,\\\"hackDifficulty\\\":24.202,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":24,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10963}],[\\\"defcomm\\\",{\\\"name\\\":\\\"defcomm\\\",\\\"moneyThreshhold\\\":16238802412.5,\\\"securityThreshholdTarget\\\":36,\\\"hackDifficulty\\\":62.104,\\\"moneyAvailable\\\":21651736550,\\\"minDifficulty\\\":31,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9094}],[\\\"solaris\\\",{\\\"name\\\":\\\"solaris\\\",\\\"moneyThreshhold\\\":16089427931.25,\\\"securityThreshholdTarget\\\":31,\\\"hackDifficulty\\\":26.196,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":26,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11018}],[\\\"galactic-cyber\\\",{\\\"name\\\":\\\"galactic-cyber\\\",\\\"moneyThreshhold\\\":15718994287.5,\\\"securityThreshholdTarget\\\":24,\\\"hackDifficulty\\\":32.18,\\\"moneyAvailable\\\":20958659050,\\\"minDifficulty\\\":19,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9986}],[\\\"titan-labs\\\",{\\\"name\\\":\\\"titan-labs\\\",\\\"moneyThreshhold\\\":15314489418.75,\\\"securityThreshholdTarget\\\":29,\\\"hackDifficulty\\\":42.172,\\\"moneyAvailable\\\":20419319225,\\\"minDifficulty\\\":24,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9341}],[\\\"vitalife\\\",{\\\"name\\\":\\\"vitalife\\\",\\\"moneyThreshhold\\\":13924472962.5,\\\"securityThreshholdTarget\\\":32,\\\"hackDifficulty\\\":43.846000000000004,\\\"moneyAvailable\\\":18565963950,\\\"minDifficulty\\\":27,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10506}],[\\\"alpha-ent\\\",{\\\"name\\\":\\\"alpha-ent\\\",\\\"moneyThreshhold\\\":12504332400,\\\"securityThreshholdTarget\\\":28,\\\"hackDifficulty\\\":42.07,\\\"moneyAvailable\\\":16672443200,\\\"minDifficulty\\\":23,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10964}],[\\\"helios\\\",{\\\"name\\\":\\\"helios\\\",\\\"moneyThreshhold\\\":12134651175,\\\"securityThreshholdTarget\\\":37,\\\"hackDifficulty\\\":32.216,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":32,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10947}],[\\\"infocomm\\\",{\\\"name\\\":\\\"infocomm\\\",\\\"moneyThreshhold\\\":12066402075,\\\"securityThreshholdTarget\\\":29,\\\"hackDifficulty\\\":24.216,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":24,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10681}],[\\\"rho-construction\\\",{\\\"name\\\":\\\"rho-construction\\\",\\\"moneyThreshhold\\\":11612223112.5,\\\"securityThreshholdTarget\\\":19,\\\"hackDifficulty\\\":26.188000000000002,\\\"moneyAvailable\\\":15482964150,\\\"minDifficulty\\\":14,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11079}],[\\\"microdyne\\\",{\\\"name\\\":\\\"microdyne\\\",\\\"moneyThreshhold\\\":11180453400,\\\"securityThreshholdTarget\\\":29,\\\"hackDifficulty\\\":38.251999999999995,\\\"moneyAvailable\\\":14907271200,\\\"minDifficulty\\\":24,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9679}],[\\\"syscore\\\",{\\\"name\\\":\\\"syscore\\\",\\\"moneyThreshhold\\\":10176374737.5,\\\"securityThreshholdTarget\\\":29,\\\"hackDifficulty\\\":24.17,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":24,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11080}],[\\\"snap-fitness\\\",{\\\"name\\\":\\\"snap-fitness\\\",\\\"moneyThreshhold\\\":8437500000,\\\"securityThreshholdTarget\\\":24,\\\"hackDifficulty\\\":38.684,\\\"moneyAvailable\\\":11250000000,\\\"minDifficulty\\\":19,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10989}],[\\\"aevum-police\\\",{\\\"name\\\":\\\"aevum-police\\\",\\\"moneyThreshhold\\\":6058108443.75,\\\"securityThreshholdTarget\\\":30,\\\"hackDifficulty\\\":25.154,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":25,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10667}],[\\\"catalyst\\\",{\\\"name\\\":\\\"catalyst\\\",\\\"moneyThreshhold\\\":5649433350,\\\"securityThreshholdTarget\\\":26,\\\"hackDifficulty\\\":39.727999999999994,\\\"moneyAvailable\\\":7532577800,\\\"minDifficulty\\\":21,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10882}],[\\\"netlink\\\",{\\\"name\\\":\\\"netlink\\\",\\\"moneyThreshhold\\\":5156250000,\\\"securityThreshholdTarget\\\":28,\\\"hackDifficulty\\\":44.4,\\\"moneyAvailable\\\":6875000000,\\\"minDifficulty\\\":23,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10830}],[\\\"millenium-fitness\\\",{\\\"name\\\":\\\"millenium-fitness\\\",\\\"moneyThreshhold\\\":4687500000,\\\"securityThreshholdTarget\\\":20,\\\"hackDifficulty\\\":15.14,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":15,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10805}],[\\\"rothman-uni\\\",{\\\"name\\\":\\\"rothman-uni\\\",\\\"moneyThreshhold\\\":3364352793.75,\\\"securityThreshholdTarget\\\":21,\\\"hackDifficulty\\\":16.134,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":16,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11093}],[\\\"the-hub\\\",{\\\"name\\\":\\\"the-hub\\\",\\\"moneyThreshhold\\\":3050533481.25,\\\"securityThreshholdTarget\\\":20,\\\"hackDifficulty\\\":28.666,\\\"moneyAvailable\\\":4067377975,\\\"minDifficulty\\\":15,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10724}],[\\\"omega-net\\\",{\\\"name\\\":\\\"omega-net\\\",\\\"moneyThreshhold\\\":1271037600,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":10.114,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":10,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11109}],[\\\"crush-fitness\\\",{\\\"name\\\":\\\"crush-fitness\\\",\\\"moneyThreshhold\\\":1022006812.5,\\\"securityThreshholdTarget\\\":18,\\\"hackDifficulty\\\":30.796,\\\"moneyAvailable\\\":1362675750,\\\"minDifficulty\\\":13,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10725}],[\\\"silver-helix\\\",{\\\"name\\\":\\\"silver-helix\\\",\\\"moneyThreshhold\\\":843750000,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"minDifficulty\\\":10,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":11118}],[\\\"iron-gym\\\",{\\\"name\\\":\\\"iron-gym\\\",\\\"moneyThreshhold\\\":375000000,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":28.828,\\\"moneyAvailable\\\":500000000,\\\"minDifficulty\\\":10,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":10990}],[\\\"zer0\\\",{\\\"name\\\":\\\"zer0\\\",\\\"moneyThreshhold\\\":140625000,\\\"securityThreshholdTarget\\\":13,\\\"hackDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"minDifficulty\\\":8,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"blade\\\",\\\"pid\\\":11119}],[\\\"harakiri-sushi\\\",{\\\"name\\\":\\\"harakiri-sushi\\\",\\\"moneyThreshhold\\\":75000000,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":12.568,\\\"moneyAvailable\\\":100000000,\\\"minDifficulty\\\":5,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"fulcrumtech\\\",\\\"pid\\\":11094}],[\\\"hong-fang-tea\\\",{\\\"name\\\":\\\"hong-fang-tea\\\",\\\"moneyThreshhold\\\":56250000,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":18.802,\\\"moneyAvailable\\\":75000000,\\\"minDifficulty\\\":5,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11095}],[\\\"joesguns\\\",{\\\"name\\\":\\\"joesguns\\\",\\\"moneyThreshhold\\\":46875000,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"minDifficulty\\\":5,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11120}],[\\\"sigma-cosmetics\\\",{\\\"name\\\":\\\"sigma-cosmetics\\\",\\\"moneyThreshhold\\\":43125000,\\\"securityThreshholdTarget\\\":8,\\\"hackDifficulty\\\":3.096,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":3,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11122}],[\\\"foodnstuff\\\",{\\\"name\\\":\\\"foodnstuff\\\",\\\"moneyThreshhold\\\":37500000,\\\"securityThreshholdTarget\\\":8,\\\"hackDifficulty\\\":3,\\\"moneyAvailable\\\":50000000,\\\"minDifficulty\\\":3,\\\"isWeakening\\\":false,\\\"isGrowing\\\":false,\\\"isHacking\\\":true,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":11121}],[\\\"4sigma\\\",{\\\"name\\\":\\\"4sigma\\\",\\\"moneyThreshhold\\\":293496700312.5,\\\"securityThreshholdTarget\\\":24,\\\"hackDifficulty\\\":32.978,\\\"moneyAvailable\\\":391328933750,\\\"minDifficulty\\\":19,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9315}],[\\\"fulcrumassets\\\",{\\\"name\\\":\\\"fulcrumassets\\\",\\\"moneyThreshhold\\\":18750000,\\\"securityThreshholdTarget\\\":38,\\\"hackDifficulty\\\":100,\\\"moneyAvailable\\\":25000000,\\\"minDifficulty\\\":33,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":8642}],[\\\"fulcrumtech\\\",{\\\"name\\\":\\\"fulcrumtech\\\",\\\"moneyThreshhold\\\":26681973600,\\\"securityThreshholdTarget\\\":37,\\\"hackDifficulty\\\":32.314,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":32,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false,\\\"machineRunningOn\\\":\\\"home\\\",\\\"pid\\\":9434}]]\"}}],[\"data/contractData.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/contractData.txt\",\"text\":\"[{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-516876.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[3],[1,2],[8,5,1],[5,6,3,7],[5,5,4,9,4],[7,4,4,7,9,8],[1,3,6,4,9,1,5],[7,8,4,5,7,1,6,8],[5,4,8,5,7,9,1,5,4],[1,3,4,4,9,2,3,2,3,6]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[8,5,1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[5,6,3,7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[5,5,4,9,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7,4,4,7,9,8],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,3,6,4,9,1,5],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[7,8,4,5,7,1,6,8],\\\\n&nbsp;&nbsp;&nbsp;[5,4,8,5,7,9,1,5,4],\\\\n&nbsp;&nbsp;[1,3,4,4,9,2,3,2,3,6]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"microdyne\\\",\\\"name\\\":\\\"contract-160307.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,1,0,1,1],[0,0,0,0,0,1,0,1,0],[0,1,0,1,0,1,1,0,0],[0,1,0,0,1,0,1,0,0],[0,0,1,1,1,0,0,0,0],[0,0,0,0,0,0,0,1,1],[1,0,0,1,1,1,0,0,0],[0,0,0,0,0,1,0,0,1],[0,0,0,0,0,0,1,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,0,1,0,1,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,1,0,1,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,1,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,1,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,1,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,1,1,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,0,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,1,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"b-and-a\\\",\\\"name\\\":\\\"contract-410748.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[2],[7,6],[5,7,5],[3,3,7,3]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[7,6],\\\\n&nbsp;&nbsp;&nbsp;[5,7,5],\\\\n&nbsp;&nbsp;[3,3,7,3]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"titan-labs\\\",\\\"name\\\":\\\"contract-929479.cct\\\",\\\"type\\\":\\\"Encryption II: Vigenère Cipher\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"QUEUEEMAILDEBUGMEDIAPOPUP\\\",\\\"FLAMING\\\"],\\\"description\\\":\\\"Vigenère cipher is a type of polyalphabetic substitution. It uses  the Vigenère square to encrypt and decrypt plaintext with a keyword.\\\\n\\\\n &nbsp;&nbsp;Vigenère square:\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +----------------------------------------------------\\\\n &nbsp;&nbsp;&nbsp;&nbsp; A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp; B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A \\\\n &nbsp;&nbsp;&nbsp;&nbsp; C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\\\n &nbsp;&nbsp;&nbsp;&nbsp; D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\\\n &nbsp;&nbsp;&nbsp;&nbsp; E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\\\n\\\\n For encryption each letter of the plaintext is paired with the corresponding letter of a repeating keyword. For example, the plaintext DASHBOARD is encrypted with the keyword LINUX:\\\\n &nbsp;&nbsp; Plaintext: DASHBOARD\\\\n &nbsp;&nbsp; Keyword:&nbsp;&nbsp;&nbsp;LINUXLINU\\\\n So, the first letter D is paired with the first letter of the key L. Therefore, row D and column L of the  Vigenère square are used to get the first cipher letter O. This must be repeated for the whole ciphertext.\\\\n\\\\n You are given an array with two elements:\\\\n &nbsp;&nbsp;[\\\\\\\"QUEUEEMAILDEBUGMEDIAPOPUP\\\\\\\", \\\\\\\"FLAMING\\\\\\\"]\\\\n The first element is the plaintext, the second element is the keyword.\\\\n\\\\n Return the ciphertext as uppercase string.\\\"},{\\\"server\\\":\\\"helios\\\",\\\"name\\\":\\\"contract-592518.cct\\\",\\\"type\\\":\\\"HammingCodes: Integer to Encoded Binary\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":139943978,\\\"description\\\":\\\"You are given the following decimal Value: \\\\n 139943978 \\\\n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\\\\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\\\\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\\\\n The answer should be given as a string containing only 1s and 0s.\\\\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\\\\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\\\\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\\\\n\\\\n Extra rule for encoding:\\\\n There should be no leading zeros in the 'data bit' section\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-665080.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[5,0,0,5],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 5,0,0,5\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"snap-fitness\\\",\\\"name\\\":\\\"contract-289424-TianDiHui.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":249101021,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 249101021?\\\"}]\"}}]]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":2,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"scripts/coordinator.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":8484.274,\"onlineExpGained\":0,\"onlineMoneyMade\":4022810850667.0723,\"onlineRunningTime\":8282.009999995082,\"ramUsage\":2.8,\"server\":\"home\",\"scriptKey\":\"scripts/coordinator.js*[]\",\"title\":\"scripts/coordinator.js \",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":222.00999999999593,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js b-and-a\",\"threads\":462,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.61000000000038,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js b-and-a\",\"threads\":462,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.4100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js b-and-a\",\"threads\":462,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js b-and-a\",\"threads\":462,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":408.60999999998535,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"b-and-a\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js b-and-a\",\"threads\":10431,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.41000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"b-and-a\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js b-and-a\",\"threads\":5712,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.40999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"b-and-a\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js b-and-a\",\"threads\":5662,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":351.2099999999886,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":432,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":279.2099999999927,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":432,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":225.00999999999576,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":432,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.41000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":432,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":432,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":294.20999999999185,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js kuai-gong\",\"threads\":5263,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":207.00999999999678,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js kuai-gong\",\"threads\":5308,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000072,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js kuai-gong\",\"threads\":5263,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.41000000000065,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js kuai-gong\",\"threads\":5263,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.40999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js kuai-gong\",\"threads\":5263,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":219.0099999999961,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js clarkinc\",\"threads\":371,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.80999999999952,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js clarkinc\",\"threads\":371,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.41000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js clarkinc\",\"threads\":371,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js clarkinc\",\"threads\":371,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":834.0100000000527,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":713.4100000000253,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":592.6099999999979,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":472.00999999998174,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":351.4099999999886,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":276.0099999999929,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":216.00999999999627,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.8099999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.41000000000082,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.40999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":417,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":613.8100000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js ecorp\",\"threads\":13650,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":490.0099999999807,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js ecorp\",\"threads\":13650,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":369.4099999999876,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js ecorp\",\"threads\":13650,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":249.0099999999944,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js ecorp\",\"threads\":13650,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.61000000000124,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js ecorp\",\"threads\":13650,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js ecorp\",\"threads\":13650,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":574.4099999999937,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"fulcrumassets\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js fulcrumassets\",\"threads\":1041,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":210.0099999999966,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/hack.js*[\\\"megacorp\\\"]\",\"title\":\"scripts/advanced-hacks/hack.js megacorp\",\"threads\":187,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.81000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/hack.js*[\\\"megacorp\\\"]\",\"title\":\"scripts/advanced-hacks/hack.js megacorp\",\"threads\":187,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.41000000000074,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/hack.js*[\\\"megacorp\\\"]\",\"title\":\"scripts/advanced-hacks/hack.js megacorp\",\"threads\":187,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.8099999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js clarkinc\",\"threads\":4506,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.41000000000112,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js clarkinc\",\"threads\":4506,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.41000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js clarkinc\",\"threads\":4506,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":469.0099999999819,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"defcomm\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js defcomm\",\"threads\":493,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":417.60999999998484,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"4sigma\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js 4sigma\",\"threads\":219,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":411.6099999999852,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js titan-labs\",\"threads\":295,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":333.20999999998963,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"microdyne\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js microdyne\",\"threads\":234,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":285.20999999999236,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js global-pharm\",\"threads\":264,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":279.0099999999927,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"univ-energy\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js univ-energy\",\"threads\":264,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":261.00999999999374,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js galactic-cyber\",\"threads\":219,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.80999999999918,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/hack.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/hack.js kuai-gong\",\"threads\":211,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":222.00999999999593,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"stormtech\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js stormtech\",\"threads\":264,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":204.00999999999695,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"zeus-med\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js zeus-med\",\"threads\":5149,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":173.80999999999867,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js applied-energetics\",\"threads\":249,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.6099999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js zb-def\",\"threads\":264,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.60999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"nova-med\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js nova-med\",\"threads\":280,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.60999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js zb-institute\",\"threads\":249,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000055,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"vitalife\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js vitalife\",\"threads\":264,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.61000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"omnia\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js omnia\",\"threads\":5599,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.61000000000108,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"omnitek\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js omnitek\",\"threads\":310,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.61000000000095,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js aevum-police\",\"threads\":7357,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.4100000000009,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/hack.js*[\\\"blade\\\"]\",\"title\":\"scripts/advanced-hacks/hack.js blade\",\"threads\":208,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.4100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"infocomm\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js infocomm\",\"threads\":7080,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.41000000000078,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"the-hub\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js the-hub\",\"threads\":219,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.41000000000078,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"crush-fitness\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js crush-fitness\",\"threads\":280,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.41000000000048,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js powerhouse-fitness\",\"threads\":4042,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.41000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"netlink\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js netlink\",\"threads\":341,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.41000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"deltaone\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js deltaone\",\"threads\":6701,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.41000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"catalyst\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js catalyst\",\"threads\":295,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.410000000000096,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/hack.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/hack.js clarkinc\",\"threads\":130,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.410000000000096,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"nwo\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js nwo\",\"threads\":5760,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"helios\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js helios\",\"threads\":4950,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.21000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"aerocorp\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js aerocorp\",\"threads\":5951,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.21000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"icarus\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js icarus\",\"threads\":4358,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.21000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"taiyang-digital\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js taiyang-digital\",\"threads\":3808,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.21000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js alpha-ent\",\"threads\":310,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.409999999999926,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js snap-fitness\",\"threads\":310,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.409999999999926,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"iron-gym\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js iron-gym\",\"threads\":295,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"solaris\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js solaris\",\"threads\":4148,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js rho-construction\",\"threads\":203,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"syscore\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js syscore\",\"threads\":4374,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js rothman-uni\",\"threads\":4563,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js hong-fang-tea\",\"threads\":219,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.210000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"omega-net\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js omega-net\",\"threads\":3140,\"temporary\":false}}]}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-665080.cct\",\"type\":\"Array Jumping Game\",\"data\":[5,0,0,5],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"87.3.8.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":92.46800000000002,\"minDifficulty\":33,\"moneyAvailable\":1208807709250,\"moneyMax\":1208807709250,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1113,\"serverGrowth\":99,\"runningScripts\":[]}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"40.7.1.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":58.182,\"minDifficulty\":33,\"moneyAvailable\":8354999950,\"moneyMax\":1342939870650,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1298,\"serverGrowth\":99,\"runningScripts\":[]}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-410748.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[2],[7,6],[5,7,5],[3,3,7,3]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"26.9.7.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":25.23,\"minDifficulty\":25,\"moneyAvailable\":0,\"moneyMax\":568493601225,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1006,\"serverGrowth\":65,\"runningScripts\":[]}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"69.5.7.3\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"blade\"}}],[\"scripts/advanced-hacks/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"server\":\"blade\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"blade\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"blade\"}}]]},\"serversOnNetwork\":[\"kuai-gong\",\"ecorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":58.70200000000001,\"minDifficulty\":32,\"moneyAvailable\":969165395650,\"moneyMax\":969165395650,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":973,\"serverGrowth\":64,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.40999999999993,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"scripts/advanced-hacks/hack.js*[\\\"megacorp\\\"]\",\"title\":\"scripts/advanced-hacks/hack.js megacorp\",\"threads\":187,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"blade\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js clarkinc\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.21,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"scripts/advanced-hacks/hack-until-worked.js*[\\\"zer0\\\"]\",\"title\":\"scripts/advanced-hacks/hack-until-worked.js zer0\",\"threads\":52,\"temporary\":false}}]}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"77.0.5.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\".\",\"fulcrumassets\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":33,\"minDifficulty\":33,\"moneyAvailable\":0,\"moneyMax\":537001962075,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1211,\"serverGrowth\":84,\"runningScripts\":[]}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"37.3.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\",\"megacorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":541964841325,\"moneyMax\":541964841325,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1190,\"serverGrowth\":66,\"runningScripts\":[]}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"85.5.4.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"server\":\"omnitek\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"omnitek\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"omnitek\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"omnitek\"}}]]},\"serversOnNetwork\":[\"helios\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":51.215999999999994,\"minDifficulty\":32,\"moneyAvailable\":381088884100,\"moneyMax\":381088884100,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1036,\"serverGrowth\":99,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":532.2099999999841,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":411.6099999999852,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":240.0099999999949,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js clarkinc\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.61000000000116,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js clarkinc\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.61000000000112,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js b-and-a\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.410000000000004,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":21,\"temporary\":false}}]}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"74.7.1.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"fulcrumtech\",\"b-and-a\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":32.978,\"minDifficulty\":19,\"moneyAvailable\":391328933750,\"moneyMax\":391328933750,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1109,\"serverGrowth\":83,\"runningScripts\":[]}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"71.5.2.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"vitalife\",\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":97,\"hackDifficulty\":32,\"minDifficulty\":32,\"moneyAvailable\":585459194900,\"moneyMax\":585459194900,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1158,\"serverGrowth\":90,\"runningScripts\":[]}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"21.9.0.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"fulcrumtech\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"fulcrumtech\"}}],[\"scripts/advanced-hacks/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"server\":\"fulcrumtech\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"fulcrumtech\"}}]]},\"serversOnNetwork\":[\"run4theh111z\",\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":51.966,\"minDifficulty\":32,\"moneyAvailable\":35575964800,\"moneyMax\":35575964800,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1231,\"serverGrowth\":83,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.4100000000004,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.210000000000003,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"scriptKey\":\"scripts/advanced-hacks/hack.js*[\\\"blade\\\"]\",\"title\":\"scripts/advanced-hacks/hack.js blade\",\"threads\":208,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js harakiri-sushi\",\"threads\":161,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.21,\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"scriptKey\":\"scripts/advanced-hacks/hack-until-worked.js*[\\\"silver-helix\\\"]\",\"title\":\"scripts/advanced-hacks/hack-until-worked.js silver-helix\",\"threads\":55,\"temporary\":false}}]}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"60.7.0.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":100,\"minDifficulty\":33,\"moneyAvailable\":25000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1156,\"serverGrowth\":1,\"runningScripts\":[]}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"22.1.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":42.166,\"minDifficulty\":26,\"moneyAvailable\":29138851425,\"moneyMax\":29138851425,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":908,\"serverGrowth\":83,\"runningScripts\":[]}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"5.4.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":62.104,\"minDifficulty\":31,\"moneyAvailable\":21651736550,\"moneyMax\":21651736550,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":916,\"serverGrowth\":48,\"runningScripts\":[]}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"24.8.6.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"univ-energy\",\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":24.216,\"minDifficulty\":24,\"moneyAvailable\":0,\"moneyMax\":16088536100,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":945,\"serverGrowth\":40,\"runningScripts\":[]}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-592518.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":139943978,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"39.3.1.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"server\":\"helios\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"helios\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"helios\"}}]]},\"serversOnNetwork\":[\"titan-labs\",\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":32.216,\"minDifficulty\":32,\"moneyAvailable\":0,\"moneyMax\":16179534900,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":805,\"serverGrowth\":78,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.8099999999978,\"ramUsage\":1.75,\"server\":\"helios\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.61000000000124,\"ramUsage\":1.75,\"server\":\"helios\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.61000000000125,\"ramUsage\":1.75,\"server\":\"helios\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}}]}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"42.1.9.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"titan-labs\",\"kuai-gong\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":43.846000000000004,\"minDifficulty\":27,\"moneyAvailable\":18565963950,\"moneyMax\":18565963950,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":834,\"serverGrowth\":80,\"runningScripts\":[]}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"46.7.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":30.22,\"minDifficulty\":30,\"moneyAvailable\":0,\"moneyMax\":23999099175,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":874,\"serverGrowth\":86,\"runningScripts\":[]}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"62.6.0.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\",\"infocomm\",\"taiyang-digital\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":44.19,\"minDifficulty\":28,\"moneyAvailable\":28320749950,\"moneyMax\":28320749950,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":846,\"serverGrowth\":89,\"runningScripts\":[]}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-929479.cct\",\"type\":\"Encryption II: Vigenère Cipher\",\"data\":[\"QUEUEEMAILDEBUGMEDIAPOPUP\",\"FLAMING\"],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"60.5.8.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"titan-labs\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"titan-labs\"}}]]},\"serversOnNetwork\":[\"infocomm\",\"stormtech\",\"helios\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":42.172,\"minDifficulty\":24,\"moneyAvailable\":20419319225,\"moneyMax\":20419319225,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":873,\"serverGrowth\":66,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":306.20999999999117,\"ramUsage\":1.75,\"server\":\"titan-labs\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}}]}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-160307.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,0,1,1],[0,0,0,0,0,1,0,1,0],[0,1,0,1,0,1,1,0,0],[0,1,0,0,1,0,1,0,0],[0,0,1,1,1,0,0,0,0],[0,0,0,0,0,0,0,1,1],[1,0,0,1,1,1,0,0,0],[0,0,0,0,0,1,0,0,1],[0,0,0,0,0,0,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"54.5.4.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":38.251999999999995,\"minDifficulty\":24,\"moneyAvailable\":14907271200,\"moneyMax\":14907271200,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":850,\"serverGrowth\":84,\"runningScripts\":[]}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"43.3.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"univ-energy\",\"microdyne\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":24.202,\"minDifficulty\":24,\"moneyAvailable\":0,\"moneyMax\":21681395275,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":859,\"serverGrowth\":79,\"runningScripts\":[]}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"16.8.4.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":32.18,\"minDifficulty\":19,\"moneyAvailable\":20958659050,\"moneyMax\":20958659050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":828,\"serverGrowth\":74,\"runningScripts\":[]}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"35.3.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"millenium-fitness\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":29.224,\"minDifficulty\":29,\"moneyAvailable\":0,\"moneyMax\":26082461025,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":915,\"serverGrowth\":60,\"runningScripts\":[]}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"81.4.2.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"univ-energy\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":31.222,\"minDifficulty\":31,\"moneyAvailable\":0,\"moneyMax\":23830212175,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":857,\"serverGrowth\":68,\"runningScripts\":[]}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"92.6.7.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"univ-energy\",\"applied-energetics\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":37.296,\"minDifficulty\":21,\"moneyAvailable\":26412851375,\"moneyMax\":26412851375,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":825,\"serverGrowth\":66,\"runningScripts\":[]}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"64.2.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":37.995999999999995,\"minDifficulty\":22,\"moneyAvailable\":23580959425,\"moneyMax\":23580959425,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":798,\"serverGrowth\":70,\"runningScripts\":[]}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"52.8.1.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":26.196,\"minDifficulty\":26,\"moneyAvailable\":0,\"moneyMax\":21452570575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":795,\"serverGrowth\":78,\"runningScripts\":[]}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"34.5.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aerocorp\",\"icarus\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":28.204,\"minDifficulty\":28,\"moneyAvailable\":0,\"moneyMax\":34805092800,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":812,\"serverGrowth\":52,\"runningScripts\":[]}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"84.8.7.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"global-pharm\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"global-pharm\"}}]]},\"serversOnNetwork\":[\"rho-construction\",\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":44.629999999999995,\"minDifficulty\":28,\"moneyAvailable\":38138032075,\"moneyMax\":38138032075,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":762,\"serverGrowth\":88,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":894.6100000000665,\"ramUsage\":1.75,\"server\":\"global-pharm\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}}]}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"33.6.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":43.272000000000006,\"minDifficulty\":26,\"moneyAvailable\":27884055200,\"moneyMax\":27884055200,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":847,\"serverGrowth\":77,\"runningScripts\":[]}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"67.9.8.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":29.208,\"minDifficulty\":29,\"moneyAvailable\":0,\"moneyMax\":32746813200,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":809,\"serverGrowth\":71,\"runningScripts\":[]}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"84.7.3.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"snap-fitness\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":26964987700,\"moneyMax\":26964987700,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":812,\"serverGrowth\":74,\"runningScripts\":[]}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"lexo-corp\",\"httpPortOpen\":false,\"ip\":\"36.3.2.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":742756838,\"moneyMax\":18568920950,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":683,\"serverGrowth\":62,\"runningScripts\":[]}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"81.3.6.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"rho-construction\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"rho-construction\"}}]]},\"serversOnNetwork\":[\"rothman-uni\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":43,\"hackDifficulty\":26.188000000000002,\"minDifficulty\":14,\"moneyAvailable\":15482964150,\"moneyMax\":15482964150,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":498,\"serverGrowth\":58,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.41000000000044,\"ramUsage\":1.75,\"server\":\"rho-construction\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":21,\"temporary\":false}}]}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"18.2.1.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"alpha-ent\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"alpha-ent\"}}]]},\"serversOnNetwork\":[\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":70,\"hackDifficulty\":42.07,\"minDifficulty\":23,\"moneyAvailable\":16672443200,\"moneyMax\":16672443200,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":516,\"serverGrowth\":59,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":246.00999999999456,\"ramUsage\":1.75,\"server\":\"alpha-ent\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}}]}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"63.0.4.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":25.154,\"minDifficulty\":25,\"moneyAvailable\":0,\"moneyMax\":8077477925,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":430,\"serverGrowth\":38,\"runningScripts\":[]}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"68.3.4.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"rothman-uni\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"rothman-uni\"}}]]},\"serversOnNetwork\":[\"crush-fitness\",\"rho-construction\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":47,\"hackDifficulty\":16.134,\"minDifficulty\":16,\"moneyAvailable\":0,\"moneyMax\":4485803725,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":401,\"serverGrowth\":39,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":185.80999999999798,\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}}]}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"91.6.0.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"server\":\"zb-institute\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"zb-institute\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"zb-institute\"}}]]},\"serversOnNetwork\":[\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":39.62,\"minDifficulty\":24,\"moneyAvailable\":27239005425,\"moneyMax\":27239005425,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":759,\"serverGrowth\":79,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":653.0100000000116,\"ramUsage\":1.75,\"server\":\"zb-institute\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":309.209999999991,\"ramUsage\":1.75,\"server\":\"zb-institute\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":249.0099999999944,\"ramUsage\":1.75,\"server\":\"zb-institute\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js kuai-gong\",\"threads\":21,\"temporary\":false}}]}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-591241.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[90,152,110,114,106,66,47,55,181,98,188,22,61,169,157,97,96,149,60,84,57,31,61,47,136,55],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-367194-Sector12.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[4,[110,56,181,182,130,173,184,139,143,148,194,141,6,86,131,33,57,37,59,53,16,16,4,57,146,29,162,30,163,42,50,32,143,140,22,137]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"27.0.8.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"johnson-ortho\",\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":52,\"minDifficulty\":17,\"moneyAvailable\":238219933,\"moneyMax\":5955498325,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":434,\"serverGrowth\":47,\"runningScripts\":[]}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"67.2.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":24.17,\"minDifficulty\":24,\"moneyAvailable\":0,\"moneyMax\":13568499650,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":614,\"serverGrowth\":66,\"runningScripts\":[]}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"42.4.2.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"netlink\",\"alpha-ent\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":39.727999999999994,\"minDifficulty\":21,\"moneyAvailable\":7532577800,\"moneyMax\":7532577800,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":405,\"serverGrowth\":52,\"runningScripts\":[]}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"95.8.7.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":28.666,\"minDifficulty\":15,\"moneyAvailable\":4067377975,\"moneyMax\":4067377975,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":310,\"serverGrowth\":50,\"runningScripts\":[]}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"computek\",\"httpPortOpen\":false,\"ip\":\"89.3.8.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":245570697,\"moneyMax\":6139267425,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":366,\"serverGrowth\":57,\"runningScripts\":[]}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"76.7.5.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omega-net\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":44.4,\"minDifficulty\":23,\"moneyAvailable\":6875000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":419,\"serverGrowth\":49,\"runningScripts\":[]}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-65201.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,1,0,0,1,0,0],[0,0,0,0,0,1,0],[0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-602385.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[4],[8,6],[3,3,8],[7,7,4,5],[9,2,4,6,7],[3,4,9,2,5,7],[6,6,5,9,8,1,1],[7,6,4,2,1,7,6,6],[5,3,4,4,3,6,9,4,7],[9,7,5,4,1,4,8,7,7,7],[4,7,4,3,8,7,2,2,3,5,9],[9,5,8,8,2,1,8,5,1,7,3,2]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"67.2.0.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"neo-net\",\"summit-uni\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":74418761,\"moneyMax\":1860469025,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":266,\"serverGrowth\":36,\"runningScripts\":[]}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"55.4.8.0\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\",\"nectar-net\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":2.716,\"minDifficulty\":1,\"moneyAvailable\":1750000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":1,\"serverGrowth\":3000,\"runningScripts\":[]}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-516876.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[1,2],[8,5,1],[5,6,3,7],[5,5,4,9,4],[7,4,4,7,9,8],[1,3,6,4,9,1,5],[7,8,4,5,7,1,6,8],[5,4,8,5,7,9,1,5,4],[1,3,4,4,9,2,3,2,3,6]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"90.7.2.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3.096,\"minDifficulty\":3,\"moneyAvailable\":0,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":1,\"serverGrowth\":5,\"runningScripts\":[]}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"63.1.0.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":28.124000000000002,\"minDifficulty\":3,\"moneyAvailable\":57500000,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":5,\"serverGrowth\":10,\"runningScripts\":[]}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"83.7.7.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5.098,\"minDifficulty\":5,\"moneyAvailable\":0,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":10,\"serverGrowth\":20,\"runningScripts\":[]}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"94.5.0.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"foodnstuff\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8,\"minDifficulty\":8,\"moneyAvailable\":187500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40,\"runningScripts\":[]}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"57.7.7.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"n00dles\",\"neo-net\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":2750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25,\"runningScripts\":[]}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"22.4.1.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nectar-net\",\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":50,\"serverGrowth\":25,\"runningScripts\":[]}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"89.5.5.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"silver-helix\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"silver-helix\"}}]]},\"serversOnNetwork\":[\"CSEC\",\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10,\"minDifficulty\":10,\"moneyAvailable\":1125000000,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":150,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.41000000000052,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js clarkinc\",\"threads\":21,\"temporary\":false}}]}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"84.4.8.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":18.802,\"minDifficulty\":5,\"moneyAvailable\":75000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":30,\"serverGrowth\":20,\"runningScripts\":[]}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"43.0.1.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":12.568,\"minDifficulty\":5,\"moneyAvailable\":100000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":40,\"serverGrowth\":40,\"runningScripts\":[]}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"53.9.0.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nectar-net\",\"computek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":24000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":100,\"serverGrowth\":35,\"runningScripts\":[]}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-308258.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0],[0,1,0],[0,1,0],[1,0,1],[0,0,0],[0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-465295.cct\",\"type\":\"Total Ways to Sum\",\"data\":36,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"17.2.9.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"n00dles\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":10000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":80,\"serverGrowth\":30,\"runningScripts\":[]}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"88.3.8.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zer0\",\"netlink\",\"crush-fitness\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":31,\"hackDifficulty\":10.114,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":1694716800,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":215,\"serverGrowth\":34,\"runningScripts\":[]}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"54.9.0.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omega-net\",\"rothman-uni\",\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":30.796,\"minDifficulty\":13,\"moneyAvailable\":1362675750,\"moneyMax\":1362675750,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":250,\"serverGrowth\":30,\"runningScripts\":[]}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"23.6.6.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":28.828,\"minDifficulty\":10,\"moneyAvailable\":500000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20,\"runningScripts\":[]}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"44.5.3.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"server\":\"millenium-fitness\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"millenium-fitness\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"millenium-fitness\"}}]]},\"serversOnNetwork\":[\"catalyst\",\"galactic-cyber\",\"aerocorp\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":37.604,\"minDifficulty\":15,\"moneyAvailable\":6250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":481,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":773.610000000039,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"ecorp\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js ecorp\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":194.80999999999747,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js clarkinc\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/hack-until-worked.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.21,\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"scriptKey\":\"scripts/advanced-hacks/hack-until-worked.js*[\\\"unitalife\\\"]\",\"title\":\"scripts/advanced-hacks/hack-until-worked.js unitalife\",\"threads\":100,\"temporary\":false}}]}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"87.3.0.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":19.21,\"minDifficulty\":19,\"moneyAvailable\":0,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":987,\"serverGrowth\":59,\"runningScripts\":[]}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-289424-TianDiHui.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":249101021,\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"19.8.5.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"millenium-fitness\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":38.684,\"minDifficulty\":19,\"moneyAvailable\":11250000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":701,\"serverGrowth\":46,\"runningScripts\":[]}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"85.8.8.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"taiyang-digital\",\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":522,\"serverGrowth\":1,\"runningScripts\":[]}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-21419.cct\",\"type\":\"Total Ways to Sum\",\"data\":69,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"62.7.2.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":342,\"serverGrowth\":1,\"runningScripts\":[]}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"31.8.6.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"avmnite-02h\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"avmnite-02h\"}}]]},\"serversOnNetwork\":[\"omega-net\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":217,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.0099999999934,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js b-and-a\",\"threads\":21,\"temporary\":false}}]}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"0.6.0.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"vitalife\",\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":547,\"serverGrowth\":1,\"runningScripts\":[]}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"36.2.3.0\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"iron-gym\",\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":58,\"serverGrowth\":1,\"runningScripts\":[]}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"80.3.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":1,\"runningScripts\":[]}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"88.0.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1,\"runningScripts\":[]}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"8.9.9.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-000\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-000\",\"httpPortOpen\":false,\"ip\":\"70.3.0.7\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-000\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-001\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-001\",\"httpPortOpen\":false,\"ip\":\"6.9.1.2\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-001\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-002\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-002\",\"httpPortOpen\":false,\"ip\":\"84.9.8.4\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-002\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-003\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-003\",\"httpPortOpen\":false,\"ip\":\"14.3.7.3\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-003\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-003\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-004\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-004\",\"httpPortOpen\":false,\"ip\":\"16.7.2.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-004\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-005\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-005\",\"httpPortOpen\":false,\"ip\":\"88.8.3.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-005\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-006\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-006\",\"httpPortOpen\":false,\"ip\":\"89.5.6.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-006\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-006\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-007\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-007\",\"httpPortOpen\":false,\"ip\":\"16.0.0.8\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-008\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-008\",\"httpPortOpen\":false,\"ip\":\"16.3.5.3\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-009\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-009\",\"httpPortOpen\":false,\"ip\":\"0.3.5.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-010\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-010\",\"httpPortOpen\":false,\"ip\":\"22.2.9.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-011\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-011\",\"httpPortOpen\":false,\"ip\":\"72.5.5.5\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-012\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-012\",\"httpPortOpen\":false,\"ip\":\"56.2.9.8\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-013\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-013\",\"httpPortOpen\":false,\"ip\":\"12.7.3.0\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-014\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-014\",\"httpPortOpen\":false,\"ip\":\"74.4.6.4\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-015\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-015\",\"httpPortOpen\":false,\"ip\":\"94.0.6.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-016\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-016\",\"httpPortOpen\":false,\"ip\":\"10.5.0.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-017\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-017\",\"httpPortOpen\":false,\"ip\":\"43.2.9.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-018\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-018\",\"httpPortOpen\":false,\"ip\":\"19.2.3.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-019\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-019\",\"httpPortOpen\":false,\"ip\":\"62.6.0.0\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-020\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-020\",\"httpPortOpen\":false,\"ip\":\"29.3.0.8\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-021\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-021\",\"httpPortOpen\":false,\"ip\":\"12.2.2.3\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-022\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-022\",\"httpPortOpen\":false,\"ip\":\"26.4.9.3\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-023\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-023\",\"httpPortOpen\":false,\"ip\":\"38.0.1.2\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-024\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-024\",\"httpPortOpen\":false,\"ip\":\"69.8.9.5\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}}}","CompaniesSave":"{\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":134.8989,\"isBanned\":false,\"isMember\":true,\"name\":\"BitRunners\",\"playerReputation\":683546.7035841276}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":117.2934,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":141.7843,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":115722.50789369342}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":33.0497,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":29563.8081048757}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":11.1606,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":10748.474435048087}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":8531.160126486398}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":14.1246,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":12588.560143912278}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":54616.358460531665,\"lastPrice\":54672.9605664283,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.46,\"b\":false,\"otlkMag\":6.498659600574478,\"otlkMagForecast\":30.170139292456724,\"cap\":486361255,\"spreadPerc\":0.2,\"shareTxForMovement\":38838,\"shareTxUntilMovement\":17684,\"totalShares\":120300000,\"maxShares\":24100000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":46183.890088881984,\"lastPrice\":46139.19184543696,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.43,\"b\":false,\"otlkMag\":8.15652408719686,\"otlkMagForecast\":33.56318469502449,\"cap\":413537321,\"spreadPerc\":0.3,\"shareTxForMovement\":57777,\"shareTxUntilMovement\":12627,\"totalShares\":81300000,\"maxShares\":16300000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":33244.55878374424,\"lastPrice\":33187.73329218627,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":6.721072118586872,\"otlkMagForecast\":34.668693512453885,\"cap\":274956658,\"spreadPerc\":0.1,\"shareTxForMovement\":34466,\"shareTxUntilMovement\":34456,\"totalShares\":64500000,\"maxShares\":12900000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":24204.88581826396,\"lastPrice\":24245.785160101917,\"playerShares\":14400000,\"playerAvgPx\":21278.343893137106,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":true,\"otlkMag\":9.561713065471896,\"otlkMagForecast\":65.43165141708633,\"cap\":190334930,\"spreadPerc\":0.4,\"shareTxForMovement\":64757,\"shareTxUntilMovement\":19812,\"totalShares\":71900000,\"maxShares\":14400000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":36209.06437642129,\"lastPrice\":36158.55700142552,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":false,\"otlkMag\":6.823838194813613,\"otlkMagForecast\":37.986448760034314,\"cap\":379866620,\"spreadPerc\":0.1,\"shareTxForMovement\":38462,\"shareTxUntilMovement\":23576,\"totalShares\":52300000,\"maxShares\":10500000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":338340.06211367087,\"lastPrice\":339117.571452405,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.02,\"b\":false,\"otlkMag\":14.232978965903113,\"otlkMagForecast\":34.87233345642327,\"cap\":549521765,\"spreadPerc\":0.9,\"shareTxForMovement\":71749,\"shareTxUntilMovement\":28192,\"totalShares\":36700000,\"maxShares\":7300000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":43164.64751228063,\"lastPrice\":43082.144793712636,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.85,\"b\":false,\"otlkMag\":7.806209298550352,\"otlkMagForecast\":38.7015218602568,\"cap\":41812277,\"spreadPerc\":0.3,\"shareTxForMovement\":44974,\"shareTxUntilMovement\":42950,\"totalShares\":68000000,\"maxShares\":13600000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":14928.381103673159,\"lastPrice\":14970.42226886261,\"playerShares\":11400000,\"playerAvgPx\":13477.46876128096,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.25,\"b\":true,\"otlkMag\":17.011950282117663,\"otlkMagForecast\":68.96780485317956,\"cap\":521714479,\"spreadPerc\":0.8,\"shareTxForMovement\":88481,\"shareTxUntilMovement\":24995,\"totalShares\":57000000,\"maxShares\":11400000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":70136.93220104683,\"lastPrice\":70002.87602516913,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.85,\"b\":false,\"otlkMag\":5.767061929763635,\"otlkMagForecast\":43.519573462628706,\"cap\":332708465,\"spreadPerc\":0.2,\"shareTxForMovement\":100120,\"shareTxUntilMovement\":100120,\"totalShares\":59000000,\"maxShares\":11800000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":30257.267794767937,\"lastPrice\":30304.30384195607,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":false,\"otlkMag\":9.07627022196438,\"otlkMagForecast\":41.13621614495661,\"cap\":58070966,\"spreadPerc\":0.2,\"shareTxForMovement\":91297,\"shareTxUntilMovement\":43149,\"totalShares\":86100000,\"maxShares\":17200000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":17898.32497740761,\"lastPrice\":17924.132384993416,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":true,\"otlkMag\":7.40109679518346,\"otlkMagForecast\":57.310704241513676,\"cap\":388272252,\"spreadPerc\":1,\"shareTxForMovement\":106782,\"shareTxUntilMovement\":106782,\"totalShares\":48800000,\"maxShares\":9800000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":24725.211966963314,\"lastPrice\":24681.283419007894,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":5.916956422546867,\"otlkMagForecast\":54.92378470773186,\"cap\":68449077,\"spreadPerc\":0.5,\"shareTxForMovement\":58267,\"shareTxUntilMovement\":58267,\"totalShares\":102300000,\"maxShares\":20500000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":42017.097717289675,\"lastPrice\":42083.36148231831,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":6.528562595446192,\"otlkMagForecast\":57.53070551101605,\"cap\":358932588,\"spreadPerc\":0.5,\"shareTxForMovement\":95943,\"shareTxUntilMovement\":95943,\"totalShares\":40800000,\"maxShares\":8200000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":8025.23227277463,\"lastPrice\":8015.300323185483,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":false,\"otlkMag\":9.718451333599786,\"otlkMagForecast\":38.01546514760939,\"cap\":226834416,\"spreadPerc\":0.5,\"shareTxForMovement\":84247,\"shareTxUntilMovement\":78081,\"totalShares\":46400000,\"maxShares\":9300000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":9004.00390751816,\"lastPrice\":9016.378118810773,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":false,\"otlkMag\":7.807156076780454,\"otlkMagForecast\":41.96446767749445,\"cap\":190968058,\"spreadPerc\":0.3,\"shareTxForMovement\":66532,\"shareTxUntilMovement\":66532,\"totalShares\":51500000,\"maxShares\":10300000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":27178.164878990927,\"lastPrice\":27223.475901872975,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":true,\"otlkMag\":5.957806475158966,\"otlkMagForecast\":56.16964104716298,\"cap\":82635028,\"spreadPerc\":1.1,\"shareTxForMovement\":77525,\"shareTxUntilMovement\":77525,\"totalShares\":45200000,\"maxShares\":9000000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":31855.606007667757,\"lastPrice\":31799.009100914172,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":8.470145782524233,\"otlkMagForecast\":60.69621408587034,\"cap\":218867579,\"spreadPerc\":0.9,\"shareTxForMovement\":72749,\"shareTxUntilMovement\":72749,\"totalShares\":26600000,\"maxShares\":5300000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":20592.233245964697,\"lastPrice\":20563.50950884346,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":true,\"otlkMag\":9.762282067396175,\"otlkMagForecast\":60.11162825304513,\"cap\":650969514,\"spreadPerc\":0.9,\"shareTxForMovement\":119946,\"shareTxUntilMovement\":80384,\"totalShares\":25800000,\"maxShares\":5200000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":31762.955765974126,\"lastPrice\":31712.229004663044,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":true,\"otlkMag\":5.408416470462639,\"otlkMagForecast\":52.84584752890593,\"cap\":167463080,\"spreadPerc\":0.9,\"shareTxForMovement\":67453,\"shareTxUntilMovement\":67453,\"totalShares\":24500000,\"maxShares\":4900000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":29528.063093404795,\"lastPrice\":29364.65488369394,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.47,\"b\":false,\"otlkMag\":5.289063951000873,\"otlkMagForecast\":42.309485315545565,\"cap\":53533369,\"spreadPerc\":0.7,\"shareTxForMovement\":51711,\"shareTxUntilMovement\":37102,\"totalShares\":69800000,\"maxShares\":14000000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":10362.01045955087,\"lastPrice\":10392.82601321753,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.32,\"b\":true,\"otlkMag\":5.993711091354312,\"otlkMagForecast\":56.524777800226914,\"cap\":15052742,\"spreadPerc\":0.7,\"shareTxForMovement\":103299,\"shareTxUntilMovement\":103299,\"totalShares\":41500000,\"maxShares\":8300000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":7726.838133215714,\"lastPrice\":7738.501626262064,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":true,\"otlkMag\":5.627350786542614,\"otlkMagForecast\":55.60419271684487,\"cap\":110285226,\"spreadPerc\":0.3,\"shareTxForMovement\":77181,\"shareTxUntilMovement\":77181,\"totalShares\":39300000,\"maxShares\":7900000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":77634.08243449175,\"lastPrice\":77292.77402944083,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.96,\"b\":false,\"otlkMag\":9.435269810253573,\"otlkMagForecast\":38.77284067580921,\"cap\":45953615,\"spreadPerc\":0.8,\"shareTxForMovement\":89981,\"shareTxUntilMovement\":86732,\"totalShares\":40100000,\"maxShares\":8000000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":9921.814428416581,\"lastPrice\":9958.697498331323,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.65,\"b\":false,\"otlkMag\":8.551328629652279,\"otlkMagForecast\":41.547533499185434,\"cap\":107880616,\"spreadPerc\":0.5,\"shareTxForMovement\":40867,\"shareTxUntilMovement\":40867,\"totalShares\":43100000,\"maxShares\":8600000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":1272.5214971136932,\"lastPrice\":1270.2035135816295,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.81,\"b\":true,\"otlkMag\":5.095078980744749,\"otlkMagForecast\":55.88732537842842,\"cap\":32209026,\"spreadPerc\":0.8,\"shareTxForMovement\":79520,\"shareTxUntilMovement\":79520,\"totalShares\":136400000,\"maxShares\":27300000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":50614.42809045309,\"lastPrice\":50866.438584224365,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.21,\"b\":true,\"otlkMag\":5.713980881119614,\"otlkMagForecast\":56.37943899293513,\"cap\":73810159,\"spreadPerc\":1.4,\"shareTxForMovement\":50977,\"shareTxUntilMovement\":50977,\"totalShares\":13800000,\"maxShares\":2800000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":1312.6871986214821,\"lastPrice\":1309.706984043283,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.01,\"b\":false,\"otlkMag\":6.830485021894213,\"otlkMagForecast\":43.70668788039461,\"cap\":27934025,\"spreadPerc\":0.4,\"shareTxForMovement\":39641,\"shareTxUntilMovement\":39641,\"totalShares\":41400000,\"maxShares\":8300000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":2189.440130237176,\"lastPrice\":2185.697682865659,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":5.2069633406090405,\"otlkMagForecast\":44.629309216757775,\"cap\":51149221,\"spreadPerc\":0.9,\"shareTxForMovement\":113975,\"shareTxUntilMovement\":113975,\"totalShares\":17500000,\"maxShares\":3500000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":148.43053470296448,\"lastPrice\":149.13613332641435,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.11,\"b\":false,\"otlkMag\":0.14762229183697517,\"otlkMagForecast\":42.71604643755334,\"cap\":24827696,\"spreadPerc\":1.4,\"shareTxForMovement\":41935,\"shareTxUntilMovement\":41935,\"totalShares\":11200000,\"maxShares\":2200000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":2186.680988403521,\"lastPrice\":2199.7361821277937,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.65,\"b\":true,\"otlkMag\":9.143427085164912,\"otlkMagForecast\":61.38530954858338,\"cap\":16431539,\"spreadPerc\":0.7,\"shareTxForMovement\":43405,\"shareTxUntilMovement\":39070,\"totalShares\":30300000,\"maxShares\":6100000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":3527.7451311060972,\"lastPrice\":3516.4162158224926,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.43,\"b\":true,\"otlkMag\":8.427641709751633,\"otlkMagForecast\":60.896108576855625,\"cap\":18834223,\"spreadPerc\":0.8,\"shareTxForMovement\":49701,\"shareTxUntilMovement\":25056,\"totalShares\":74100000,\"maxShares\":14800000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":22585.687011334438,\"lastPrice\":22621.814990667026,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":false,\"otlkMag\":8.778392908747172,\"otlkMagForecast\":41.44285086722761,\"cap\":579529152,\"spreadPerc\":0.3,\"shareTxForMovement\":181782,\"shareTxUntilMovement\":181782,\"totalShares\":12300000,\"maxShares\":2500000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":13403.270365827962,\"lastPrice\":13421.086554671112,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":false,\"otlkMag\":11.232881803103028,\"otlkMagForecast\":36.412223497540744,\"cap\":152252221,\"spreadPerc\":0.3,\"shareTxForMovement\":198332,\"shareTxUntilMovement\":155550,\"totalShares\":22200000,\"maxShares\":4400000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":36416,\"lastUpdate\":1687997059763,\"ticksUntilCycle\":18}","SettingsSave":"{\"ActiveScriptsServerPageSize\":10,\"ActiveScriptsScriptPageSize\":10,\"AutoexecScript\":\"\",\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":true,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-2,\"y\":3,\"opened\":true},\"EditorTheme\":{\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}},\"base\":\"vs-dark\",\"inherit\":true},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoTabSize\":2,\"MonacoDetectIndentation\":false,\"MonacoFontFamily\":\"Lucida Console\",\"MonacoFontSize\":20,\"MonacoFontLigatures\":false,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"32","AllGangsSave":"","LastExportBonus":"1687997063779","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"isBonusCharging\":false,\"storedCycles\":0}}"}}