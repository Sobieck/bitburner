{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":2619,\"strength\":1,\"defense\":1,\"dexterity\":2,\"agility\":1,\"charisma\":376,\"intelligence\":0},\"exp\":{\"hacking\":2572051238.7273035,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":191507.02054603415,\"intelligence\":0},\"mults\":{\"hacking_chance\":2.0197419375619976,\"hacking_speed\":1.9758560098205196,\"hacking_money\":6.552579705347756,\"hacking_grow\":3.062340321094956,\"hacking\":5.309060201428683,\"strength\":1.609916054518491,\"defense\":1.3999270039291234,\"dexterity\":2.231343651562629,\"agility\":1.4699233541255796,\"charisma\":1.9914857584174288,\"hacking_exp\":7.8287516608121255,\"strength_exp\":1.7709076599703404,\"defense_exp\":1.7709076599703404,\"dexterity_exp\":1.7709076599703404,\"agility_exp\":1.7709076599703404,\"charisma_exp\":1.908507185150036,\"company_rep\":2.5192294843980476,\"faction_rep\":1.908507185150036,\"crime_money\":1.5087013321344163,\"crime_success\":1.5087013321344163,\"hacknet_node_money\":1.3999270039291234,\"hacknet_node_purchase_cost\":0.7143229591209664,\"hacknet_node_ram_cost\":0.7143229591209664,\"hacknet_node_core_cost\":0.7143229591209664,\"hacknet_node_level_cost\":0.7143229591209664,\"work_money\":2.7364373145802565,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Neuregen Gene Modification\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":9,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Augmented Targeting II\"},{\"level\":1,\"name\":\"PCMatrix\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Embedded Netburner Module Core V3 Upgrade\"},{\"level\":1,\"name\":\"Embedded Netburner Module Direct Memory Access Upgrade\"},{\"level\":1,\"name\":\"Embedded Netburner Module Analyze Engine\"},{\"level\":1,\"name\":\"NEMEAN Subdermal Weave\"},{\"level\":1,\"name\":\"Synthetic Heart\"},{\"level\":1,\"name\":\"SmartJaw\"},{\"level\":1,\"name\":\"Enhanced Social Interaction Implant\"},{\"level\":1,\"name\":\"Synfibril Muscle\"},{\"level\":1,\"name\":\"FocusWire\"},{\"level\":1,\"name\":\"ADR-V2 Pheromone Gene\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"DermaForce Particle Barrier\"},{\"level\":1,\"name\":\"The Red Pill\"}],\"city\":\"Sector-12\",\"bitNodeN\":8,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"Daedalus\",\"Bachman & Associates\",\"BitRunners\",\"The Black Hand\",\"NiteSec\",\"Volhaven\",\"Tian Di Hui\",\"CyberSec\"],\"factionInvitations\":[],\"hacknetNodes\":[],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0,\"Company Favor\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{\"Bachman & Associates\":\"Lead Software Developer\",\"NWO\":\"Software Engineering Intern\",\"OmniTek Incorporated\":\"Software Engineering Intern\",\"Blade Industries\":\"Software Engineering Intern\",\"ECorp\":\"Software Engineering Intern\"},\"karma\":0,\"numPeopleKilled\":0,\"location\":\"ECorp\",\"money\":6072172171.537781,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-9788947.199999655,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":0,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":3177528911804.45,\"total\":5822172171.5372925,\"work\":0,\"servers\":0,\"other\":-1297570800000,\"augmentations\":-1874126150685.712}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-9788947.199999655,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":0,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":6759385206796.965,\"total\":27350754597.059265,\"work\":0,\"servers\":-210406582545.68866,\"other\":-2069892200000,\"augmentations\":-4451725880707.061}},\"playtimeSinceLastAug\":44138600,\"playtimeSinceLastBitnode\":182343600,\"lastAugReset\":1689248349868,\"lastNodeReset\":1689110144679,\"purchasedServers\":[],\"scriptProdSinceLastAug\":3177542411804.4507,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":{\"ctor\":\"JSONMap\",\"data\":[[1,3],[4,3]]},\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1686525459069},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1686525759083},{\"ID\":\"WORKOUT\",\"unlockedOn\":1686528279088},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1686532892094},{\"ID\":\"TRAVEL\",\"unlockedOn\":1686563653859},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1686567073861},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1686654552271},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1686667992269},{\"ID\":\"NITESEC\",\"unlockedOn\":1686679931301},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1686687177835},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1686697617844},{\"ID\":\"FROZE\",\"unlockedOn\":1686704316676},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1686746667786},{\"ID\":\"TOR\",\"unlockedOn\":1686746787787},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1686746893212},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1686762613218},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1686764833216},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1686767653216},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1686860173219},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1686862933218},{\"ID\":\"4S\",\"unlockedOn\":1686863833212},{\"ID\":\"DONATION\",\"unlockedOn\":1687005871880},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1687008391895},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1687017151898},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1687131964898},{\"ID\":\"SF1.1\",\"unlockedOn\":1687262446639},{\"ID\":\"MAX_CORES\",\"unlockedOn\":1688063566853},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1688088406853},{\"ID\":\"THE_COVENANT\",\"unlockedOn\":1688429201871},{\"ID\":\"ILLUMINATI\",\"unlockedOn\":1688468232306},{\"ID\":\"SF4.1\",\"unlockedOn\":1688489952298},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1688562948355},{\"ID\":\"DISCOUNT\",\"unlockedOn\":1688694948374},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1688720088407}],\"terminalCommandHistory\":[\"connect darkweb \",\"buy Formulas.exe \",\"home\",\"rm stopTrading.txt \",\"ls\",\"run scripts/tools/manually-end-round.js \",\"ls\",\"run scripts/tools/manually-end-round.js \",\"nano stopTrading.txt\",\"run scripts/tools/manually-end-round.js \",\"run scripts/tools/manually-end-round.js donate\",\"run scripts/tools/manually-end-round.js\",\"run scripts/tools/manually-end-round.js finish\",\"run scripts/tools/manually-end-round.js \",\"run scripts/tools/manually-end-round.js finish\",\"run scripts/coordinator-for-8.js \",\"hom\",\"home\",\"free\",\"rm data/memoryStarvedQueue.txt \",\"free\",\"ls data/ \",\"nano me\",\"nano data/memoryStarvedQueue.txt \",\"clear\",\"nano stopTrading.txt\",\"rm stopTrading.txt \",\"nano stopTrading.txt\",\"rm stopTrading.txt \",\"run scripts/tools/manually-end-round.js \",\"nano stopTrading.txt\",\"connect darkweb \",\"buy -l\",\"buy HTTPWorm.exe \",\"buy Formulas.exe \",\"home\",\"rm stopTrading.txt \",\"run scripts/tools/manually-end-round.js \",\"home\",\"run scripts/tools/manually-end-round.js \",\"home\",\"run scripts/tools/manually-end-round.js \",\"ls\",\"noano or\",\"nano orderedAugments.txt \",\"run scripts/tools/manually-end-round.js \",\"nano stopTrading.txt\",\"run scripts/tools/manually-end-round.js donate\",\"run scripts/tools/manually-end-round.js finish\",\"run scripts/tools/manually-end-round.js \"],\"lastUpdate\":1689292488409,\"lastSave\":1689292435810,\"totalPlaytime\":2771312800,\"currentWork\":{\"ctor\":\"FactionWork\",\"data\":{\"type\":\"FACTION\",\"singularity\":true,\"cyclesWorked\":86459,\"factionWorkType\":\"hacking\",\"factionName\":\"Daedalus\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"40a77882039c0\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"43.3.1.6\",\"isConnectedTo\":true,\"maxRam\":16384,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"DeepscanV1.exe\",\"AutoLink.exe\",\"fl1ght.exe\",\"HTTPWorm.exe\",\"Formulas.exe\"],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/contracts/coding-contracts.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let savedContractsFileNameForHuman;\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const solverRegistry = [\\r\\n        new LzDecompression2Handler(),\\r\\n        new AlgorithmicStockTrading4Handler(),\\r\\n        new AlgorithmicStockTrading3Handler(),\\r\\n        new AlgorithmicStockTrading1Handler(),\\r\\n        new AlgorithmicStockTrading2Handler(),\\r\\n        new SpiralizeMatrixHandler(),\\r\\n        new Encryption1Handler(),\\r\\n    ]\\r\\n\\r\\n    const allContracts = [];\\r\\n\\r\\n    JSON\\r\\n        .parse(ns.read('../../data/enviroment.txt'))\\r\\n        .map(server => {\\r\\n            const hostName = server.name;\\r\\n            ns\\r\\n                .ls(hostName)\\r\\n                .filter(file => file.endsWith('.cct'))\\r\\n                .map(contract => {\\r\\n                    const cont = new Contract(\\r\\n                        hostName,\\r\\n                        contract,\\r\\n                        ns.codingcontract.getContractType(contract, hostName),\\r\\n                        ns.codingcontract.getNumTriesRemaining(contract, hostName),\\r\\n                        // ns.codingcontract.getData(contract, hostName),\\r\\n                        // ns.codingcontract.getDescription(contract, hostName),\\r\\n                    );\\r\\n\\r\\n                    allContracts.push(cont);\\r\\n                });\\r\\n        });\\r\\n    \\r\\n    const thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \\r\\n    ns.rm(thisRoundsContractsFileName);\\r\\n    ns.write(thisRoundsContractsFileName, JSON.stringify(allContracts), \\\"W\\\");\\r\\n\\r\\n    let savedContracts;\\r\\n\\r\\n    if(savedContractsFileNameForHuman){\\r\\n        savedContracts = JSON.parse(ns.read(savedContractsFileNameForHuman));\\r\\n    }\\r\\n\\r\\n    if (!savedContracts || allContracts.length === 0 && savedContracts.length > 0){\\r\\n        const now = new Date();\\r\\n        savedContractsFileNameForHuman = `contracts/${now.toISOString().split('T')[0]}-${String(now.getHours()).padStart(2, 0)}-${String(now.getMinutes()).padStart(2, 0)}.txt`\\r\\n    }\\r\\n\\r\\n    ns.rm(savedContractsFileNameForHuman);\\r\\n    ns.write(savedContractsFileNameForHuman, JSON.stringify(allContracts), \\\"W\\\");\\r\\n\\r\\n    // allContracts\\r\\n    //     .forEach(contract => {\\r\\n    //         if (contract.attemptsLeft === 10 || contract.attemptsLeft === 5) {\\r\\n    //             const solver = solverRegistry.find(x => x.type === contract.type);\\r\\n    //             if (solver) {\\r\\n    //                 const result = solver.solve(contract.input);\\r\\n    //                 const success = ns.codingcontract.attempt(result, contract.name, contract.server);\\r\\n    //                 if (success === \\\"\\\") {\\r\\n    //                     const failuresContractsFileName = `contracts/failure/${contract.server}-${contract.name}-${contract.type.replaceAll(\\\" \\\", \\\"\\\")}.txt`;\\r\\n\\r\\n    //                     const saveThis = {contract, wrongResult: result};\\r\\n                        \\r\\n    //                     ns.rm(failuresContractsFileName);\\r\\n    //                     ns.write(failuresContractsFileName, JSON.stringify(saveThis), \\\"W\\\");\\r\\n\\r\\n\\r\\n    //                     ns.alert(`${contract.name} on ${contract.server} had a problem solving. You need to figure this out. Type: ${contract.type}`);\\r\\n    //                 } else {\\r\\n    //                     ns.toast(`Contract completed: ${success} Type: ${contract.type}`, \\\"success\\\", null);\\r\\n    //                 }\\r\\n    //             }\\r\\n    //         }\\r\\n    //     });\\r\\n\\r\\n}\\r\\n\\r\\nclass Contract {\\r\\n    constructor(server, name, type, attemptsLeft, input, description) {\\r\\n        this.server = server;\\r\\n        this.name = name;\\r\\n        this.type = type;\\r\\n        this.attemptsLeft = attemptsLeft;\\r\\n        this.input = input;\\r\\n        this.description = description;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass LzDecompression2Handler {\\r\\n    type = 'Compression II: LZ Decompression';\\r\\n\\r\\n    solve(input) {\\r\\n        return this.lzDecompression(input);\\r\\n    }\\r\\n\\r\\n    /// all need to be worked on in tests. These are just copies.\\r\\n    lzDecompression(stringToDecode) {\\r\\n        let decompressedString = '';\\r\\n        let startOfNextChunk = 0\\r\\n        let nextSectionCompressed = false;\\r\\n\\r\\n\\r\\n        while (startOfNextChunk < stringToDecode.length) {\\r\\n            const chunkLength = Number(stringToDecode[startOfNextChunk]);\\r\\n\\r\\n\\r\\n            if (chunkLength === 0) {\\r\\n                startOfNextChunk++;\\r\\n                nextSectionCompressed = !nextSectionCompressed;\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            if (nextSectionCompressed) {\\r\\n                const nextCharacterInEncoded = parseInt(stringToDecode[startOfNextChunk + 1]);\\r\\n\\r\\n                const placesBack = nextCharacterInEncoded;\\r\\n                const startText = decompressedString.length - placesBack;\\r\\n                const endOfText = startText + chunkLength;\\r\\n\\r\\n                if (chunkLength <= nextCharacterInEncoded) {\\r\\n                    decompressedString += decompressedString.slice(startText, endOfText);\\r\\n                } else {\\r\\n                    let nextChunk = \\\"\\\";\\r\\n                    const partialChunk = decompressedString.slice(startText, endOfText);\\r\\n\\r\\n                    while (nextChunk.length < chunkLength) {\\r\\n                        if (nextChunk.length + partialChunk.length > chunkLength) {\\r\\n                            const howMuchLeftInChunk = chunkLength - nextChunk.length;\\r\\n                            nextChunk += partialChunk.slice(0, howMuchLeftInChunk)\\r\\n                        } else {\\r\\n                            nextChunk += partialChunk;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    decompressedString += nextChunk;\\r\\n                }\\r\\n\\r\\n                startOfNextChunk += 2;\\r\\n                nextSectionCompressed = false;\\r\\n            } else {\\r\\n                const startText = startOfNextChunk + 1;\\r\\n                const endOfText = startText + chunkLength;\\r\\n                decompressedString += stringToDecode.slice(startText, endOfText);\\r\\n                startOfNextChunk = endOfText;\\r\\n                nextSectionCompressed = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        return decompressedString;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading1Handler {\\r\\n    type = 'Algorithmic Stock Trader I';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 1;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading2Handler {\\r\\n    type = 'Algorithmic Stock Trader II';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input.length;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading3Handler {\\r\\n    type = 'Algorithmic Stock Trader III';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 2;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading4Handler {\\r\\n    type = 'Algorithmic Stock Trader IV';\\r\\n\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input[0];\\r\\n        const stockPricesByDay = input[1];\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return this.tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n\\r\\n    tradeStock(maxNumberOfTrades, stockPricesByDay) {\\r\\n        if (maxNumberOfTrades === 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        let profitsPerTransaction = []\\r\\n\\r\\n        for (let i = stockPricesByDay.length - 1; i >= 1; i--) {\\r\\n            const priceToSeeIfHasNoVolitility = stockPricesByDay[i];\\r\\n\\r\\n            const yesterdaysPrice = stockPricesByDay[i - 1]\\r\\n            const tomorrowsPrice = stockPricesByDay[i + 1]\\r\\n\\r\\n            if (\\r\\n                (yesterdaysPrice <= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility <= tomorrowsPrice) || // rising prices filter\\r\\n                (!tomorrowsPrice && yesterdaysPrice >= priceToSeeIfHasNoVolitility) || // end price\\r\\n                (yesterdaysPrice >= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility >= tomorrowsPrice)) { // falling price filter\\r\\n                stockPricesByDay.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < stockPricesByDay.length; i++) {\\r\\n            const price = stockPricesByDay[i];\\r\\n            const potentialBuyPrice = stockPricesByDay[i - 1];\\r\\n            let potentialProfit = 0;\\r\\n\\r\\n            if (potentialBuyPrice) {\\r\\n                potentialProfit = price - potentialBuyPrice;\\r\\n            }\\r\\n\\r\\n            if (potentialProfit < 0) {\\r\\n                potentialProfit = 0;\\r\\n            }\\r\\n\\r\\n\\r\\n            profitsPerTransaction.push({ price, potentialProfit });\\r\\n        }\\r\\n\\r\\n        if (maxNumberOfTrades >= profitsPerTransaction.filter(x => x.potentialProfit > 0).length) {\\r\\n            return profitsPerTransaction\\r\\n                .reduce((acc, x) => acc + x.potentialProfit, 0);\\r\\n        }\\r\\n\\r\\n        const minProfit = Math.min(...profitsPerTransaction.filter(x => x.potentialProfit !== 0).map(x => x.potentialProfit));\\r\\n        const countOfMinProfits = profitsPerTransaction.filter(x => x.potentialProfit === minProfit).length;\\r\\n        const maxPrice = Math.max(...stockPricesByDay);\\r\\n        const arraysToWorkWith = [];\\r\\n\\r\\n        for (let i = 0; i < profitsPerTransaction.length; i++) {\\r\\n            const profitPerTranaction = profitsPerTransaction[i];\\r\\n\\r\\n            if (profitPerTranaction.potentialProfit === minProfit) {\\r\\n\\r\\n                const copyOfProfitsPerTransaction = profitsPerTransaction.map(x => x)\\r\\n                if (profitPerTranaction.price === maxPrice) {\\r\\n                    copyOfProfitsPerTransaction.splice(i - 1, 1);\\r\\n                } else {\\r\\n                    copyOfProfitsPerTransaction.splice(i, 1); // if there is a bigger price in the future, splice sell price. \\r\\n                }\\r\\n\\r\\n                arraysToWorkWith.push(copyOfProfitsPerTransaction.map(x => x.price));\\r\\n            }\\r\\n\\r\\n            if (arraysToWorkWith.length === countOfMinProfits) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const potentialProfitsForAllTrades = []\\r\\n        for (const newArrayOfPrices of arraysToWorkWith) {\\r\\n            potentialProfitsForAllTrades.push(this.tradeStock(maxNumberOfTrades, newArrayOfPrices))\\r\\n        }\\r\\n\\r\\n        return Math.max(...potentialProfitsForAllTrades);\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass SpiralizeMatrixHandler {\\r\\n    type = \\\"Spiralize Matrix\\\";\\r\\n\\r\\n    solve(matrix) {\\r\\n        return this.solveRecursively(matrix);\\r\\n    }\\r\\n\\r\\n    solveRecursively(matrix, spiralOrderResult = []){\\r\\n\\r\\n        if(matrix.length === 0){\\r\\n            return spiralOrderResult;\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < matrix.length; i++) {\\r\\n            if (i === 0 || i === matrix.length - 1) {\\r\\n                let rowToEmpty = matrix[i];\\r\\n\\r\\n                if(i === matrix.length - 1 && i !== 0){\\r\\n                    rowToEmpty.reverse()\\r\\n                }\\r\\n\\r\\n                for (let x = 0; x < rowToEmpty.length; x++) {\\r\\n                    const number = rowToEmpty[x];\\r\\n                    spiralOrderResult.push(number);\\r\\n                }\\r\\n\\r\\n                rowToEmpty.length = 0\\r\\n            } else {\\r\\n                let rowBeingUsed = matrix[i];\\r\\n\\r\\n                spiralOrderResult.push(rowBeingUsed.pop());\\r\\n            }\\r\\n        }      \\r\\n\\r\\n        \\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            if(matrix[i].length === 0){\\r\\n                matrix.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            const row = matrix[i];\\r\\n            row.reverse();\\r\\n            spiralOrderResult.push(row.pop());\\r\\n            row.reverse();            \\r\\n        }\\r\\n\\r\\n        return this.solveRecursively(matrix, spiralOrderResult)\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Encryption1Handler {\\r\\n    type = 'Encryption I: Caesar Cipher';\\r\\n\\r\\n    solve([string, shift]) {\\r\\n\\r\\n        let returnString = \\\"\\\";\\r\\n\\r\\n        if (string) {\\r\\n            for (const character of string) {\\r\\n                if (character === \\\" \\\") {\\r\\n                    returnString += \\\" \\\";\\r\\n                }\\r\\n                else {\\r\\n                    const charCode = character.charCodeAt(0);\\r\\n\\r\\n                    if (charCode) {\\r\\n                        let newCharCode = charCode - shift;\\r\\n\\r\\n                        if (newCharCode < 65) {\\r\\n                            const amountLessThan65 = 65 - newCharCode;\\r\\n                            newCharCode = 91 - amountLessThan65;\\r\\n                        }\\r\\n\\r\\n                        returnString += String.fromCharCode(newCharCode);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return returnString;\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/contracts/coding-contracts.js\",\"server\":\"home\"}}],[\"scripts/hacking/advanced-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const nameOfrecordOfWhoIsBeingHacked = 'data/recordOfWhoIsBeingHacked.txt';\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\";\\r\\n\\r\\n    const hackScript = 'scripts/hacking/hack-until-worked.js';\\r\\n    const growScript = 'scripts/hacking/grow.js';\\r\\n    const weakenScript = 'scripts/hacking/weaken.js';\\r\\n\\r\\n    let memoryLimited = false;\\r\\n    if(ns.fileExists('data/ramObservations.txt') || ns.fileExists('buyOrUpgradeServerFlag.txt')){\\r\\n        memoryLimited = true;\\r\\n    }\\r\\n\\r\\n    const homeMemoryLimitations = JSON.parse(ns.read(\\\"data/ramToReserveOnHome.txt\\\"));\\r\\n\\r\\n    let batchTargets = [];\\r\\n\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        const batchQueue = JSON.parse(ns.read(batchQueuesFileName));\\r\\n        batchTargets = batchQueue.map(x => x[0]);\\r\\n    }\\r\\n\\r\\n    let recordOfWhoIsBeingHacked = new Map();\\r\\n\\r\\n    if (ns.fileExists(nameOfrecordOfWhoIsBeingHacked)) {\\r\\n        recordOfWhoIsBeingHacked = new Map(JSON.parse(ns.read(nameOfrecordOfWhoIsBeingHacked)));\\r\\n    }\\r\\n\\r\\n    for (const recordKey of recordOfWhoIsBeingHacked.keys()) {\\r\\n        const record = recordOfWhoIsBeingHacked.get(recordKey);\\r\\n        if (record.pid === 0) {\\r\\n            recordOfWhoIsBeingHacked.delete(recordKey);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n\\r\\n    const allHackedMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    let allMachinesByOrderOfValue = allHackedMachines\\r\\n        .filter(x => !x.server.purchasedByPlayer && !batchTargets.includes(x.name) && x.server.moneyMax > 0)\\r\\n        .sort((a, b) => b.server.moneyMax - a.server.moneyMax)\\r\\n        .map(x => new HackedRecord(\\r\\n            x.name,\\r\\n            x.server.moneyMax,\\r\\n            x.server.minDifficulty,\\r\\n            x.server.hackDifficulty,\\r\\n            x.server.moneyAvailable,\\r\\n        ))\\r\\n\\r\\n    if(memoryLimited){\\r\\n        allMachinesByOrderOfValue = allMachinesByOrderOfValue.slice(0, 15);\\r\\n    }\\r\\n\\r\\n    cleanProcessesAttackingBatchTarget(ns, recordOfWhoIsBeingHacked, batchTargets);\\r\\n    \\r\\n    cleanRecordOfWhoIsBeingHacked(ns, recordOfWhoIsBeingHacked);\\r\\n\\r\\n    const machinesNextInQueueToHack = getMachinesToHack(allMachinesByOrderOfValue, recordOfWhoIsBeingHacked, ns);\\r\\n\\r\\n    const hackQueue = [];\\r\\n    const growAndWeakenQueue = [];\\r\\n\\r\\n    machinesNextInQueueToHack.forEach(machineInQuestion => {\\r\\n        if (machineInQuestion.needsWeakening() || machineInQuestion.needsGrowing()) {\\r\\n            growAndWeakenQueue.push(machineInQuestion);\\r\\n        } else {\\r\\n            hackQueue.push(machineInQuestion);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    const ramNeededForOneHackThread = ns.getScriptRam(hackScript);\\r\\n\\r\\n    hackQueue.forEach(target => {\\r\\n\\r\\n        let numberOfThreads = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable));\\r\\n        const ramNeeded = ramNeededForOneHackThread * numberOfThreads;\\r\\n        let machineToRunOn = getMachineWithEnoughRam(ns, ramNeeded, enviroment, homeMemoryLimitations);\\r\\n\\r\\n        if (machineToRunOn && numberOfThreads > 0) {\\r\\n            ns.scp(hackScript, machineToRunOn.hostname);\\r\\n            const pid = ns.exec(hackScript, machineToRunOn.hostname, numberOfThreads, target.name);\\r\\n            if (pid !== 0) {\\r\\n                target.hacking();\\r\\n                target.machineRunningOn = machineToRunOn.hostname;\\r\\n                target.pid = pid;\\r\\n                recordOfWhoIsBeingHacked.set(target.name, target);\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n\\r\\n\\r\\n    const ramNeededForWeaken = ns.getScriptRam(weakenScript);\\r\\n    const ramNeededForGrow = ns.getScriptRam(growScript);\\r\\n    growAndWeakenQueue.map(target => {\\r\\n        let machineToRunOn;\\r\\n        let threadsNeeded;\\r\\n        let script;\\r\\n\\r\\n        if (target.needsGrowing()) {\\r\\n            target.growing();\\r\\n\\r\\n            script = growScript;\\r\\n            const serverToHack = getServer(ns, target.name, homeMemoryLimitations);\\r\\n            const player = ns.getPlayer();\\r\\n\\r\\n            if (ns.fileExists('Formulas.exe')) {\\r\\n                threadsNeeded = Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, 1));\\r\\n            } else {\\r\\n                threadsNeeded = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable)) * 5;\\r\\n\\r\\n                if (threadsNeeded === 0) {\\r\\n                    threadsNeeded = 5000;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            machineToRunOn = getMachineWithEnoughRam(ns, threadsNeeded * ramNeededForGrow, enviroment, homeMemoryLimitations);\\r\\n\\r\\n            if (!machineToRunOn) {\\r\\n                [threadsNeeded, machineToRunOn] = getMachineWithNumberOfThreads(ns, enviroment, threadsNeeded, ramNeededForGrow, homeMemoryLimitations);\\r\\n            }\\r\\n\\r\\n            if (machineToRunOn && machineToRunOn.cpuCores > 1 && ns.fileExists('Formulas.exe')) {\\r\\n                threadsNeeded = Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, machineToRunOn.cpuCores));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (target.needsWeakening()) {\\r\\n            target.weakening();\\r\\n\\r\\n            script = weakenScript;\\r\\n            const amountToWeaken = target.hackDifficulty - target.minDifficulty;\\r\\n\\r\\n            threadsNeeded = getNumberOfThreadsToWeaken(ns, 1, amountToWeaken);\\r\\n\\r\\n            machineToRunOn = getMachineWithEnoughRam(ns, threadsNeeded * ramNeededForWeaken, enviroment, homeMemoryLimitations);\\r\\n\\r\\n            if (!machineToRunOn) {\\r\\n                [threadsNeeded, machineToRunOn] = getMachineWithNumberOfThreads(ns, enviroment, threadsNeeded, ramNeededForWeaken, homeMemoryLimitations);\\r\\n            }\\r\\n\\r\\n            if (machineToRunOn && machineToRunOn.cpuCores > 1) {\\r\\n                threadsNeeded = getNumberOfThreadsToWeaken(ns, machineToRunOn.cpuCores, amountToWeaken);\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n\\r\\n        if (machineToRunOn && threadsNeeded > 0) {\\r\\n            ns.scp(script, machineToRunOn.hostname);\\r\\n            const pid = ns.exec(script, machineToRunOn.hostname, threadsNeeded, target.name);\\r\\n\\r\\n            if (pid !== 0) {\\r\\n                target.machineRunningOn = machineToRunOn.hostname;\\r\\n                target.pid = pid;\\r\\n\\r\\n                recordOfWhoIsBeingHacked.set(target.name, target);\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfrecordOfWhoIsBeingHacked);\\r\\n    ns.write(nameOfrecordOfWhoIsBeingHacked, JSON.stringify(Array.from(recordOfWhoIsBeingHacked.entries()), \\\"W\\\"));\\r\\n\\r\\n    function cleanProcessesAttackingBatchTarget(ns, recordOfWhoIsBeingHacked, batchTargets) {\\r\\n        for (const machineHackin of recordOfWhoIsBeingHacked) {\\r\\n            const whoTheyHackin = machineHackin[0];\\r\\n\\r\\n            if (batchTargets.includes(whoTheyHackin)) {\\r\\n                ns.kill(recordOfWhoIsBeingHacked.get(whoTheyHackin).pid);\\r\\n                recordOfWhoIsBeingHacked.delete(whoTheyHackin);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getMachineWithNumberOfThreads(ns, enviroment, threads, ramCostPerThread, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n    const buyOrUpgradeServerFlag = 'buyOrUpgradeServerFlag.txt';\\r\\n    let originalAmountNeeded = ramCostPerThread * threads;\\r\\n\\r\\n    let globalMaxAmountNeeded = 0;\\r\\n\\r\\n    if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n        globalMaxAmountNeeded = JSON.parse(ns.read(buyOrUpgradeServerFlag));\\r\\n    }\\r\\n\\r\\n    if (originalAmountNeeded > globalMaxAmountNeeded) {\\r\\n        globalMaxAmountNeeded = originalAmountNeeded;\\r\\n        ns.rm(buyOrUpgradeServerFlag);\\r\\n        ns.write(buyOrUpgradeServerFlag, globalMaxAmountNeeded, \\\"W\\\");\\r\\n    }\\r\\n\\r\\n    while (threads > 0 && !machineToRunOn) {\\r\\n        threads--;\\r\\n\\r\\n        machineToRunOn = getMachineWithEnoughRam(ns, threads * ramCostPerThread, enviroment, homeMemoryLimitations)\\r\\n    }\\r\\n\\r\\n    return [threads, machineToRunOn];\\r\\n}\\r\\n\\r\\nfunction getMachineWithEnoughRam(ns, ramNeeded, enviroment, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\", homeMemoryLimitations);\\r\\n\\r\\n    allHackableMachines.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const machinesWithRamAvailable = allHackableMachines\\r\\n        .filter(x => x.server.ramUsed < x.server.maxRam && x.server.maxRam !== 0);\\r\\n\\r\\n    const serversWithEnoughRam = machinesWithRamAvailable\\r\\n        .filter(x => (x.server.maxRam - x.server.ramUsed) > ramNeeded)\\r\\n        .sort((b, a) => b.server.maxRam - a.server.maxRam);\\r\\n\\r\\n    for (const potentialServerToRun of serversWithEnoughRam) {\\r\\n        const server = getServer(ns, potentialServerToRun.name, homeMemoryLimitations);\\r\\n        const freeRam = server.maxRam - server.ramUsed;\\r\\n        if (freeRam > ramNeeded) {\\r\\n            machineToRunOn = server;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machineToRunOn;\\r\\n}\\r\\n\\r\\n\\r\\nfunction getServer(ns, serverName, homeMemoryLimitations) {\\r\\n    const server = ns.getServer(serverName);\\r\\n\\r\\n    if (serverName === \\\"home\\\") {\\r\\n\\r\\n        let ramToReserve = homeMemoryLimitations.ramToReserve;\\r\\n\\r\\n        if(server.maxRam < ramToReserve){\\r\\n            ramToReserve = homeMemoryLimitations.ramToReserveInLimitedEnvironment;\\r\\n        }\\r\\n\\r\\n        server.maxRam -= ramToReserve;\\r\\n        server.ramUsed -= ramToReserve;\\r\\n\\r\\n        if (server.ramUsed < 0) {\\r\\n            server.ramUsed = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction getMachinesToHack(hackableMachinesInTheEnvironment, recordOfWhoIsBeingHacked, ns) {\\r\\n    const machinesNextInQueueToHack = [];\\r\\n    const namesOfMachinesBeingHacked = Array.from(recordOfWhoIsBeingHacked.keys());\\r\\n\\r\\n    for (const hackableMachine of hackableMachinesInTheEnvironment) {\\r\\n        if (!namesOfMachinesBeingHacked.includes(hackableMachine.name)) {\\r\\n            machinesNextInQueueToHack.push(hackableMachine);\\r\\n        } else {\\r\\n            const recordOfHackin = recordOfWhoIsBeingHacked.get(hackableMachine.name);\\r\\n            const moneyChange = recordOfHackin.moneyAvailable - hackableMachine.moneyAvailable;\\r\\n            const difficultyChange = recordOfHackin.hackDifficulty - hackableMachine.hackDifficulty;\\r\\n\\r\\n            if (moneyChange !== 0 || difficultyChange !== 0) {\\r\\n                machinesNextInQueueToHack.push(hackableMachine);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machinesNextInQueueToHack;\\r\\n}\\r\\n\\r\\nexport class HackedRecord {\\r\\n    constructor(name, maxMoney, minDifficulty, hackDifficulty, moneyAvailable) {\\r\\n        this.name = name;\\r\\n        this.moneyThreshhold = maxMoney * 0.75;\\r\\n        this.securityThreshholdTarget = minDifficulty + 5;\\r\\n        this.hackDifficulty = hackDifficulty;\\r\\n        this.moneyAvailable = moneyAvailable;\\r\\n        this.minDifficulty = minDifficulty;\\r\\n        this.machineRunningOn;\\r\\n        this.pid;\\r\\n\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    needsWeakening() {\\r\\n        return this.hackDifficulty > this.securityThreshholdTarget;\\r\\n    }\\r\\n\\r\\n    needsGrowing() {\\r\\n        return this.moneyAvailable < this.moneyThreshhold;\\r\\n    }\\r\\n\\r\\n    weakening() {\\r\\n        this.isWeakening = true;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    growing() {\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = true;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    hacking() {\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = true;\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getNumberOfThreadsToWeaken(ns, cpuCores, amountToWeaken) {\\r\\n    let numberOfThreadsToWeaken = 0;\\r\\n    let foundNumberOfThreads = false;\\r\\n    while (!foundNumberOfThreads) {\\r\\n        numberOfThreadsToWeaken++;\\r\\n\\r\\n        const amountNumberOfThreadsWillWeaken = Math.ceil(ns.weakenAnalyze(numberOfThreadsToWeaken, cpuCores));\\r\\n        if (amountNumberOfThreadsWillWeaken > amountToWeaken) {\\r\\n            foundNumberOfThreads = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //add a small margin\\r\\n    numberOfThreadsToWeaken += 20;\\r\\n    return numberOfThreadsToWeaken;\\r\\n}\\r\\n\\r\\nfunction cleanRecordOfWhoIsBeingHacked(ns, recordOfWhoIsBeingHacked) {\\r\\n    for (const key of recordOfWhoIsBeingHacked.keys()) {\\r\\n        const record = recordOfWhoIsBeingHacked.get(key);\\r\\n        \\r\\n        if(!ns.isRunning(record.pid)){\\r\\n            recordOfWhoIsBeingHacked.delete(key);\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/advanced-dispatch.js\",\"server\":\"home\"}}],[\"scripts/hacking/batch-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let failuresThisRun = 0;\\r\\nlet successesThisRun = 0;\\r\\n\\r\\nlet lastTimeVisited = new Date();\\r\\nlet secondsBetweenVisits = [];\\r\\nlet lastRecordedToConsole = new Date();\\r\\n\\r\\nlet visitsToFunction = 0;\\r\\n\\r\\nlet countOfSuccesses = [];\\r\\nlet countOfFailures = [];\\r\\nlet averageErrorRateOver10Minutes = 1;\\r\\nlet errorRateAtWhichWeAllowNewThings = 0.1;\\r\\n\\r\\nexport async function main(ns) {\\r\\n    visitsToFunction++;\\r\\n\\r\\n    const buyOrUpgradeServerFlagFile = 'buyOrUpgradeServerFlag.txt';\\r\\n    const memoryConstrained = ns.fileExists('data/ramObservations.txt') || ns.fileExists(buyOrUpgradeServerFlagFile);\\r\\n\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\"\\r\\n\\r\\n    let batchQueueForDifferentTargets = new Map();\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        batchQueueForDifferentTargets = new Map(JSON.parse(ns.read(batchQueuesFileName)));\\r\\n    }\\r\\n\\r\\n    const homeMemoryLimitations = JSON.parse(ns.read(\\\"data/ramToReserveOnHome.txt\\\"));\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n\\r\\n    const playerServers = enviroment\\r\\n        .filter(x => x.server.purchasedByPlayer);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\", homeMemoryLimitations);\\r\\n\\r\\n    playerServers.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const totalBoughtMemory = playerServers.reduce((acc, x) => acc + x.server.maxRam, 0);\\r\\n\\r\\n    const ramNeededForBatchesFile = \\\"data/ramNeededToStartBatches.txt\\\";\\r\\n    const memoryNeededForBatches = 105_000;\\r\\n\\r\\n    if (totalBoughtMemory < memoryNeededForBatches) {\\r\\n        const ramNeededToStartBatches = Math.round(memoryNeededForBatches - totalBoughtMemory);\\r\\n        ns.rm(ramNeededForBatchesFile);\\r\\n        ns.write(ramNeededForBatchesFile, ramNeededToStartBatches, \\\"W\\\");\\r\\n\\r\\n        if (visitsToFunction > 100) {\\r\\n            visitsToFunction = 0;\\r\\n            ns.toast(`Ram Needed to Start Batches: ${ramNeededToStartBatches}`, \\\"warning\\\", 180000)\\r\\n        }\\r\\n\\r\\n        ns.run('scripts/hacking/memory-starved-dispatch.js');\\r\\n        return;\\r\\n    } else {\\r\\n        ns.rm(ramNeededForBatchesFile);\\r\\n    }\\r\\n\\r\\n    const targetNames = Array.from(batchQueueForDifferentTargets.keys());\\r\\n    const player = ns.getPlayer();\\r\\n\\r\\n    giveBatchQueueStructure(targetNames, batchQueueForDifferentTargets);\\r\\n    cleanFinishedAndPoisonedJobsFromQueue(targetNames, batchQueueForDifferentTargets, ns);\\r\\n\\r\\n    const noMoreInvestingForEndGame = ns.fileExists(\\\"stopInvesting.txt\\\");\\r\\n\\r\\n    const anyBatchNotPrepping = targetNames\\r\\n        .map(x => batchQueueForDifferentTargets.get(x))\\r\\n        .filter(x => !x.prepStage)\\r\\n        .length > 0;\\r\\n\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const targetServer = ns.getServer(nameOfTarget);\\r\\n        const batchForTarget = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n\\r\\n        if (!noMoreInvestingForEndGame) {\\r\\n            prepServerForBatching(targetServer, batchForTarget, ns, player, nameOfTarget, anyBatchNotPrepping);\\r\\n        }\\r\\n\\r\\n        createBatchesOfJobs(batchForTarget, ns, targetServer, player);\\r\\n    }\\r\\n\\r\\n    await executeJobs(ns, targetNames, batchQueueForDifferentTargets, player, enviroment, homeMemoryLimitations);\\r\\n    addNewTargetsToQueueIfNeeded(batchQueueForDifferentTargets, targetNames, ns, enviroment, player, noMoreInvestingForEndGame, homeMemoryLimitations);\\r\\n    adjustTimingsOrOutrightDeleteDependingOnReliability(ns, batchQueueForDifferentTargets, targetNames);\\r\\n\\r\\n    ns.rm(batchQueuesFileName);\\r\\n    ns.write(batchQueuesFileName, JSON.stringify(Array.from(batchQueueForDifferentTargets.entries()), \\\"W\\\"));\\r\\n\\r\\n    const total = failuresThisRun + successesThisRun;\\r\\n    const now = new Date();\\r\\n    const secondsSinceLastVisit = Math.abs(now.getTime() - lastTimeVisited.getTime()) / 1000;\\r\\n    lastTimeVisited = now;\\r\\n    if (secondsSinceLastVisit !== 0) {\\r\\n        secondsBetweenVisits.push(secondsSinceLastVisit);\\r\\n    }\\r\\n\\r\\n\\r\\n    const moneyWeHaveNow = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (now.getMinutes() !== lastRecordedToConsole.getMinutes() && total > 0) {\\r\\n        const timeStamp = `[${String(now.getHours()).padStart(2, 0)}:${String(now.getMinutes()).padStart(2, 0)}]`\\r\\n\\r\\n        const errorRate = 1 - (successesThisRun / total);\\r\\n\\r\\n        if (errorRate > 0.03) {\\r\\n            ns.toast(`${timeStamp} Error Rate in batches ${errorRate.toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 })}`, \\\"error\\\", 60000);\\r\\n        }\\r\\n\\r\\n        const averageTimeBetweenVisits = secondsBetweenVisits.reduce((acc, b) => acc + b, 0) / secondsBetweenVisits.length;\\r\\n\\r\\n        if (averageTimeBetweenVisits > 2.1) {\\r\\n            ns.toast(`${timeStamp} Average of ${averageTimeBetweenVisits.toFixed(2)} seconds between visits`, \\\"warning\\\", null)\\r\\n        }\\r\\n\\r\\n        const formatter = new Intl.NumberFormat('en-US', {\\r\\n            style: 'currency',\\r\\n            currency: 'USD',\\r\\n        });\\r\\n\\r\\n        const moneyFormatted = formatter.format(moneyWeHaveNow);\\r\\n\\r\\n        let consoleUpdate = `${timeStamp} Money we have now: ${moneyFormatted} | Number of targeted server: ${String(targetNames.length).padStart(2, 0)}`;\\r\\n\\r\\n        if (memoryConstrained) {\\r\\n            consoleUpdate += \\\" | Memory Constrained\\\";\\r\\n        }\\r\\n\\r\\n        ns.tprint(consoleUpdate);\\r\\n\\r\\n        const reliabilityForBatchFile = 'data/reliabilityForEvery100Batches.txt';\\r\\n        let batchReliability = [];\\r\\n\\r\\n        if (ns.fileExists(reliabilityForBatchFile)) {\\r\\n            batchReliability = JSON.parse(ns.read(reliabilityForBatchFile));\\r\\n        }\\r\\n\\r\\n        batchReliability.push({ errorRate, averageTimeBetweenVisits, now, moneyWeHaveNow, numberOfTargetedServers: targetNames.length });\\r\\n\\r\\n\\r\\n        ns.rm(reliabilityForBatchFile);\\r\\n        ns.write(reliabilityForBatchFile, JSON.stringify(batchReliability), \\\"W\\\");\\r\\n\\r\\n\\r\\n        countOfFailures.push(failuresThisRun);\\r\\n        countOfSuccesses.push(successesThisRun);\\r\\n\\r\\n        if (countOfFailures.length > 10) {\\r\\n            countOfFailures.shift();\\r\\n        }\\r\\n\\r\\n        if (countOfSuccesses.length > 10) {\\r\\n            countOfSuccesses.shift();\\r\\n        }\\r\\n\\r\\n        const successesIn10Minutes = countOfSuccesses.reduce((acc, b) => acc + b, 0);\\r\\n        const failuresIn10Minutes = countOfFailures.reduce((acc, b) => acc + b, 0);\\r\\n        const totalIn10Minutes = successesIn10Minutes + failuresIn10Minutes;\\r\\n\\r\\n        averageErrorRateOver10Minutes = 1 - (successesIn10Minutes / totalIn10Minutes);\\r\\n\\r\\n        if (averageErrorRateOver10Minutes > errorRateAtWhichWeAllowNewThings) {\\r\\n            ns.toast(`${timeStamp} Error Rate over 10 minutes is: ${averageErrorRateOver10Minutes.toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 })}`, \\\"error\\\", 15000);\\r\\n        }\\r\\n\\r\\n\\r\\n        failuresThisRun = 0;\\r\\n        successesThisRun = 0;\\r\\n        secondsBetweenVisits.length = 0;\\r\\n        lastRecordedToConsole = now;\\r\\n    }\\r\\n\\r\\n    if (moneyWeHaveNow > 1_000_000_000_000 ||\\r\\n        homeServer.maxRam - homeServer.ramUsed > 300000 ||\\r\\n        targetNames\\r\\n            .map(x => batchQueueForDifferentTargets.get(x))\\r\\n            .every(x => !x.targetMachineSaturatedWithAttacks)) {\\r\\n        if (!memoryConstrained) {\\r\\n            ns.run('scripts/hacking/advanced-dispatch.js');\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nclass BatchQueueForTarget {\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    targetMachineSaturatedWithAttacks = false;\\r\\n\\r\\n    prepStage = true;\\r\\n    weakeningDoneAfter;\\r\\n    successfulWeakening = false;\\r\\n    growDoneAfter;\\r\\n    successfulGrowing = false;\\r\\n    hackDoneAfter;\\r\\n    successfulHacking = false;\\r\\n\\r\\n    securityWeNeedToReduceAfterFullHack;\\r\\n    securityWeNeedToReduceAfterFullGrowth;\\r\\n    originalNumberOfThreadsForFullMoney;\\r\\n\\r\\n    successes = 0;\\r\\n    failures = 0;\\r\\n    successesInTheLastHour = 0;\\r\\n    failuresInTheLastHour = 0;\\r\\n    lastResetHour = 0\\r\\n\\r\\n    executionWindowSizeInSeconds = 4;\\r\\n\\r\\n    batchesQueue = [];\\r\\n\\r\\n    lastFailure;\\r\\n\\r\\n    getAllocatedMemory(machineRunningOn) {\\r\\n        return this.batchesQueue\\r\\n            .reduce((acc, x) => acc.concat(x.jobs), [])\\r\\n            .filter(x => x.machineRunningOn === machineRunningOn)\\r\\n            .reduce((acc, x) => acc + x, 0);\\r\\n    }\\r\\n\\r\\n    thereAreNoJobsRunningAfter() {\\r\\n        return Math.max(...this.batchesQueue.map(x => x.wholeBatchFinishsBefore()));\\r\\n    }\\r\\n}\\r\\n\\r\\nclass BatchOfJobs {\\r\\n    jobs = [];\\r\\n    //6 second window? 2 cycles seems like enough for each step.\\r\\n\\r\\n    startTime;\\r\\n    poisonedBatch = false;\\r\\n\\r\\n    wholeBatchFinishsBefore() {\\r\\n        return Math.max(...this.jobs.map(x => new Date(x.endBefore)))\\r\\n    }\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass JobHasTo {\\r\\n    executing = false;\\r\\n    ramCost = 0;\\r\\n    machineRunningOn;\\r\\n    pid;\\r\\n    executedAt;\\r\\n    expectedEndTime;\\r\\n\\r\\n    firstLookStartedNowEndAt;\\r\\n\\r\\n    lastMissForDoneBeforeWindow;\\r\\n    firstMissForAfterWindow;\\r\\n\\r\\n    constructor(endAfter, endBefore, type) {\\r\\n        this.endAfter = endAfter;\\r\\n        this.endBefore = endBefore;\\r\\n        this.type = type;\\r\\n        // this.types = [\\\"grow\\\", \\\"hack\\\", \\\"weaken-after-hack\\\", \\\"weaken-after-grow\\\",\\r\\n        //     \\\"weaken-dynamic\\\", \\\"grow-dynamic\\\", \\\"hack-dynamic\\\"]\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction adjustTimingsOrOutrightDeleteDependingOnReliability(ns, batchQueueForDifferentTargets, targetNames) {\\r\\n    const currentTime = new Date();\\r\\n    let countOfDeleted = 0;\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const queueOfBatches = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n        const currentHour = currentTime.getHours()\\r\\n\\r\\n        if (currentHour !== queueOfBatches.lastResetHour) {\\r\\n            if (queueOfBatches.failuresInTheLastHour === 0 && queueOfBatches.successesInTheLastHour > 0 && queueOfBatches.executionWindowSizeInSeconds > 2) {\\r\\n                queueOfBatches.executionWindowSizeInSeconds--;\\r\\n            }\\r\\n\\r\\n            const totalRunsThisHour = queueOfBatches.successesInTheLastHour + queueOfBatches.failuresInTheLastHour;\\r\\n            const ratioOfFailuresThisHour = 1 - (queueOfBatches.successesInTheLastHour / totalRunsThisHour);\\r\\n\\r\\n            if (ratioOfFailuresThisHour > 0.1) {\\r\\n                queueOfBatches.executionWindowSizeInSeconds++;\\r\\n            }\\r\\n\\r\\n\\r\\n            queueOfBatches.lastResetHour = currentHour;\\r\\n            queueOfBatches.successesInTheLastHour = 0;\\r\\n            queueOfBatches.failuresInTheLastHour = 0;\\r\\n\\r\\n            if (ratioOfFailuresThisHour > 0.9 && totalRunsThisHour > 10 && countOfDeleted < 2 && targetNames.length > 2) {\\r\\n                for (const batch of queueOfBatches.batchesQueue) {\\r\\n                    batch.jobs.map(x => {\\r\\n                        if (x.pid) {\\r\\n                            ns.kill(x.pid);\\r\\n                        }\\r\\n                    });\\r\\n\\r\\n                }\\r\\n\\r\\n                batchQueueForDifferentTargets.delete(nameOfTarget);\\r\\n                ns.tprint(`Deleted ${nameOfTarget} from batchQueue for failing too often. Ratio of Failure: ${ratioOfFailuresThisHour}. Total Runs: ${totalRunsThisHour}`);\\r\\n                countOfDeleted++;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction createBatchesOfJobs(batchForTarget, ns, targetServer, player) {\\r\\n    if (batchForTarget.prepStage === false) {\\r\\n\\r\\n        if (batchForTarget.batchesQueue.length === 0 || batchForTarget.batchesQueue.every(x => new Date() > new Date(x.startTime))) {\\r\\n            const batch = new BatchOfJobs();\\r\\n\\r\\n            const secondsToPadEndTime = batchForTarget.executionWindowSizeInSeconds;\\r\\n            const msToPadStartTime = 1;\\r\\n\\r\\n            const noJobsRunningAfter = batchForTarget.thereAreNoJobsRunningAfter();\\r\\n\\r\\n            let noMoreJobsAfter = new Date(noJobsRunningAfter);\\r\\n\\r\\n            const defaultStartTime = getWeakenEndDate(ns, targetServer, player, batchForTarget.securityWeNeedToReduceAfterFullGrowth);\\r\\n\\r\\n            if (noJobsRunningAfter < 0 || defaultStartTime > noMoreJobsAfter) {\\r\\n\\r\\n                addSecondsToDate(defaultStartTime, secondsToPadEndTime);\\r\\n                const defaultEndTime = new Date(defaultStartTime);\\r\\n\\r\\n                noMoreJobsAfter = defaultEndTime;\\r\\n            }\\r\\n\\r\\n            const hackStart = createNewDataFromOldDateAndAddMilliseconds(noMoreJobsAfter, msToPadStartTime);\\r\\n            const hackEnd = createNewDataFromOldDateAndAddSeconds(hackStart, secondsToPadEndTime);\\r\\n\\r\\n            const weakenAfterhackStart = createNewDataFromOldDateAndAddMilliseconds(hackEnd, msToPadStartTime);\\r\\n            const weakenAfterHackEnd = createNewDataFromOldDateAndAddSeconds(weakenAfterhackStart, secondsToPadEndTime);\\r\\n\\r\\n            const growStart = createNewDataFromOldDateAndAddMilliseconds(weakenAfterHackEnd, msToPadStartTime);\\r\\n            const growEnd = createNewDataFromOldDateAndAddSeconds(growStart, secondsToPadEndTime);\\r\\n\\r\\n            const weakenAfterGrowStart = createNewDataFromOldDateAndAddMilliseconds(growEnd, msToPadStartTime);\\r\\n            const weakenAfterGrowEnd = createNewDataFromOldDateAndAddSeconds(weakenAfterGrowStart, secondsToPadEndTime);\\r\\n\\r\\n            // get them in the order they are executed. \\r\\n            batch.jobs.push(new JobHasTo(weakenAfterGrowStart, weakenAfterGrowEnd, \\\"weaken-after-grow\\\"));\\r\\n            batch.jobs.push(new JobHasTo(weakenAfterhackStart, weakenAfterHackEnd, \\\"weaken-after-hack\\\"));\\r\\n            batch.jobs.push(new JobHasTo(growStart, growEnd, \\\"grow\\\"));\\r\\n            batch.jobs.push(new JobHasTo(hackStart, hackEnd, \\\"hack\\\"));\\r\\n\\r\\n            batchForTarget.batchesQueue.push(batch);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nasync function executeJobs(ns, targetNames, batchQueueForDifferentTargets, player, environment, homeMemoryLimitations) {\\r\\n    const hackScript = 'scripts/hacking/hack.js';\\r\\n    const growScript = 'scripts/hacking/grow.js';\\r\\n    const weakenScript = 'scripts/hacking/weaken.js';\\r\\n\\r\\n    const ramNeededForWeaken = ns.getScriptRam(weakenScript);\\r\\n    const ramNeededForGrow = ns.getScriptRam(growScript);\\r\\n    const ramNeededForHack = ns.getScriptRam(hackScript);\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const batchForTarget = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n\\r\\n        for (let i = 0; i < batchForTarget.batchesQueue.length; i++) {\\r\\n            const batchOfJobs = batchForTarget.batchesQueue[i];\\r\\n\\r\\n            for (let y = 0; y < batchOfJobs.jobs.length; y++) {\\r\\n                const job = batchOfJobs.jobs[y];\\r\\n\\r\\n                if (job.executing === false) {\\r\\n\\r\\n                    const targetServer = ns.getServer(nameOfTarget);\\r\\n\\r\\n                    let machineToRunOn;\\r\\n                    let script;\\r\\n                    let numberOfThreads;\\r\\n                    let ramCost;\\r\\n                    let shouldExecute = false;\\r\\n\\r\\n                    if (job.type.startsWith(\\\"weaken\\\")) {\\r\\n                        let amountToWeaken = targetServer.hackDifficulty - targetServer.minDifficulty;\\r\\n\\r\\n                        if (job.type === \\\"weaken-after-hack\\\") {\\r\\n                            amountToWeaken = batchForTarget.securityWeNeedToReduceAfterFullHack;\\r\\n                        }\\r\\n\\r\\n                        if (job.type === \\\"weaken-after-grow\\\") {\\r\\n                            amountToWeaken = batchForTarget.securityWeNeedToReduceAfterFullGrowth;\\r\\n                        }\\r\\n\\r\\n                        const ifStartedNowWeakenDoneAt = getWeakenEndDate(ns, targetServer, player, amountToWeaken);\\r\\n                        shouldExecute = shouldWeExecute(job, ifStartedNowWeakenDoneAt, batchOfJobs, ns);\\r\\n\\r\\n                        if (shouldExecute === false) {\\r\\n                            continue;\\r\\n                        }\\r\\n\\r\\n                        script = weakenScript;\\r\\n\\r\\n\\r\\n                        numberOfThreads = getNumberOfThreadsToWeaken(ns, 1, amountToWeaken);\\r\\n                        ramCost = ramNeededForWeaken * numberOfThreads;\\r\\n\\r\\n                        machineToRunOn = getMachineWithEnoughRam(ns, ramCost, environment, homeMemoryLimitations);\\r\\n\\r\\n                        if (machineToRunOn && machineToRunOn.cpuCores > 1) {\\r\\n                            numberOfThreads = getNumberOfThreadsToWeaken(ns, machineToRunOn.cpuCores, amountToWeaken);\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (job.type.startsWith(\\\"grow\\\")) {\\r\\n                        const ifStartedNowGrowDoneAt = getGrowEndDate(ns, targetServer, player);\\r\\n                        shouldExecute = shouldWeExecute(job, ifStartedNowGrowDoneAt, batchOfJobs, ns);\\r\\n\\r\\n                        if (shouldExecute === false) {\\r\\n                            continue;\\r\\n                        }\\r\\n\\r\\n                        script = growScript;\\r\\n\\r\\n                        if (job.type !== \\\"grow-dynamic\\\") {\\r\\n                            targetServer.moneyAvailable = 0;\\r\\n                        }\\r\\n\\r\\n                        numberOfThreads = getGrowThreads(ns, targetServer, player, 1);\\r\\n                        ramCost = ramNeededForGrow * numberOfThreads;\\r\\n\\r\\n                        machineToRunOn = getMachineWithEnoughRam(ns, ramCost, environment, homeMemoryLimitations);\\r\\n\\r\\n                        if (machineToRunOn && machineToRunOn.cpuCores > 1) {\\r\\n                            numberOfThreads = getGrowThreads(ns, targetServer, player, machineToRunOn.cpuCores);\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (job.type.startsWith(\\\"hack\\\")) {\\r\\n                        const ifStartedNowHackDoneAt = getHackEndDate(ns, targetServer, player);\\r\\n                        shouldExecute = shouldWeExecute(job, ifStartedNowHackDoneAt, batchOfJobs, ns);\\r\\n\\r\\n                        if (shouldExecute === false) {\\r\\n                            continue;\\r\\n                        }\\r\\n\\r\\n                        script = hackScript;\\r\\n\\r\\n                        if (job.type === \\\"hack\\\") {\\r\\n                            targetServer.moneyAvailable = targetServer.moneyMax;\\r\\n                        }\\r\\n\\r\\n\\r\\n                        numberOfThreads = getHackThreadsForTotalStealing(ns, nameOfTarget, targetServer);\\r\\n\\r\\n                        if (numberOfThreads === -1) {\\r\\n                            numberOfThreads = batchForTarget.originalNumberOfThreadsForFullMoney;\\r\\n                        }\\r\\n\\r\\n                        ramCost = ramNeededForHack * numberOfThreads;\\r\\n\\r\\n                        machineToRunOn = getMachineWithEnoughRam(ns, ramCost, environment, homeMemoryLimitations);\\r\\n                    }\\r\\n\\r\\n                    if (shouldExecute && machineToRunOn) {\\r\\n                        ns.scp(script, machineToRunOn.hostname);\\r\\n                        const pid = ns.exec(script, machineToRunOn.hostname, numberOfThreads, nameOfTarget);\\r\\n\\r\\n                        if (pid === 0) {\\r\\n                            ns.tprint(\\\"failed exec\\\")\\r\\n                        }\\r\\n\\r\\n                        job.ramCost = ramCost;\\r\\n                        job.executing = true;\\r\\n                        job.machineRunningOn = machineToRunOn.hostname;\\r\\n                        job.pid = pid;\\r\\n                        job.executedAt = new Date();\\r\\n\\r\\n                        if (!batchOfJobs.startTime) {\\r\\n                            batchOfJobs.startTime = new Date();\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction shouldWeExecute(job, ifStartedNowWeWouldBeDoneAtString, batchOfJobs, ns) {\\r\\n\\r\\n    const endBeforeDate = new Date(job.endBefore);\\r\\n    const endAfterDate = new Date(job.endAfter);\\r\\n    const ifStartedNowWeWouldBeDoneAt = new Date(ifStartedNowWeWouldBeDoneAtString)\\r\\n\\r\\n    if (!job.firstLookStartedNowEndAt) {\\r\\n        job.firstLookStartedNowEndAt = ifStartedNowWeWouldBeDoneAt;\\r\\n    }\\r\\n\\r\\n    if (endAfterDate > ifStartedNowWeWouldBeDoneAt) {\\r\\n        job.lastMissForDoneBeforeWindow = ifStartedNowWeWouldBeDoneAt;\\r\\n    }\\r\\n\\r\\n    if (ifStartedNowWeWouldBeDoneAt > endBeforeDate) {\\r\\n        if (!job.firstMissForAfterWindow) {\\r\\n            job.firstMissForAfterWindow = ifStartedNowWeWouldBeDoneAt;\\r\\n            batchOfJobs.poisonedBatch = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (endAfterDate < ifStartedNowWeWouldBeDoneAt && ifStartedNowWeWouldBeDoneAt < endBeforeDate) {\\r\\n        job.expectedEndTime = ifStartedNowWeWouldBeDoneAt;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n}\\r\\n\\r\\nfunction getMachineWithEnoughRam(ns, ramNeeded, enviroment, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n\\r\\n    const allHackedMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\", homeMemoryLimitations);\\r\\n\\r\\n    allHackedMachines.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const machinesWithRamAvailable = allHackedMachines\\r\\n        .filter(x => x.server.ramUsed < x.server.maxRam && x.server.maxRam !== 0);\\r\\n\\r\\n    const serversWithEnoughRam = machinesWithRamAvailable\\r\\n        .filter(x => (x.server.maxRam - x.server.ramUsed) > ramNeeded)\\r\\n        .sort((b, a) => b.server.maxRam - a.server.maxRam);\\r\\n\\r\\n    for (const potentialServerToRun of serversWithEnoughRam) {\\r\\n        const server = getServer(ns, potentialServerToRun.name, homeMemoryLimitations);\\r\\n        const freeRam = server.maxRam - server.ramUsed;\\r\\n        if (freeRam > ramNeeded) {\\r\\n            machineToRunOn = server;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (machineToRunOn === undefined) {\\r\\n        const buyOrUpgradeServerFlag = 'buyOrUpgradeServerFlag.txt';\\r\\n\\r\\n        let maxAmountNeeded = 0;\\r\\n        if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n            maxAmountNeeded = ns.read(buyOrUpgradeServerFlag);\\r\\n        }\\r\\n\\r\\n        if (maxAmountNeeded < ramNeeded) {\\r\\n            maxAmountNeeded = ramNeeded;\\r\\n            ns.rm(buyOrUpgradeServerFlag);\\r\\n            ns.write(buyOrUpgradeServerFlag, maxAmountNeeded, \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machineToRunOn;\\r\\n}\\r\\n\\r\\nfunction getServer(ns, serverName, homeMemoryLimitations) {\\r\\n    const server = ns.getServer(serverName);\\r\\n\\r\\n    if (serverName === \\\"home\\\") {\\r\\n\\r\\n        let ramToReserve = homeMemoryLimitations.ramToReserve;\\r\\n\\r\\n        if (server.maxRam < ramToReserve) {\\r\\n            ramToReserve = homeMemoryLimitations.ramToReserveInLimitedEnvironment;\\r\\n        }\\r\\n\\r\\n        server.maxRam -= ramToReserve;\\r\\n\\r\\n        const freeRam = server.maxRam - server.ramUsed\\r\\n\\r\\n        if (freeRam < 0) {\\r\\n            server.ramUsed = server.maxRam;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction prepServerForBatching(targetServer, batchForTarget, ns, player, nameOfTarget, anyBatchNotPrepping) {\\r\\n    const amountToWeaken = targetServer.hackDifficulty - targetServer.minDifficulty;\\r\\n    const serverHasMaxMoney = targetServer.moneyMax === targetServer.moneyAvailable;\\r\\n    const currentTime = new Date();\\r\\n\\r\\n    if (amountToWeaken === 0 && serverHasMaxMoney && batchForTarget.securityWeNeedToReduceAfterFullHack && batchForTarget.securityWeNeedToReduceAfterFullGrowth && batchForTarget.prepStage && batchForTarget.originalNumberOfThreadsForFullMoney) {\\r\\n\\r\\n        if (averageErrorRateOver10Minutes < errorRateAtWhichWeAllowNewThings || !anyBatchNotPrepping) {\\r\\n            batchForTarget.prepStage = false;\\r\\n            batchForTarget.targetMachineSaturatedWithAttacks = false;\\r\\n            ns.toast(`Added ${nameOfTarget} to in process batch attack.`, 'success')\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (batchForTarget.prepStage) {\\r\\n        batchForTarget.targetMachineSaturatedWithAttacks = false;\\r\\n\\r\\n        if (batchForTarget.successfulWeakening === false) {\\r\\n            if (currentTime > new Date(batchForTarget.weakeningDoneAfter) || !batchForTarget.weakeningDoneAfter) {\\r\\n                if (amountToWeaken !== 0) {\\r\\n                    let endDate = new Date();\\r\\n                    endDate = getWeakenEndDate(ns, targetServer, player, targetServer.hackDifficulty - targetServer.minDifficulty);\\r\\n                    addSecondsToDate(endDate, 10);\\r\\n\\r\\n                    const job = new JobHasTo(new Date(), endDate, \\\"weaken-dynamic\\\");\\r\\n                    const batchOfJobs = new BatchOfJobs();\\r\\n                    batchOfJobs.jobs.push(job);\\r\\n\\r\\n                    batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                    batchForTarget.weakeningDoneAfter = endDate;\\r\\n                } else if (amountToWeaken === 0) {\\r\\n                    batchForTarget.successfulWeakening = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (batchForTarget.successfulWeakening && batchForTarget.successfulGrowing === false) {\\r\\n            if (currentTime > new Date(batchForTarget.growDoneAfter) || !batchForTarget.growDoneAfter) {\\r\\n\\r\\n                if (serverHasMaxMoney === false) {\\r\\n\\r\\n                    if (targetServer.moneyAvailable === 0) {\\r\\n                        const growThreads = getGrowThreads(ns, targetServer, player, 1);\\r\\n                        batchForTarget.securityWeNeedToReduceAfterFullGrowth = ns.growthAnalyzeSecurity(growThreads, nameOfTarget, 1);\\r\\n                    }\\r\\n\\r\\n                    let endDate = getGrowEndDate(ns, targetServer, player);\\r\\n                    addSecondsToDate(endDate, 10);\\r\\n\\r\\n                    const job = new JobHasTo(new Date(), endDate, \\\"grow-dynamic\\\");\\r\\n                    const batchOfJobs = new BatchOfJobs();\\r\\n                    batchOfJobs.jobs.push(job);\\r\\n\\r\\n                    batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                    batchForTarget.growDoneAfter = endDate;\\r\\n                }\\r\\n\\r\\n\\r\\n                if (serverHasMaxMoney) {\\r\\n                    batchForTarget.successfulGrowing = true;\\r\\n                    batchForTarget.successfulWeakening = false;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (batchForTarget.successfulGrowing && batchForTarget.successfulHacking === false && batchForTarget.successfulWeakening) {\\r\\n\\r\\n            if (currentTime > new Date(batchForTarget.hackDoneAfter) || !batchForTarget.hackDoneAfter) {\\r\\n                if (serverHasMaxMoney) {\\r\\n                    if (currentTime > new Date(batchForTarget.hackDoneAfter)) {\\r\\n\\r\\n                        batchForTarget.successfulWeakening = false;\\r\\n                        batchForTarget.successfulGrowing = false;\\r\\n                        batchForTarget.successfulHacking = false;\\r\\n                        batchForTarget.hackDoneAfter = undefined;\\r\\n\\r\\n                    } else {\\r\\n                        const hackThreads = getHackThreadsForTotalStealing(ns, nameOfTarget, targetServer);\\r\\n                        batchForTarget.securityWeNeedToReduceAfterFullHack = ns.hackAnalyzeSecurity(hackThreads, nameOfTarget);\\r\\n                        batchForTarget.originalNumberOfThreadsForFullMoney = hackThreads;\\r\\n\\r\\n                        let endDate = getHackEndDate(ns, targetServer, player);\\r\\n                        addSecondsToDate(endDate, 100);\\r\\n\\r\\n                        const job = new JobHasTo(new Date(), endDate, \\\"hack-dynamic\\\");\\r\\n                        const batchOfJobs = new BatchOfJobs();\\r\\n                        batchOfJobs.jobs.push(job);\\r\\n\\r\\n                        batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                        batchForTarget.hackDoneAfter = endDate;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (targetServer.moneyAvailable === 0) {\\r\\n                    batchForTarget.successfulGrowing = false;\\r\\n                    batchForTarget.successfulWeakening = false;\\r\\n                    batchForTarget.successfulHacking = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nfunction giveBatchQueueStructure(targetNames, batchQueue) {\\r\\n    for (const target of targetNames) {\\r\\n        let targetObject = batchQueue.get(target);\\r\\n        targetObject = new BatchQueueForTarget(targetObject);\\r\\n\\r\\n        for (let i = 0; i < targetObject.batchesQueue.length; i++) {\\r\\n            targetObject.batchesQueue[i] = new BatchOfJobs(targetObject.batchesQueue[i]);\\r\\n        }\\r\\n\\r\\n        batchQueue.set(target, targetObject);\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction cleanFinishedAndPoisonedJobsFromQueue(targetNames, batchQueue, ns) {\\r\\n\\r\\n    for (const target of targetNames) {\\r\\n        const batches = batchQueue.get(target);\\r\\n        const currentTime = new Date();\\r\\n\\r\\n        for (let i = batches.batchesQueue.length - 1; i > -1; i--) {\\r\\n            const batch = batches.batchesQueue[i];\\r\\n            let remove = false;\\r\\n\\r\\n            if (batch.wholeBatchFinishsBefore() < currentTime) {\\r\\n\\r\\n                if (batch.jobs.every(x => x.executing) === false) {\\r\\n                    batches.failures++;\\r\\n                    batches.failuresInTheLastHour++;\\r\\n                    batches.lastFailure = batch;\\r\\n                    failuresThisRun++;\\r\\n                } else {\\r\\n                    batches.successes++;\\r\\n                    batches.successesInTheLastHour++;\\r\\n                    successesThisRun++;\\r\\n                }\\r\\n\\r\\n                remove = true;\\r\\n                batches.targetMachineSaturatedWithAttacks = true;\\r\\n            }\\r\\n\\r\\n            if (batch.poisonedBatch) {\\r\\n                batches.failures++;\\r\\n                batches.failuresInTheLastHour++;\\r\\n                batches.lastFailure = batch;\\r\\n                failuresThisRun++;\\r\\n\\r\\n                remove = true;\\r\\n\\r\\n                batch.jobs.map(x => {\\r\\n                    if (x.pid) {\\r\\n                        ns.kill(x.pid);\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n\\r\\n            if (remove) {\\r\\n                batches.batchesQueue.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction addNewTargetsToQueueIfNeeded(batchQueue, targetNames, ns, enviroment, player, noMoreInvestingForEndGame, homeMemoryLimitations) {\\r\\n    const batchesAreSaturated = targetNames.map(x => batchQueue.get(x)).every(x => x.targetMachineSaturatedWithAttacks);\\r\\n    const over2andAHalfTrillionDollars = ns.getServerMoneyAvailable(\\\"home\\\") > 2_500_000_000_000;\\r\\n    const massiveRamOnHome = getServer(ns, \\\"home\\\", homeMemoryLimitations).maxRam > 400_000;\\r\\n\\r\\n    let addNewServerToAttack = false;\\r\\n\\r\\n    if (batchQueue.size < 15 && batchesAreSaturated && averageErrorRateOver10Minutes < errorRateAtWhichWeAllowNewThings && !noMoreInvestingForEndGame) {\\r\\n        addNewServerToAttack = true;\\r\\n    }\\r\\n\\r\\n    if (over2andAHalfTrillionDollars && batchQueue.size < 20) {\\r\\n        addNewServerToAttack = true;\\r\\n    }\\r\\n\\r\\n    if (over2andAHalfTrillionDollars && batchesAreSaturated && batchQueue.size < 50) {\\r\\n        addNewServerToAttack = true;\\r\\n    }\\r\\n\\r\\n    if(massiveRamOnHome && batchQueue.size < 50){\\r\\n        addNewServerToAttack = true;\\r\\n    }\\r\\n\\r\\n    if (batchQueue.size < 2 || addNewServerToAttack) {\\r\\n\\r\\n        const allHackedMachines = enviroment\\r\\n            .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n        const allMachinesByOrderOfValue = allHackedMachines\\r\\n            .filter(x => !x.server.purchasedByPlayer && x.server.moneyMax !== 0 && !targetNames.includes(x.name))\\r\\n            .sort((a, b) => b.server.moneyMax - a.server.moneyMax);\\r\\n\\r\\n        // only add machine if 90%+ chances of successfully hacking at minDifficulty. \\r\\n        let mostValuableMachine;\\r\\n        for (const hackPossibility of allMachinesByOrderOfValue) {\\r\\n            const server = ns.getServer(hackPossibility.name);\\r\\n            server.hackDifficulty = server.minDifficulty;\\r\\n            const chanceOfHackingAtMinDif = ns.formulas.hacking.hackChance(server, player);\\r\\n\\r\\n            if (chanceOfHackingAtMinDif > 0.8) {\\r\\n                mostValuableMachine = hackPossibility;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (mostValuableMachine) {\\r\\n            batchQueue.set(mostValuableMachine.name, new BatchQueueForTarget());\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getHackThreadsForTotalStealing(ns, theTarget, targetServer) {\\r\\n    return Math.ceil(ns.hackAnalyzeThreads(theTarget, targetServer.moneyAvailable));\\r\\n}\\r\\n\\r\\nfunction getGrowThreads(ns, serverToHack, player, cpuCores) {\\r\\n    return Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, cpuCores));\\r\\n}\\r\\n\\r\\nfunction createNewDataFromOldDateAndAddSeconds(date, secondsToAdd) {\\r\\n    const newDate = new Date(date);\\r\\n    addSecondsToDate(newDate, secondsToAdd);\\r\\n    return newDate;\\r\\n}\\r\\n\\r\\nfunction createNewDataFromOldDateAndAddMilliseconds(date, secondsToAdd) {\\r\\n    const newDate = new Date(date);\\r\\n    addMillisecondsToDate(newDate, secondsToAdd);\\r\\n    return newDate;\\r\\n}\\r\\n\\r\\n\\r\\nfunction addSecondsToDate(date, secondsToAdd) {\\r\\n    date.setSeconds(date.getSeconds() + secondsToAdd);\\r\\n}\\r\\n\\r\\nfunction addMillisecondsToDate(date, msToAdd) {\\r\\n    date.setMilliseconds(date.getMilliseconds() + msToAdd);\\r\\n}\\r\\n\\r\\nfunction getWeakenEndDate(ns, targetServer, player, difficultyToWeaken) {\\r\\n    let endDate = new Date();\\r\\n    targetServer.hackDifficulty = targetServer.minDifficulty + difficultyToWeaken;\\r\\n\\r\\n    const howLongToWeaken = ns.formulas.hacking.weakenTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToWeaken);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getGrowEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    targetServer.moneyAvailable = 0;\\r\\n    targetServer.hackDifficulty = targetServer.minDifficulty;\\r\\n\\r\\n    const howLongToGrow = ns.formulas.hacking.growTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToGrow);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getHackEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    targetServer.moneyAvailable = targetServer.moneyMax;\\r\\n    targetServer.hackDifficulty = targetServer.minDifficulty;\\r\\n\\r\\n    const howLongToHack = ns.formulas.hacking.hackTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToHack);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getNumberOfThreadsToWeaken(ns, cpuCores, amountToWeaken) {\\r\\n    let numberOfThreadsToWeaken = 0;\\r\\n    let foundNumberOfThreads = false;\\r\\n    while (!foundNumberOfThreads) {\\r\\n        numberOfThreadsToWeaken++;\\r\\n\\r\\n        const amountNumberOfThreadsWillWeaken = Math.ceil(ns.weakenAnalyze(numberOfThreadsToWeaken, cpuCores));\\r\\n        if (amountNumberOfThreadsWillWeaken > amountToWeaken) {\\r\\n            foundNumberOfThreads = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //add a small margin\\r\\n    numberOfThreadsToWeaken += 20;\\r\\n    return numberOfThreadsToWeaken;\\r\\n}\\r\\n\",\"filename\":\"scripts/hacking/batch-dispatch.js\",\"server\":\"home\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"home\"}}],[\"scripts/hacking/hack-all-machines.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const helpers = new Helpers(ns);\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n\\r\\n    const portsWeCanPop = helpers.numberOfPortsWeCanPop();\\r\\n    const currentHackingLevel = ns.getHackingLevel();\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.requiredHackingSkill < currentHackingLevel)\\r\\n        .filter(x => x.server.numOpenPortsRequired <= portsWeCanPop || x.server.purchasedByPlayer);\\r\\n\\r\\n    allHackableMachines\\r\\n        .filter(x => !x.server.hasAdminRights)\\r\\n        .map(x => helpers.hackMachine(x.name));\\r\\n}\\r\\n\\r\\nexport class Helpers {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    hackMachine(hostname) {\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            this.ns.brutessh(hostname);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            this.ns.ftpcrack(hostname);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            this.ns.relaysmtp(hostname)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            this.ns.httpworm(hostname)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            this.ns.sqlinject(hostname)\\r\\n        }\\r\\n\\r\\n        this.ns.nuke(hostname);\\r\\n        this.ns.killall(hostname);\\r\\n    }\\r\\n\\r\\n    numberOfPortsWeCanPop() {\\r\\n        let portsWeCanPop = 0;\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        return portsWeCanPop;\\r\\n    }\\r\\n\\r\\n    fileExists(fileName) {\\r\\n        return this.ns.fileExists(fileName, \\\"home\\\");\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-all-machines.js\",\"server\":\"home\"}}],[\"scripts/hacking/hack-until-worked.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n    let moneyStolen = 0;\\r\\n\\r\\n    while (moneyStolen === 0) {\\r\\n        moneyStolen = await ns.hack(target);\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/hack-until-worked.js\",\"server\":\"home\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"home\"}}],[\"scripts/hacking/memory-starved-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"const hackScript = 'scripts/hacking/hack.js';\\r\\nconst growScript = 'scripts/hacking/grow.js';\\r\\nconst weakenScript = 'scripts/hacking/weaken.js';\\r\\n\\r\\nlet ranOnHomeThisTime = false;\\r\\n\\r\\nexport async function main(ns) {\\r\\n\\r\\n    const memoryStarvedQueueFileName = 'data/memoryStarvedQueue.txt';\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\";\\r\\n    ranOnHomeThisTime = false;\\r\\n\\r\\n\\r\\n    const homeMemoryLimitations = JSON.parse(ns.read(\\\"data/ramToReserveOnHome.txt\\\"));\\r\\n\\r\\n\\r\\n    let batchTargets = [];\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        const batchQueue = JSON.parse(ns.read(batchQueuesFileName));\\r\\n        batchTargets = batchQueue.map(x => x[0]);\\r\\n    }\\r\\n\\r\\n\\r\\n    let memoryStarvedQueue = new Map();\\r\\n    if (ns.fileExists(memoryStarvedQueueFileName)) {\\r\\n        memoryStarvedQueue = new Map(JSON.parse(ns.read(memoryStarvedQueueFileName)));\\r\\n    }\\r\\n\\r\\n    cleanProcessesAttackingBatchTarget(ns, memoryStarvedQueue, batchTargets);\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n    const allHackedMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    let allMachinesByOrderOfValue = allHackedMachines\\r\\n        .filter(x => !x.server.purchasedByPlayer && !batchTargets.includes(x.name) && x.server.moneyMax > 0)\\r\\n        .sort((a, b) => b.server.moneyMax - a.server.moneyMax)\\r\\n        .map(x => new HackedRecord(\\r\\n            x.name,\\r\\n            x.server.moneyMax,\\r\\n            x.server.minDifficulty,\\r\\n            x.server.hackDifficulty,\\r\\n            x.server.moneyAvailable,\\r\\n        ))\\r\\n\\r\\n    seeIfWeNeedToDoNextStep(ns, memoryStarvedQueue);\\r\\n\\r\\n    const machinesNextInQueueToHack = getMachinesToHack(allMachinesByOrderOfValue, memoryStarvedQueue, ns);\\r\\n\\r\\n    const hackQueue = [];\\r\\n    const growAndWeakenQueue = [];\\r\\n\\r\\n    machinesNextInQueueToHack.forEach(machineInQuestion => {\\r\\n        if (machineInQuestion.needsWeakening() || machineInQuestion.needsGrowing()) {\\r\\n            growAndWeakenQueue.push(machineInQuestion);\\r\\n        } else {\\r\\n            hackQueue.push(machineInQuestion);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    for (const target of hackQueue) {\\r\\n        let numberOfThreads = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable));\\r\\n\\r\\n        numberOfThreads = 500\\r\\n\\r\\n        await executeScriptAcrossFleet(ns, hackScript, enviroment, homeMemoryLimitations, numberOfThreads, target, memoryStarvedQueue);\\r\\n    }\\r\\n\\r\\n    for (const target of growAndWeakenQueue) {\\r\\n        let threadsNeeded;\\r\\n        let script;\\r\\n\\r\\n        if (target.needsGrowing()) {\\r\\n            script = growScript;\\r\\n            const serverToHack = getServer(ns, target.name, homeMemoryLimitations);\\r\\n            const player = ns.getPlayer();\\r\\n\\r\\n            if (ns.fileExists('Formulas.exe')) {\\r\\n                threadsNeeded = Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, 1));\\r\\n            } else {\\r\\n                threadsNeeded = Math.ceil(ns.hackAnalyzeThreads(target.name, target.moneyAvailable)) * 5;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (target.needsWeakening()) {\\r\\n            script = weakenScript;\\r\\n            const amountToWeaken = target.hackDifficulty - target.minDifficulty;\\r\\n\\r\\n            threadsNeeded = getNumberOfThreadsToWeaken(ns, 1, amountToWeaken);\\r\\n        }\\r\\n\\r\\n        threadsNeeded = 500\\r\\n\\r\\n        await executeScriptAcrossFleet(ns, script, enviroment, homeMemoryLimitations, threadsNeeded, target, memoryStarvedQueue);\\r\\n    }\\r\\n\\r\\n    ns.rm(memoryStarvedQueueFileName);\\r\\n    ns.write(memoryStarvedQueueFileName, JSON.stringify(Array.from(memoryStarvedQueue.entries()), \\\"W\\\"));\\r\\n}\\r\\n\\r\\nasync function executeScriptAcrossFleet(ns, script, enviroment, homeMemoryLimitations, numberOfThreadsWanted, target, memoryStarvedQueue) {\\r\\n    const ramNeededForOneThread = ns.getScriptRam(script);\\r\\n\\r\\n    let numberOfThreadsLeft = numberOfThreadsWanted;\\r\\n    let serversExausted = false;\\r\\n\\r\\n    while (numberOfThreadsLeft > 0 && serversExausted === false) {\\r\\n        const result = getMachineWithNumberOfThreads(ns, enviroment, numberOfThreadsLeft, ramNeededForOneThread, homeMemoryLimitations);\\r\\n\\r\\n        if (!result.machineToRunOn || result.threads <= 0) {\\r\\n            serversExausted = true;\\r\\n        } else {\\r\\n            const machineToRunOn = result.machineToRunOn.hostname;\\r\\n            const threads = result.threads\\r\\n\\r\\n            ns.scp(script, machineToRunOn);\\r\\n            const pid = ns.exec(script, machineToRunOn, threads, target.name);\\r\\n\\r\\n            if (pid !== 0) {\\r\\n                if (machineToRunOn === \\\"home\\\") {\\r\\n                    ranOnHomeThisTime = true;\\r\\n                }\\r\\n                target.pids.push(pid);\\r\\n                target.runningOn.push({ machineToRunOn, threads })\\r\\n            }\\r\\n\\r\\n            numberOfThreadsLeft -= threads;\\r\\n\\r\\n            memoryStarvedQueue.set(target.name, target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getMachineWithNumberOfThreads(ns, enviroment, threads, ramCostPerThread, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n    const buyOrUpgradeServerFlag = 'buyOrUpgradeServerFlag.txt';\\r\\n    let originalAmountNeeded = ramCostPerThread * threads;\\r\\n\\r\\n    let globalMaxAmountNeeded = 0;\\r\\n\\r\\n    if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n        globalMaxAmountNeeded = JSON.parse(ns.read(buyOrUpgradeServerFlag));\\r\\n    }\\r\\n\\r\\n    if (originalAmountNeeded > globalMaxAmountNeeded) {\\r\\n        globalMaxAmountNeeded = originalAmountNeeded;\\r\\n        ns.rm(buyOrUpgradeServerFlag);\\r\\n        ns.write(buyOrUpgradeServerFlag, globalMaxAmountNeeded, \\\"W\\\");\\r\\n    }\\r\\n\\r\\n    machineToRunOn = getMachineWithEnoughRam(ns, threads * ramCostPerThread, enviroment, homeMemoryLimitations);\\r\\n\\r\\n    while (threads > 0 && !machineToRunOn) {\\r\\n        threads--;\\r\\n\\r\\n        machineToRunOn = getMachineWithEnoughRam(ns, threads * ramCostPerThread, enviroment, homeMemoryLimitations);\\r\\n    }\\r\\n\\r\\n    return { threads, machineToRunOn };\\r\\n}\\r\\n\\r\\nfunction getMachineWithEnoughRam(ns, ramNeeded, enviroment, homeMemoryLimitations) {\\r\\n    let machineToRunOn;\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.hasAdminRights);\\r\\n\\r\\n    const homeServer = getServer(ns, \\\"home\\\", homeMemoryLimitations);\\r\\n\\r\\n    allHackableMachines.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const machinesWithRamAvailable = allHackableMachines\\r\\n        .filter(x => x.server.ramUsed < x.server.maxRam && x.server.maxRam !== 0);\\r\\n\\r\\n    const serversWithEnoughRam = machinesWithRamAvailable\\r\\n        .filter(x => (x.server.maxRam - x.server.ramUsed) > ramNeeded)\\r\\n        .sort((b, a) => b.server.maxRam - a.server.maxRam);\\r\\n\\r\\n    for (const potentialServerToRun of serversWithEnoughRam) {\\r\\n        const server = getServer(ns, potentialServerToRun.name, homeMemoryLimitations);\\r\\n        const freeRam = server.maxRam - server.ramUsed;\\r\\n        if (freeRam > ramNeeded) {\\r\\n            machineToRunOn = server;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machineToRunOn;\\r\\n}\\r\\n\\r\\n\\r\\nfunction getServer(ns, serverName, homeMemoryLimitations) {\\r\\n    const server = ns.getServer(serverName);\\r\\n\\r\\n    if (serverName === \\\"home\\\") {\\r\\n\\r\\n        let ramToReserve = homeMemoryLimitations.ramToReserve;\\r\\n\\r\\n        if (server.maxRam < ramToReserve) {\\r\\n            ramToReserve = homeMemoryLimitations.ramToReserveInLimitedEnvironment;\\r\\n        }\\r\\n\\r\\n        server.maxRam -= ramToReserve;\\r\\n\\r\\n        const freeRam = server.maxRam - server.ramUsed\\r\\n\\r\\n        if (freeRam < 0) {\\r\\n            server.ramUsed = server.maxRam;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction cleanProcessesAttackingBatchTarget(ns, memoryStarvedQueue, batchTargets) {\\r\\n    for (const machineBeingHacked of memoryStarvedQueue) {\\r\\n        const whoTheyHackin = machineBeingHacked[0];\\r\\n\\r\\n        if (batchTargets.includes(whoTheyHackin)) {\\r\\n            const hackinRecord = memoryStarvedQueue.get(whoTheyHackin);\\r\\n            for (const pid of hackinRecord.pids) {\\r\\n                ns.kill(pid);\\r\\n            }\\r\\n\\r\\n            memoryStarvedQueue.delete(whoTheyHackin);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nfunction getMachinesToHack(hackableMachinesInTheEnvironment, memoryStarvedQueue, ns) {\\r\\n    const machinesNextInQueueToHack = [];\\r\\n    const doNotAdd = [];\\r\\n\\r\\n    for (const hackableMachine of hackableMachinesInTheEnvironment) {\\r\\n        if (memoryStarvedQueue.has(hackableMachine.name)) {\\r\\n            const record = memoryStarvedQueue.get(hackableMachine.name);\\r\\n            if (record.readyForNextProcess) {\\r\\n                machinesNextInQueueToHack.push(hackableMachine);\\r\\n            }\\r\\n\\r\\n            doNotAdd.push(hackableMachine);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    for (const hackableMachine of hackableMachinesInTheEnvironment) {\\r\\n        if (!doNotAdd.find(x => x.name === hackableMachine.name)) {\\r\\n            machinesNextInQueueToHack.push(hackableMachine);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return machinesNextInQueueToHack;\\r\\n}\\r\\n\\r\\nexport class HackedRecord {\\r\\n    constructor(name, maxMoney, minDifficulty, hackDifficulty, moneyAvailable) {\\r\\n        this.name = name;\\r\\n        this.moneyThreshhold = maxMoney * 0.75;\\r\\n        this.securityThreshholdTarget = minDifficulty + 5;\\r\\n        this.hackDifficulty = hackDifficulty;\\r\\n        this.moneyAvailable = moneyAvailable;\\r\\n        this.minDifficulty = minDifficulty;\\r\\n        this.pids = [];\\r\\n\\r\\n        this.runningOn = [];\\r\\n\\r\\n        this.isHacking = false;\\r\\n        this.readyForNextProcess = false;\\r\\n    }\\r\\n\\r\\n    needsWeakening() {\\r\\n        return this.hackDifficulty > this.securityThreshholdTarget;\\r\\n    }\\r\\n\\r\\n    needsGrowing() {\\r\\n        return this.moneyAvailable < this.moneyThreshhold;\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getNumberOfThreadsToWeaken(ns, cpuCores, amountToWeaken) {\\r\\n    let numberOfThreadsToWeaken = 0;\\r\\n    let foundNumberOfThreads = false;\\r\\n    while (!foundNumberOfThreads) {\\r\\n        numberOfThreadsToWeaken++;\\r\\n\\r\\n        const amountNumberOfThreadsWillWeaken = Math.ceil(ns.weakenAnalyze(numberOfThreadsToWeaken, cpuCores));\\r\\n        if (amountNumberOfThreadsWillWeaken > amountToWeaken) {\\r\\n            foundNumberOfThreads = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //add a small margin\\r\\n    numberOfThreadsToWeaken += 20;\\r\\n    return numberOfThreadsToWeaken;\\r\\n}\\r\\n\\r\\nfunction seeIfWeNeedToDoNextStep(ns, recordOfWhoIsBeingHacked) {\\r\\n    for (const companyBeingHacked of recordOfWhoIsBeingHacked.keys()) {\\r\\n        const record = recordOfWhoIsBeingHacked.get(companyBeingHacked);\\r\\n\\r\\n        if (record.pids.every(x => !ns.isRunning(x))) {\\r\\n            if (record.isHacking) {\\r\\n                recordOfWhoIsBeingHacked.delete(companyBeingHacked)\\r\\n            } else {\\r\\n                record.readyForNextProcess = true;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/hacking/memory-starved-dispatch.js\",\"server\":\"home\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"home\"}}],[\"scripts/investments/invest-in-nodes.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//take an hours until payoff numberz\\r\\n\\r\\n//hacknet\\r\\n\\r\\n/** @param {NS} ns */\\r\\n//run scripts/invest-in-nodes.js endDate\\r\\nexport async function main(ns) {\\r\\n    const endDate = ns.args[0];\\r\\n\\r\\n    if (endDate === undefined){\\r\\n        ns.tprint(\\\"need inputs\\\");\\r\\n    } else {\\r\\n        const timeLeftInSeconds = (new Date(endDate) - new Date()) / 1000;\\r\\n        const conservativeTimeLeft = timeLeftInSeconds / 2;\\r\\n    \\r\\n        let numberPurchased = 0\\r\\n    \\r\\n        while(buyHacknetNodeIfAboveBreakeven(ns, conservativeTimeLeft)){\\r\\n            numberPurchased++;\\r\\n        }\\r\\n\\r\\n        if(numberPurchased != 0){\\r\\n            ns.tprint(\\\"Total nodes purchase: \\\", numberPurchased);\\r\\n        }        \\r\\n    }\\r\\n}\\r\\n\\r\\nfunction buyHacknetNodeIfAboveBreakeven(ns, secondsLeft) {\\r\\n    const productionMultiplier = 2.8991;\\r\\n    const upgradeCostMultiplier = 0.8700;\\r\\n\\r\\n    const fixedCostOfFullyUpgradedNode = 409_194_200 * upgradeCostMultiplier;\\r\\n    const variableCost = ns.hacknet.getPurchaseNodeCost();\\r\\n    const totalCost = variableCost + fixedCostOfFullyUpgradedNode;\\r\\n\\r\\n    const moneyToInvest = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (totalCost > moneyToInvest) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    const revPerSecond = 9172 * productionMultiplier;\\r\\n    const expectedValue = secondsLeft * revPerSecond;\\r\\n\\r\\n    if (expectedValue < totalCost) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    const indexOfNode = ns.hacknet.purchaseNode();\\r\\n    ns.hacknet.upgradeLevel(indexOfNode, 199);\\r\\n    ns.hacknet.upgradeRam(indexOfNode, 6);\\r\\n    ns.hacknet.upgradeCore(indexOfNode, 15);\\r\\n\\r\\n    return true;\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/investments/invest-in-nodes.js\",\"server\":\"home\"}}],[\"scripts/investments/investments-coordinator.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const ramObservationsTextFile = '../../data/ramObservations.txt';\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n    \\r\\n    const stopInvestingFileName = \\\"stopInvesting.txt\\\";\\r\\n    if (ns.fileExists(stopInvestingFileName)) {\\r\\n        if (ns.fileExists(ramObservationsTextFile)) {\\r\\n            ns.rm(ramObservationsTextFile);\\r\\n        }\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n    let stockMarketReserveMoney = new ReserveForTrading();\\r\\n    if (ns.fileExists(stockMarketReserveMoneyFile)) {\\r\\n        stockMarketReserveMoney = new ReserveForTrading(JSON.parse(ns.read(stockMarketReserveMoneyFile)));\\r\\n    }\\r\\n    \\r\\n    if (stockMarketReserveMoney.moneyInvested > 7_000_000_000) {\\r\\n        if (!ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n            checkTor(ns);\\r\\n            const formulasCost = ns.singularity.getDarkwebProgramCost(\\\"Formulas.exe\\\")\\r\\n            if(stockMarketReserveMoney.canSpend(ns, formulasCost)){\\r\\n                ns.singularity.purchaseProgram(\\\"Formulas.exe\\\");\\r\\n                ns.rm(ramObservationsTextFile);\\r\\n                ns.rm('../../buyOrUpgradeServerFlag.txt');\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ns.run('scripts/investments/purchase-server.js');\\r\\n    \\r\\n    purchaseProgram(ns, 50, \\\"BruteSSH.exe\\\", stockMarketReserveMoney);\\r\\n    purchaseProgram(ns, 100, \\\"FTPCrack.exe\\\", stockMarketReserveMoney);\\r\\n    purchaseProgram(ns, 250, \\\"relaySMTP.exe\\\", stockMarketReserveMoney);\\r\\n    purchaseProgram(ns, 500, \\\"HTTPWorm.exe\\\", stockMarketReserveMoney);\\r\\n    purchaseProgram(ns, 750, \\\"SQLInject.exe\\\", stockMarketReserveMoney);\\r\\n\\r\\n\\r\\n    if (moneyAvailable > 1_000_000_000_000) {\\r\\n        const endDate = new Date();\\r\\n        endDate.setHours(endDate.getHours() + 6);\\r\\n        ns.run('scripts/investments/invest-in-nodes.js', 1, endDate.toISOString())\\r\\n    }\\r\\n  \\r\\n}\\r\\n\\r\\nfunction purchaseProgram(ns, atWhatHackingLevelToBuy, programToBuy, stockMarketReserveMoney) {\\r\\n    const playerHackingLevel = ns.getHackingLevel();\\r\\n    if (!ns.fileExists(programToBuy) && playerHackingLevel > atWhatHackingLevelToBuy) {\\r\\n\\r\\n        const cost = ns.singularity.getDarkwebProgramCost(programToBuy)\\r\\n        \\r\\n        if(stockMarketReserveMoney.canSpend(ns, cost)){\\r\\n            checkTor(ns);\\r\\n            ns.singularity.purchaseProgram(programToBuy);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction checkTor(ns) {\\r\\n    if (!ns.hasTorRouter()) {\\r\\n        ns.singularity.purchaseTor()\\r\\n    }\\r\\n}\\r\\n\\r\\nclass ReserveForTrading {\\r\\n    stockMarketReserveMoneyLimit = 1_000_000_000_000;\\r\\n    capitalToReserveForTrading = 0;\\r\\n    moneyInvested = 0;\\r\\n    moneyRequested = new Map();\\r\\n    countOfVisitedWithoutFillingRequest = 0;\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    setMoneyInvested(moneyInvested, ns){\\r\\n        this.moneyInvested = moneyInvested;\\r\\n\\r\\n        const potentialCapitalReserve = moneyInvested / 2;\\r\\n        \\r\\n        this.capitalToReserveForTrading = Math.max(...[potentialCapitalReserve, this.capitalToReserveForTrading]);\\r\\n\\r\\n        if(this.capitalToReserveForTrading > this.stockMarketReserveMoneyLimit){\\r\\n            this.capitalToReserveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        this.countOfVisitedWithoutFillingRequest++;\\r\\n    }\\r\\n\\r\\n    canSpend(ns, moneyNeeded){\\r\\n        const moneyOnHome = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        let moneyToSaveForTrading = this.capitalToReserveForTrading - this.moneyInvested;\\r\\n\\r\\n        if(moneyToSaveForTrading < 0){\\r\\n            moneyToSaveForTrading = 0;\\r\\n        }\\r\\n\\r\\n        if(moneyToSaveForTrading > this.stockMarketReserveMoneyLimit){\\r\\n            moneyToSaveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        const canSpend = moneyNeeded < moneyOnHome - moneyToSaveForTrading\\r\\n\\r\\n        if(canSpend === false){\\r\\n            this.requestMoney(ns, moneyNeeded);\\r\\n        } else {\\r\\n            this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n            const nameOfRequest = \\\"investments-coordinator\\\";\\r\\n            this.moneyRequested.delete(nameOfRequest);\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        return canSpend;\\r\\n    }\\r\\n\\r\\n    requestMoney(ns, amount){\\r\\n        const nameOfRequest = \\\"investments-coordinator\\\";\\r\\n        this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n        const moneyRequestedPreviously = this.moneyRequested.get(nameOfRequest);\\r\\n        if(moneyRequestedPreviously){\\r\\n            if(moneyRequestedPreviously < amount){\\r\\n                this.moneyRequested.set(nameOfRequest, amount);\\r\\n                this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n                const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n                ns.rm(stockMarketReserveMoneyFile);\\r\\n                ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n            }\\r\\n        } else {\\r\\n            this.moneyRequested.set(nameOfRequest, amount);\\r\\n            this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/investments/investments-coordinator.js\",\"server\":\"home\"}}],[\"scripts/investments/purchase-server.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let countOfTriesToBuyServers = 0;\\r\\nlet countOfVisitsWithoutTryingToBuy = 0;\\r\\nconst beforeFormulasServerSpendFile = \\\"data/beforeFormulasServerSpend.txt\\\";\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const buyOrUpgradeServerFlag = \\\"../../buyOrUpgradeServerFlag.txt\\\";\\r\\n    const ramObservationsTextFile = '../../data/ramObservations.txt';\\r\\n    const typeRecord = \\\"../../data/typeOfServerPurchase.txt\\\";\\r\\n\\r\\n    let additionalRamNeeded = 0;\\r\\n    let ramObservations = [];\\r\\n    let type = new TypeOfPurchase();\\r\\n\\r\\n    if (ns.fileExists(ramObservationsTextFile)) {\\r\\n        countOfVisitsWithoutTryingToBuy++;\\r\\n    } else {\\r\\n        countOfVisitsWithoutTryingToBuy = 0;\\r\\n    }\\r\\n\\r\\n    if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n        countOfVisitsWithoutTryingToBuy = 0;\\r\\n    }\\r\\n\\r\\n    let tryToBuy = ns.fileExists(buyOrUpgradeServerFlag);\\r\\n\\r\\n    if (tryToBuy === false && countOfVisitsWithoutTryingToBuy < 300) {\\r\\n        tryToBuy = true;\\r\\n    }\\r\\n\\r\\n    if (tryToBuy === false) {\\r\\n        return;\\r\\n    } else {\\r\\n        countOfTriesToBuyServers++;\\r\\n\\r\\n        if (ns.fileExists(typeRecord)) {\\r\\n            const tempType = JSON.parse(ns.read(typeRecord));\\r\\n            type = new TypeOfPurchase(tempType);\\r\\n        }\\r\\n\\r\\n        if (!type.lastPurchaseDate) {\\r\\n            type.lastPurchaseDate = new Date();\\r\\n        }\\r\\n\\r\\n        if (ns.fileExists(ramObservationsTextFile)) {\\r\\n            ramObservations = JSON.parse(ns.read(ramObservationsTextFile));\\r\\n\\r\\n        }\\r\\n\\r\\n        if (ns.fileExists(buyOrUpgradeServerFlag)) {\\r\\n            const latestRamNeeded = JSON.parse(ns.read(buyOrUpgradeServerFlag));\\r\\n\\r\\n            ramObservations.push(latestRamNeeded);\\r\\n\\r\\n            ns.rm(buyOrUpgradeServerFlag);\\r\\n\\r\\n            ns.rm(ramObservationsTextFile);\\r\\n            ns.write(ramObservationsTextFile, JSON.stringify(ramObservations), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        if (ramObservations.length === 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (ramObservations.length > 10 || countOfTriesToBuyServers > 300) {\\r\\n\\r\\n            additionalRamNeeded = Math.min(...ramObservations);\\r\\n\\r\\n            if (type.average) {\\r\\n                additionalRamNeeded = ramObservations.reduce((a, b) => a + b) / ramObservations.length;\\r\\n            }\\r\\n\\r\\n            if (ns.fileExists('Formulas.exe')) {\\r\\n                if (type.max) {\\r\\n                    additionalRamNeeded = Math.max(...ramObservations);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            const ramNeededForBatchesFile = \\\"data/ramNeededToStartBatches.txt\\\";\\r\\n            if (ns.fileExists(ramNeededForBatchesFile)) {\\r\\n                const ramNeededToStartBatches = Number(ns.read(ramNeededForBatchesFile));\\r\\n\\r\\n                if (ramNeededToStartBatches < additionalRamNeeded) {\\r\\n                    additionalRamNeeded = ramNeededToStartBatches;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (additionalRamNeeded === 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        let maxRam = 1048576;\\r\\n\\r\\n        const enviroment = JSON.parse(ns.read('../../data/enviroment.txt'));\\r\\n\\r\\n        const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n        let stockMarketReserveMoney = new ReserveForTrading();\\r\\n        if (ns.fileExists(stockMarketReserveMoneyFile)) {\\r\\n            stockMarketReserveMoney = new ReserveForTrading(JSON.parse(ns.read(stockMarketReserveMoneyFile)));\\r\\n        }\\r\\n\\r\\n\\r\\n        const playerPurchasedServers = enviroment\\r\\n            .filter(x => x.server.purchasedByPlayer && x.server.maxRam < maxRam)\\r\\n            .sort((b, a) => a.server.maxRam - b.server.maxRam)\\r\\n\\r\\n        let upgradedOrPurchased = false;\\r\\n        if (playerPurchasedServers.length === 0) {\\r\\n            upgradedOrPurchased = purchaseServer(ns, maxRam, additionalRamNeeded, stockMarketReserveMoney);\\r\\n        } else {\\r\\n            const smallestPlayerPurchasedServer = playerPurchasedServers.pop();\\r\\n            upgradedOrPurchased = upgradeSmallMachine(ns, smallestPlayerPurchasedServer, maxRam, additionalRamNeeded, stockMarketReserveMoney);\\r\\n        }\\r\\n\\r\\n        if (upgradedOrPurchased) {\\r\\n            ns.rm(ramObservationsTextFile);\\r\\n            type.changeType();\\r\\n            const now = new Date();\\r\\n            const timeStamp = `[${String(now.getHours()).padStart(2, 0)}:${String(now.getMinutes()).padStart(2, 0)}]`\\r\\n            ns.toast(`${timeStamp} More than ${Math.round(additionalRamNeeded)} GB bought for server`, \\\"success\\\", 300000);\\r\\n        }\\r\\n\\r\\n        ns.rm(typeRecord);\\r\\n        ns.write(typeRecord, JSON.stringify(type), \\\"W\\\");\\r\\n        if (countOfTriesToBuyServers > 100) {\\r\\n            countOfTriesToBuyServers = 0;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction purchaseServer(ns, maxRam, additionalRamNeeded, stockMarketReserveMoney) {\\r\\n    let currentNumberOfPurchasedServers = ns.getPurchasedServers().length;\\r\\n    let ramToBuy = 64;\\r\\n\\r\\n    if (currentNumberOfPurchasedServers < ns.getPurchasedServerLimit()) {\\r\\n\\r\\n        let purchaseCost = ns.getPurchasedServerCost(ramToBuy);\\r\\n        let moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        if (moneyAvailable > purchaseCost) {\\r\\n\\r\\n            while (moneyAvailable > purchaseCost && ramToBuy < additionalRamNeeded) {\\r\\n\\r\\n                ramToBuy = ramToBuy * 2;\\r\\n\\r\\n                purchaseCost = ns.getPurchasedServerCost(ramToBuy);\\r\\n            }\\r\\n\\r\\n            if (ramToBuy > maxRam) {\\r\\n                ramToBuy = maxRam;\\r\\n            }\\r\\n\\r\\n            const canBuy = canSpendThatMoney(ns, stockMarketReserveMoney, purchaseCost);\\r\\n\\r\\n            if (canBuy && ramToBuy > additionalRamNeeded) {\\r\\n                const hostname = \\\"CLOUD-\\\" + String(currentNumberOfPurchasedServers).padStart(3, '0')\\r\\n                ns.purchaseServer(hostname, ramToBuy);\\r\\n                updateMoneySpent(ns, purchaseCost);\\r\\n\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            if (countOfTriesToBuyServers > 100) {\\r\\n                ns.toast(\\\"Not enough money to buy new server\\\", \\\"warning\\\", 3000)\\r\\n                countOfTriesToBuyServers = 0;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n}\\r\\n\\r\\nfunction upgradeSmallMachine(ns, smallestPlayerPurchasedServer, maxRam, additionalRamNeeded, stockMarketReserveMoney) {\\r\\n\\r\\n    let ramToBuy = smallestPlayerPurchasedServer.server.maxRam * 2;\\r\\n\\r\\n    while (!(ramToBuy - smallestPlayerPurchasedServer.server.maxRam > additionalRamNeeded)) {\\r\\n        ramToBuy = ramToBuy * 2;\\r\\n    }\\r\\n\\r\\n    if (ramToBuy >= maxRam) {\\r\\n        ramToBuy = maxRam;\\r\\n    }\\r\\n\\r\\n    const costOfRamToBuy = ns.getPurchasedServerUpgradeCost(smallestPlayerPurchasedServer.name, ramToBuy);\\r\\n    const canSpendMoney = canSpendThatMoney(ns, stockMarketReserveMoney, costOfRamToBuy);\\r\\n\\r\\n    if (canSpendMoney) {\\r\\n        ns.upgradePurchasedServer(smallestPlayerPurchasedServer.name, ramToBuy);\\r\\n        updateMoneySpent(ns, costOfRamToBuy);\\r\\n        return true;\\r\\n    } else {\\r\\n        if (countOfTriesToBuyServers > 100) {\\r\\n            const now = new Date();\\r\\n            const timeStamp = `[${String(now.getHours()).padStart(2, 0)}:${String(now.getMinutes()).padStart(2, 0)}]`\\r\\n            ns.toast(`${timeStamp} Too expensive to buy ${ramToBuy} $${Number((costOfRamToBuy).toFixed(2)).toLocaleString()}`, \\\"warning\\\", 300000);\\r\\n            countOfTriesToBuyServers = 0;\\r\\n        }\\r\\n\\r\\n        return purchaseServer(ns, maxRam, additionalRamNeeded, stockMarketReserveMoney);\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction updateMoneySpent(ns, moneySpent) {\\r\\n    if (!ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n        let moneyLeftToSpendOnServers = 2_000_000_000;\\r\\n\\r\\n        if (ns.fileExists(beforeFormulasServerSpendFile)) {\\r\\n            moneyLeftToSpendOnServers = ns.read(beforeFormulasServerSpendFile);\\r\\n        }\\r\\n\\r\\n        moneyLeftToSpendOnServers -= moneySpent;\\r\\n\\r\\n        ns.rm(beforeFormulasServerSpendFile);\\r\\n        ns.write(beforeFormulasServerSpendFile, JSON.stringify(moneyLeftToSpendOnServers), \\\"W\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction canSpendThatMoney(ns, stockMarketReserveMoney, costOfRamToBuy) {\\r\\n    let moneyToSpend = costOfRamToBuy;\\r\\n\\r\\n    if (!ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n        let moneyLeftToSpendOnServers = 2_000_000_000;\\r\\n\\r\\n        if (ns.fileExists(beforeFormulasServerSpendFile)) {\\r\\n            moneyLeftToSpendOnServers = JSON.parse(ns.read(beforeFormulasServerSpendFile));\\r\\n        }\\r\\n\\r\\n        if (moneyToSpend > moneyLeftToSpendOnServers) {\\r\\n            moneyToSpend = moneyLeftToSpendOnServers;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (moneyToSpend !== costOfRamToBuy) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    return stockMarketReserveMoney.canSpend(ns, costOfRamToBuy);\\r\\n}\\r\\n\\r\\n\\r\\nclass TypeOfPurchase {\\r\\n\\r\\n    max = false;\\r\\n    min = true;\\r\\n    average = false;\\r\\n    lastPurchaseDate = new Date();\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n\\r\\n    changeType() {\\r\\n\\r\\n        if (this.min) {\\r\\n            this.min = false;\\r\\n            this.average = true;\\r\\n            this.max = false;\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.average) {\\r\\n            this.min = false;\\r\\n            this.average = false;\\r\\n            this.max = true;\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.max) {\\r\\n            this.min = true;\\r\\n            this.average = false;\\r\\n            this.max = false;\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this.lastPurchaseDate = new Date();\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass ReserveForTrading {\\r\\n    stockMarketReserveMoneyLimit = 1_000_000_000_000;\\r\\n    capitalToReserveForTrading = 0;\\r\\n    moneyInvested = 0;\\r\\n    moneyRequested = new Map();\\r\\n    countOfVisitedWithoutFillingRequest = 0;\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    setMoneyInvested(moneyInvested, ns) {\\r\\n        this.moneyInvested = moneyInvested;\\r\\n\\r\\n        const potentialCapitalReserve = moneyInvested / 2;\\r\\n\\r\\n        this.capitalToReserveForTrading = Math.max(...[potentialCapitalReserve, this.capitalToReserveForTrading]);\\r\\n\\r\\n        if (this.capitalToReserveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            this.capitalToReserveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        this.countOfVisitedWithoutFillingRequest++;\\r\\n    }\\r\\n\\r\\n    canSpend(ns, moneyNeeded) {\\r\\n        const moneyOnHome = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        let moneyToSaveForTrading = this.capitalToReserveForTrading - this.moneyInvested;\\r\\n\\r\\n        if (moneyToSaveForTrading < 0) {\\r\\n            moneyToSaveForTrading = 0;\\r\\n        }\\r\\n\\r\\n        if (moneyToSaveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            moneyToSaveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        const canSpend = moneyNeeded < moneyOnHome - moneyToSaveForTrading\\r\\n\\r\\n        if (canSpend === false) {\\r\\n            this.requestMoney(ns, moneyNeeded);\\r\\n        } else {\\r\\n            this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n            const nameOfRequest = \\\"purchase-server\\\";\\r\\n            this.moneyRequested.delete(nameOfRequest);\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        return canSpend;\\r\\n    }\\r\\n\\r\\n    requestMoney(ns, amount) {\\r\\n        const nameOfRequest = \\\"purchase-server\\\";\\r\\n        this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n        const moneyRequestedPreviously = this.moneyRequested.get(nameOfRequest);\\r\\n        if (moneyRequestedPreviously) {\\r\\n            if (moneyRequestedPreviously < amount) {\\r\\n                this.moneyRequested.set(nameOfRequest, amount);\\r\\n                this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n                const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n                ns.rm(stockMarketReserveMoneyFile);\\r\\n                ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n            }\\r\\n        } else {\\r\\n            this.moneyRequested.set(nameOfRequest, amount);\\r\\n            this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/investments/purchase-server.js\",\"server\":\"home\"}}],[\"scripts/singularity/backdoor-all-machines.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"\\r\\nlet backdooring = false;\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n    if(backdooring){\\r\\n        return;\\r\\n    }\\r\\n    \\r\\n    const machinesToBackdoorFirst = [\\\"CSEC\\\", \\\"avmnite-02h\\\", \\\"I.I.I.I.\\\", \\\"run4theh111z\\\"]\\r\\n\\r\\n    for(const machineName of machinesToBackdoorFirst){\\r\\n        if(await backdoorMachine(machineName, enviroment, ns)){\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    for (const machineName of enviroment.map(x => x.name)) {\\r\\n        if(await backdoorMachine(machineName, enviroment, ns)){\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nasync function backdoorMachine (machineName, enviroment, ns){\\r\\n    const serverWithLineage = enviroment.find(x => x.name === machineName)\\r\\n\\r\\n    if (serverWithLineage && !serverWithLineage.server.backdoorInstalled && serverWithLineage.server.hasAdminRights && !serverWithLineage.server.purchasedByPlayer) {\\r\\n        backdooring = true;\\r\\n        for (const server of serverWithLineage.lineage) {\\r\\n            await ns.singularity.connect(server);\\r\\n        }\\r\\n\\r\\n        await ns.singularity.connect(serverWithLineage.name);\\r\\n        await ns.singularity.installBackdoor();\\r\\n        await ns.singularity.connect(\\\"home\\\");\\r\\n\\r\\n        backdooring = false;\\r\\n        return true;\\r\\n    } \\r\\n\\r\\n    return false;\\r\\n\\r\\n}\",\"filename\":\"scripts/singularity/backdoor-all-machines.js\",\"server\":\"home\"}}],[\"scripts/singularity/buy-rep.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (moneyAvailable > 10_000_000_000_000){\\r\\n        const ownedAugmentations = ns.singularity.getOwnedAugmentations(true);\\r\\n        const player = ns.getPlayer();\\r\\n\\r\\n        const mostRepExpensiveForEachFaction = [];\\r\\n\\r\\n        for (const faction of player.factions) {\\r\\n            const maximumAugRep = Math.max(...ns\\r\\n                .singularity\\r\\n                .getAugmentationsFromFaction(faction)\\r\\n                .filter(x => x !== \\\"NeuroFlux Governor\\\")\\r\\n                .filter(x => !ownedAugmentations.includes(x))\\r\\n                .filter(x => {\\r\\n                    const prereqs = ns.singularity.getAugmentationPrereq(x);\\r\\n                    return prereqs.every(y => ownedAugmentations.includes(y));\\r\\n                })\\r\\n                .map(x => ns.singularity.getAugmentationRepReq(x)));\\r\\n    \\r\\n            const favor = ns.singularity.getFactionFavor(faction);\\r\\n    \\r\\n            if (maximumAugRep > 0 && favor > 150) {\\r\\n                mostRepExpensiveForEachFaction.push({ faction, maximumAugRep });\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if(mostRepExpensiveForEachFaction.length > 0){\\r\\n            for (const factionWithRep of mostRepExpensiveForEachFaction) {\\r\\n                \\r\\n                const currentFactionRep = ns.singularity.getFactionRep(factionWithRep.faction);\\r\\n                const repNeeded = factionWithRep.maximumAugRep - currentFactionRep;\\r\\n\\r\\n                if(repNeeded < 0){\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                let purchasedRep = 0;\\r\\n                let dollarsDonated = 0;\\r\\n\\r\\n                while(repNeeded > purchasedRep){\\r\\n                    dollarsDonated += 10_000_000;\\r\\n                    purchasedRep = ns.formulas.reputation.repFromDonation(dollarsDonated, player);\\r\\n                }\\r\\n\\r\\n                ns.singularity.donateToFaction(factionWithRep.faction, dollarsDonated);\\r\\n                \\r\\n                const fileToIndicateWeDonatedToFaction = \\\"data/factionDonatation.txt\\\";\\r\\n                ns.rm(fileToIndicateWeDonatedToFaction);\\r\\n                ns.write(fileToIndicateWeDonatedToFaction, factionWithRep.faction, \\\"W\\\");\\r\\n            }\\r\\n        }\\r\\n    }   \\r\\n}\",\"filename\":\"scripts/singularity/buy-rep.js\",\"server\":\"home\"}}],[\"scripts/singularity/create-early-programs.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (!currentWork || currentWork.type !== \\\"CREATE_PROGRAM\\\") {\\r\\n        if (!ns.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n           ns.singularity.createProgram(\\\"BruteSSH.exe\\\", true);\\r\\n\\r\\n        }\\r\\n\\r\\n        if (!ns.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n           ns.singularity.createProgram(\\\"FTPCrack.exe\\\", true);\\r\\n        }\\r\\n\\r\\n        // if (!ns.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n        //     ns.singularity.createProgram(\\\"relaySMTP.exe\\\", true);\\r\\n \\r\\n        //  }\\r\\n \\r\\n        //  if (!ns.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n        //     ns.singularity.createProgram(\\\"SQLInject.exe\\\", true);\\r\\n        //  }\\r\\n\\r\\n        //  if (!ns.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n        //     ns.singularity.createProgram(\\\"HTTPWorm.exe\\\", true);\\r\\n \\r\\n        //  }\\r\\n \\r\\n        //  if (!ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n        //     ns.singularity.createProgram(\\\"Formulas.exe\\\", true);\\r\\n        //  }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/singularity/create-early-programs.js\",\"server\":\"home\"}}],[\"scripts/singularity/do-job.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const organizations = JSON.parse(ns.read(\\\"data/organizations.txt\\\"));\\r\\n    const companiesWeWantToBecomePartOf = organizations.companiesWeWantToBecomePartOf;\\r\\n    const orderedFactions = organizations.toJoinInOrderInWhichIWantToComplete;\\r\\n\\r\\n    for (const companyName of companiesWeWantToBecomePartOf) {\\r\\n        ns.singularity.applyToCompany(companyName, \\\"software\\\");\\r\\n    }\\r\\n\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (currentWork && currentWork.type === \\\"CREATE_PROGRAM\\\") {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    let factionWeAreWorkingAtNow;\\r\\n    if (currentWork && currentWork.type === \\\"FACTION\\\") {\\r\\n        factionWeAreWorkingAtNow = currentWork.factionName;\\r\\n    }\\r\\n\\r\\n    if (currentWork && currentWork.type === \\\"COMPANY\\\") {\\r\\n        factionWeAreWorkingAtNow = currentWork.companyName;\\r\\n    }\\r\\n\\r\\n    const player = ns.getPlayer();\\r\\n    let company;\\r\\n\\r\\n    for (const potentialCompany of companiesWeWantToBecomePartOf) {\\r\\n        if (!player.factions.includes(potentialCompany)) {\\r\\n\\r\\n            if (!factionWeAreWorkingAtNow) {\\r\\n                company = potentialCompany;\\r\\n                break;\\r\\n            }\\r\\n\\r\\n            for (const faction of orderedFactions) {\\r\\n                if (faction === potentialCompany) {\\r\\n                    company = potentialCompany;\\r\\n                    break;\\r\\n                }\\r\\n\\r\\n                if (faction === factionWeAreWorkingAtNow) {\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (!company) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n\\r\\n    const positionInCompany = player.jobs[company];\\r\\n\\r\\n    if(!positionInCompany){\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const currentPositionInfo = ns.singularity.getCompanyPositionInfo(company, positionInCompany);\\r\\n    const nextPositionInfo = ns.singularity.getCompanyPositionInfo(company, currentPositionInfo.nextPosition);\\r\\n    const companyRep = ns.singularity.getCompanyRep(company);\\r\\n\\r\\n    if (nextPositionInfo.requiredReputation < companyRep && nextPositionInfo.requiredSkills.charisma > player.skills.charisma) {\\r\\n        if (!currentWork || currentWork.type !== \\\"CLASS\\\") {\\r\\n            ns.singularity.travelToCity(\\\"Sector-12\\\");\\r\\n            ns.singularity.universityCourse(\\\"Rothman University\\\", \\\"Leadership\\\", true);\\r\\n            return;\\r\\n        }\\r\\n    } else {\\r\\n        if (!currentWork || currentWork.type !== \\\"COMPANY\\\") {\\r\\n            ns.singularity.workForCompany(company, true);\\r\\n        }\\r\\n        return;\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/do-job.js\",\"server\":\"home\"}}],[\"scripts/singularity/do-work.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const player = ns.getPlayer();\\r\\n\\r\\n    const factionToMaxFile = \\\"data/factionToMax.txt\\\";\\r\\n\\r\\n    let factionToMax;\\r\\n\\r\\n    if (ns.fileExists(factionToMaxFile)) {\\r\\n        factionToMax = ns.read(factionToMaxFile);\\r\\n    }\\r\\n\\r\\n    const ownedAugmentations = JSON.parse(ns.read(\\\"data/ownedAugs.txt\\\"));\\r\\n    const organizations = JSON.parse(ns.read(\\\"data/organizations.txt\\\"));\\r\\n    const organizationsToJoinInTheOrderWeWantToComplete = organizations.toJoinInOrderInWhichIWantToComplete;\\r\\n    const doNoWorkFor = organizations.doNoWorkFor;\\r\\n    const stopAtAugments = organizations.stopAtAugments;\\r\\n\\r\\n    const factionsWithAugsToBuyAndNotEnoughtFavor = [];\\r\\n\\r\\n    for (const faction of organizationsToJoinInTheOrderWeWantToComplete) {\\r\\n        if (player.factions.includes(faction) && !doNoWorkFor.includes(faction)) {\\r\\n\\r\\n            let augmentsForFaction = ns\\r\\n                .singularity\\r\\n                .getAugmentationsFromFaction(faction);\\r\\n\\r\\n            let stopAtAugmentForFaction = stopAtAugments\\r\\n                .find(x => x.faction === faction);\\r\\n\\r\\n            if (stopAtAugmentForFaction) {\\r\\n                if (ownedAugmentations.includes(stopAtAugmentForFaction.augmentToStopAt) && stopAtAugmentForFaction.final) {\\r\\n                    augmentsForFaction = [];\\r\\n                } else if (ownedAugmentations.includes(stopAtAugmentForFaction.augmentToStopAt) && !stopAtAugmentForFaction.final) {\\r\\n                    augmentsForFaction = augmentsForFaction;\\r\\n                } else {\\r\\n                    augmentsForFaction = augmentsForFaction.filter(x => x === stopAtAugmentForFaction.augmentToStopAt);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            const maximumAugRep = Math.max(...augmentsForFaction\\r\\n                .filter(x => x !== \\\"NeuroFlux Governor\\\")\\r\\n                .filter(x => !ownedAugmentations.includes(x))\\r\\n                .map(x => ns.singularity.getAugmentationRepReq(x)));\\r\\n\\r\\n            const favor = ns.singularity.getFactionFavor(faction);\\r\\n\\r\\n            if (maximumAugRep > 0 && favor < 150) {\\r\\n                factionsWithAugsToBuyAndNotEnoughtFavor.push({ faction, maximumAugRep });\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    for (const faction of organizationsToJoinInTheOrderWeWantToComplete) {\\r\\n        const factionInAugsMix = factionsWithAugsToBuyAndNotEnoughtFavor.find(x => x.faction === faction);\\r\\n\\r\\n        if (factionInAugsMix) {\\r\\n\\r\\n            const newFactionToMax = factionInAugsMix.faction;\\r\\n\\r\\n            if (factionToMax !== newFactionToMax) {\\r\\n                factionToMax = newFactionToMax;\\r\\n                ns.rm(factionToMaxFile);\\r\\n                ns.write(factionToMaxFile, factionToMax, \\\"W\\\");\\r\\n            }\\r\\n\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (currentWork && currentWork.type === \\\"CREATE_PROGRAM\\\") {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    for (const faction of organizationsToJoinInTheOrderWeWantToComplete) {\\r\\n\\r\\n        if (currentWork &&\\r\\n            currentWork.type === \\\"COMPANY\\\" &&\\r\\n            currentWork.companyName === faction &&\\r\\n            !player.factions.includes(faction)) {\\r\\n\\r\\n            break;\\r\\n        }\\r\\n\\r\\n        if (currentWork &&\\r\\n            currentWork.type === \\\"CLASS\\\" &&\\r\\n            currentWork.classType === \\\"Leadership\\\") {\\r\\n\\r\\n            break;\\r\\n        }\\r\\n\\r\\n        const factionsAugs = factionsWithAugsToBuyAndNotEnoughtFavor.find(x => x.faction === faction);\\r\\n\\r\\n        if (!factionsAugs) {\\r\\n            continue;\\r\\n        }\\r\\n\\r\\n        const maxRepNeeded = factionsAugs.maximumAugRep;\\r\\n        const factionRep = ns.singularity.getFactionRep(faction);\\r\\n\\r\\n        if (maxRepNeeded > factionRep) {\\r\\n\\r\\n            if (!currentWork || currentWork.factionName !== faction) {\\r\\n                await ns.singularity.workForFaction(faction, \\\"hacking\\\", true);\\r\\n            }\\r\\n\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/do-work.js\",\"server\":\"home\"}}],[\"scripts/singularity/finish-bitnode.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const ownedAugmentations = ns.singularity.getOwnedAugmentations(false);\\r\\n    const includesRedPill = ownedAugmentations.includes(\\\"The Red Pill\\\");\\r\\n    const currentHackingLevel = ns.getHackingLevel();\\r\\n    const orgServerName = \\\"w0r1d_d43m0n\\\";\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n    const serverWithLineage = enviroment.find(x => x.name === orgServerName);\\r\\n\\r\\n    if (includesRedPill && currentHackingLevel > serverWithLineage.server.requiredHackingSkill) {\\r\\n        if (serverWithLineage && serverWithLineage.server.hasAdminRights) {\\r\\n            for (const server of serverWithLineage.lineage) {\\r\\n                await ns.singularity.connect(server);\\r\\n            }\\r\\n\\r\\n            await ns.singularity.connect(orgServerName);\\r\\n            await ns.singularity.installBackdoor();\\r\\n        }\\r\\n\\r\\n\\r\\n        ns.singularity.destroyW0r1dD43m0n(8, 'scripts/coordinator-for-8.js'); // 3 (corps) - 5.1 (formula.exe + int passive) - 10 (new) \\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/finish-bitnode.js\",\"server\":\"home\"}}],[\"scripts/singularity/finish-round.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let incomePerHourEstimate;\\r\\nlet updatedMoneyEstimate = false;\\r\\n\\r\\nexport async function main(ns) {\\r\\n\\r\\n    const factionToMaxFile = \\\"data/factionToMax.txt\\\";\\r\\n    const factionDonationFile = 'data/factionDonatation.txt'\\r\\n    const incomeEveryMinuteObservationsFile = 'data/incomeEveryMinuteForTheLast30Minutes.txt'\\r\\n\\r\\n    let factionToMax;\\r\\n\\r\\n    let incomeObservations = [];\\r\\n    const lastObservation = new Date();\\r\\n    let lastObservationRecordedMoney = new Date();\\r\\n\\r\\n    const formatter = new Intl.NumberFormat('en-US', {\\r\\n        style: 'currency',\\r\\n        currency: 'USD',\\r\\n    });\\r\\n\\r\\n    if (ns.fileExists(incomeEveryMinuteObservationsFile)) {\\r\\n        const incomePlusDateFromFile = JSON.parse(ns.read(incomeEveryMinuteObservationsFile));\\r\\n        incomeObservations = incomePlusDateFromFile.incomeObservations;\\r\\n        lastObservationRecordedMoney = new Date(incomePlusDateFromFile.lastObservation);\\r\\n    } else {\\r\\n        ns.write(incomeEveryMinuteObservationsFile, JSON.stringify({ incomeObservations, lastObservation }), \\\"W\\\");\\r\\n    }\\r\\n\\r\\n    if (lastObservationRecordedMoney.getMinutes() !== lastObservation.getMinutes()) {\\r\\n        let totalIncomeSinceAugInstall = 0\\r\\n\\r\\n        const moneySources = ns.getMoneySources();\\r\\n\\r\\n        for (let [key, value] of Object.entries(moneySources.sinceInstall)) {\\r\\n            if (key !== \\\"total\\\" && value > 0 && key !== \\\"stock\\\") {\\r\\n                totalIncomeSinceAugInstall += value;\\r\\n            }\\r\\n        }\\r\\n        incomeObservations.push(totalIncomeSinceAugInstall);\\r\\n\\r\\n        const totalIncome30MinutesAgo = incomeObservations[0];\\r\\n\\r\\n        const incomePerMinute = (totalIncomeSinceAugInstall - totalIncome30MinutesAgo) / incomeObservations.length;\\r\\n        incomePerHourEstimate = incomePerMinute * 60;\\r\\n        updatedMoneyEstimate = true;\\r\\n\\r\\n        if (incomeObservations.length > 30) {\\r\\n            incomeObservations.shift();\\r\\n        }\\r\\n\\r\\n        ns.rm(incomeEveryMinuteObservationsFile);\\r\\n        ns.write(incomeEveryMinuteObservationsFile, JSON.stringify({ incomeObservations, lastObservation }), \\\"W\\\");\\r\\n    } else {\\r\\n        updatedMoneyEstimate = false;\\r\\n    }\\r\\n\\r\\n    let analytics = new EndOfRoundAnalytics();\\r\\n    const endOfRoundAnalyticsFile = \\\"analytics/end-round.txt\\\";\\r\\n    if (ns.fileExists(endOfRoundAnalyticsFile)) {\\r\\n        analytics = JSON.parse(ns.read(endOfRoundAnalyticsFile));\\r\\n    }\\r\\n\\r\\n    if (ns.fileExists(factionToMaxFile) || ns.fileExists(factionDonationFile)) {\\r\\n        if (ns.fileExists(factionToMaxFile)) {\\r\\n            factionToMax = ns.read(factionToMaxFile);\\r\\n\\r\\n            if (!analytics.firstAssignFactionToMax) {\\r\\n                analytics.firstAssignFactionToMax = new Date();\\r\\n            }\\r\\n        } else {\\r\\n            factionToMax = ns.read(factionDonationFile);\\r\\n\\r\\n            if (!analytics.firstAssignFactionToMaxViaDonation) {\\r\\n                analytics.firstAssignFactionToMaxViaDonation = new Date();\\r\\n            }\\r\\n        }\\r\\n    } else {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    if (!analytics.factionsToMax.find(x => x.factionToMax === factionToMax)) {\\r\\n        const firstTime = new Date();\\r\\n        analytics.factionsToMax.push({ factionToMax, firstTime });\\r\\n    }\\r\\n\\r\\n    saveAnalytics(ns, analytics);\\r\\n\\r\\n    const player = ns.getPlayer();\\r\\n\\r\\n    const ownedAugmentations = ns.singularity.getOwnedAugmentations(true);\\r\\n\\r\\n    const mostRepExpensiveForEachFaction = [];\\r\\n    for (const faction of player.factions) {\\r\\n        const maximumAugRep = Math.max(...ns\\r\\n            .singularity\\r\\n            .getAugmentationsFromFaction(faction)\\r\\n            .filter(x => x !== \\\"NeuroFlux Governor\\\")\\r\\n            .filter(x => !ownedAugmentations.includes(x))\\r\\n            .map(x => ns.singularity.getAugmentationRepReq(x)));\\r\\n\\r\\n        if (maximumAugRep > 0) {\\r\\n            mostRepExpensiveForEachFaction.push({ faction, maximumAugRep });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const targetFaction = mostRepExpensiveForEachFaction\\r\\n        .filter(x => x.faction === factionToMax)\\r\\n        .pop();\\r\\n\\r\\n    setGoalAugment(ownedAugmentations, factionToMax, targetFaction, ns);\\r\\n\\r\\n    const currentFactionRep = ns.singularity.getFactionRep(targetFaction.faction);\\r\\n    const currentFactionFavor = ns.singularity.getFactionFavor(targetFaction.faction);\\r\\n\\r\\n    let targetRepForGettingToFavor = 700_000;\\r\\n    if (ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n        const favorGain = ns.singularity.getFactionFavorGain(targetFaction.faction);\\r\\n        if (favorGain + currentFactionFavor > 150) {\\r\\n            targetRepForGettingToFavor = currentFactionFavor;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (!analytics.firstEncounterOfRepTrigger) {\\r\\n        const repTrigger = populateRepTrigger(targetFaction, currentFactionRep, targetRepForGettingToFavor, ns, factionDonationFile, factionToMaxFile);\\r\\n        analytics.firstEncounterOfRepTrigger = repTrigger;\\r\\n        saveAnalytics(ns, analytics);\\r\\n    }\\r\\n\\r\\n    if (targetFaction.maximumAugRep < currentFactionRep || targetRepForGettingToFavor < currentFactionRep || (ns.fileExists(factionDonationFile) && !ns.fileExists(factionToMaxFile))) {\\r\\n\\r\\n        if (!analytics.repTrigger) {\\r\\n            const repTrigger = populateRepTrigger(targetFaction, currentFactionRep, targetRepForGettingToFavor, ns, factionDonationFile, factionToMaxFile);\\r\\n            analytics.repTrigger = repTrigger;\\r\\n            saveAnalytics(ns, analytics);\\r\\n        }\\r\\n\\r\\n        const factionsWithAugmentsToBuy =\\r\\n            mostRepExpensiveForEachFaction\\r\\n                .map(x => {\\r\\n                    {\\r\\n                        const faction = x.faction;\\r\\n                        const factionRep = ns.singularity.getFactionRep(faction);\\r\\n                        const factionAugmentsThatIDontOwnAndCanAfford = ns\\r\\n                            .singularity\\r\\n                            .getAugmentationsFromFaction(faction)\\r\\n                            .filter(y => y !== \\\"NeuroFlux Governor\\\")\\r\\n                            .filter(y => !ownedAugmentations.includes(y))\\r\\n                            .map(y => {\\r\\n                                return {\\r\\n                                    augmentName: y,\\r\\n                                    augmentationRepCost: ns.singularity.getAugmentationRepReq(y),\\r\\n                                    price: ns.singularity.getAugmentationPrice(y),\\r\\n                                    prereqs: ns.singularity.getAugmentationPrereq(y)\\r\\n                                }\\r\\n                            })\\r\\n                            .filter(y => y.augmentationRepCost < factionRep)\\r\\n                            .sort((a, b) => b.price - a.price);\\r\\n\\r\\n                        return {\\r\\n                            faction,\\r\\n                            factionRep,\\r\\n                            factionAugmentsThatIDontOwnAndCanAfford\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n\\r\\n        const priceOfMostExpensiveAugment = Math.max(...factionsWithAugmentsToBuy.find(x => x.faction === targetFaction.faction).factionAugmentsThatIDontOwnAndCanAfford.map(x => x.price));\\r\\n\\r\\n\\r\\n        if (priceOfMostExpensiveAugment < 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // --------\\r\\n        // My augment script ranks every augment that hasn't been purchased by price, and then calculates how many of them I can buy (taking into account the 1.9x price increase per augment, and the additional 1.14x increase per NeuroFlux Governor level). \\r\\n\\r\\n        const purchasableAugments = new Map();\\r\\n\\r\\n        for (const factionWithAugments of factionsWithAugmentsToBuy) {\\r\\n            for (const augment of factionWithAugments.factionAugmentsThatIDontOwnAndCanAfford) {\\r\\n                if (purchasableAugments.has(augment.augmentName) === false) {\\r\\n                    const item = {\\r\\n                        augmentationRepCost: augment.augmentationRepCost,\\r\\n                        price: augment.price,\\r\\n                        prereqs: augment.prereqs,\\r\\n                        faction: factionWithAugments.faction\\r\\n                    }\\r\\n                    purchasableAugments.set(augment.augmentName, item)\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const augmentsLeft = Array.from(purchasableAugments.entries()).sort((a, b) => b[1].price - a[1].price);\\r\\n\\r\\n        const orderedAugments = []; // { factionName, augmentName, basePrice, multipledPrice}\\r\\n\\r\\n        function addPrereqs(prereqName) {\\r\\n            const augment = purchasableAugments.get(prereqName);\\r\\n    \\r\\n            if (augment && !ownedAugmentations.find(x => x.augmentName === prereqName)) {\\r\\n    \\r\\n                if (augment.prereqs.length > 0) {//it has prereqs, pass it into this. \\r\\n                    for (const prereq of augment.prereqs) {\\r\\n                        addPrereqs(prereq)\\r\\n                    }\\r\\n                }\\r\\n    \\r\\n                if (!orderedAugments.find(x => x.augmentName === prereqName)) {\\r\\n                    orderedAugments.push({ faction: augment.faction, augmentName: prereqName, basePrice: augment.price });\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    \\r\\n        for (const augmentData of augmentsLeft) {\\r\\n            const augmentName = augmentData[0];\\r\\n            const augment = augmentData[1];\\r\\n    \\r\\n            if (augment.prereqs.length > 0) {\\r\\n                for (const prereqName of augment.prereqs) {\\r\\n                    addPrereqs(prereqName);\\r\\n                }\\r\\n            }\\r\\n            \\r\\n            if (!orderedAugments.find(x => x.augmentName === augmentName)) {\\r\\n                orderedAugments.push({ faction: augment.faction, augmentName: augmentName, basePrice: augment.price, multipledPrice: 0 })\\r\\n            }\\r\\n    \\r\\n        }\\r\\n    \\r\\n        let priceMultipler = 1;\\r\\n    \\r\\n        for (const augment of orderedAugments) {\\r\\n            augment.multipledPrice = augment.basePrice * priceMultipler;\\r\\n            priceMultipler *= 1.9;\\r\\n        }\\r\\n        \\r\\n        const moneyNeededForAugments = orderedAugments.reduce((acc, x) => acc + x.multipledPrice, 0);\\r\\n\\r\\n        // make a pass for multiplied price\\r\\n\\r\\n        // (faction, augmentName)\\r\\n        // arrange with prereqs in mind\\r\\n        // then 1.9X the cost every purchase\\r\\n        // then figure out how many NeuroFlux governors we can buy with the rep, and then figure out how much that would cost. \\r\\n\\r\\n        // new order ->\\r\\n        // augments\\r\\n        // neuroflux\\r\\n        // computer\\r\\n        // if we have extra money, then we buy more neuroflux with purchased rep\\r\\n\\r\\n\\r\\n\\r\\n        /// ------\\r\\n\\r\\n        \\r\\n        let buyAugmentsWhenWeHaveMoreThanThisMuchMoney = moneyNeededForAugments;\\r\\n\\r\\n        const estimatedIncomeForTheNextFourHours = incomePerHourEstimate * 4;\\r\\n\\r\\n        const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        const moneyFormatted = formatter.format(incomePerHourEstimate);\\r\\n\\r\\n        if (moneyFormatted !== \\\"$NaN\\\") {\\r\\n            const hoursTillInstall = Math.floor(buyAugmentsWhenWeHaveMoreThanThisMuchMoney / incomePerHourEstimate);\\r\\n            if (updatedMoneyEstimate) {\\r\\n                const now = new Date();\\r\\n                const timeStamp = `[${String(now.getHours()).padStart(2, 0)}:${String(now.getMinutes()).padStart(2, 0)}]`\\r\\n\\r\\n                ns.toast(`${timeStamp} Income Per Hour Estimate: ${moneyFormatted}. ~Hours to install: ${hoursTillInstall}`, \\\"success\\\", 60000)\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (!analytics.firstEncoundedMoneyTrigger) {\\r\\n            const moneyTrigger = createMoneyTrigger(estimatedIncomeForTheNextFourHours, buyAugmentsWhenWeHaveMoreThanThisMuchMoney, moneyAvailable, formatter);\\r\\n\\r\\n            analytics.firstEncoundedMoneyTrigger = moneyTrigger;\\r\\n            saveAnalytics(ns, analytics);\\r\\n        }\\r\\n\\r\\n        if (estimatedIncomeForTheNextFourHours > buyAugmentsWhenWeHaveMoreThanThisMuchMoney || moneyAvailable > buyAugmentsWhenWeHaveMoreThanThisMuchMoney) {\\r\\n\\r\\n            const stopInvestingFileName = \\\"stopInvesting.txt\\\";\\r\\n            if (!ns.fileExists(stopInvestingFileName)) {\\r\\n                ns.write(stopInvestingFileName, buyAugmentsWhenWeHaveMoreThanThisMuchMoney, \\\"W\\\")\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            if (moneyAvailable > buyAugmentsWhenWeHaveMoreThanThisMuchMoney) {\\r\\n                const stopStockTradingFileName = \\\"stopTrading.txt\\\";\\r\\n                if (!ns.fileExists(stopStockTradingFileName)) {\\r\\n                    ns.write(stopStockTradingFileName, \\\"\\\", \\\"W\\\")\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                if (!analytics.moneyTrigger) {\\r\\n                    const moneyTrigger = createMoneyTrigger(estimatedIncomeForTheNextFourHours, buyAugmentsWhenWeHaveMoreThanThisMuchMoney, moneyAvailable, formatter);\\r\\n\\r\\n                    analytics.moneyTrigger = moneyTrigger;\\r\\n                    saveAnalytics(ns, analytics);\\r\\n                }\\r\\n\\r\\n                for (const augment of orderedAugments) {\\r\\n                    purchaseAug(ns, augment, analytics);\\r\\n                }\\r\\n\\r\\n                upgradeHomeMachine(ns, analytics);\\r\\n\\r\\n                const factionsByRating = factionsWithAugmentsToBuy.sort((a, b) => b.factionRep - a.factionRep);\\r\\n\\r\\n                purchaseNeuroFluxGovernors(ns, factionsByRating[0].faction, analytics);\\r\\n\\r\\n                analytics.moneyLeft = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n                saveAnalytics(ns, analytics, true);\\r\\n\\r\\n                ns.singularity.installAugmentations('scripts/coordinator.js')\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    saveAnalytics(ns, analytics);\\r\\n}\\r\\n\\r\\nfunction createMoneyTrigger(estimatedIncomeForTheNextFourHours, buyAugmentsWhenWeHaveMoreThanThisMuchMoney, moneyAvailable, formatter) {\\r\\n    const moneyTrigger = new MoneyTrigger();\\r\\n    moneyTrigger.estimatedIncomeTriggered = estimatedIncomeForTheNextFourHours > buyAugmentsWhenWeHaveMoreThanThisMuchMoney;\\r\\n    moneyTrigger.moneyIsGreaterThanTriggered = moneyAvailable > buyAugmentsWhenWeHaveMoreThanThisMuchMoney;\\r\\n\\r\\n    moneyTrigger.estimatedIncomeForTheNextFourHours = formatter.format(estimatedIncomeForTheNextFourHours);\\r\\n    moneyTrigger.moneyRightNow = formatter.format(moneyAvailable);\\r\\n    moneyTrigger.buyArgumentsWhenWeHave = formatter.format(buyAugmentsWhenWeHaveMoreThanThisMuchMoney);\\r\\n    return moneyTrigger;\\r\\n}\\r\\n\\r\\nfunction populateRepTrigger(targetFaction, currentFactionRep, targetRepForGettingToFavor, ns, factionDonationFile, factionToMaxFile) {\\r\\n    const repTrigger = new RepTrigger();\\r\\n    repTrigger.factionRepGreaterThanMaximumAug = targetFaction.maximumAugRep < currentFactionRep;\\r\\n    repTrigger.factionRepGreaterThanTargetToGetToFavorNeeded = targetRepForGettingToFavor < currentFactionRep;\\r\\n    repTrigger.factionDonationTrigger = ns.fileExists(factionDonationFile) && !ns.fileExists(factionToMaxFile);\\r\\n\\r\\n    repTrigger.maximumAugRepNeeded = targetFaction.maximumAugRep;\\r\\n    repTrigger.currentFactionRep = currentFactionRep;\\r\\n    repTrigger.targetRepForGettingToFavor = targetRepForGettingToFavor;\\r\\n    return repTrigger;\\r\\n}\\r\\n\\r\\nfunction saveAnalytics(ns, analytics, final = false) {\\r\\n    let endOfRoundAnalyticsFile = \\\"analytics/end-round.txt\\\";\\r\\n    ns.rm(endOfRoundAnalyticsFile);\\r\\n\\r\\n    if (final) {\\r\\n        const now = new Date()\\r\\n        const factionToMax = analytics.factionsToMax[analytics.factionsToMax.length - 1].factionToMax.replaceAll(' ', '');\\r\\n        endOfRoundAnalyticsFile = `analytics/${now.toISOString().split('T')[0]}-${String(now.getHours()).padStart(2, 0)}-${String(now.getMinutes()).padStart(2, 0)}-${factionToMax}-end-round.txt`;\\r\\n    }\\r\\n\\r\\n    analytics.lastSaved = new Date();\\r\\n    ns.write(endOfRoundAnalyticsFile, JSON.stringify(analytics), \\\"W\\\");\\r\\n}\\r\\n\\r\\nfunction setGoalAugment(ownedAugmentations, factionToMax, targetFaction, ns) {\\r\\n    const organizations = JSON.parse(ns.read(\\\"data/organizations.txt\\\"));\\r\\n\\r\\n    for (const stopAtAugment of organizations.stopAtAugments) {\\r\\n        const goalAugment = stopAtAugment.augmentToStopAt;\\r\\n        const goalFaction = stopAtAugment.faction;\\r\\n\\r\\n        if (!ownedAugmentations.includes(goalAugment) && factionToMax === goalFaction) {\\r\\n            targetFaction.maximumAugRep = ns.singularity.getAugmentationRepReq(goalAugment);\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction purchaseNeuroFluxGovernors(ns, faction, analytics) {\\r\\n    const augmentName = \\\"NeuroFlux Governor\\\"\\r\\n    const price = ns.singularity.getAugmentationPrice(augmentName);\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    const augmentRepPrice = ns.singularity.getAugmentationRepReq(augmentName);\\r\\n    let factionRep = ns.singularity.getFactionRep(faction);\\r\\n\\r\\n    if (moneyAvailable > price) {\\r\\n        if (factionRep < augmentRepPrice && ns.singularity.getFactionFavor(faction) > 150) {\\r\\n            if (ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n                const repNeeded = augmentRepPrice - factionRep;\\r\\n                let dollarsDonated = 0;\\r\\n                let purchasedRep = 0;\\r\\n                const player = ns.getPlayer();\\r\\n                while (repNeeded > purchasedRep) {\\r\\n                    dollarsDonated += 1_000_000;\\r\\n                    purchasedRep = ns.formulas.reputation.repFromDonation(dollarsDonated, player);\\r\\n                }\\r\\n\\r\\n                analytics.moneySpent.repPurchased += dollarsDonated;\\r\\n                ns.singularity.donateToFaction(faction, dollarsDonated);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        factionRep = ns.singularity.getFactionRep(faction);\\r\\n\\r\\n        if (factionRep > augmentRepPrice) {\\r\\n            analytics.moneySpent.fluxGovernors += price;\\r\\n            ns.singularity.purchaseAugmentation(faction, augmentName);\\r\\n        }\\r\\n    } else {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    purchaseNeuroFluxGovernors(ns, faction, analytics);\\r\\n}\\r\\n\\r\\nfunction upgradeHomeMachine(ns, analytics) {\\r\\n    const home = \\\"home\\\";\\r\\n    const ramCost = ns.singularity.getUpgradeHomeRamCost();\\r\\n    const coreCost = ns.singularity.getUpgradeHomeCoresCost();\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(home);\\r\\n    const orginalSpecs = ns.getServer(home);\\r\\n\\r\\n    if (ramCost > moneyAvailable && coreCost > moneyAvailable) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    if (ramCost > coreCost) {\\r\\n        analytics.moneySpent.homeCores += coreCost;\\r\\n        ns.singularity.upgradeHomeCores();\\r\\n    } else {\\r\\n        analytics.moneySpent.homeRam += ramCost;\\r\\n        ns.singularity.upgradeHomeRam();\\r\\n    }\\r\\n\\r\\n    const upgradedServer = ns.getServer(home);\\r\\n\\r\\n    analytics.amountOfRamIncrease += upgradedServer.maxRam - orginalSpecs.maxRam;\\r\\n    analytics.amountOfCoresIncrease += upgradedServer.cpuCores - orginalSpecs.cpuCores;\\r\\n\\r\\n    return upgradeHomeMachine(ns, analytics);\\r\\n}\\r\\n\\r\\nfunction purchaseAug(ns, augment, analytics) {\\r\\n    const ownedAugments = ns.singularity.getOwnedAugmentations(true);\\r\\n    const augmentName = augment.augmentName;\\r\\n\\r\\n    if (ownedAugments.includes(augmentName) === false) {\\r\\n        const augmentPrice = ns.singularity.getAugmentationPrice(augmentName);\\r\\n        const amountOfMoneyWeHave = ns.getServerMoneyAvailable(\\\"home\\\")\\r\\n\\r\\n        if (augmentPrice < amountOfMoneyWeHave) {\\r\\n            analytics.moneySpent.augments += augmentPrice;\\r\\n            if (!analytics.augsBought) {\\r\\n                analytics.augsBought = [];\\r\\n            }\\r\\n            analytics.augsBought.push(augmentName)\\r\\n\\r\\n            ns.singularity.purchaseAugmentation(augment.faction, augmentName);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass EndOfRoundAnalytics {\\r\\n    firstStarted = new Date();\\r\\n\\r\\n\\r\\n    firstAssignFactionToMax;\\r\\n    firstAssignFactionToMaxViaDonation;\\r\\n\\r\\n    factionsToMax = [];\\r\\n\\r\\n    firstEncounterOfRepTrigger;\\r\\n    repTrigger;\\r\\n\\r\\n\\r\\n    firstEncoundedMoneyTrigger;\\r\\n    moneyTrigger;\\r\\n\\r\\n    augsBought = [];\\r\\n\\r\\n    amountOfRamIncrease\\r\\n    amountOfCoresIncrease\\r\\n\\r\\n    moneySpent = new MoneySpent();\\r\\n\\r\\n    moneyLeft = 0;\\r\\n    lastSaved;\\r\\n}\\r\\n\\r\\nclass MoneyTrigger {\\r\\n    estimatedIncomeTriggered;\\r\\n    moneyIsGreaterThanTriggered;\\r\\n\\r\\n    estimatedIncomeForTheNextFourHours;\\r\\n    moneyRightNow;\\r\\n    buyArgumentsWhenWeHave;\\r\\n\\r\\n    time = new Date();\\r\\n}\\r\\n\\r\\nclass MoneySpent {\\r\\n\\r\\n    augments = 0;\\r\\n    homeCores = 0;\\r\\n    homeRam = 0;\\r\\n    fluxGovernors = 0;\\r\\n    repPurchased = 0;\\r\\n}\\r\\n\\r\\nclass RepTrigger {\\r\\n\\r\\n    factionRepGreaterThanMaximumAug;\\r\\n    factionRepGreaterThanTargetToGetToFavorNeeded;\\r\\n    factionDonationTrigger;\\r\\n\\r\\n\\r\\n    maximumAugRepNeeded;\\r\\n    currentFactionRep;\\r\\n    targetRepForGettingToFavor;\\r\\n\\r\\n    time = new Date();\\r\\n}\",\"filename\":\"scripts/singularity/finish-round.js\",\"server\":\"home\"}}],[\"scripts/singularity/join-organziations.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const toJoinInOrderInWhichIWantToComplete = [\\r\\n        \\\"CyberSec\\\",\\r\\n        \\\"NiteSec\\\",\\r\\n        \\\"Chongqing\\\",\\r\\n        \\\"The Black Hand\\\",\\r\\n        \\\"Daedalus\\\",\\r\\n        \\\"Bachman & Associates\\\",\\r\\n        \\\"BitRunners\\\",\\r\\n        \\\"NWO\\\",\\r\\n        \\\"OmniTek Incorporated\\\",\\r\\n        \\\"Blade Industries\\\",\\r\\n        \\\"ECorp\\\",\\r\\n    // \\\"The Covenant\\\",\\r\\n        \\\"Illuminati\\\",\\r\\n        \\\"Aevum\\\",\\r\\n        \\\"Volhaven\\\",\\r\\n        \\\"New Tokyo\\\",\\r\\n        \\\"Ishima\\\",\\r\\n        \\\"Tian Di Hui\\\",\\r\\n        \\\"Netburners\\\",\\r\\n    ];\\r\\n\\r\\n    const companiesWeWantToBecomePartOf = [\\r\\n        \\\"Bachman & Associates\\\", \\r\\n        \\\"NWO\\\", \\r\\n        \\\"OmniTek Incorporated\\\", \\r\\n        \\\"Blade Industries\\\", \\r\\n        \\\"ECorp\\\"\\r\\n    ]; \\r\\n\\r\\n    const doNoWorkFor = [\\r\\n        \\\"Aevum\\\",\\r\\n        \\\"Volhaven\\\",\\r\\n        \\\"New Tokyo\\\",\\r\\n        \\\"Ishima\\\",\\r\\n        \\\"Tian Di Hui\\\",\\r\\n        \\\"Netburners\\\"\\r\\n    ];\\r\\n\\r\\n    const stopAtAugments = [\\r\\n        { final: true, faction: \\\"Chongqing\\\", augmentToStopAt: \\\"Neuregen Gene Modification\\\" }\\r\\n    ]\\r\\n\\r\\n    // const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n    // if (moneyAvailable > 150_000_000) {\\r\\n    //     toJoinInOrderInWhichIWantToComplete.push(\\\"Sector-12\\\");\\r\\n    //     doNoWorkFor.push(\\\"Sector-12\\\");\\r\\n    // }\\r\\n\\r\\n    const factionInvitations = ns.singularity.checkFactionInvitations();\\r\\n\\r\\n    const organzations = { toJoinInOrderInWhichIWantToComplete, companiesWeWantToBecomePartOf, doNoWorkFor, stopAtAugments };\\r\\n\\r\\n    const organizationTextFileName = \\\"data/organizations.txt\\\";\\r\\n    ns.rm(organizationTextFileName);\\r\\n    ns.write(organizationTextFileName, JSON.stringify(organzations), \\\"W\\\");\\r\\n\\r\\n    for (const name of toJoinInOrderInWhichIWantToComplete) {\\r\\n        if (factionInvitations.includes(name)) {\\r\\n            await ns.singularity.joinFaction(name);\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/singularity/join-organziations.js\",\"server\":\"home\"}}],[\"scripts/singularity/study-computer-science.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const player = ns.getPlayer();\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (player.factions.length === 0 && !currentWork) {\\r\\n        ns.singularity.universityCourse(\\\"Rothman University\\\", \\\"Computer Science\\\", true);\\r\\n        return;\\r\\n    }\\r\\n}\",\"filename\":\"scripts/singularity/study-computer-science.js\",\"server\":\"home\"}}],[\"scripts/singularity/travel-to-get-augs.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const ownedAugmentations = JSON.parse(ns.read(\\\"data/ownedAugs.txt\\\"));\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (moneyAvailable > 10_000_000 && notInAnyCityFaction(ns)) {\\r\\n\\r\\n        if (travelToGetUniqueAugments(ns, \\\"Neuregen Gene Modification\\\", \\\"Chongqing\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, 'PCMatrix', \\\"Aevum\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, 'CashRoot Starter Kit', \\\"Sector-12\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, \\\"DermaForce Particle Barrier\\\", \\\"Volhaven\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, \\\"NutriGen Implant\\\", \\\"New Tokyo\\\", ownedAugmentations)) { return; }\\r\\n        if (travelToGetUniqueAugments(ns, \\\"INFRARET Enhancement\\\", \\\"Ishima\\\", ownedAugmentations)) { return; }\\r\\n    }\\r\\n\\r\\n    const playersLocation = ns.getPlayer().city\\r\\n    if (moneyAvailable > 250_000_000) {\\r\\n        if (ns.singularity.getFactionRep(\\\"Tian Di Hui\\\") === 0 && playersLocation !== \\\"Chongqing\\\") {\\r\\n            ns.singularity.travelToCity(\\\"Chongqing\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction notInAnyCityFaction(ns){\\r\\n    const cityFactions = [\\\"Chongqing\\\", \\\"Aevum\\\", \\\"Sector-12\\\", \\\"Volhaven\\\", \\\"New Tokyo\\\", \\\"Ishima\\\"];\\r\\n\\r\\n    for (const city of cityFactions) {\\r\\n        if(ns.singularity.getFactionRep(city)){\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return true;\\r\\n}\\r\\n\\r\\nfunction travelToGetUniqueAugments(ns, augmentWanted, city, ownedAugmentations) {\\r\\n    if (!ownedAugmentations.includes(augmentWanted)) {\\r\\n\\r\\n        const playersLocation = ns.getPlayer().city\\r\\n        if (ns.singularity.getFactionRep(city) === 0 && playersLocation !== city) {\\r\\n            ns.singularity.travelToCity(city);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n    return false;\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/singularity/travel-to-get-augs.js\",\"server\":\"home\"}}],[\"scripts/singularity/upgade-home-machine.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let visitedBefore = false;\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const ramObservationsTextFile = '../../data/ramObservations.txt';\\r\\n    const stopInvestingFileName = \\\"stopInvesting.txt\\\";\\r\\n    if (ns.fileExists(stopInvestingFileName)) {\\r\\n        if (ns.fileExists(ramObservationsTextFile)) {\\r\\n            ns.rm(ramObservationsTextFile);\\r\\n        }\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    visitedBefore = false;\\r\\n\\r\\n    await upgradeHomeRamOrCpu(ns, 11_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 100_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 30_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 100_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 1_000_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 10_000_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 100_000_000_000_000);\\r\\n    await upgradeHomeRamOrCpu(ns, 1_000_000_000_000_000);\\r\\n}\\r\\n\\r\\nasync function upgradeHomeRamOrCpu(ns, moneyLimit) {\\r\\n    if (visitedBefore) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const ramUpgradeCost = ns.singularity.getUpgradeHomeRamCost();\\r\\n    const coreUpgradeCost = ns.singularity.getUpgradeHomeCoresCost();\\r\\n\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (moneyLimit < coreUpgradeCost && moneyLimit < ramUpgradeCost) {\\r\\n        return;\\r\\n    } else {\\r\\n        visitedBefore = true;\\r\\n    }\\r\\n\\r\\n    const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n    let stockMarketReserveMoney = new ReserveForTrading();\\r\\n    if (ns.fileExists(stockMarketReserveMoneyFile)) {\\r\\n        stockMarketReserveMoney = new ReserveForTrading(JSON.parse(ns.read(stockMarketReserveMoneyFile)));\\r\\n    }\\r\\n\\r\\n    if (ramUpgradeCost < coreUpgradeCost) {\\r\\n\\r\\n        const moneyLeftOverForRam = moneyAvailable - ramUpgradeCost;\\r\\n\\r\\n        if (moneyLeftOverForRam > moneyLimit) {\\r\\n            if (stockMarketReserveMoney.canSpend(ns, ramUpgradeCost)) {\\r\\n                ns.singularity.upgradeHomeRam();\\r\\n                ns.toast(`Upgraded home ram`, \\\"success\\\", null);\\r\\n                await ns.sleep(100);\\r\\n            }\\r\\n        }\\r\\n\\r\\n    } else {\\r\\n\\r\\n        const moneyLeftOverForCores = moneyAvailable - coreUpgradeCost;\\r\\n\\r\\n        if (moneyLeftOverForCores > moneyLimit) {\\r\\n            if (stockMarketReserveMoney.canSpend(ns, coreUpgradeCost)) {\\r\\n                ns.singularity.upgradeHomeCores()\\r\\n                ns.toast(`Upgraded home core`, \\\"success\\\", null);\\r\\n                await ns.sleep(100);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass ReserveForTrading {\\r\\n    stockMarketReserveMoneyLimit = 1_000_000_000_000;\\r\\n    capitalToReserveForTrading = 0;\\r\\n    moneyInvested = 0;\\r\\n    moneyRequested = new Map();\\r\\n    countOfVisitedWithoutFillingRequest = 0;\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    setMoneyInvested(moneyInvested, ns) {\\r\\n        this.moneyInvested = moneyInvested;\\r\\n\\r\\n        const potentialCapitalReserve = moneyInvested / 2;\\r\\n\\r\\n        this.capitalToReserveForTrading = Math.max(...[potentialCapitalReserve, this.capitalToReserveForTrading]);\\r\\n\\r\\n        if (this.capitalToReserveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            this.capitalToReserveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        this.countOfVisitedWithoutFillingRequest++;\\r\\n    }\\r\\n\\r\\n    canSpend(ns, moneyNeeded) {\\r\\n        const moneyOnHome = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        let moneyToSaveForTrading = this.capitalToReserveForTrading - this.moneyInvested;\\r\\n\\r\\n        if (moneyToSaveForTrading < 0) {\\r\\n            moneyToSaveForTrading = 0;\\r\\n        }\\r\\n\\r\\n        if (moneyToSaveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            moneyToSaveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        const canSpend = moneyNeeded < moneyOnHome - moneyToSaveForTrading\\r\\n\\r\\n        if (canSpend === false) {\\r\\n            this.requestMoney(ns, moneyNeeded);\\r\\n        } else {\\r\\n            this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n            const nameOfRequest = \\\"upgrade-home-machine\\\";\\r\\n            this.moneyRequested.delete(nameOfRequest);\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        return canSpend;\\r\\n    }\\r\\n\\r\\n    requestMoney(ns, amount) {\\r\\n        const nameOfRequest = \\\"upgrade-home-machine\\\";\\r\\n        this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n        const moneyRequestedPreviously = this.moneyRequested.get(nameOfRequest);\\r\\n        if (moneyRequestedPreviously) {\\r\\n            if (moneyRequestedPreviously < amount) {\\r\\n                this.moneyRequested.set(nameOfRequest, amount);\\r\\n                this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n                const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n                ns.rm(stockMarketReserveMoneyFile);\\r\\n                ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n            }\\r\\n        } else {\\r\\n            this.moneyRequested.set(nameOfRequest, amount);\\r\\n            this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/upgade-home-machine.js\",\"server\":\"home\"}}],[\"scripts/singularity/workout.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const ownedAugmentations = ns.singularity.getOwnedAugmentations(false);\\r\\n    const includesHVMind = ownedAugmentations.includes(\\\"ECorp HVMind Implant\\\");\\r\\n\\r\\n    if (!includesHVMind) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    // if(getBuffForFaction(ns, \\\"The Covenant\\\", 850)){\\r\\n    //     return;\\r\\n    // } \\r\\n\\r\\n    if(getBuffForFaction(ns, \\\"Illuminati\\\", 1200)){\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n    if(currentWork && currentWork.type === \\\"CLASS\\\"){\\r\\n        ns.singularity.stopAction();\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\nfunction getBuffForFaction(ns, faction, targetForAttributes){\\r\\n    const player = ns.getPlayer();\\r\\n    const currentWork = ns.singularity.getCurrentWork();\\r\\n\\r\\n    if (!player.factions.includes(faction) && (!currentWork || currentWork.type === \\\"CLASS\\\")) {\\r\\n        \\r\\n        if(doExersizeIfAppropriate(player.skills.agility, currentWork, ns, 'agi', targetForAttributes)){\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        if(doExersizeIfAppropriate(player.skills.defense, currentWork, ns, 'def', targetForAttributes)){\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        if(doExersizeIfAppropriate(player.skills.strength, currentWork, ns, 'str', targetForAttributes)){\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        if(doExersizeIfAppropriate(player.skills.dexterity, currentWork, ns, 'dex', targetForAttributes)){\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction doExersizeIfAppropriate(skill, currentWork, ns, type, targetForAttributes) {\\r\\n    if (skill < targetForAttributes) {\\r\\n        if (!currentWork || currentWork.classType !== type) {\\r\\n            ns.singularity.travelToCity(\\\"Sector-12\\\");\\r\\n            ns.singularity.gymWorkout(\\\"powerhouse gym\\\", type, true);\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n}\\r\\n\",\"filename\":\"scripts/singularity/workout.js\",\"server\":\"home\"}}],[\"scripts/tools/delete-all-js.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    \\r\\n    const doNoDeleteFolders = [];\\r\\n\\r\\n    for (const textFile of ns.ls(\\\"home\\\", \\\".js\\\")) {\\r\\n        if(!doNoDeleteFolders.find(x => textFile.startsWith(x))){\\r\\n            ns.rm(textFile);\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\",\"filename\":\"scripts/tools/delete-all-js.js\",\"server\":\"home\"}}],[\"scripts/tools/delete-job-from-batch-queue.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\nexport async function main(ns) {\\r\\n\\r\\n    const targetName = ns.args[0];\\r\\n\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\"\\r\\n\\r\\n    let batchQueueForDifferentTargets = new Map();\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        batchQueueForDifferentTargets = new Map(JSON.parse(ns.read(batchQueuesFileName)));\\r\\n    }\\r\\n\\r\\n    const target = batchQueueForDifferentTargets.get(targetName);\\r\\n\\r\\n    for (const batch of target.batchesQueue) {\\r\\n        batch.jobs.map(x => {\\r\\n            if (x.pid) {\\r\\n                ns.kill(x.pid);\\r\\n            }\\r\\n        });\\r\\n    };\\r\\n\\r\\n    batchQueueForDifferentTargets.delete(targetName);\\r\\n\\r\\n    ns.rm(batchQueuesFileName);\\r\\n    ns.write(batchQueuesFileName, JSON.stringify(Array.from(batchQueueForDifferentTargets.entries()), \\\"W\\\"));\\r\\n\\r\\n}\\r\\n\",\"filename\":\"scripts/tools/delete-job-from-batch-queue.js\",\"server\":\"home\"}}],[\"scripts/clean.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/clean.js \\r\\nexport async function main(ns) {\\r\\n    let newMachine = false;\\r\\n\\r\\n    if (ns.args[0] === \\\"new\\\") {\\r\\n        newMachine = true;\\r\\n    }\\r\\n\\r\\n    \\r\\n    if (!newMachine) {\\r\\n        ns.killall(\\\"home\\\", true);\\r\\n\\r\\n        const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n        enviroment\\r\\n            .filter(x => x.server.hasAdminRights)\\r\\n            .map(target => {\\r\\n                ns.killall(target.name);\\r\\n            })\\r\\n    }\\r\\n\\r\\n    const doNoDeleteFolders = [\\\"analytics\\\", \\\"contracts\\\"]\\r\\n\\r\\n\\r\\n    for (const textFile of ns.ls(\\\"home\\\", \\\".txt\\\")) {\\r\\n        if(!doNoDeleteFolders.find(x => textFile.startsWith(x))){\\r\\n            ns.rm(textFile);\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/clean.js\",\"server\":\"home\"}}],[\"scripts/coordinator.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const loopEveryXSeconds = 2;\\r\\n    const sleepTotalOfXMS = loopEveryXSeconds * 1000;\\r\\n    const numberOfDifferentSleeps = 6;\\r\\n    const individualSleepAmount = sleepTotalOfXMS / numberOfDifferentSleeps;\\r\\n    let dispatchScript = 'scripts/hacking/memory-starved-dispatch.js';\\r\\n\\r\\n    let runClean = true;\\r\\n    if (ns.args[0] === 'old') {\\r\\n        runClean = false;\\r\\n    }\\r\\n\\r\\n    if (runClean) {\\r\\n        ns.run('scripts/clean.js', 1, \\\"new\\\");\\r\\n        await ns.sleep(1000);\\r\\n    }\\r\\n\\r\\n    ns.run('scripts/precalculate-important-data.js')\\r\\n\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    while (true) {\\r\\n\\r\\n        if (ns.fileExists('Formulas.exe')) {\\r\\n            dispatchScript = 'scripts/hacking/batch-dispatch.js'\\r\\n        }\\r\\n\\r\\n        ns.run(\\\"scripts/scan.js\\\", 1, dispatchScript);\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        ns.run('scripts/hacking/hack-all-machines.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        ns.run('scripts/contracts/contract-coordinator.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        ns.run('scripts/stock/get-stock-quotes.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n\\r\\n        ns.run('scripts/investments/investments-coordinator.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n\\r\\n        await singularityStuff(ns);\\r\\n    }\\r\\n\\r\\n\\r\\n    async function singularityStuff(ns) {\\r\\n        await doSingularityWork(ns, 'backdoor-all-machines')\\r\\n        await doSingularityWork(ns, 'join-organziations');\\r\\n        await doSingularityWork(ns, 'do-work');\\r\\n        await doSingularityWork(ns, 'finish-round');\\r\\n        await doSingularityWork(ns, 'finish-bitnode');\\r\\n        await doSingularityWork(ns, 'study-computer-science');\\r\\n        await doSingularityWork(ns, 'create-early-programs');\\r\\n        await doSingularityWork(ns, 'do-job');\\r\\n        await doSingularityWork(ns, 'buy-rep');\\r\\n        await doSingularityWork(ns, 'workout');\\r\\n        await doSingularityWork(ns, 'upgade-home-machine');\\r\\n        await doSingularityWork(ns, 'travel-to-get-augs');\\r\\n    }\\r\\n\\r\\n    async function doSingularityWork(ns, script) {\\r\\n        ns.run(`scripts/singularity/${script}.js`);\\r\\n\\r\\n        await ns.sleep(individualSleepAmount / 12);\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/coordinator.js\",\"server\":\"home\"}}],[\"scripts/precalculate-important-data.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\nexport async function main(ns) {\\r\\n\\r\\n  const notImportantScriptsForEarlyGame = [\\r\\n    \\\"scripts/singularity/finish-bitnode.js\\\", \\r\\n    \\\"scripts/singularity/finish-round.js\\\", \\r\\n    \\\"scripts/singularity/buy-rep.js\\\",\\r\\n    \\\"scripts/hacking/batch-dispatch.js\\\",\\r\\n  ];\\r\\n\\r\\n  const orderedScriptsByRamUsage = ns.ls(\\\"home\\\")\\r\\n    .filter(x => x.endsWith(\\\".js\\\"))\\r\\n    .map(x => new ScriptRam(ns.getScriptRam(x), x))\\r\\n    .sort((a, b) => b.ram - a.ram);\\r\\n\\r\\n  const mostExpensiveScript = orderedScriptsByRamUsage[0];\\r\\n  const coordinator = orderedScriptsByRamUsage.find(x => x.name === \\\"scripts/coordinator.js\\\")\\r\\n  const contractCoordinator = orderedScriptsByRamUsage.find(x => x.name === \\\"scripts/contracts/contract-coordinator.js\\\")\\r\\n  const ramToReserve = coordinator.ram + mostExpensiveScript.ram + contractCoordinator.ram;\\r\\n\\r\\n  const earlyGameScriptsUsage = orderedScriptsByRamUsage\\r\\n    .filter(x => !notImportantScriptsForEarlyGame.includes(x.name));\\r\\n\\r\\n  const mostExpensiveEarlyGame = earlyGameScriptsUsage[0];\\r\\n  const ramToReserveInLimitedEnvironment = coordinator.ram + mostExpensiveEarlyGame.ram;\\r\\n  const earlyGameLimiter = mostExpensiveEarlyGame.name;\\r\\n\\r\\n  const ramReserveFile = 'data/ramToReserveOnHome.txt';\\r\\n\\r\\n\\r\\n  ns.rm(ramReserveFile);\\r\\n  ns.write(ramReserveFile, JSON.stringify({ramToReserve, ramToReserveInLimitedEnvironment, earlyGameLimiter}), \\\"W\\\");\\r\\n\\r\\n  const ownedAugmentations = ns.singularity.getOwnedAugmentations(true);\\r\\n\\r\\n  const ownedAugsTextFileName = \\\"data/ownedAugs.txt\\\";\\r\\n  ns.rm(ownedAugsTextFileName);\\r\\n  ns.write(ownedAugsTextFileName, JSON.stringify(ownedAugmentations), \\\"W\\\");\\r\\n  \\r\\n}\\r\\n\\r\\nclass ScriptRam {\\r\\n  constructor(ram, name) {\\r\\n    this.ram = ram;\\r\\n    this.name = name;\\r\\n  }\\r\\n}\",\"filename\":\"scripts/precalculate-important-data.js\",\"server\":\"home\"}}],[\"scripts/scan.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n/// run scripts/scan.js dispatchScript\\r\\nexport async function main(ns) {\\r\\n    const dispatchScript = ns.args[0];\\r\\n\\r\\n    if (dispatchScript === undefined){\\r\\n        ns.tprint(\\\"Must define dispatch script for scan.\\\")\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const result = new dataMonger(ns).scanEnvironment();\\r\\n\\r\\n    ns.rm('data/enviroment.txt')\\r\\n    ns.write('data/enviroment.txt', JSON.stringify(result), \\\"W\\\")\\r\\n\\r\\n    ns.run(dispatchScript)\\r\\n}\\r\\n\\r\\nexport class dataMonger {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    scanEnvironment(machineToScan = \\\"home\\\", serversToScan = [], scannedServers = [], result = []) {\\r\\n        if (serversToScan.length === 0 && machineToScan !== \\\"home\\\") {\\r\\n            return result;\\r\\n        }\\r\\n\\r\\n        let lineage = result\\r\\n            .find(x => x.name === machineToScan)\\r\\n            ?.lineage\\r\\n            .map(x => x); // so we aren't using a reference\\r\\n\\r\\n        const scan = this.ns\\r\\n            .scan(machineToScan)\\r\\n            .map(x => new ServerNode(\\r\\n                machineToScan,\\r\\n                this.ns.getServer(x),\\r\\n                lineage\\r\\n            ));\\r\\n\\r\\n        scan.forEach(x => {\\r\\n            if (!scannedServers.includes(x.name) && !serversToScan.includes(x.name)) {\\r\\n                serversToScan.push(x.name);\\r\\n                result.push(x);\\r\\n            }\\r\\n        });\\r\\n\\r\\n        scannedServers.push(machineToScan);\\r\\n        machineToScan = serversToScan.pop();\\r\\n        return this.scanEnvironment(machineToScan, serversToScan, scannedServers, result);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass ServerNode {\\r\\n    constructor(parentsName, server, lineage = []) {\\r\\n        this.name = server.hostname;\\r\\n        this.lineage = lineage\\r\\n        if (parentsName !== \\\"home\\\" && this.lineage !== undefined) {\\r\\n            if (!this.lineage.includes(parentsName)) {\\r\\n                this.lineage.push(parentsName)\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.server = server;\\r\\n    }\\r\\n}\",\"filename\":\"scripts/scan.js\",\"server\":\"home\"}}],[\"scripts/contracts/get.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// let savedContractsFileNameForHuman;\\r\\n\\r\\nconst thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \\r\\n\\r\\nexport async function main(ns) {\\r\\n    const allContracts = [];\\r\\n\\r\\n    JSON\\r\\n        .parse(ns.read('../../data/enviroment.txt'))\\r\\n        .map(server => {\\r\\n            const hostName = server.name;\\r\\n            ns\\r\\n                .ls(hostName)\\r\\n                .filter(file => file.endsWith('.cct'))\\r\\n                .map(contract => {\\r\\n                    const cont = new Contract(\\r\\n                        hostName,\\r\\n                        contract,\\r\\n                        ns.codingcontract.getContractType(contract, hostName),\\r\\n                        ns.codingcontract.getNumTriesRemaining(contract, hostName)\\r\\n                    );\\r\\n\\r\\n                    allContracts.push(cont);\\r\\n                });\\r\\n        });\\r\\n    \\r\\n\\r\\n    ns.rm(thisRoundsContractsFileName);\\r\\n    ns.write(thisRoundsContractsFileName, JSON.stringify(allContracts), \\\"W\\\");\\r\\n}\\r\\n\\r\\nclass Contract {\\r\\n    constructor(server, name, type, attemptsLeft, input, description) {\\r\\n        this.server = server;\\r\\n        this.name = name;\\r\\n        this.type = type;\\r\\n        this.attemptsLeft = attemptsLeft;\\r\\n        this.input = input;\\r\\n        this.description = description;\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/contracts/get.js\",\"server\":\"home\"}}],[\"scripts/contracts/do.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const solverRegistry = [\\r\\n        new LzDecompression2Handler(),\\r\\n        new AlgorithmicStockTrading4Handler(),\\r\\n        new AlgorithmicStockTrading3Handler(),\\r\\n        new AlgorithmicStockTrading1Handler(),\\r\\n        new AlgorithmicStockTrading2Handler(),\\r\\n        new SpiralizeMatrixHandler(),\\r\\n        new Encryption1Handler(),\\r\\n        new Encryption2Handler(),\\r\\n    ]\\r\\n\\r\\n    const contracts = JSON.parse(ns.read(thisRoundsContractsFileName));\\r\\n    contracts\\r\\n        .forEach(contract => {\\r\\n            if (contract.attemptsLeft === 10 || contract.attemptsLeft === 5) {\\r\\n                const solver = solverRegistry.find(x => x.type === contract.type);\\r\\n                if (solver) {\\r\\n                    const result = solver.solve(contract.input);\\r\\n                    const success = ns.codingcontract.attempt(result, contract.name, contract.server);\\r\\n                    if (success === \\\"\\\") {\\r\\n                        const failuresContractsFileName = `contracts/failure/${contract.server}-${contract.name}-${contract.type.replaceAll(\\\" \\\", \\\"\\\")}.txt`;\\r\\n\\r\\n                        const saveThis = { contract, wrongResult: result };\\r\\n\\r\\n                        ns.write(failuresContractsFileName, JSON.stringify(saveThis), \\\"W\\\");\\r\\n\\r\\n                        ns.alert(`${contract.name} on ${contract.server} had a problem solving. You need to figure this out. Type: ${contract.type}`);\\r\\n                    } else {\\r\\n                        ns.toast(`Contract completed: ${success} Type: ${contract.type}`, \\\"success\\\", null);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        });\\r\\n}\\r\\n\\r\\nconst thisRoundsContractsFileName = \\\"data/contracts.txt\\\";\\r\\n\\r\\nclass LzDecompression2Handler {\\r\\n    type = 'Compression II: LZ Decompression';\\r\\n\\r\\n    solve(input) {\\r\\n        return this.lzDecompression(input);\\r\\n    }\\r\\n\\r\\n    /// all need to be worked on in tests. These are just copies.\\r\\n    lzDecompression(stringToDecode) {\\r\\n        let decompressedString = '';\\r\\n        let startOfNextChunk = 0\\r\\n        let nextSectionCompressed = false;\\r\\n\\r\\n\\r\\n        while (startOfNextChunk < stringToDecode.length) {\\r\\n            const chunkLength = Number(stringToDecode[startOfNextChunk]);\\r\\n\\r\\n\\r\\n            if (chunkLength === 0) {\\r\\n                startOfNextChunk++;\\r\\n                nextSectionCompressed = !nextSectionCompressed;\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            if (nextSectionCompressed) {\\r\\n                const nextCharacterInEncoded = parseInt(stringToDecode[startOfNextChunk + 1]);\\r\\n\\r\\n                const placesBack = nextCharacterInEncoded;\\r\\n                const startText = decompressedString.length - placesBack;\\r\\n                const endOfText = startText + chunkLength;\\r\\n\\r\\n                if (chunkLength <= nextCharacterInEncoded) {\\r\\n                    decompressedString += decompressedString.slice(startText, endOfText);\\r\\n                } else {\\r\\n                    let nextChunk = \\\"\\\";\\r\\n                    const partialChunk = decompressedString.slice(startText, endOfText);\\r\\n\\r\\n                    while (nextChunk.length < chunkLength) {\\r\\n                        if (nextChunk.length + partialChunk.length > chunkLength) {\\r\\n                            const howMuchLeftInChunk = chunkLength - nextChunk.length;\\r\\n                            nextChunk += partialChunk.slice(0, howMuchLeftInChunk)\\r\\n                        } else {\\r\\n                            nextChunk += partialChunk;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    decompressedString += nextChunk;\\r\\n                }\\r\\n\\r\\n                startOfNextChunk += 2;\\r\\n                nextSectionCompressed = false;\\r\\n            } else {\\r\\n                const startText = startOfNextChunk + 1;\\r\\n                const endOfText = startText + chunkLength;\\r\\n                decompressedString += stringToDecode.slice(startText, endOfText);\\r\\n                startOfNextChunk = endOfText;\\r\\n                nextSectionCompressed = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        return decompressedString;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading1Handler {\\r\\n    type = 'Algorithmic Stock Trader I';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 1;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading2Handler {\\r\\n    type = 'Algorithmic Stock Trader II';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input.length;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading3Handler {\\r\\n    type = 'Algorithmic Stock Trader III';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 2;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading4Handler {\\r\\n    type = 'Algorithmic Stock Trader IV';\\r\\n\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input[0];\\r\\n        const stockPricesByDay = input[1];\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return this.tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n\\r\\n    tradeStock(maxNumberOfTrades, stockPricesByDay) {\\r\\n        if (maxNumberOfTrades === 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        let profitsPerTransaction = []\\r\\n\\r\\n        for (let i = stockPricesByDay.length - 1; i >= 1; i--) {\\r\\n            const priceToSeeIfHasNoVolitility = stockPricesByDay[i];\\r\\n\\r\\n            const yesterdaysPrice = stockPricesByDay[i - 1]\\r\\n            const tomorrowsPrice = stockPricesByDay[i + 1]\\r\\n\\r\\n            if (\\r\\n                (yesterdaysPrice <= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility <= tomorrowsPrice) || // rising prices filter\\r\\n                (!tomorrowsPrice && yesterdaysPrice >= priceToSeeIfHasNoVolitility) || // end price\\r\\n                (yesterdaysPrice >= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility >= tomorrowsPrice)) { // falling price filter\\r\\n                stockPricesByDay.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < stockPricesByDay.length; i++) {\\r\\n            const price = stockPricesByDay[i];\\r\\n            const potentialBuyPrice = stockPricesByDay[i - 1];\\r\\n            let potentialProfit = 0;\\r\\n\\r\\n            if (potentialBuyPrice) {\\r\\n                potentialProfit = price - potentialBuyPrice;\\r\\n            }\\r\\n\\r\\n            if (potentialProfit < 0) {\\r\\n                potentialProfit = 0;\\r\\n            }\\r\\n\\r\\n\\r\\n            profitsPerTransaction.push({ price, potentialProfit });\\r\\n        }\\r\\n\\r\\n        if (maxNumberOfTrades >= profitsPerTransaction.filter(x => x.potentialProfit > 0).length) {\\r\\n            return profitsPerTransaction\\r\\n                .reduce((acc, x) => acc + x.potentialProfit, 0);\\r\\n        }\\r\\n\\r\\n        const minProfit = Math.min(...profitsPerTransaction.filter(x => x.potentialProfit !== 0).map(x => x.potentialProfit));\\r\\n        const countOfMinProfits = profitsPerTransaction.filter(x => x.potentialProfit === minProfit).length;\\r\\n        const maxPrice = Math.max(...stockPricesByDay);\\r\\n        const arraysToWorkWith = [];\\r\\n\\r\\n        for (let i = 0; i < profitsPerTransaction.length; i++) {\\r\\n            const profitPerTranaction = profitsPerTransaction[i];\\r\\n\\r\\n            if (profitPerTranaction.potentialProfit === minProfit) {\\r\\n\\r\\n                const copyOfProfitsPerTransaction = profitsPerTransaction.map(x => x)\\r\\n                if (profitPerTranaction.price === maxPrice) {\\r\\n                    copyOfProfitsPerTransaction.splice(i - 1, 1);\\r\\n                } else {\\r\\n                    copyOfProfitsPerTransaction.splice(i, 1); // if there is a bigger price in the future, splice sell price. \\r\\n                }\\r\\n\\r\\n                arraysToWorkWith.push(copyOfProfitsPerTransaction.map(x => x.price));\\r\\n            }\\r\\n\\r\\n            if (arraysToWorkWith.length === countOfMinProfits) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const potentialProfitsForAllTrades = []\\r\\n        for (const newArrayOfPrices of arraysToWorkWith) {\\r\\n            potentialProfitsForAllTrades.push(this.tradeStock(maxNumberOfTrades, newArrayOfPrices))\\r\\n        }\\r\\n\\r\\n        return Math.max(...potentialProfitsForAllTrades);\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass SpiralizeMatrixHandler {\\r\\n    type = \\\"Spiralize Matrix\\\";\\r\\n\\r\\n    solve(matrix) {\\r\\n        return this.solveRecursively(JSON.parse(JSON.stringify(matrix)));\\r\\n    }\\r\\n\\r\\n    solveRecursively(matrix, spiralOrderResult = []) {\\r\\n\\r\\n        if (matrix.length === 0) {\\r\\n            return spiralOrderResult;\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < matrix.length; i++) {\\r\\n            if (i === 0 || i === matrix.length - 1) {\\r\\n                let rowToEmpty = matrix[i];\\r\\n\\r\\n                if (i === matrix.length - 1 && i !== 0) {\\r\\n                    rowToEmpty.reverse()\\r\\n                }\\r\\n\\r\\n                for (let x = 0; x < rowToEmpty.length; x++) {\\r\\n                    const number = rowToEmpty[x];\\r\\n                    \\r\\n                    spiralOrderResult.push(number);\\r\\n                }\\r\\n\\r\\n                rowToEmpty.length = 0\\r\\n            } else {\\r\\n                let rowBeingUsed = matrix[i];\\r\\n                const number = rowBeingUsed.pop()\\r\\n\\r\\n                if(number){\\r\\n                    spiralOrderResult.push(number);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            if (matrix[i].length === 0) {\\r\\n                matrix.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            const row = matrix[i];\\r\\n            row.reverse();\\r\\n            spiralOrderResult.push(row.pop());\\r\\n            row.reverse();\\r\\n        }\\r\\n\\r\\n        return this.solveRecursively(matrix, spiralOrderResult)\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Encryption1Handler {\\r\\n    type = 'Encryption I: Caesar Cipher';\\r\\n\\r\\n    solve([string, shift]) {\\r\\n\\r\\n        let returnString = \\\"\\\";\\r\\n\\r\\n        if (string) {\\r\\n            for (const character of string) {\\r\\n                if (character === \\\" \\\") {\\r\\n                    returnString += \\\" \\\";\\r\\n                }\\r\\n                else {\\r\\n                    const charCode = character.charCodeAt(0);\\r\\n\\r\\n                    if (charCode) {\\r\\n                        let newCharCode = charCode - shift;\\r\\n\\r\\n                        if (newCharCode < 65) {\\r\\n                            const amountLessThan65 = 65 - newCharCode;\\r\\n                            newCharCode = 91 - amountLessThan65;\\r\\n                        }\\r\\n\\r\\n                        returnString += String.fromCharCode(newCharCode);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return returnString;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass Encryption2Handler {\\r\\n    type = 'Encryption II: Vigenère Cipher';\\r\\n\\r\\n    solve([plainText, key]) {\\r\\n\\r\\n        let encryptedText = \\\"\\\";\\r\\n\\r\\n        if(plainText){\\r\\n            let keyIndex = 0;\\r\\n\\r\\n            for (let i = 0; i < plainText.length; i++) {\\r\\n                const plainTextCharacter = plainText[i];\\r\\n\\r\\n                if(plainTextCharacter === \\\" \\\"){\\r\\n                    encryptedText += \\\" \\\";\\r\\n                } else {\\r\\n                    const keyCharCode = key[keyIndex].charCodeAt(0);\\r\\n                    const shift = keyCharCode - 65;\\r\\n\\r\\n                    const plainTextCode = plainTextCharacter.charCodeAt(0);\\r\\n                    let encryptedCharacterCode = plainTextCode + shift;\\r\\n\\r\\n                    if (encryptedCharacterCode > 90) {\\r\\n                        const amountMoreThan91 = encryptedCharacterCode - 91;\\r\\n                        encryptedCharacterCode = amountMoreThan91 + 65;\\r\\n                    }\\r\\n\\r\\n                    encryptedText += String.fromCharCode(encryptedCharacterCode);\\r\\n                }\\r\\n\\r\\n                \\r\\n                keyIndex++;\\r\\n                if(keyIndex >= key.length){\\r\\n                    keyIndex = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return encryptedText;\\r\\n    }\\r\\n}\",\"filename\":\"scripts/contracts/do.js\",\"server\":\"home\"}}],[\"scripts/contracts/save-contracts-for-thomas.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"const thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \\r\\nlet savedContractsFileNameForHuman;\\r\\n\\r\\nexport async function main(ns) {\\r\\n\\r\\n    let savedContracts;\\r\\n\\r\\n    const contractsFromThisRound = JSON.parse(ns.read(thisRoundsContractsFileName));\\r\\n\\r\\n    if(savedContractsFileNameForHuman){\\r\\n        savedContracts = JSON.parse(ns.read(savedContractsFileNameForHuman));\\r\\n    }\\r\\n\\r\\n    if (!savedContracts || contractsFromThisRound.length === 0 && savedContracts.length > 0){\\r\\n        const now = new Date();\\r\\n        savedContractsFileNameForHuman = `contracts/${now.toISOString()}.txt`\\r\\n    }\\r\\n\\r\\n    ns.rm(savedContractsFileNameForHuman);\\r\\n    ns.write(savedContractsFileNameForHuman, JSON.stringify(contractsFromThisRound), \\\"W\\\");\\r\\n\\r\\n}\",\"filename\":\"scripts/contracts/save-contracts-for-thomas.js\",\"server\":\"home\"}}],[\"scripts/contracts/populate-input.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const contracts = JSON.parse(ns.read(thisRoundsContractsFileName))\\r\\n\\r\\n    for (const contract of contracts) {\\r\\n        const hostName = contract.server;\\r\\n        const contractName = contract.name;\\r\\n        contract.input = ns.codingcontract.getData(contractName, hostName);\\r\\n    }\\r\\n\\r\\n    ns.rm(thisRoundsContractsFileName);\\r\\n    ns.write(thisRoundsContractsFileName, JSON.stringify(contracts), \\\"W\\\");\\r\\n}\\r\\n\\r\\nconst thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \",\"filename\":\"scripts/contracts/populate-input.js\",\"server\":\"home\"}}],[\"scripts/contracts/populate-description.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const contracts = JSON.parse(ns.read(thisRoundsContractsFileName))\\r\\n\\r\\n    for (const contract of contracts) {\\r\\n        const hostName = contract.server;\\r\\n        const contractName = contract.name;\\r\\n        contract.description = ns.codingcontract.getDescription(contractName, hostName);\\r\\n    }\\r\\n\\r\\n    ns.rm(thisRoundsContractsFileName);\\r\\n    ns.write(thisRoundsContractsFileName, JSON.stringify(contracts), \\\"W\\\");\\r\\n}\\r\\n\\r\\nconst thisRoundsContractsFileName = \\\"data/contracts.txt\\\"; \",\"filename\":\"scripts/contracts/populate-description.js\",\"server\":\"home\"}}],[\"scripts/contracts/contract-coordinator.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    ns.run('scripts/contracts/get.js');\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    ns.run('scripts/contracts/populate-input.js')\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    ns.run('scripts/contracts/populate-description.js')\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    ns.run('scripts/contracts/do.js')\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    ns.run('scripts/contracts/save-contracts-for-thomas.js')\\r\\n}\",\"filename\":\"scripts/contracts/contract-coordinator.js\",\"server\":\"home\"}}],[\"scripts/test.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\n  ns.stock.sellShort(\\\"sym\\\", \\\"shares\\\");\\n\\n  ns.stock.buyShort(\\\"sym\\\", \\\"shares\\\");\\n\\n}\",\"filename\":\"scripts/test.js\",\"server\":\"home\"}}],[\"scripts/coordinator-for-8.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/coordinator.js 1000 564 5.629 BitRunners\\r\\n\\r\\n\\r\\n/// delete \\\"numberOfThreads = 500\\\"\\r\\n\\r\\nexport async function main(ns) {\\r\\n    const loopEveryXSeconds = 2;\\r\\n    const sleepTotalOfXMS = loopEveryXSeconds * 1000;\\r\\n    const numberOfDifferentSleeps = 5;\\r\\n    const individualSleepAmount = sleepTotalOfXMS / numberOfDifferentSleeps;\\r\\n    let dispatchScript = 'scripts/hacking/memory-starved-dispatch.js';\\r\\n\\r\\n    let runClean = true;\\r\\n    if (ns.args[0] === 'old') {\\r\\n        runClean = false;\\r\\n    }\\r\\n\\r\\n    if (runClean) {\\r\\n        ns.run('scripts/clean.js', 1, \\\"new\\\");\\r\\n        await ns.sleep(1000);\\r\\n    }\\r\\n\\r\\n    ns.run('scripts/precalculate-important-data.js')\\r\\n\\r\\n    await ns.sleep(200);\\r\\n\\r\\n    while (true) {\\r\\n\\r\\n        if (ns.fileExists('Formulas.exe')) {\\r\\n            dispatchScript = 'scripts/hacking/batch-dispatch.js'\\r\\n        }\\r\\n\\r\\n        ns.run(\\\"scripts/scan.js\\\", 1, dispatchScript);\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        ns.run('scripts/hacking/hack-all-machines.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        ns.run('scripts/contracts/contract-coordinator.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n        ns.run('scripts/stock/get-stock-quotes.js');\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n        await singularityStuff(ns);\\r\\n    }\\r\\n\\r\\n\\r\\n    async function singularityStuff(ns) {\\r\\n        await doSingularityWork(ns, 'backdoor-all-machines')\\r\\n        await doSingularityWork(ns, 'join-organziations');\\r\\n        await doSingularityWork(ns, 'do-work');\\r\\n        // await doSingularityWork(ns, 'finish-round');\\r\\n        await doSingularityWork(ns, 'finish-bitnode');\\r\\n        await doSingularityWork(ns, 'study-computer-science');\\r\\n        await doSingularityWork(ns, 'create-early-programs');\\r\\n        await doSingularityWork(ns, 'do-job');\\r\\n        await doSingularityWork(ns, 'buy-rep');\\r\\n        await doSingularityWork(ns, 'workout');\\r\\n        // await doSingularityWork(ns, 'upgade-home-machine');\\r\\n        await doSingularityWork(ns, 'travel-to-get-augs');\\r\\n    }\\r\\n\\r\\n    async function doSingularityWork(ns, script) {\\r\\n        ns.run(`scripts/singularity/${script}.js`);\\r\\n\\r\\n        await ns.sleep(individualSleepAmount / 12);\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/coordinator-for-8.js\",\"server\":\"home\"}}],[\"scripts/stock/get-stock-quotes.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const stockRecords = ns.stock\\r\\n        .getSymbols()\\r\\n        .map(x => new Stock(\\r\\n            x,\\r\\n            ns.stock.getBidPrice(x),\\r\\n            ns.stock.getAskPrice(x),\\r\\n            ns.stock.getPrice(x),\\r\\n            ns.stock.getMaxShares(x),\\r\\n            ns.stock.getPosition(x)\\r\\n        ));\\r\\n\\r\\n    const latestStockQuotesFile = \\\"data/latestQuotes.txt\\\";\\r\\n    ns.rm(latestStockQuotesFile);\\r\\n    ns.write(latestStockQuotesFile, JSON.stringify(stockRecords), \\\"W\\\")\\r\\n\\r\\n    ns.run(\\\"scripts/stock/populate-forecast.js\\\")\\r\\n}\\r\\n\\r\\n\\r\\nclass Stock {\\r\\n    constructor(symbol, bid, ask, price, maxShares, position = {}, dateObserved = new Date()) {\\r\\n        this.symbol = symbol;\\r\\n        this.bid = bid;\\r\\n        this.ask = ask;\\r\\n        this.price = price;\\r\\n        this.maxShares = maxShares;\\r\\n        this.investedShares = position[0];\\r\\n        this.averagePrice = position[1];\\r\\n        this.sharesShort = position[2];\\r\\n        this.averageShortPrice = position[3];\\r\\n        this.dateObserved = dateObserved.toLocaleString();\\r\\n    }\\r\\n\\r\\n    volatility;\\r\\n    forecast;\\r\\n\\r\\n    buyTrend = false;\\r\\n    sellTrend = false;\\r\\n    sellShortTrend = false;\\r\\n    coverShortTrend = false;\\r\\n\\r\\n}\",\"filename\":\"scripts/stock/get-stock-quotes.js\",\"server\":\"home\"}}],[\"scripts/stock/populate-forecast.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const latestStockQuotesFile = \\\"data/latestQuotes.txt\\\";\\r\\n    const stockRecords = JSON.parse(ns.read(latestStockQuotesFile));\\r\\n\\r\\n    const hasS4DataTIXAPI = ns.stock.has4SDataTIXAPI();\\r\\n\\r\\n    if (hasS4DataTIXAPI) {\\r\\n        for (const stockRecord of stockRecords) {\\r\\n            stockRecord.volatility = ns.stock.getVolatility(stockRecord.symbol);\\r\\n            stockRecord.forecast = ns.stock.getForecast(stockRecord.symbol);\\r\\n            stockRecord.bias = Math.abs(stockRecord.forecast - .5);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ns.rm(latestStockQuotesFile);\\r\\n    ns.write(latestStockQuotesFile, JSON.stringify(stockRecords), \\\"W\\\")\\r\\n\\r\\n    ns.run(\\\"scripts/stock/buy-4s.js\\\")\\r\\n}\",\"filename\":\"scripts/stock/populate-forecast.js\",\"server\":\"home\"}}],[\"scripts/stock/invest-in-stocks.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"let lastRecordedToConsole = new Date();\\r\\n\\r\\nexport async function main(ns) {\\r\\n\\r\\n    let historicalData = new Map();\\r\\n\\r\\n    const nameOfStockHistoricalData = \\\"../../data/stockHistory.txt\\\";\\r\\n    if (ns.fileExists(nameOfStockHistoricalData)) {\\r\\n        historicalData = new Map(JSON.parse(ns.read(nameOfStockHistoricalData)));\\r\\n    }\\r\\n\\r\\n    const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n    let stockMarketReserveMoney = new ReserveForTrading();\\r\\n    if (ns.fileExists(stockMarketReserveMoneyFile)) {\\r\\n        stockMarketReserveMoney = new ReserveForTrading(JSON.parse(ns.read(stockMarketReserveMoneyFile)));\\r\\n    }\\r\\n\\r\\n    const latestStockQuotesFile = \\\"data/latestQuotes.txt\\\";\\r\\n    const stockRecords = JSON.parse(ns.read(latestStockQuotesFile));\\r\\n\\r\\n    SaveHistoricData(stockRecords, historicalData, ns, nameOfStockHistoricalData);\\r\\n\\r\\n    let moneyInvested = 0;\\r\\n    moneyInvested += stockRecords.reduce((sum, record) => sum += record.price * record.investedShares, 0);\\r\\n    moneyInvested += stockRecords.reduce((sum, record) => sum += (record.averageShortPrice * record.sharesShort) + ((record.averageShortPrice - record.price) * record.sharesShort), 0);\\r\\n\\r\\n    stockMarketReserveMoney.setMoneyInvested(moneyInvested, ns);\\r\\n\\r\\n    const nameOfLedger = \\\"../../data/salesLedger.txt\\\"\\r\\n    let ledger = [];\\r\\n\\r\\n    if (ns.fileExists(nameOfLedger)) {\\r\\n        ledger = JSON.parse(ns.read(nameOfLedger));\\r\\n    }\\r\\n\\r\\n    stockMarketReserveMoney.moneyRequested = new Map(Array.from(stockMarketReserveMoney.moneyRequested));\\r\\n    const reserveMoneyKeys = stockMarketReserveMoney.moneyRequested.keys();\\r\\n    let moneyRequested = 0;\\r\\n\\r\\n    for (const requestKey of reserveMoneyKeys) {\\r\\n        moneyRequested += stockMarketReserveMoney.moneyRequested.get(requestKey);\\r\\n    }\\r\\n\\r\\n    if (moneyRequested === 0) {\\r\\n        stockMarketReserveMoney.countOfVisitedWithoutFillingRequest = 0;\\r\\n    }\\r\\n\\r\\n    let sellSharesToSatisfyMoneyDemands = false;\\r\\n    if (stockMarketReserveMoney.countOfVisitedWithoutFillingRequest > 90) {\\r\\n        sellSharesToSatisfyMoneyDemands = true;\\r\\n    }\\r\\n\\r\\n    const commission = 100_001;\\r\\n\\r\\n    const stopTradingExists = ns.fileExists(\\\"../../stopTrading.txt\\\");\\r\\n    stockRecords.map(stock => {\\r\\n        let sharesToSell = 0;\\r\\n        let type = \\\"Short-Term Long Sale\\\";\\r\\n        let averagePrice = 0;\\r\\n        let coverShort = false;\\r\\n\\r\\n        if (stock.investedShares > 0) {\\r\\n            sharesToSell = stock.investedShares;\\r\\n            type = \\\"Short-Term Long Sale\\\";\\r\\n            averagePrice = stock.averagePrice;\\r\\n            coverShort = false;\\r\\n        }\\r\\n\\r\\n        if (stock.sharesShort > 0) {\\r\\n            sharesToSell = stock.sharesShort;\\r\\n            type = \\\"Short-Term Cover Short\\\";\\r\\n            averagePrice = stock.averageShortPrice;\\r\\n            coverShort = true;\\r\\n        }\\r\\n\\r\\n        if (sellSharesToSatisfyMoneyDemands) {\\r\\n            if (stockMarketReserveMoney.canSellAmountAndStillHaveReserve(moneyRequested)) {\\r\\n                sharesToSell = Math.ceil(moneyRequested / stock.bid)\\r\\n\\r\\n                if (sharesToSell > stock.investedShares) {\\r\\n                    sharesToSell = stock.investedShares;\\r\\n                }\\r\\n\\r\\n                if (sharesToSell > stock.sharesShort) {\\r\\n                    sharesToSell = stock.sharesShort;\\r\\n                }\\r\\n            } else {\\r\\n                sellSharesToSatisfyMoneyDemands = false;\\r\\n                stockMarketReserveMoney.countOfVisitedWithoutFillingRequest = 0;\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        if (sharesToSell > 0) {\\r\\n            if ((stock.sellTrend && coverShort === false) || stopTradingExists || sellSharesToSatisfyMoneyDemands || (stock.coverShortTrend && coverShort)) {\\r\\n                let salePrice;\\r\\n                if (coverShort) {\\r\\n                    salePrice = ns.stock.sellShort(stock.symbol, sharesToSell);\\r\\n                } else {\\r\\n                    salePrice = ns.stock.sellStock(stock.symbol, sharesToSell);\\r\\n                }\\r\\n\\r\\n                ledger.push(new LedgerItem(\\r\\n                    stock.symbol,\\r\\n                    salePrice,\\r\\n                    averagePrice,\\r\\n                    sharesToSell,\\r\\n                    type,\\r\\n                    stock.forecast\\r\\n                ))\\r\\n\\r\\n                if (sellSharesToSatisfyMoneyDemands) {\\r\\n                    sellSharesToSatisfyMoneyDemands = false;\\r\\n                    ns.toast(`Sold $${moneyRequested} for money request.`, \\\"success\\\", null)\\r\\n                }\\r\\n\\r\\n                if (stopTradingExists) {\\r\\n                    ns.toast(\\\"Stopped trading\\\", \\\"success\\\", null)\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n\\r\\n    const moneyWeHaveNow = ns.getServerMoneyAvailable(\\\"home\\\") + stockMarketReserveMoney.moneyInvested;\\r\\n\\r\\n    const now = new Date();\\r\\n    if (now.getMinutes() !== lastRecordedToConsole.getMinutes()) {\\r\\n        const timeStamp = `[${String(now.getHours()).padStart(2, 0)}:${String(now.getMinutes()).padStart(2, 0)}]`\\r\\n\\r\\n        const formatter = new Intl.NumberFormat('en-US', {\\r\\n            style: 'currency',\\r\\n            currency: 'USD',\\r\\n        });\\r\\n\\r\\n        const moneyFormatted = formatter.format(moneyWeHaveNow);\\r\\n\\r\\n        let consoleUpdate = `${timeStamp} Money we have now: ${moneyFormatted}`;\\r\\n\\r\\n        ns.tprint(consoleUpdate);\\r\\n\\r\\n        lastRecordedToConsole = now;\\r\\n    }\\r\\n\\r\\n\\r\\n    ns.rm(nameOfLedger);\\r\\n    ns.write(nameOfLedger, JSON.stringify(ledger), \\\"W\\\");\\r\\n\\r\\n\\r\\n    let moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\") - commission - moneyRequested;\\r\\n\\r\\n    if (moneyAvailable > 5_000_000_000 && !ns.stock.has4SDataTIXAPI()) {\\r\\n        moneyAvailable = 5_000_000_000;\\r\\n    }\\r\\n\\r\\n    let onlyInvestIfWeHaveMoreThan = 30_000_000;\\r\\n    if (ns.fileExists('../../stopInvesting.txt')) {\\r\\n        onlyInvestIfWeHaveMoreThan = 30_000_000;\\r\\n    }\\r\\n\\r\\n    if (moneyAvailable > onlyInvestIfWeHaveMoreThan && !stopTradingExists) {\\r\\n        let stocksToTrade = stockRecords\\r\\n            .filter(stock =>\\r\\n                (stock.buyTrend && stock.investedShares !== stock.maxShares) ||\\r\\n                (stock.sellShortTrend && stock.maxShares !== stock.sharesShort))\\r\\n            .sort((a, b) => b.volatility - a.volatility);\\r\\n\\r\\n        if (!ns.stock.has4SDataTIXAPI()) {\\r\\n            stocksToTrade = stockRecords\\r\\n                .filter(stock =>\\r\\n                    (stock.buyTrend && stock.investedShares === 0) ||\\r\\n                    (stock.sellShortTrend && stock.sharesShort === 0))\\r\\n                .sort((a, b) => b.magnitudeOfSignal - a.magnitudeOfSignal);\\r\\n        }\\r\\n\\r\\n        if (stocksToTrade.length > 0) {\\r\\n            const stockToLookAt = stocksToTrade[0];\\r\\n\\r\\n            let sharesToBuy = 0;\\r\\n            const ticker = stockToLookAt.symbol;\\r\\n\\r\\n            if (stockToLookAt.buyTrend) {\\r\\n                sharesToBuy = Math.round(moneyAvailable / stockToLookAt.ask);\\r\\n\\r\\n                const totalSharesAfterBuy = sharesToBuy + stockToLookAt.investedShares;\\r\\n\\r\\n                if (stockToLookAt.maxShares < totalSharesAfterBuy) {\\r\\n                    sharesToBuy = stockToLookAt.maxShares - stockToLookAt.investedShares;\\r\\n                }\\r\\n\\r\\n                ns.stock.buyStock(ticker, sharesToBuy);\\r\\n            }\\r\\n\\r\\n            if (stockToLookAt.sellShortTrend) {\\r\\n                sharesToBuy = Math.round(moneyAvailable / stockToLookAt.bid);\\r\\n\\r\\n                const totalSharesAfterBuy = sharesToBuy + stockToLookAt.sharesShort;\\r\\n\\r\\n                if (stockToLookAt.maxShares < totalSharesAfterBuy) {\\r\\n                    sharesToBuy = stockToLookAt.maxShares - stockToLookAt.sharesShort;\\r\\n                }\\r\\n\\r\\n                ns.stock.buyShort(ticker, sharesToBuy);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ns.rm(stockMarketReserveMoneyFile);\\r\\n    ns.write(stockMarketReserveMoneyFile, JSON.stringify(stockMarketReserveMoney), \\\"W\\\");\\r\\n}\\r\\n\\r\\n\\r\\nclass ReserveForTrading {\\r\\n    stockMarketReserveMoneyLimit = 1_000_000_000_000;\\r\\n    capitalToReserveForTrading = 0;\\r\\n    moneyInvested = 0;\\r\\n    moneyRequested = new Map();\\r\\n    countOfVisitedWithoutFillingRequest = 0;\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    canSellAmountAndStillHaveReserve(amountToSell) {\\r\\n        return (this.moneyInvested - amountToSell) > this.capitalToReserveForTrading;\\r\\n    }\\r\\n\\r\\n    setMoneyInvested(moneyInvested, ns) {\\r\\n        this.moneyInvested = moneyInvested;\\r\\n\\r\\n        const potentialCapitalReserve = moneyInvested / 2;\\r\\n\\r\\n        this.capitalToReserveForTrading = Math.max(...[potentialCapitalReserve, this.capitalToReserveForTrading]);\\r\\n\\r\\n        if (this.capitalToReserveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            this.capitalToReserveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        this.countOfVisitedWithoutFillingRequest++;\\r\\n    }\\r\\n\\r\\n    canSpend(ns, moneyNeeded) {\\r\\n        const moneyOnHome = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        let moneyToSaveForTrading = this.capitalToReserveForTrading - this.moneyInvested;\\r\\n\\r\\n        if (moneyToSaveForTrading < 0) {\\r\\n            moneyToSaveForTrading = 0;\\r\\n        }\\r\\n\\r\\n        if (moneyToSaveForTrading > this.stockMarketReserveMoneyLimit) {\\r\\n            moneyToSaveForTrading = this.stockMarketReserveMoneyLimit;\\r\\n        }\\r\\n\\r\\n        const canSpend = moneyNeeded < moneyOnHome - moneyToSaveForTrading\\r\\n\\r\\n        if (canSpend === false) {\\r\\n            this.requestMoney(ns, moneyNeeded);\\r\\n        } else {\\r\\n            this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n            const nameOfRequest = \\\"purchase-server\\\";\\r\\n            this.moneyRequested.delete(nameOfRequest);\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n\\r\\n        return canSpend;\\r\\n    }\\r\\n\\r\\n    requestMoney(ns, amount) {\\r\\n        const nameOfRequest = \\\"purchase-server\\\";\\r\\n        this.moneyRequested = new Map(Array.from(this.moneyRequested));\\r\\n\\r\\n        const moneyRequestedPreviously = this.moneyRequested.get(nameOfRequest);\\r\\n        if (moneyRequestedPreviously) {\\r\\n            if (moneyRequestedPreviously < amount) {\\r\\n                this.moneyRequested.set(nameOfRequest, amount);\\r\\n                this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n                const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n                ns.rm(stockMarketReserveMoneyFile);\\r\\n                ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n            }\\r\\n        } else {\\r\\n            this.moneyRequested.set(nameOfRequest, amount);\\r\\n            this.moneyRequested = Array.from(this.moneyRequested);\\r\\n\\r\\n            const stockMarketReserveMoneyFile = \\\"data/stockMarketReserveMoney.txt\\\";\\r\\n            ns.rm(stockMarketReserveMoneyFile);\\r\\n            ns.write(stockMarketReserveMoneyFile, JSON.stringify(this), \\\"W\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nclass LedgerItem {\\r\\n\\r\\n    constructor(symbol, price, averagePurchasePrice, shares, type, forecastAtSale) {\\r\\n        const formatter = new Intl.NumberFormat('en-US', {\\r\\n            style: 'currency',\\r\\n            currency: 'USD',\\r\\n        });\\r\\n\\r\\n        let numberProfit = (price - averagePurchasePrice) * shares;\\r\\n\\r\\n        if (type === \\\"Short-Term Cover Short\\\") {\\r\\n            numberProfit = (averagePurchasePrice - price) * shares;\\r\\n        }\\r\\n\\r\\n        this.date = new Date().toLocaleString();\\r\\n        this.symbol = symbol;\\r\\n        this.price = price;\\r\\n        this.averagePurchasePrice = averagePurchasePrice;\\r\\n        this.profit = formatter.format(numberProfit);\\r\\n        this.profitPercent = (numberProfit / (shares * averagePurchasePrice)).toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 });\\r\\n        this.shares = shares;\\r\\n        this.type = type;\\r\\n        this.forecastAtSale = forecastAtSale;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass StockHistoricData {\\r\\n    shortTermRecords = [];\\r\\n    longTermRecords = [];\\r\\n    recentTicksOfPrices = [];\\r\\n\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    addRecord(record, ns) {\\r\\n        this.shortTermRecords.push(record);\\r\\n        this.recentTicksOfPrices.push(record.price);\\r\\n\\r\\n        if (this.recentTicksOfPrices.length === 21) {\\r\\n            record.countOfNegative = 0;\\r\\n            record.countOfPositive = 0;\\r\\n            record.magnitudeOfSignal = 0;\\r\\n\\r\\n            let lastPrice;\\r\\n            for (const price of this.recentTicksOfPrices) {\\r\\n                if (lastPrice) {\\r\\n                    if (lastPrice < price) {\\r\\n                        record.countOfPositive++;\\r\\n                    }\\r\\n\\r\\n                    if (lastPrice > price) {\\r\\n                        record.countOfNegative++;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                lastPrice = price;\\r\\n            }\\r\\n\\r\\n            this.recentTicksOfPrices.shift();\\r\\n        }\\r\\n\\r\\n        const hasOracle = ns.stock.has4SDataTIXAPI();\\r\\n\\r\\n\\r\\n        if (!hasOracle) {\\r\\n            if (record.countOfPositive >= 16) {\\r\\n                record.buyTrend = true;\\r\\n                record.magnitudeOfSignal = record.countOfPositive;\\r\\n            }\\r\\n\\r\\n            if (record.countOfPositive <= 12 && record.investedShares > 0) {\\r\\n                record.sellTrend = true;\\r\\n            }\\r\\n\\r\\n            if (record.countOfNegative >= 16) {\\r\\n                record.sellShortTrend = true;\\r\\n                record.magnitudeOfSignal = record.countOfNegative;\\r\\n            }\\r\\n\\r\\n            if (record.countOfNegative <= 12 && record.sharesShort > 0) {\\r\\n                record.coverShortTrend = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (hasOracle) {\\r\\n            if (record.forecast > 0.6) {\\r\\n                record.buyTrend = true;\\r\\n            }\\r\\n\\r\\n            if (record.forecast < .5 && record.investedShares > 0) {\\r\\n                record.sellTrend = true;\\r\\n            }\\r\\n\\r\\n            if (0.4 > record.forecast) {\\r\\n                record.sellShortTrend = true;\\r\\n            }\\r\\n\\r\\n            if (0.5 < record.forecast && record.sharesShort > 0) {\\r\\n                record.coverShortTrend = true;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    storeLongTerm() {\\r\\n        const newLongTermStock = new Stock(\\r\\n            this.shortTermRecords[0].symbol,\\r\\n            this.shortTermRecords.map(x => x.bid).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.ask).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.price).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords[0].maxShares,\\r\\n            [\\r\\n                this.shortTermRecords.map(x => x.investedShares).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.averagePrice).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.sharesShort).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.averageShortPrice).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            ]\\r\\n        );\\r\\n\\r\\n        newLongTermStock.volatility = this.shortTermRecords[0].volatility;\\r\\n        newLongTermStock.forecast = this.shortTermRecords.map(x => x.forecast).reduce((a, b) => a + b) / this.shortTermRecords.length;\\r\\n\\r\\n        newLongTermStock.bias = Math.max(...this.shortTermRecords.map(x => x.bias));\\r\\n\\r\\n        this.longTermRecords.push(newLongTermStock);\\r\\n\\r\\n        this.shortTermRecords.length = 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Stock {\\r\\n    constructor(symbol, bid, ask, price, maxShares, position = {}, dateObserved = new Date()) {\\r\\n        this.symbol = symbol;\\r\\n        this.bid = bid;\\r\\n        this.ask = ask;\\r\\n        this.price = price;\\r\\n        this.maxShares = maxShares;\\r\\n        this.investedShares = position[0];\\r\\n        this.averagePrice = position[1];\\r\\n        this.sharesShort = position[2];\\r\\n        this.averageShortPrice = position[3];\\r\\n        this.dateObserved = dateObserved.toLocaleString();\\r\\n    }\\r\\n\\r\\n    volatility;\\r\\n    forecast;\\r\\n\\r\\n    buyTrend = false;\\r\\n    sellTrend = false;\\r\\n    sellShortTrend = false;\\r\\n    coverShortTrend = false;\\r\\n\\r\\n}\\r\\n\\r\\nfunction SaveHistoricData(stockRecords, historicalData, ns, nameOfStockHistoricalData) {\\r\\n    stockRecords.map(x => {\\r\\n        if (historicalData.has(x.symbol)) {\\r\\n            const data = historicalData.get(x.symbol);\\r\\n\\r\\n            if (data.shortTermRecords[data.shortTermRecords.length - 1]?.price !== x.price) {\\r\\n                const record = new StockHistoricData(data);\\r\\n                record.addRecord(x, ns);\\r\\n\\r\\n                if (record.shortTermRecords.length >= 100) {\\r\\n                    record.storeLongTerm();\\r\\n                }\\r\\n\\r\\n                historicalData.set(x.symbol, record);\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n            const stockHistoryData = new StockHistoricData();\\r\\n            stockHistoryData.addRecord(x, ns);\\r\\n            historicalData.set(x.symbol, stockHistoryData);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfStockHistoricalData);\\r\\n    ns.write(nameOfStockHistoricalData, JSON.stringify(Array.from(historicalData.entries()), \\\"W\\\"));\\r\\n}\\r\\n\",\"filename\":\"scripts/stock/invest-in-stocks.js\",\"server\":\"home\"}}],[\"scripts/stock/buy-4s.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    let moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\") \\r\\n\\r\\n    if (moneyAvailable > 27_000_000_000 && !ns.stock.has4SDataTIXAPI()) {\\r\\n        ns.stock.purchase4SMarketData();\\r\\n        ns.stock.purchase4SMarketDataTixApi();\\r\\n    }\\r\\n\\r\\n    ns.run(\\\"scripts/stock/invest-in-stocks.js\\\")\\r\\n}\",\"filename\":\"scripts/stock/buy-4s.js\",\"server\":\"home\"}}],[\"scripts/tools/manually-end-round.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    const player = ns.getPlayer();\\r\\n    const ownedAugmentations = ns.singularity.getOwnedAugmentations(true);\\r\\n\\r\\n    const formatter = new Intl.NumberFormat('en-US', {\\r\\n        style: 'currency',\\r\\n        currency: 'USD',\\r\\n    });\\r\\n\\r\\n    let totalToSpend = 0;\\r\\n\\r\\n    if (ns.fileExists(\\\"Formulas.exe\\\")) {\\r\\n\\r\\n\\r\\n        const factionsThatNeedDonating = [];\\r\\n\\r\\n        for (const faction of player.factions) {\\r\\n            const maximumAugRep = Math.max(...ns\\r\\n                .singularity\\r\\n                .getAugmentationsFromFaction(faction)\\r\\n                .filter(x => x !== \\\"NeuroFlux Governor\\\")\\r\\n                .filter(x => !ownedAugmentations.includes(x))\\r\\n                .filter(x => {\\r\\n                    const prereqs = ns.singularity.getAugmentationPrereq(x);\\r\\n                    return prereqs.every(y => ownedAugmentations.includes(y));\\r\\n                })\\r\\n                .map(x => ns.singularity.getAugmentationRepReq(x)));\\r\\n\\r\\n            const favor = ns.singularity.getFactionFavor(faction);\\r\\n\\r\\n            if (maximumAugRep > 0 && favor >= 0) {\\r\\n                factionsThatNeedDonating.push({ faction, maximumAugRep });\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (factionsThatNeedDonating.length > 0) {\\r\\n            for (const factionWithRep of factionsThatNeedDonating) {\\r\\n                let dollarsDonated = 0;\\r\\n\\r\\n                const currentFactionRep = ns.singularity.getFactionRep(factionWithRep.faction);\\r\\n                const repNeeded = factionWithRep.maximumAugRep - currentFactionRep;\\r\\n\\r\\n                if (repNeeded < 0) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                let purchasedRep = 0;\\r\\n\\r\\n                while (repNeeded > purchasedRep) {\\r\\n                    dollarsDonated += 10_000_000;\\r\\n                    purchasedRep = ns.formulas.reputation.repFromDonation(dollarsDonated, player);\\r\\n                }\\r\\n\\r\\n                ns.toast(`${factionWithRep.faction}`, 'success', null)\\r\\n                ns.toast(`Money needed for donations: ${formatter.format(dollarsDonated)}`, \\\"success\\\", null)\\r\\n\\r\\n                totalToSpend += dollarsDonated;\\r\\n\\r\\n                if (ns.args[0] === \\\"donate\\\") {\\r\\n                    ns.singularity.donateToFaction(factionWithRep.faction, dollarsDonated);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n    const mostRepExpensiveForEachFaction = [];\\r\\n    for (const faction of player.factions) {\\r\\n        const maximumAugRep = Math.max(...ns\\r\\n            .singularity\\r\\n            .getAugmentationsFromFaction(faction)\\r\\n            .filter(x => x !== \\\"NeuroFlux Governor\\\")\\r\\n            .filter(x => !ownedAugmentations.includes(x))\\r\\n            .map(x => ns.singularity.getAugmentationRepReq(x)));\\r\\n\\r\\n        if (maximumAugRep > 0) {\\r\\n            mostRepExpensiveForEachFaction.push({ faction, maximumAugRep });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const factionsWithAugmentsToBuy =\\r\\n        mostRepExpensiveForEachFaction\\r\\n            .map(x => {\\r\\n                {\\r\\n                    const faction = x.faction;\\r\\n                    const factionRep = ns.singularity.getFactionRep(faction);\\r\\n                    const factionAugmentsThatIDontOwnAndCanAfford = ns\\r\\n                        .singularity\\r\\n                        .getAugmentationsFromFaction(faction)\\r\\n                        .filter(y => y !== \\\"NeuroFlux Governor\\\")\\r\\n                        .filter(y => !ownedAugmentations.includes(y))\\r\\n                        .map(y => {\\r\\n                            return {\\r\\n                                augmentName: y,\\r\\n                                augmentationRepCost: ns.singularity.getAugmentationRepReq(y),\\r\\n                                price: ns.singularity.getAugmentationPrice(y),\\r\\n                                prereqs: ns.singularity.getAugmentationPrereq(y)\\r\\n                            }\\r\\n                        })\\r\\n                        // .filter(y => y.augmentationRepCost < factionRep)\\r\\n                        .sort((a, b) => b.price - a.price);\\r\\n\\r\\n                    return {\\r\\n                        faction,\\r\\n                        factionRep,\\r\\n                        factionAugmentsThatIDontOwnAndCanAfford\\r\\n                    }\\r\\n                }\\r\\n            });\\r\\n\\r\\n\\r\\n\\r\\n    const purchasableAugments = new Map();\\r\\n\\r\\n    for (const factionWithAugments of factionsWithAugmentsToBuy) {\\r\\n        for (const augment of factionWithAugments.factionAugmentsThatIDontOwnAndCanAfford) {\\r\\n            if (purchasableAugments.has(augment.augmentName) === false) {\\r\\n                const item = {\\r\\n                    augmentationRepCost: augment.augmentationRepCost,\\r\\n                    price: augment.price,\\r\\n                    prereqs: augment.prereqs,\\r\\n                    faction: factionWithAugments.faction\\r\\n                }\\r\\n                purchasableAugments.set(augment.augmentName, item)\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const augmentsLeft = Array.from(purchasableAugments.entries()).sort((a, b) => b[1].price - a[1].price);\\r\\n\\r\\n    const orderedAugments = []; // { factionName, augmentName, basePrice, multipledPrice}\\r\\n\\r\\n    function addPrereqs(prereqName) {\\r\\n        const augment = purchasableAugments.get(prereqName);\\r\\n\\r\\n        if (augment && !ownedAugmentations.find(x => x.augmentName === prereqName)) {\\r\\n\\r\\n            if (augment.prereqs.length > 0) {//it has prereqs, pass it into this. \\r\\n                for (const prereq of augment.prereqs) {\\r\\n                    addPrereqs(prereq)\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (!orderedAugments.find(x => x.augmentName === prereqName)) {\\r\\n                orderedAugments.push({ faction: augment.faction, augmentName: prereqName, basePrice: augment.price });\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    for (const augmentData of augmentsLeft) {\\r\\n        const augmentName = augmentData[0];\\r\\n        const augment = augmentData[1];\\r\\n\\r\\n        if (augment.prereqs.length > 0) {\\r\\n            for (const prereqName of augment.prereqs) {\\r\\n                addPrereqs(prereqName);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (!orderedAugments.find(x => x.augmentName === augmentName)) {\\r\\n            orderedAugments.push({ faction: augment.faction, augmentName: augmentName, basePrice: augment.price, multipledPrice: 0 })\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    let priceMultipler = 1;\\r\\n\\r\\n    for (const augment of orderedAugments) {\\r\\n        augment.multipledPrice = augment.basePrice * priceMultipler;\\r\\n        priceMultipler *= 1.9;\\r\\n    }\\r\\n\\r\\n    const moneyNeededForAugments = orderedAugments.reduce((acc, x) => acc + x.multipledPrice, 0);\\r\\n\\r\\n    totalToSpend += moneyNeededForAugments;\\r\\n\\r\\n    const moneyFormatted = formatter.format(moneyNeededForAugments);\\r\\n\\r\\n    if (ns.args[0] === \\\"finish\\\") {\\r\\n        for (const augment of orderedAugments) {\\r\\n            purchaseAug(ns, augment);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ns.toast(`Money needed for augs: ${moneyFormatted}`,'success', null)\\r\\n\\r\\n    ns.toast(`Total Needed: ${formatter.format(totalToSpend)}`, 'success', null)\\r\\n\\r\\n    ns.rm('orderedAugments.txt')\\r\\n    ns.write(\\\"orderedAugments.txt\\\", JSON.stringify(orderedAugments), \\\"W\\\")\\r\\n\\r\\n}\\r\\n\\r\\nfunction purchaseAug(ns, augment) {\\r\\n    const ownedAugments = ns.singularity.getOwnedAugmentations(true);\\r\\n    const augmentName = augment.augmentName;\\r\\n\\r\\n    if (ownedAugments.includes(augmentName) === false) {\\r\\n        const augmentPrice = ns.singularity.getAugmentationPrice(augmentName);\\r\\n        const amountOfMoneyWeHave = ns.getServerMoneyAvailable(\\\"home\\\")\\r\\n\\r\\n        if (augmentPrice < amountOfMoneyWeHave) {\\r\\n            ns.singularity.purchaseAugmentation(augment.faction, augmentName);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"scripts/tools/manually-end-round.js\",\"server\":\"home\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[[\"analytics/2023-07-07-11-15-Bachman&Associates-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-07-11-15-Bachman&Associates-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-07T15:01:39.037Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-07T15:01:39.037Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"Bachman & Associates\\\",\\\"firstTime\\\":\\\"2023-07-07T15:01:39.037Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":375000,\\\"currentFactionRep\\\":333650.9080521832,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-07T15:01:39.037Z\\\"},\\\"moneySpent\\\":{\\\"augments\\\":0,\\\"homeCores\\\":23730468750000,\\\"homeRam\\\":31587660778186.953,\\\"fluxGovernors\\\":0,\\\"augment\\\":null},\\\"lastSaved\\\":\\\"2023-07-07T16:15:57.700Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":true,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":375000,\\\"currentFactionRep\\\":375000.40990502154,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-07T16:10:26.619Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$108,452,850,558,874.11\\\",\\\"moneyRightNow\\\":\\\"$103,101,209,025,358.40\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$275,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T16:10:26.620Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$108,452,850,558,874.11\\\",\\\"moneyRightNow\\\":\\\"$103,681,640,147,085.58\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$275,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T16:10:30.684Z\\\"},\\\"augsBought\\\":[\\\"SmartJaw\\\",\\\"Enhanced Social Interaction Implant\\\",\\\"FocusWire\\\",\\\"ADR-V2 Pheromone Gene\\\",\\\"CashRoot Starter Kit\\\",\\\"Nanofiber Weave\\\",\\\"Augmented Targeting I\\\",\\\"Augmented Targeting II\\\"]}\"}}],[\"analytics/2023-07-07-14-03-BitRunners-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-07-14-03-BitRunners-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-07T16:19:40.262Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-07T16:19:40.262Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-07T16:19:40.262Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":275000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-07T16:19:40.262Z\\\"},\\\"augsBought\\\":[\\\"Neural Accelerator\\\"],\\\"moneySpent\\\":{\\\"augments\\\":0,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":0,\\\"augment\\\":null},\\\"lastSaved\\\":\\\"2023-07-07T19:03:34.187Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":275000,\\\"currentFactionRep\\\":207528.18490936968,\\\"targetRepForGettingToFavor\\\":207510.3723,\\\"time\\\":\\\"2023-07-07T19:03:30.139Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$11,781,091,031,741.60\\\",\\\"moneyRightNow\\\":\\\"$1,303,091,345,518.27\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$175,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T19:03:30.139Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$11,781,091,031,741.60\\\",\\\"moneyRightNow\\\":\\\"$2,544,403,997,543.49\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$175,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T19:03:34.186Z\\\"}}\"}}],[\"analytics/2023-07-08-19-48-Daedalus-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-19-48-Daedalus-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-07T19:06:59.469Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-07T19:06:59.469Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-07T19:06:59.470Z\\\"},{\\\"factionToMax\\\":\\\"Daedalus\\\",\\\"firstTime\\\":\\\"2023-07-07T21:55:21.354Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":275000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-07T19:06:59.470Z\\\"},\\\"augsBought\\\":[\\\"PCMatrix\\\",\\\"Synfibril Muscle\\\"],\\\"moneySpent\\\":{\\\"augments\\\":4137500000,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":0},\\\"lastSaved\\\":\\\"2023-07-08T00:48:28.885Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":275000,\\\"currentFactionRep\\\":32865.1277346334,\\\"targetRepForGettingToFavor\\\":21865.9969,\\\"time\\\":\\\"2023-07-07T19:21:42.026Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$20,200,143,877,934.50\\\",\\\"moneyRightNow\\\":\\\"$3,911,461,428,002.28\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$225,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T20:39:02.138Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$20,200,143,877,934.50\\\",\\\"moneyRightNow\\\":\\\"$4,117,056,489,229.67\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$225,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-07T20:39:06.169Z\\\"},\\\"moneyLeft\\\":7852910581520.66}\"}}],[\"analytics/2023-07-08-22-54-NWO-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-22-54-NWO-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T01:27:34.503Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T01:27:34.503Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NWO\\\",\\\"firstTime\\\":\\\"2023-07-08T01:27:34.503Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T01:27:34.503Z\\\"},\\\"augsBought\\\":[\\\"Embedded Netburner Module Core V2 Upgrade\\\",\\\"Embedded Netburner Module Core V3 Upgrade\\\",\\\"Embedded Netburner Module Direct Memory Access Upgrade\\\",\\\"Embedded Netburner Module Analyze Engine\\\",\\\"BitRunners Neurolink\\\",\\\"NEMEAN Subdermal Weave\\\",\\\"Synthetic Heart\\\",\\\"Power Recirculation Core\\\",\\\"Neurotrainer III\\\",\\\"Combat Rib I\\\",\\\"Combat Rib II\\\",\\\"DermaForce Particle Barrier\\\",\\\"The Red Pill\\\"],\\\"moneySpent\\\":{\\\"augments\\\":501848779077.36707,\\\"homeCores\\\":0,\\\"homeRam\\\":99817008059070.77,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":75733371162620.36,\\\"lastSaved\\\":\\\"2023-07-08T03:54:59.353Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":462501.05086586776,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T03:54:55.304Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$526,824,656,393,874.44\\\",\\\"moneyRightNow\\\":\\\"$251,999,971,224,510.60\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$18,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T03:54:55.304Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$526,824,656,393,874.44\\\",\\\"moneyRightNow\\\":\\\"$253,602,470,575,079.72\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$18,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T03:54:59.351Z\\\"}}\"}}],[\"analytics/2023-07-08-00-56-OmniTekIncorporated-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-00-56-OmniTekIncorporated-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T04:26:57.384Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T04:26:57.384Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"OmniTek Incorporated\\\",\\\"firstTime\\\":\\\"2023-07-08T04:26:57.384Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":625000,\\\"currentFactionRep\\\":15.124617264295333,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T04:26:57.384Z\\\"},\\\"augsBought\\\":[\\\"Hydroflame Left Arm\\\",\\\"Xanipher\\\",\\\"PC Direct-Neural Interface\\\",\\\"Bionic Legs\\\",\\\"Bionic Spine\\\",\\\"Combat Rib III\\\",\\\"Augmented Targeting III\\\",\\\"NutriGen Implant\\\"],\\\"moneySpent\\\":{\\\"augments\\\":2534418700549.75,\\\"homeCores\\\":177978515625000,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":280042565488.5333,\\\"lastSaved\\\":\\\"2023-07-08T05:56:46.954Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":625000,\\\"currentFactionRep\\\":462548.0785199993,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T05:56:42.882Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$505,066,407,135,123.06\\\",\\\"moneyRightNow\\\":\\\"$180,386,298,617,236.44\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$375,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T05:56:42.883Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$505,066,407,135,123.06\\\",\\\"moneyRightNow\\\":\\\"$181,269,916,019,448.78\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$375,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T05:56:46.945Z\\\"}}\"}}],[\"analytics/2023-07-08-02-29-BladeIndustries-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-02-29-BladeIndustries-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T06:21:45.808Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T06:21:45.808Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"Blade Industries\\\",\\\"firstTime\\\":\\\"2023-07-08T06:21:45.808Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":562500,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T06:21:45.809Z\\\"},\\\"augsBought\\\":[\\\"OmniTek InfoLoad\\\",\\\"HyperSight Corneal Implant\\\",\\\"INFRARET Enhancement\\\"],\\\"moneySpent\\\":{\\\"augments\\\":8208300000,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":70843557655495.1,\\\"lastSaved\\\":\\\"2023-07-08T07:29:39.410Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":562500,\\\"currentFactionRep\\\":462652.03280345845,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T07:29:35.219Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$572,996,898,778,520.20\\\",\\\"moneyRightNow\\\":\\\"$140,624,600,817,489.31\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$275,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T07:29:35.219Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$572,996,898,778,520.20\\\",\\\"moneyRightNow\\\":\\\"$143,621,626,658,752.25\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$275,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T07:29:39.320Z\\\"}}\"}}],[\"contracts/2023-07-08T15:46:33.989Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-08T15:46:33.989Z.txt\",\"text\":\"[{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-301865-NiteSec.cct\\\",\\\"type\\\":\\\"Spiralize Matrix\\\",\\\"attemptsLeft\\\":9},{\\\"server\\\":\\\"titan-labs\\\",\\\"name\\\":\\\"contract-605082-ECorp.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3},{\\\"server\\\":\\\"vitalife\\\",\\\"name\\\":\\\"contract-715836-BladeIndustries.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"kuai-gong\\\",\\\"name\\\":\\\"contract-574766-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"blade\\\",\\\"name\\\":\\\"contract-546533.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"defcomm\\\",\\\"name\\\":\\\"contract-207182.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"defcomm\\\",\\\"name\\\":\\\"contract-562846-Chongqing.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10},{\\\"server\\\":\\\"run4theh111z\\\",\\\"name\\\":\\\"contract-147112-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10}]\"}}],[\"analytics/2023-07-08-10-55-CyberSec-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-08-10-55-CyberSec-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T07:45:28.397Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T07:45:28.397Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"ECorp\\\",\\\"firstTime\\\":\\\"2023-07-08T07:45:28.397Z\\\"},{\\\"factionToMax\\\":\\\"CyberSec\\\",\\\"firstTime\\\":\\\"2023-07-08T15:55:34.597Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1625000,\\\"currentFactionRep\\\":7.83489646900019,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-08T07:45:28.397Z\\\"},\\\"augsBought\\\":[\\\"Embedded Netburner Module\\\",\\\"Cranial Signal Processors - Gen I\\\",\\\"Cranial Signal Processors - Gen II\\\",\\\"Artificial Synaptic Potentiation\\\",\\\"Neurotrainer II\\\",\\\"BitWire\\\",\\\"Synaptic Enhancement Implant\\\",\\\"Neurotrainer I\\\"],\\\"moneySpent\\\":{\\\"augments\\\":2927417203.1,\\\"homeCores\\\":0,\\\"homeRam\\\":132545749.31540185,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":76065861.37635517,\\\"lastSaved\\\":\\\"2023-07-08T15:55:38.636Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":true,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":18750,\\\"currentFactionRep\\\":19144.520172309567,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-08T15:55:34.597Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$NaN\\\",\\\"moneyRightNow\\\":\\\"$3,136,028,813.79\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$1,250,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T15:55:34.597Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$NaN\\\",\\\"moneyRightNow\\\":\\\"$3,136,028,813.79\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$1,250,000,000.00\\\",\\\"time\\\":\\\"2023-07-08T15:55:38.627Z\\\"}}\"}}],[\"contracts/failure/unitalife-contract-457057-BachmanAssociates.cct-AlgorithmicStockTraderIV.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/failure/unitalife-contract-457057-BachmanAssociates.cct-AlgorithmicStockTraderIV.txt\",\"text\":\"{\\\"contract\\\":{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-457057-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader IV\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[2,[104,1,164,22,87,58,184,182,187,31,33,15,132,75,200,78,154]],\\\"description\\\":\\\"You are given the following array with two elements:\\\\n\\\\n [2, [104,67,1,164,22,87,58,118,184,182,187,31,33,15,132,75,200,78,154,61]]\\\\n\\\\n The first element is an integer k. The second element is an array of stock prices (which are numbers) where the i-th element represents the stock price on day i.\\\\n\\\\n Determine the maximum possible profit you can earn using at most k transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you can buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0.\\\"},\\\"wrongResult\\\":348}\"}}],[\"contracts/2023-07-08T16:02:50.327Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-08T16:02:50.327Z.txt\",\"text\":\"[{\\\"server\\\":\\\"hong-fang-tea\\\",\\\"name\\\":\\\"contract-287914-ECorp.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[3,3,2,4,0,0,3,2,4,3,2,1,4,3,3,1,2,1,5,6,2,4,2,5],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,3,2,4,0,0,3,2,4,3,2,1,4,3,3,1,2,1,5,6,2,4,2,5\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"max-hardware\\\",\\\"name\\\":\\\"contract-489132.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"5ddddddddM0C1ag3juL3juL3jQaVwdNEQdNGShqNEQdNGSrBfBf2rBfBr1OvIK6r1OvIa\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 5ddddddddM0C1ag3juL3juL3jQaVwdNEQdNGShqNEQdNGSrBfBf2rBfBr1OvIK6r1OvIa\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-522441-TianDiHui.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[8,7],\\\"description\\\":\\\"You are in a grid with 8 rows and 7 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [8, 7]\\\"},{\\\"server\\\":\\\"galactic-cyber\\\",\\\"name\\\":\\\"contract-895014-CyberSec.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[2,7,-9,5,4,-8,-10,-5,4,-6,-4,0,6,10,-3,6,2,-8,-1,6,-3,-10,-3,8,6,-2,-8,2,3,-4,0,0,9,-9,-8,5,4,4],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 2,7,-9,5,4,-8,-10,-5,4,-6,-4,0,6,10,-3,6,2,-8,-1,6,-3,-10,-3,8,6,-2,-8,2,3,-4,0,0,9,-9,-8,5,4,4\\\"},{\\\"server\\\":\\\"summit-uni\\\",\\\"name\\\":\\\"contract-875528.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[11,9],\\\"description\\\":\\\"You are in a grid with 11 rows and 9 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [11, 9]\\\"},{\\\"server\\\":\\\"millenium-fitness\\\",\\\"name\\\":\\\"contract-125441.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[147,[1,2,4,5,7,8,10,11,12]],\\\"description\\\":\\\"How many different distinct ways can the number 147 be written as a sum of integers contained in the set:\\\\n\\\\n [1,2,4,5,7,8,10,11,12]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"millenium-fitness\\\",\\\"name\\\":\\\"contract-338676.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[149,[2,3,4,6,9,11,12,13,14]],\\\"description\\\":\\\"How many different distinct ways can the number 149 be written as a sum of integers contained in the set:\\\\n\\\\n [2,3,4,6,9,11,12,13,14]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-265891-TheBlackHand.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0],[1,0,0,0],[0,0,0,0],[1,0,1,0],[0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,\\\\n1,0,0,0,\\\\n0,0,0,0,\\\\n1,0,1,0,\\\\n0,0,1,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-457057-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader IV\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[2,[104,67,1,164,22,87,58,118,184,182,187,31,33,15,132,75,200,78,154,61]],\\\"description\\\":\\\"You are given the following array with two elements:\\\\n\\\\n [2, [104,67,1,164,22,87,58,118,184,182,187,31,33,15,132,75,200,78,154,61]]\\\\n\\\\n The first element is an integer k. The second element is an array of stock prices (which are numbers) where the i-th element represents the stock price on day i.\\\\n\\\\n Determine the maximum possible profit you can earn using at most k transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you can buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0.\\\"},{\\\"server\\\":\\\"applied-energetics\\\",\\\"name\\\":\\\"contract-98816-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[8,[[1,3],[3,5],[6,7],[4,5],[1,7],[4,7],[2,7],[2,5]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [8,[[1,3],[3,5],[6,7],[4,5],[1,7],[4,7],[2,7],[2,5]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 7. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"vitalife\\\",\\\"name\\\":\\\"contract-852569.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,0,\\\\n1,0,0,0,0,0,\\\\n0,1,0,0,0,0,\\\\n0,0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"4sigma\\\",\\\"name\\\":\\\"contract-193066-Chongqing.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[3],[4,8],[1,6,7],[3,8,3,9],[1,3,6,1,2],[4,4,7,8,8,1],[1,4,3,6,1,4,6],[1,9,8,7,9,9,4,3],[3,2,1,2,1,8,4,2,8]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4,8],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,6,7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3,8,3,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,3,6,1,2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4,4,7,8,8,1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[1,4,3,6,1,4,6],\\\\n&nbsp;&nbsp;&nbsp;[1,9,8,7,9,9,4,3],\\\\n&nbsp;&nbsp;[3,2,1,2,1,8,4,2,8]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-774587-TianDiHui.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[8,0,1,5,5],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 8,0,1,5,5\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"clarkinc\\\",\\\"name\\\":\\\"contract-321076.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[12,[[7,11],[1,8],[2,9],[2,8],[1,2],[0,4],[0,3],[2,3],[5,8],[3,5],[4,7],[1,6],[9,10],[4,10],[6,8],[3,10],[0,1],[7,8]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [12,[[7,11],[1,8],[2,9],[2,8],[1,2],[0,4],[0,3],[2,3],[5,8],[3,5],[4,7],[1,6],[9,10],[4,10],[6,8],[3,10],[0,1],[7,8]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 11. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"The-Cave\\\",\\\"name\\\":\\\"contract-885023.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0],[0,1,0,1,0,1,1,1,0],[0,0,1,1,1,1,0,0,1],[0,1,0,0,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,1,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,1,0,1,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,1,1,1,0,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,0,0,0,1,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\".\\\",\\\"name\\\":\\\"contract-450371-NWO.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"zzzzzzzzzzVVVVVVVVVff66666dddddd3Dxjjjjjjjjjjjll3nMIEooooooooooIrrQQ3333333333GGGGG220\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; zzzzzzzzzzVVVVVVVVVff66666dddddd3Dxjjjjjjjjjjjll3nMIEooooooooooIrrQQ3333333333GGGGG220\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"defcomm\\\",\\\"name\\\":\\\"contract-409303-CyberSec.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"koU6koU6koU8koU6ko66SU6ko66Sko66SkoSkoSkoSkXSkoSkoSkXSkoSXSkoSXSuKvMuK5CCCCCCZA\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; koU6koU6koU8koU6ko66SU6ko66Sko66SkoSkoSkoSkXSkoSkoSkXSkoSXSkoSXSuKvMuK5CCCCCCZA\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"defcomm\\\",\\\"name\\\":\\\"contract-741436-TianDiHui.cct\\\",\\\"type\\\":\\\"Spiralize Matrix\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[[41,7],[46,49],[18,23],[1,16],[46,1],[49,27]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a 2D matrix, return the elements of the matrix as an array in spiral order:\\\\n\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[41, 7]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[46,49]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[18,23]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ 1,16]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[46, 1]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[49,27]\\\\n&nbsp;&nbsp;&nbsp;&nbsp;]\\\\n\\\\nHere is an example of what spiral order should be:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1, 2, 3]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4, 5, 6]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7, 8, 9]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;]\\\\n\\\\n Answer: [1, 2, 3, 6, 9, 8 ,7, 4, 5]\\\\n\\\\n Note that the matrix will not always be square:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,&nbsp;&nbsp;2,&nbsp;&nbsp;3,&nbsp;&nbsp;4]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[5,&nbsp;&nbsp;6,&nbsp;&nbsp;7,&nbsp;&nbsp;8]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,&nbsp;10,&nbsp;11,&nbsp;12]\\\\n &nbsp;&nbsp;&nbsp;&nbsp;]\\\\n\\\\n Answer: [1, 2, 3, 4, 8, 12, 11, 10, 9, 5, 6, 7]\\\"},{\\\"server\\\":\\\"snap-fitness\\\",\\\"name\\\":\\\"contract-481575.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[10,10,2,4,4],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 10,10,2,4,4\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"zer0\\\",\\\"name\\\":\\\"contract-926552.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"ppppppppD6ggxxxxxxxxWk88uVVqdddddddHHH811EEE00WWyy333NvvvvvvvWWWWWWWWWA88iii\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; ppppppppD6ggxxxxxxxxWk88uVVqdddddddHHH811EEE00WWyy333NvvvvvvvWWWWWWWWWA88iii\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"CSEC\\\",\\\"name\\\":\\\"contract-550315.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":59,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 59 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"CSEC\\\",\\\"name\\\":\\\"contract-895133.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[2,2,3,1,0,3],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 2,2,3,1,0,3\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-858682.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[197,[1,2,4,5,6,10,12,13]],\\\"description\\\":\\\"How many different distinct ways can the number 197 be written as a sum of integers contained in the set:\\\\n\\\\n [1,2,4,5,6,10,12,13]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-938387.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":8,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 8 be written as a sum of at least two positive integers?\\\"}]\"}}],[\"analytics/2023-07-09-05-42-NiteSec-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-09-05-42-NiteSec-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-08T16:31:11.237Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-08T16:31:11.237Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NiteSec\\\",\\\"firstTime\\\":\\\"2023-07-08T16:31:11.237Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":112500,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-08T16:31:11.237Z\\\"},\\\"augsBought\\\":[\\\"Cranial Signal Processors - Gen III\\\",\\\"DataJack\\\",\\\"Neuregen Gene Modification\\\",\\\"Neural-Retention Enhancement\\\",\\\"CRTX42-AA Gene Modification\\\",\\\"Speech Processor Implant\\\",\\\"Social Negotiation Assistant (S.N.A)\\\",\\\"Nuoptimal Nootropic Injector Implant\\\",\\\"ADR-V1 Pheromone Gene\\\",\\\"Speech Enhancement\\\",\\\"Wired Reflexes\\\"],\\\"moneySpent\\\":{\\\"augments\\\":20381378226.862747,\\\"homeCores\\\":7500000000,\\\"homeRam\\\":14539978074.787807,\\\"fluxGovernors\\\":0},\\\"moneyLeft\\\":12810898749.805788,\\\"lastSaved\\\":\\\"2023-07-09T10:42:24.377Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":true,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":112500,\\\"currentFactionRep\\\":112505.95319020352,\\\"targetRepForGettingToFavor\\\":274320.6381,\\\"time\\\":\\\"2023-07-09T04:32:21.711Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":false,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$25,622,206,359.90\\\",\\\"moneyRightNow\\\":\\\"$5,243,979,923.03\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$55,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-09T04:32:21.712Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$37,197,430,004.03\\\",\\\"moneyRightNow\\\":\\\"$55,232,255,051.46\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$55,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-09T10:42:24.369Z\\\"}}\"}}],[\"contracts/failure/blade-contract-989459-Sector12.cct-AlgorithmicStockTraderIII.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/failure/blade-contract-989459-Sector12.cct-AlgorithmicStockTraderIII.txt\",\"text\":\"{\\\"contract\\\":{\\\"server\\\":\\\"blade\\\",\\\"name\\\":\\\"contract-989459-Sector12.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[179,52,138,20,181,47,87,38,133,124,174,123,169,54,138],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},\\\"wrongResult\\\":256}\"}}],[\"contracts/2023-07-09T10:42:27.655Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-09T10:42:27.655Z.txt\",\"text\":\"[{\\\"server\\\":\\\"n00dles\\\",\\\"name\\\":\\\"contract-306430.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[0,3,0,2,0,0,4,0,5,0,7,9,4,8],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 0,3,0,2,0,0,4,0,5,0,7,9,4,8\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"n00dles\\\",\\\"name\\\":\\\"contract-93220.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":596871453,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 596871453?\\\"},{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-688654.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"557744444444444444NNddzeennnnnnnnnnyyyyyyyyyyyyQH555555AAFU\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 557744444444444444NNddzeennnnnnnnnnyyyyyyyyyyyyQH555555AAFU\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"joesguns\\\",\\\"name\\\":\\\"contract-610288.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[13,[[4,5],[0,6],[7,11],[2,5],[3,7],[1,6],[2,10],[4,10],[5,11],[3,5],[3,10],[0,10],[5,9],[10,11],[7,9],[3,12],[3,8],[1,5],[4,8],[1,8],[0,7],[9,11],[2,12]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [13,[[4,5],[0,6],[7,11],[2,5],[3,7],[1,6],[2,10],[4,10],[5,11],[3,5],[3,10],[0,10],[5,9],[10,11],[7,9],[3,12],[3,8],[1,5],[4,8],[1,8],[0,7],[9,11],[2,12]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 12. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"joesguns\\\",\\\"name\\\":\\\"contract-908915-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0],[0,1,0,0,0],[0,0,0,0,0],[0,0,1,0,0],[1,0,0,0,1],[0,0,0,1,1],[0,0,1,0,0],[0,1,0,1,0],[0,0,0,1,0],[1,0,0,0,0],[0,1,0,0,0],[0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,\\\\n0,1,0,0,0,\\\\n0,0,0,0,0,\\\\n0,0,1,0,0,\\\\n1,0,0,0,1,\\\\n0,0,0,1,1,\\\\n0,0,1,0,0,\\\\n0,1,0,1,0,\\\\n0,0,0,1,0,\\\\n1,0,0,0,0,\\\\n0,1,0,0,0,\\\\n0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"CSEC\\\",\\\"name\\\":\\\"contract-225615.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[3,4,8,4,1,3,1,6,2,7,2,4,2,1,7,2,4,2,5,2,1,2,4,2,0],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,4,8,4,1,3,1,6,2,7,2,4,2,1,7,2,4,2,5,2,1,2,4,2,0\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-876968-BitRunners.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"251150140129\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 251150140129\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"avmnite-02h\\\",\\\"name\\\":\\\"contract-793514-NWO.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[9,[[1,7],[2,5],[6,8],[1,2],[0,3],[0,6],[0,5]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [9,[[1,7],[2,5],[6,8],[1,2],[0,3],[0,6],[0,5]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 8. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-308718.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[5,8],[20,29],[20,27],[19,26],[13,23],[5,12],[6,9],[9,15],[5,9],[4,10],[23,29],[16,24],[1,11]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[5,8],[20,29],[20,27],[19,26],[13,23],[5,12],[6,9],[9,15],[5,9],[4,10],[23,29],[16,24],[1,11]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"aerocorp\\\",\\\"name\\\":\\\"contract-726515.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"KK0aAKKKl2FczHAO1GRoAO1GRoAYvgOCph7xuhN1nQayOiaXZFQayOiTDZDZ0aZ\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; KK0aAKKKl2FczHAO1GRoAO1GRoAYvgOCph7xuhN1nQayOiaXZFQayOiTDZDZ0aZ\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"snap-fitness\\\",\\\"name\\\":\\\"contract-206621.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"(((())(aa\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n (((())(aa\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"run4theh111z\\\",\\\"name\\\":\\\"contract-517629.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,1,1,0,1],[0,0,0,0,1,1,1,1],[1,0,0,0,0,1,1,0],[0,0,0,0,0,0,0,0],[0,1,0,1,1,1,0,0],[0,1,1,0,1,0,0,0],[0,1,0,0,1,0,0,0],[1,0,0,1,0,0,1,0],[1,1,0,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,1,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,1,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,0,0,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,1,1,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[1,1,0,0,0,0,1,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"blade\\\",\\\"name\\\":\\\"contract-989459-Sector12.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-248819.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[7],[3,4],[1,2,9],[1,8,8,1],[4,7,4,6,4],[9,3,4,6,9,3]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,2,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[1,8,8,1],\\\\n&nbsp;&nbsp;&nbsp;[4,7,4,6,4],\\\\n&nbsp;&nbsp;[9,3,4,6,9,3]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-759274-BladeIndustries.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[197,[1,3,4,6,7,8,9,10,13,15,16]],\\\"description\\\":\\\"How many different distinct ways can the number 197 be written as a sum of integers contained in the set:\\\\n\\\\n [1,3,4,6,7,8,9,10,13,15,16]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-755946-Aevum.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"bGhFzdCQddCQdSTdTdTdTSysWjxUGJc2RiRsyfsyfyfyfyfyffyfyfyffyfftLaw0Z\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; bGhFzdCQddCQdSTdTdTdTSysWjxUGJc2RiRsyfsyfyfyfyfyffyfyfyffyfftLaw0Z\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"infocomm\\\",\\\"name\\\":\\\"contract-239892.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1110100011010100\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '1110100011010100' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-650735.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"111111111yyxmmmdddddddddddddNNBBkkJJJJJJJJJJJJ2222222222222h33333333333DDDDDDDF\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 111111111yyxmmmdddddddddddddNNBBkkJJJJJJJJJJJJ2222222222222h33333333333DDDDDDDF\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-923111.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,1,0,0],[0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0],[0,0,1,1,1,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,0,0,1,0,0,\\\\n0,0,0,0,0,1,0,0,0,0,\\\\n0,0,0,0,0,1,0,1,0,0,\\\\n0,0,0,0,0,0,0,0,0,0,\\\\n1,0,0,0,0,0,0,0,0,0,\\\\n0,0,0,0,0,0,0,1,0,0,\\\\n0,0,1,1,1,0,0,0,1,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"computek\\\",\\\"name\\\":\\\"contract-140416.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[8,-5,4,-1,10,5,-8,6,-9,-4,6,6,10,5,3,-7,-5,-10,-5,-3,2,2,-4,2,7,-3,0,0,-6,8,-7,-5,8,8,2,3,10,-9,-5],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 8,-5,4,-1,10,5,-8,6,-9,-4,6,6,10,5,3,-7,-5,-10,-5,-3,2,2,-4,2,7,-3,0,0,-6,8,-7,-5,8,8,2,3,10,-9,-5\\\"},{\\\"server\\\":\\\"nectar-net\\\",\\\"name\\\":\\\"contract-149794.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[17,[4,5,6,7,8,10,11,12,13,14]],\\\"description\\\":\\\"How many different distinct ways can the number 17 be written as a sum of integers contained in the set:\\\\n\\\\n [4,5,6,7,8,10,11,12,13,14]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"rothman-uni\\\",\\\"name\\\":\\\"contract-95536.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":21,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 21 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"deltaone\\\",\\\"name\\\":\\\"contract-389211.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[9,-8,10,-6,-3,-3,10,-7,-5,-6,4,-3,-9,7,-1,-1,-10,4,9,-4,4,-4,-10,-7,9,0,-8,-5],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 9,-8,10,-6,-3,-3,10,-7,-5,-6,4,-3,-9,7,-1,-1,-10,4,9,-4,4,-4,-10,-7,9,0,-8,-5\\\"},{\\\"server\\\":\\\"univ-energy\\\",\\\"name\\\":\\\"contract-80334.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[14,16],[4,10],[21,27],[3,8],[3,13],[20,30]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[14,16],[4,10],[21,27],[3,8],[3,13],[20,30]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-204128.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[3,3,10,0,0,0,4,0,6,0,4,10],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,3,10,0,0,0,4,0,6,0,4,10\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-90930.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[7,11],\\\"description\\\":\\\"You are in a grid with 7 rows and 11 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [7, 11]\\\"},{\\\"server\\\":\\\"vitalife\\\",\\\"name\\\":\\\"contract-693793.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[9,[[0,1],[4,6],[2,7],[0,3],[0,6],[1,4],[6,7],[3,7],[0,5],[5,7],[4,8],[3,4],[1,7],[2,4],[2,3],[4,5],[0,2]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [9,[[0,1],[4,6],[2,7],[0,3],[0,6],[1,4],[6,7],[3,7],[0,5],[5,7],[4,8],[3,4],[1,7],[2,4],[2,3],[4,5],[0,2]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 8. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-188719-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[84,[2,5,6,7,8,9,10,12,15,16]],\\\"description\\\":\\\"How many different distinct ways can the number 84 be written as a sum of integers contained in the set:\\\\n\\\\n [2,5,6,7,8,9,10,12,15,16]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-889582.cct\\\",\\\"type\\\":\\\"HammingCodes: Integer to Encoded Binary\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":42771,\\\"description\\\":\\\"You are given the following decimal Value: \\\\n 42771 \\\\n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\\\\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\\\\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\\\\n The answer should be given as a string containing only 1s and 0s.\\\\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\\\\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\\\\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\\\\n\\\\n Extra rule for encoding:\\\\n There should be no leading zeros in the 'data bit' section\\\"},{\\\"server\\\":\\\"fulcrumassets\\\",\\\"name\\\":\\\"contract-18930.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[5,14],\\\"description\\\":\\\"You are in a grid with 5 rows and 14 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [5, 14]\\\"},{\\\"server\\\":\\\"The-Cave\\\",\\\"name\\\":\\\"contract-53463.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"12010722233\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 12010722233\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"}]\"}}],[\"contracts/2023-07-10T11:30:35.720Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-10T11:30:35.720Z.txt\",\"text\":\"[{\\\"server\\\":\\\"n00dles\\\",\\\"name\\\":\\\"contract-306430.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[0,3,0,2,0,0,4,0,5,0,7,9,4,8],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 0,3,0,2,0,0,4,0,5,0,7,9,4,8\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"n00dles\\\",\\\"name\\\":\\\"contract-93220.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":596871453,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 596871453?\\\"},{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-688654.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"557744444444444444NNddzeennnnnnnnnnyyyyyyyyyyyyQH555555AAFU\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 557744444444444444NNddzeennnnnnnnnnyyyyyyyyyyyyQH555555AAFU\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"joesguns\\\",\\\"name\\\":\\\"contract-610288.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[13,[[4,5],[0,6],[7,11],[2,5],[3,7],[1,6],[2,10],[4,10],[5,11],[3,5],[3,10],[0,10],[5,9],[10,11],[7,9],[3,12],[3,8],[1,5],[4,8],[1,8],[0,7],[9,11],[2,12]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [13,[[4,5],[0,6],[7,11],[2,5],[3,7],[1,6],[2,10],[4,10],[5,11],[3,5],[3,10],[0,10],[5,9],[10,11],[7,9],[3,12],[3,8],[1,5],[4,8],[1,8],[0,7],[9,11],[2,12]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 12. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"joesguns\\\",\\\"name\\\":\\\"contract-908915-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0],[0,1,0,0,0],[0,0,0,0,0],[0,0,1,0,0],[1,0,0,0,1],[0,0,0,1,1],[0,0,1,0,0],[0,1,0,1,0],[0,0,0,1,0],[1,0,0,0,0],[0,1,0,0,0],[0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,\\\\n0,1,0,0,0,\\\\n0,0,0,0,0,\\\\n0,0,1,0,0,\\\\n1,0,0,0,1,\\\\n0,0,0,1,1,\\\\n0,0,1,0,0,\\\\n0,1,0,1,0,\\\\n0,0,0,1,0,\\\\n1,0,0,0,0,\\\\n0,1,0,0,0,\\\\n0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"CSEC\\\",\\\"name\\\":\\\"contract-225615.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[3,4,8,4,1,3,1,6,2,7,2,4,2,1,7,2,4,2,5,2,1,2,4,2,0],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,4,8,4,1,3,1,6,2,7,2,4,2,1,7,2,4,2,5,2,1,2,4,2,0\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-876968-BitRunners.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"251150140129\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 251150140129\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"avmnite-02h\\\",\\\"name\\\":\\\"contract-793514-NWO.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[9,[[1,7],[2,5],[6,8],[1,2],[0,3],[0,6],[0,5]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [9,[[1,7],[2,5],[6,8],[1,2],[0,3],[0,6],[0,5]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 8. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-308718.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[5,8],[20,29],[20,27],[19,26],[13,23],[5,12],[6,9],[9,15],[5,9],[4,10],[23,29],[16,24],[1,11]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[5,8],[20,29],[20,27],[19,26],[13,23],[5,12],[6,9],[9,15],[5,9],[4,10],[23,29],[16,24],[1,11]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"aerocorp\\\",\\\"name\\\":\\\"contract-726515.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"KK0aAKKKl2FczHAO1GRoAO1GRoAYvgOCph7xuhN1nQayOiaXZFQayOiTDZDZ0aZ\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; KK0aAKKKl2FczHAO1GRoAO1GRoAYvgOCph7xuhN1nQayOiaXZFQayOiTDZDZ0aZ\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"snap-fitness\\\",\\\"name\\\":\\\"contract-206621.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"(((())(aa\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n (((())(aa\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"run4theh111z\\\",\\\"name\\\":\\\"contract-517629.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,1,1,0,1],[0,0,0,0,1,1,1,1],[1,0,0,0,0,1,1,0],[0,0,0,0,0,0,0,0],[0,1,0,1,1,1,0,0],[0,1,1,0,1,0,0,0],[0,1,0,0,1,0,0,0],[1,0,0,1,0,0,1,0],[1,1,0,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,1,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,1,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,0,0,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,1,1,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[1,1,0,0,0,0,1,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"blade\\\",\\\"name\\\":\\\"contract-989459-Sector12.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 179,52,138,137,20,161,181,47,87,38,133,124,174,123,169,147,144,54,138,64\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-248819.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[7],[3,4],[1,2,9],[1,8,8,1],[4,7,4,6,4],[9,3,4,6,9,3]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,2,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[1,8,8,1],\\\\n&nbsp;&nbsp;&nbsp;[4,7,4,6,4],\\\\n&nbsp;&nbsp;[9,3,4,6,9,3]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-759274-BladeIndustries.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[197,[1,3,4,6,7,8,9,10,13,15,16]],\\\"description\\\":\\\"How many different distinct ways can the number 197 be written as a sum of integers contained in the set:\\\\n\\\\n [1,3,4,6,7,8,9,10,13,15,16]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-755946-Aevum.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"bGhFzdCQddCQdSTdTdTdTSysWjxUGJc2RiRsyfsyfyfyfyfyffyfyfyffyfftLaw0Z\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; bGhFzdCQddCQdSTdTdTdTSysWjxUGJc2RiRsyfsyfyfyfyfyffyfyfyffyfftLaw0Z\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"infocomm\\\",\\\"name\\\":\\\"contract-239892.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1110100011010100\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '1110100011010100' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-650735.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"111111111yyxmmmdddddddddddddNNBBkkJJJJJJJJJJJJ2222222222222h33333333333DDDDDDDF\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 111111111yyxmmmdddddddddddddNNBBkkJJJJJJJJJJJJ2222222222222h33333333333DDDDDDDF\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-923111.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,1,0,0],[0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0],[0,0,1,1,1,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,0,0,1,0,0,\\\\n0,0,0,0,0,1,0,0,0,0,\\\\n0,0,0,0,0,1,0,1,0,0,\\\\n0,0,0,0,0,0,0,0,0,0,\\\\n1,0,0,0,0,0,0,0,0,0,\\\\n0,0,0,0,0,0,0,1,0,0,\\\\n0,0,1,1,1,0,0,0,1,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"computek\\\",\\\"name\\\":\\\"contract-140416.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[8,-5,4,-1,10,5,-8,6,-9,-4,6,6,10,5,3,-7,-5,-10,-5,-3,2,2,-4,2,7,-3,0,0,-6,8,-7,-5,8,8,2,3,10,-9,-5],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 8,-5,4,-1,10,5,-8,6,-9,-4,6,6,10,5,3,-7,-5,-10,-5,-3,2,2,-4,2,7,-3,0,0,-6,8,-7,-5,8,8,2,3,10,-9,-5\\\"},{\\\"server\\\":\\\"nectar-net\\\",\\\"name\\\":\\\"contract-149794.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[17,[4,5,6,7,8,10,11,12,13,14]],\\\"description\\\":\\\"How many different distinct ways can the number 17 be written as a sum of integers contained in the set:\\\\n\\\\n [4,5,6,7,8,10,11,12,13,14]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"rothman-uni\\\",\\\"name\\\":\\\"contract-95536.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":21,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 21 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"deltaone\\\",\\\"name\\\":\\\"contract-389211.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[9,-8,10,-6,-3,-3,10,-7,-5,-6,4,-3,-9,7,-1,-1,-10,4,9,-4,4,-4,-10,-7,9,0,-8,-5],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 9,-8,10,-6,-3,-3,10,-7,-5,-6,4,-3,-9,7,-1,-1,-10,4,9,-4,4,-4,-10,-7,9,0,-8,-5\\\"},{\\\"server\\\":\\\"univ-energy\\\",\\\"name\\\":\\\"contract-80334.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[14,16],[4,10],[21,27],[3,8],[3,13],[20,30]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[14,16],[4,10],[21,27],[3,8],[3,13],[20,30]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-204128.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[3,3,10,0,0,0,4,0,6,0,4,10],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,3,10,0,0,0,4,0,6,0,4,10\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-90930.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[7,11],\\\"description\\\":\\\"You are in a grid with 7 rows and 11 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [7, 11]\\\"},{\\\"server\\\":\\\"vitalife\\\",\\\"name\\\":\\\"contract-693793.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[9,[[0,1],[4,6],[2,7],[0,3],[0,6],[1,4],[6,7],[3,7],[0,5],[5,7],[4,8],[3,4],[1,7],[2,4],[2,3],[4,5],[0,2]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [9,[[0,1],[4,6],[2,7],[0,3],[0,6],[1,4],[6,7],[3,7],[0,5],[5,7],[4,8],[3,4],[1,7],[2,4],[2,3],[4,5],[0,2]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 8. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-188719-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[84,[2,5,6,7,8,9,10,12,15,16]],\\\"description\\\":\\\"How many different distinct ways can the number 84 be written as a sum of integers contained in the set:\\\\n\\\\n [2,5,6,7,8,9,10,12,15,16]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-889582.cct\\\",\\\"type\\\":\\\"HammingCodes: Integer to Encoded Binary\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":42771,\\\"description\\\":\\\"You are given the following decimal Value: \\\\n 42771 \\\\n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\\\\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\\\\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\\\\n The answer should be given as a string containing only 1s and 0s.\\\\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\\\\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\\\\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\\\\n\\\\n Extra rule for encoding:\\\\n There should be no leading zeros in the 'data bit' section\\\"},{\\\"server\\\":\\\"fulcrumassets\\\",\\\"name\\\":\\\"contract-18930.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[5,14],\\\"description\\\":\\\"You are in a grid with 5 rows and 14 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [5, 14]\\\"},{\\\"server\\\":\\\"The-Cave\\\",\\\"name\\\":\\\"contract-53463.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"12010722233\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 12010722233\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"}]\"}}],[\"contracts/2023-07-10T11:32:16.363Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-10T11:32:16.363Z.txt\",\"text\":\"[{\\\"server\\\":\\\"icarus\\\",\\\"name\\\":\\\"contract-977017-BitRunners.cct\\\",\\\"type\\\":\\\"Encryption II: Vigenère Cipher\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"FLASHMEDIAMOUSELOGINDEBUG\\\",\\\"MACINTOSH\\\"],\\\"description\\\":\\\"Vigenère cipher is a type of polyalphabetic substitution. It uses  the Vigenère square to encrypt and decrypt plaintext with a keyword.\\\\n\\\\n &nbsp;&nbsp;Vigenère square:\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +----------------------------------------------------\\\\n &nbsp;&nbsp;&nbsp;&nbsp; A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp; B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A \\\\n &nbsp;&nbsp;&nbsp;&nbsp; C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\\\n &nbsp;&nbsp;&nbsp;&nbsp; D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\\\n &nbsp;&nbsp;&nbsp;&nbsp; E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\\\n\\\\n For encryption each letter of the plaintext is paired with the corresponding letter of a repeating keyword. For example, the plaintext DASHBOARD is encrypted with the keyword LINUX:\\\\n &nbsp;&nbsp; Plaintext: DASHBOARD\\\\n &nbsp;&nbsp; Keyword:&nbsp;&nbsp;&nbsp;LINUXLINU\\\\n So, the first letter D is paired with the first letter of the key L. Therefore, row D and column L of the  Vigenère square are used to get the first cipher letter O. This must be repeated for the whole ciphertext.\\\\n\\\\n You are given an array with two elements:\\\\n &nbsp;&nbsp;[\\\\\\\"FLASHMEDIAMOUSELOGINDEBUG\\\\\\\", \\\\\\\"MACINTOSH\\\\\\\"]\\\\n The first element is the plaintext, the second element is the keyword.\\\\n\\\\n Return the ciphertext as uppercase string.\\\"}]\"}}],[\"contracts/2023-07-10T12:00:27.917Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-10T12:00:27.917Z.txt\",\"text\":\"[{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-872924-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"11000000100000010111100101110010\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '11000000100000010111100101110010' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-358562-ECorp.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[124,[2,5,6,9,10,11,13,14,15]],\\\"description\\\":\\\"How many different distinct ways can the number 124 be written as a sum of integers contained in the set:\\\\n\\\\n [2,5,6,9,10,11,13,14,15]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-373303.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[1],[3,1],[6,1,7],[2,7,1,4]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[3,1],\\\\n&nbsp;&nbsp;&nbsp;[6,1,7],\\\\n&nbsp;&nbsp;[2,7,1,4]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-959133.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,1,0,0,0,0,0,0],[0,0,1,0,0,1,0,0],[0,0,0,0,1,1,1,0],[0,0,1,0,1,0,1,0],[1,0,0,1,0,0,0,0],[0,0,0,1,0,0,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,0,0,0,1],[1,0,1,0,0,0,0,0],[1,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,1,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-769367.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[9,8],\\\"description\\\":\\\"You are in a grid with 9 rows and 8 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [9, 8]\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-633776.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":915078480,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 915078480?\\\"},{\\\"server\\\":\\\"fulcrumassets\\\",\\\"name\\\":\\\"contract-310837.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[4,-5,6,-8,3,5,-2,7,3,-2,-9,4,5,0,-7,2,-3,-9,-8,-8,3,8,3,7,10,1,9,-3,7,-8],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 4,-5,6,-8,3,5,-2,7,3,-2,-9,4,5,0,-7,2,-3,-9,-8,-8,3,8,3,7,10,1,9,-3,7,-8\\\"},{\\\"server\\\":\\\"syscore\\\",\\\"name\\\":\\\"contract-806259.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0010100000000000100000100000111101001011001001110100101110000010\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0010100000000000100000100000111101001011001001110100101110000010' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-545916-BitRunners.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,1,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,1,0,0,1,1,0,0,0,0,\\\\n0,0,0,0,0,0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-691109-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"Zuijij3IBhPN3IBhPNIBhPSBhPtStlIhPtStlIhRhFG6wwAg5idz8lHb8W28gMMA8W28gMM\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; Zuijij3IBhPN3IBhPNIBhPSBhPtStlIhPtStlIhRhFG6wwAg5idz8lHb8W28gMMA8W28gMM\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"}]\"}}],[\"contracts/failure/fulcrumtech-contract-772507-NiteSec.cct-AlgorithmicStockTraderIII.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/failure/fulcrumtech-contract-772507-NiteSec.cct-AlgorithmicStockTraderIII.txt\",\"text\":\"{\\\"contract\\\":{\\\"server\\\":\\\"fulcrumtech\\\",\\\"name\\\":\\\"contract-772507-NiteSec.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[129,63,116,46,105,9,146,49,190,102,143,96,122,89,173,62,178],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 129,121,121,63,116,108,46,105,9,146,49,190,102,115,143,116,96,122,95,89,173,62,178\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},\\\"wrongResult\\\":278}\"}}],[\"contracts/2023-07-10T22:53:06.799Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-10T22:53:06.799Z.txt\",\"text\":\"[{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-872924-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"11000000100000010111100101110010\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '11000000100000010111100101110010' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"iron-gym\\\",\\\"name\\\":\\\"contract-310546-NiteSec.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0110000000010000\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0110000000010000' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-358562-ECorp.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[124,[2,5,6,9,10,11,13,14,15]],\\\"description\\\":\\\"How many different distinct ways can the number 124 be written as a sum of integers contained in the set:\\\\n\\\\n [2,5,6,9,10,11,13,14,15]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-373303.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[1],[3,1],[6,1,7],[2,7,1,4]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[3,1],\\\\n&nbsp;&nbsp;&nbsp;[6,1,7],\\\\n&nbsp;&nbsp;[2,7,1,4]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-959133.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,1,0,0,0,0,0,0],[0,0,1,0,0,1,0,0],[0,0,0,0,1,1,1,0],[0,0,1,0,1,0,1,0],[1,0,0,1,0,0,0,0],[0,0,0,1,0,0,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,0,0,0,1],[1,0,1,0,0,0,0,0],[1,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,1,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"fulcrumtech\\\",\\\"name\\\":\\\"contract-373990-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0100000000000000100000000000000000111011110101110011000111010001\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0100000000000000100000000000000000111011110101110011000111010001' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"fulcrumtech\\\",\\\"name\\\":\\\"contract-772507-NiteSec.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader III\\\",\\\"attemptsLeft\\\":9,\\\"input\\\":[129,121,121,63,116,108,46,105,9,146,49,190,102,115,143,116,96,122,95,89,173,62,178],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 129,121,121,63,116,108,46,105,9,146,49,190,102,115,143,116,96,122,95,89,173,62,178\\\\n\\\\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\\\\n\\\\n If no profit can be made, then the answer should be 0\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-769367.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[9,8],\\\"description\\\":\\\"You are in a grid with 9 rows and 8 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [9, 8]\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-633776.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":915078480,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 915078480?\\\"},{\\\"server\\\":\\\"fulcrumassets\\\",\\\"name\\\":\\\"contract-310837.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[4,-5,6,-8,3,5,-2,7,3,-2,-9,4,5,0,-7,2,-3,-9,-8,-8,3,8,3,7,10,1,9,-3,7,-8],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 4,-5,6,-8,3,5,-2,7,3,-2,-9,4,5,0,-7,2,-3,-9,-8,-8,3,8,3,7,10,1,9,-3,7,-8\\\"},{\\\"server\\\":\\\"galactic-cyber\\\",\\\"name\\\":\\\"contract-719753-Sector12.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"2515122107\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 2515122107\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"syscore\\\",\\\"name\\\":\\\"contract-806259.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0010100000000000100000100000111101001011001001110100101110000010\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0010100000000000100000100000111101001011001001110100101110000010' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"summit-uni\\\",\\\"name\\\":\\\"contract-387600-BladeIndustries.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[51,[1,3,4,5,6,7,8,9]],\\\"description\\\":\\\"How many different distinct ways can the number 51 be written as a sum of integers contained in the set:\\\\n\\\\n [1,3,4,5,6,7,8,9]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-545916-BitRunners.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,1,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,1,0,0,1,1,0,0,0,0,\\\\n0,0,0,0,0,0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-691109-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"Zuijij3IBhPN3IBhPNIBhPSBhPtStlIhPtStlIhRhFG6wwAg5idz8lHb8W28gMMA8W28gMM\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; Zuijij3IBhPN3IBhPNIBhPSBhPtStlIhPtStlIhRhFG6wwAg5idz8lHb8W28gMMA8W28gMM\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"}]\"}}],[\"analytics/2023-07-11-02-27-Bachman&Associates-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-02-27-Bachman&Associates-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-09T10:51:29.538Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-09T10:51:29.538Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"The Black Hand\\\",\\\"firstTime\\\":\\\"2023-07-09T10:51:29.539Z\\\"},{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-10T11:30:36.002Z\\\"},{\\\"factionToMax\\\":\\\"Bachman & Associates\\\",\\\"firstTime\\\":\\\"2023-07-10T20:03:02.082Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":175000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-09T10:51:29.539Z\\\"},\\\"augsBought\\\":[\\\"SmartJaw\\\",\\\"Enhanced Social Interaction Implant\\\",\\\"FocusWire\\\",\\\"ADR-V2 Pheromone Gene\\\",\\\"Neuroreceptor Management Implant\\\",\\\"Nanofiber Weave\\\"],\\\"moneySpent\\\":{\\\"augments\\\":22646728750,\\\"homeCores\\\":23730468750000,\\\"homeRam\\\":31587660778186.953,\\\"fluxGovernors\\\":57032927790864.44},\\\"moneyLeft\\\":12203039917625.707,\\\"lastSaved\\\":\\\"2023-07-11T07:27:30.663Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":175000,\\\"currentFactionRep\\\":162129.75593228705,\\\"targetRepForGettingToFavor\\\":162120.6286,\\\"time\\\":\\\"2023-07-09T18:56:46.726Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":false,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$56,926,395,005.04\\\",\\\"moneyRightNow\\\":\\\"$6,976,811,949.53\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$300,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-09T18:56:46.726Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$286,650,154,139.07\\\",\\\"moneyRightNow\\\":\\\"$300,169,387,386.01\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$300,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-10T08:59:23.830Z\\\"},\\\"amountOfRamIncrease\\\":null,\\\"amountOfCoresIncrease\\\":null}\"}}],[\"contracts/2023-07-11T07:27:33.925Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T07:27:33.925Z.txt\",\"text\":\"[{\\\"server\\\":\\\"crush-fitness\\\",\\\"name\\\":\\\"contract-703070-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"(a))()aa)))())))a))\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n (a))()aa)))())))a))\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"zb-institute\\\",\\\"name\\\":\\\"contract-760582-NWO.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[19,26],[5,11],[23,33],[18,24],[16,24],[4,6],[19,23],[19,20],[15,22],[17,24],[23,26],[18,28],[11,14],[3,5],[14,17],[23,24]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[19,26],[5,11],[23,33],[18,24],[16,24],[4,6],[19,23],[19,20],[15,22],[17,24],[23,26],[18,28],[11,14],[3,5],[14,17],[23,24]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"zeus-med\\\",\\\"name\\\":\\\"contract-660870-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[0,-5,1,9,9,0,5,-3],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 0,-5,1,9,9,0,5,-3\\\"},{\\\"server\\\":\\\"run4theh111z\\\",\\\"name\\\":\\\"contract-657153-CyberSec.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\")())()()(\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n )())()()(\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"}]\"}}],[\"analytics/2023-07-11-07-24-BitRunners-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-07-24-BitRunners-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T10:42:16.637Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T10:42:16.638Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NWO\\\",\\\"firstTime\\\":\\\"2023-07-11T10:42:16.638Z\\\"},{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-11T10:46:46.120Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":462490.0692,\\\"time\\\":\\\"2023-07-11T10:42:16.638Z\\\"},\\\"augsBought\\\":[\\\"Neural Accelerator\\\"],\\\"moneySpent\\\":{\\\"augments\\\":1750000000,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":4554283656849.052,\\\"repPurchased\\\":0},\\\"moneyLeft\\\":1755961103764.4956,\\\"lastSaved\\\":\\\"2023-07-11T12:24:47.532Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1000000,\\\"currentFactionRep\\\":78668.58510156769,\\\"targetRepForGettingToFavor\\\":78604.3905,\\\"time\\\":\\\"2023-07-11T11:26:08.909Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$74,796,262,687,719.81\\\",\\\"moneyRightNow\\\":\\\"$5,775,539,522,926.99\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$175,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T12:24:43.465Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$74,796,262,687,719.81\\\",\\\"moneyRightNow\\\":\\\"$6,311,994,760,613.55\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$175,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T12:24:47.531Z\\\"}}\"}}],[\"contracts/2023-07-11T12:24:50.788Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T12:24:50.788Z.txt\",\"text\":\"[{\\\"server\\\":\\\"iron-gym\\\",\\\"name\\\":\\\"contract-294274.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"27278324\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 27278324\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"infocomm\\\",\\\"name\\\":\\\"contract-34323.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[2,1,0,6,4,3,2,1,2],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 2,1,0,6,4,3,2,1,2\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-156862.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[3,3,8,10,9,5,2,0,9,0,5,10,10,8],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,3,8,10,9,5,2,0,9,0,5,10,10,8\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-330757.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0010100001111101\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0010100001111101' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"}]\"}}],[\"analytics/2023-07-11-12-29-Daedalus-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-12-29-Daedalus-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T12:24:51.094Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T12:24:51.094Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NWO\\\",\\\"firstTime\\\":\\\"2023-07-11T12:24:51.094Z\\\"},{\\\"factionToMax\\\":\\\"BitRunners\\\",\\\"firstTime\\\":\\\"2023-07-11T12:29:47.178Z\\\"},{\\\"factionToMax\\\":\\\"Daedalus\\\",\\\"firstTime\\\":\\\"2023-07-11T15:04:35.038Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-11T12:24:51.094Z\\\"},\\\"augsBought\\\":[\\\"Embedded Netburner Module Core V2 Upgrade\\\",\\\"BitRunners Neurolink\\\",\\\"Synfibril Muscle\\\",\\\"Power Recirculation Core\\\",\\\"Neurotrainer III\\\",\\\"Combat Rib I\\\",\\\"Combat Rib II\\\",\\\"DermaForce Particle Barrier\\\"],\\\"moneySpent\\\":{\\\"augments\\\":27917957472.5,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":91422048319347.48,\\\"repPurchased\\\":0},\\\"moneyLeft\\\":41005533440689.86,\\\"lastSaved\\\":\\\"2023-07-11T17:29:31.733Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1000000,\\\"currentFactionRep\\\":45618.14880600499,\\\"targetRepForGettingToFavor\\\":13348.8089,\\\"time\\\":\\\"2023-07-11T12:48:04.959Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$NaN\\\",\\\"moneyRightNow\\\":\\\"$12,712,609,677,232.98\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$300,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T14:27:37.793Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":false,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"triggedWithSuperLargeAmountOfMoney\\\":false,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$NaN\\\",\\\"moneyRightNow\\\":\\\"$13,879,516,076,246.31\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$300,000,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T14:27:41.820Z\\\"}}\"}}],[\"contracts/2023-07-11T17:29:34.923Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T17:29:34.923Z.txt\",\"text\":\"[{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-978804-BladeIndustries.cct\\\",\\\"type\\\":\\\"HammingCodes: Integer to Encoded Binary\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":36677,\\\"description\\\":\\\"You are given the following decimal Value: \\\\n 36677 \\\\n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\\\\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\\\\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\\\\n The answer should be given as a string containing only 1s and 0s.\\\\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\\\\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\\\\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\\\\n\\\\n Extra rule for encoding:\\\\n There should be no leading zeros in the 'data bit' section\\\"}]\"}}],[\"analytics/2023-07-11-13-33-NWO-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-13-33-NWO-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T17:29:35.209Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T17:29:35.209Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"NWO\\\",\\\"firstTime\\\":\\\"2023-07-11T17:29:35.209Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-11T17:29:35.209Z\\\"},\\\"augsBought\\\":[\\\"Embedded Netburner Module Core V3 Upgrade\\\",\\\"Embedded Netburner Module Direct Memory Access Upgrade\\\",\\\"Embedded Netburner Module Analyze Engine\\\",\\\"NEMEAN Subdermal Weave\\\",\\\"Synthetic Heart\\\",\\\"NutriGen Implant\\\",\\\"The Red Pill\\\"],\\\"moneySpent\\\":{\\\"augments\\\":102280939975,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":33234729138126.324,\\\"repPurchased\\\":0},\\\"moneyLeft\\\":27397945380899.656,\\\"lastSaved\\\":\\\"2023-07-11T18:33:24.220Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":1750000,\\\"currentFactionRep\\\":188501.26059445622,\\\"targetRepForGettingToFavor\\\":125.34820000000002,\\\"time\\\":\\\"2023-07-11T17:53:45.496Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$438,057,836,945,340.10\\\",\\\"moneyRightNow\\\":\\\"$58,736,735,518,839.44\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$102,280,939,975.00\\\",\\\"time\\\":\\\"2023-07-11T18:33:20.148Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$438,057,836,945,340.10\\\",\\\"moneyRightNow\\\":\\\"$60,734,955,459,000.98\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$102,280,939,975.00\\\",\\\"time\\\":\\\"2023-07-11T18:33:24.219Z\\\"}}\"}}],[\"analytics/2023-07-11-15-02-OmniTekIncorporated-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-15-02-OmniTekIncorporated-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T18:52:58.390Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T18:52:58.390Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"OmniTek Incorporated\\\",\\\"firstTime\\\":\\\"2023-07-11T18:52:58.390Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":625000,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-11T18:52:58.391Z\\\"},\\\"augsBought\\\":[\\\"Hydroflame Left Arm\\\",\\\"Xanipher\\\",\\\"PC Direct-Neural Interface\\\",\\\"Bionic Legs\\\",\\\"Bionic Spine\\\",\\\"Combat Rib III\\\",\\\"Augmented Targeting III\\\",\\\"INFRARET Enhancement\\\"],\\\"moneySpent\\\":{\\\"augments\\\":2536876847832,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":158008228467501.8,\\\"repPurchased\\\":1011071000000},\\\"moneyLeft\\\":3118364148690.9688,\\\"lastSaved\\\":\\\"2023-07-11T20:02:57.795Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":625000,\\\"currentFactionRep\\\":462635.4572515714,\\\"targetRepForGettingToFavor\\\":0,\\\"time\\\":\\\"2023-07-11T20:02:53.557Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$569,163,675,385,318.20\\\",\\\"moneyRightNow\\\":\\\"$163,160,637,846,968.20\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$2,536,876,847,832.00\\\",\\\"time\\\":\\\"2023-07-11T20:02:53.557Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$569,163,675,385,318.20\\\",\\\"moneyRightNow\\\":\\\"$164,674,540,464,024.78\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$2,536,876,847,832.00\\\",\\\"time\\\":\\\"2023-07-11T20:02:57.609Z\\\"}}\"}}],[\"contracts/2023-07-11T18:33:27.509Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T18:33:27.509Z.txt\",\"text\":\"[{\\\"server\\\":\\\"titan-labs\\\",\\\"name\\\":\\\"contract-315110.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"640193486\\\",65],\\\"description\\\":\\\"You are given the following string which contains only digits between 0 and 9:\\\\n\\\\n 640193486\\\\n\\\\n You are also given a target number of 65. Return all possible ways you can add the +(add), -(subtract), and *(multiply) operators to the string such that it evaluates to the target number. (Normal order of operations applies.)\\\\n\\\\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\\\\n\\\\n [\\\\\\\"640193486\\\\\\\", 65]\\\\n\\\\n NOTE: The order of evaluation expects script operator precedence NOTE: Numbers in the expression cannot have leading 0's. In other words, \\\\\\\"1+01\\\\\\\" is not a valid expression Examples:\\\\n\\\\n Input: digits = \\\\\\\"123\\\\\\\", target = 6\\\\n Output: [1+2+3, 1*2*3]\\\\n\\\\n Input: digits = \\\\\\\"105\\\\\\\", target = 5\\\\n Output: [1*0+5, 10-5]\\\"}]\"}}],[\"analytics/2023-07-11-16-04-BladeIndustries-end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/2023-07-11-16-04-BladeIndustries-end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T20:16:37.898Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T20:16:37.898Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"Blade Industries\\\",\\\"firstTime\\\":\\\"2023-07-11T20:16:37.898Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":562500,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-11T20:16:37.899Z\\\"},\\\"augsBought\\\":[\\\"OmniTek InfoLoad\\\",\\\"HyperSight Corneal Implant\\\"],\\\"moneySpent\\\":{\\\"augments\\\":8100000000,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":85747668719937.4,\\\"repPurchased\\\":4751786000000},\\\"moneyLeft\\\":13842981133569.93,\\\"lastSaved\\\":\\\"2023-07-11T21:04:19.385Z\\\",\\\"repTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":true,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":562500,\\\"currentFactionRep\\\":462578.8960435048,\\\"targetRepForGettingToFavor\\\":0,\\\"time\\\":\\\"2023-07-11T21:04:14.492Z\\\"},\\\"firstEncoundedMoneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$530,007,418,535,109.50\\\",\\\"moneyRightNow\\\":\\\"$102,174,957,837,653.20\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$8,100,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T21:04:14.492Z\\\"},\\\"moneyTrigger\\\":{\\\"estimatedIncomeTriggered\\\":true,\\\"moneyIsGreaterThanTriggered\\\":true,\\\"estimatedIncomeForTheNextFourHours\\\":\\\"$530,007,418,535,109.50\\\",\\\"moneyRightNow\\\":\\\"$104,350,535,853,507.34\\\",\\\"buyArgumentsWhenWeHave\\\":\\\"$8,100,000,000.00\\\",\\\"time\\\":\\\"2023-07-11T21:04:18.527Z\\\"}}\"}}],[\"contracts/2023-07-11T21:04:22.607Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T21:04:22.607Z.txt\",\"text\":\"[{\\\"server\\\":\\\"summit-uni\\\",\\\"name\\\":\\\"contract-461331.cct\\\",\\\"type\\\":\\\"Compression II: LZ Decompression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"5QFg8D941R640269V6p8o0r4N989p8ok5ZyGC04NHYU621B92079\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following LZ-encoded string:\\\\n &nbsp; &nbsp; 5QFg8D941R640269V6p8o0r4N989p8ok5ZyGC04NHYU621B92079\\\\n Decode it and output the original string.\\\\n\\\\n Example: decoding '5aaabb450723abb' chunk-by-chunk\\\\n &nbsp; &nbsp; 5aaabb &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;aaabb\\\\n &nbsp; &nbsp; 5aaabb45 &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;aaabbaaab\\\\n &nbsp; &nbsp; 5aaabb450 &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;aaabbaaab\\\\n &nbsp; &nbsp; 5aaabb45072 &nbsp; &nbsp; &nbsp;-> &nbsp;aaabbaaababababa\\\\n &nbsp; &nbsp; 5aaabb450723abb &nbsp;-> &nbsp;aaabbaaababababaabb\\\"}]\"}}],[\"analytics/end-round.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"analytics/end-round.txt\",\"text\":\"{\\\"firstStarted\\\":\\\"2023-07-11T21:37:36.719Z\\\",\\\"firstAssignFactionToMax\\\":\\\"2023-07-11T21:37:36.719Z\\\",\\\"factionsToMax\\\":[{\\\"factionToMax\\\":\\\"CyberSec\\\",\\\"firstTime\\\":\\\"2023-07-11T21:37:36.719Z\\\"}],\\\"firstEncounterOfRepTrigger\\\":{\\\"factionRepGreaterThanMaximumAug\\\":false,\\\"factionRepGreaterThanTargetToGetToFavorNeeded\\\":false,\\\"factionDonationTrigger\\\":false,\\\"maximumAugRepNeeded\\\":18750,\\\"currentFactionRep\\\":0,\\\"targetRepForGettingToFavor\\\":700000,\\\"time\\\":\\\"2023-07-11T21:37:36.720Z\\\"},\\\"augsBought\\\":[],\\\"moneySpent\\\":{\\\"augments\\\":0,\\\"homeCores\\\":0,\\\"homeRam\\\":0,\\\"fluxGovernors\\\":0,\\\"repPurchased\\\":0},\\\"moneyLeft\\\":0,\\\"lastSaved\\\":\\\"2023-07-11T22:34:01.158Z\\\"}\"}}],[\"contracts/2023-07-11T22:03:07.982Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-11T22:03:07.982Z.txt\",\"text\":\"[{\\\"server\\\":\\\"icarus\\\",\\\"name\\\":\\\"contract-708430-Sector12.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"YXYXYXYXYXUXYX2YXYXUXYX2XYX13XO23XO23gO3gOgOgOy1Zy1Zy1Zy11Zy1Zy11ZsB\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; YXYXYXYXYXUXYX2YXYXUXYX2XYX13XO23XO23gO3gOgOgOy1Zy1Zy1Zy11Zy1Zy11ZsB\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"catalyst\\\",\\\"name\\\":\\\"contract-444562.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,1,0],[0,1,1,0,0,0,0,1,0,1,0,1],[0,0,1,1,0,0,0,1,0,1,0,0],[0,0,1,0,1,0,0,0,0,1,0,0],[0,0,0,0,0,1,1,1,0,0,1,1],[0,0,1,1,1,1,1,1,0,0,0,0],[0,1,0,0,1,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,0,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0,1,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,0,0,0,1,0,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,1,0,0,0,1,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,0,0,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,1,1,0,0,1,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,1,1,1,1,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,1,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,0,0,0,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"}]\"}}],[\"contracts/2023-07-12T00:04:23.916Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-12T00:04:23.916Z.txt\",\"text\":\"[{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-729164-TianDiHui.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[2],[7,6],[8,8,1],[2,7,3,5],[6,7,2,3,2],[1,5,3,1,3,1],[7,3,6,1,2,5,5],[2,4,9,7,5,9,9,9],[6,4,4,5,1,7,5,7,3],[6,4,8,1,7,8,7,6,7,5],[2,8,2,9,2,4,6,1,4,7,5]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7,6],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[8,8,1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2,7,3,5],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,7,2,3,2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,5,3,1,3,1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7,3,6,1,2,5,5],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2,4,9,7,5,9,9,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[6,4,4,5,1,7,5,7,3],\\\\n&nbsp;&nbsp;&nbsp;[6,4,8,1,7,8,7,6,7,5],\\\\n&nbsp;&nbsp;[2,8,2,9,2,4,6,1,4,7,5]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"hong-fang-tea\\\",\\\"name\\\":\\\"contract-336770-NWO.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[3],[6,7],[8,1,4],[6,9,3,1],[8,4,5,6,3]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[8,1,4],\\\\n&nbsp;&nbsp;&nbsp;[6,9,3,1],\\\\n&nbsp;&nbsp;[8,4,5,6,3]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"harakiri-sushi\\\",\\\"name\\\":\\\"contract-723216-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[4,5,1,4,7,8,3,0,9,0,3,9,1,10,0,1,5,0,0,0,8,6,10,3,0],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 4,5,1,4,7,8,3,0,9,0,3,9,1,10,0,1,5,0,0,0,8,6,10,3,0\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"iron-gym\\\",\\\"name\\\":\\\"contract-176172-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"88599944\\\",-84],\\\"description\\\":\\\"You are given the following string which contains only digits between 0 and 9:\\\\n\\\\n 88599944\\\\n\\\\n You are also given a target number of -84. Return all possible ways you can add the +(add), -(subtract), and *(multiply) operators to the string such that it evaluates to the target number. (Normal order of operations applies.)\\\\n\\\\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\\\\n\\\\n [\\\\\\\"88599944\\\\\\\", -84]\\\\n\\\\n NOTE: The order of evaluation expects script operator precedence NOTE: Numbers in the expression cannot have leading 0's. In other words, \\\\\\\"1+01\\\\\\\" is not a valid expression Examples:\\\\n\\\\n Input: digits = \\\\\\\"123\\\\\\\", target = 6\\\\n Output: [1+2+3, 1*2*3]\\\\n\\\\n Input: digits = \\\\\\\"105\\\\\\\", target = 5\\\\n Output: [1*0+5, 10-5]\\\"},{\\\"server\\\":\\\"the-hub\\\",\\\"name\\\":\\\"contract-271928.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"884220150\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 884220150\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"the-hub\\\",\\\"name\\\":\\\"contract-512438-Sector12.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1100101010011111\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '1100101010011111' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"summit-uni\\\",\\\"name\\\":\\\"contract-627073-TheBlackHand.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"280206263\\\",22],\\\"description\\\":\\\"You are given the following string which contains only digits between 0 and 9:\\\\n\\\\n 280206263\\\\n\\\\n You are also given a target number of 22. Return all possible ways you can add the +(add), -(subtract), and *(multiply) operators to the string such that it evaluates to the target number. (Normal order of operations applies.)\\\\n\\\\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\\\\n\\\\n [\\\\\\\"280206263\\\\\\\", 22]\\\\n\\\\n NOTE: The order of evaluation expects script operator precedence NOTE: Numbers in the expression cannot have leading 0's. In other words, \\\\\\\"1+01\\\\\\\" is not a valid expression Examples:\\\\n\\\\n Input: digits = \\\\\\\"123\\\\\\\", target = 6\\\\n Output: [1+2+3, 1*2*3]\\\\n\\\\n Input: digits = \\\\\\\"105\\\\\\\", target = 5\\\\n Output: [1*0+5, 10-5]\\\"},{\\\"server\\\":\\\"summit-uni\\\",\\\"name\\\":\\\"contract-804374.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[1,10,3,0,1,6,0,10,0,10,9,1,6,3,1,0,4],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 1,10,3,0,1,6,0,10,0,10,9,1,6,3,1,0,4\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"I.I.I.I\\\",\\\"name\\\":\\\"contract-713319-ECorp.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0],[0,1],[1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,\\\\n0,1,\\\\n1,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"omnia\\\",\\\"name\\\":\\\"contract-939274.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":75,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 75 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"omnia\\\",\\\"name\\\":\\\"contract-95916.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[6,0,9,7,8,8,4,3,4,7,0,6,10,3,6,4],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 6,0,9,7,8,8,4,3,4,7,0,6,10,3,6,4\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"zeus-med\\\",\\\"name\\\":\\\"contract-512616.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"((a(a))()\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n ((a(a))()\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"infocomm\\\",\\\"name\\\":\\\"contract-142431-BachmanAssociates.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[5,10],[11,16],[21,23],[24,29]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[5,10],[11,16],[21,23],[24,29]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"helios\\\",\\\"name\\\":\\\"contract-8446-NiteSec.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0100000010000100111011101110101110011110111001110111000110011101\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0100000010000100111011101110101110011110111001110111000110011101' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"global-pharm\\\",\\\"name\\\":\\\"contract-202045.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[2,5],[6,13],[15,22],[7,9],[15,16],[25,29]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[2,5],[6,13],[15,22],[7,9],[15,16],[25,29]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"deltaone\\\",\\\"name\\\":\\\"contract-778253.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[3,3,0,3,3],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,3,0,3,3\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"icarus\\\",\\\"name\\\":\\\"contract-708430-Sector12.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"YXYXYXYXYXUXYX2YXYXUXYX2XYX13XO23XO23gO3gOgOgOy1Zy1Zy1Zy11Zy1Zy11ZsB\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; YXYXYXYXYXUXYX2YXYXUXYX2XYX13XO23XO23gO3gOgOgOy1Zy1Zy1Zy11Zy1Zy11ZsB\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"solaris\\\",\\\"name\\\":\\\"contract-868385-ECorp.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"4811648251\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 4811648251\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"solaris\\\",\\\"name\\\":\\\"contract-941799-NiteSec.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[4,6,1,9,5,2,10,5,6,3,7,2,3,7,7,3,1,6,1,5,9,0,4,5],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 4,6,1,9,5,2,10,5,6,3,7,2,3,7,7,3,1,6,1,5,9,0,4,5\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"titan-labs\\\",\\\"name\\\":\\\"contract-670821.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[1],[9,8],[5,3,1],[6,3,2,3],[8,3,8,4,7],[6,8,6,3,5,9],[1,6,2,8,3,1,3],[1,5,8,2,6,5,8,4],[6,1,4,2,4,7,1,6,8]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,8],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[5,3,1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,3,2,3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[8,3,8,4,7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,8,6,3,5,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[1,6,2,8,3,1,3],\\\\n&nbsp;&nbsp;&nbsp;[1,5,8,2,6,5,8,4],\\\\n&nbsp;&nbsp;[6,1,4,2,4,7,1,6,8]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"applied-energetics\\\",\\\"name\\\":\\\"contract-348053-NWO.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,1,0,0,0,1,0],[0,0,0,0,1,0,0],[0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,1,0,0,0,1,0,\\\\n0,0,0,0,1,0,0,\\\\n0,0,0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"applied-energetics\\\",\\\"name\\\":\\\"contract-585222-TianDiHui.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1100101000010101\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '1100101000010101' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"fulcrumtech\\\",\\\"name\\\":\\\"contract-101786-TianDiHui.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1110000010001011011111101001000001101110001101010000110101011100\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '1110000010001011011111101001000001101110001101010000110101011100' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-111223.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[0,2,2],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 0,2,2\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-288053-BladeIndustries.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[3,2,1,2,3,0,5,4,1,1,2,3,1,0,0,1,4,3,3,5],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 3,2,1,2,3,0,5,4,1,1,2,3,1,0,0,1,4,3,3,5\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-367042.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"()(a))(a)aaa)((a(((\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n ()(a))(a)aaa)((a(((\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"syscore\\\",\\\"name\\\":\\\"contract-867548-ECorp.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[12,[[6,10],[0,6],[8,11],[6,8],[0,2],[4,11],[0,1],[1,5],[7,11],[0,9],[8,9],[2,7],[6,7],[4,9],[3,9]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [12,[[6,10],[0,6],[8,11],[6,8],[0,2],[4,11],[0,1],[1,5],[7,11],[0,9],[8,9],[2,7],[6,7],[4,9],[3,9]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 11. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"rothman-uni\\\",\\\"name\\\":\\\"contract-275073.cct\\\",\\\"type\\\":\\\"HammingCodes: Integer to Encoded Binary\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":155085324086,\\\"description\\\":\\\"You are given the following decimal Value: \\\\n 155085324086 \\\\n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\\\\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\\\\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\\\\n The answer should be given as a string containing only 1s and 0s.\\\\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\\\\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\\\\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\\\\n\\\\n Extra rule for encoding:\\\\n There should be no leading zeros in the 'data bit' section\\\"},{\\\"server\\\":\\\"catalyst\\\",\\\"name\\\":\\\"contract-444562.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,1,0],[0,1,1,0,0,0,0,1,0,1,0,1],[0,0,1,1,0,0,0,1,0,1,0,0],[0,0,1,0,1,0,0,0,0,1,0,0],[0,0,0,0,0,1,1,1,0,0,1,1],[0,0,1,1,1,1,1,1,0,0,0,0],[0,1,0,0,1,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,0,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0,1,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,0,0,0,1,0,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,1,0,0,0,1,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,0,0,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,1,1,0,0,1,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,1,1,1,1,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,1,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,0,0,0,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"}]\"}}],[\"contracts/2023-07-12T21:20:44.230Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-12T21:20:44.230Z.txt\",\"text\":\"[{\\\"server\\\":\\\"galactic-cyber\\\",\\\"name\\\":\\\"contract-750531.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"3358\\\",53],\\\"description\\\":\\\"You are given the following string which contains only digits between 0 and 9:\\\\n\\\\n 3358\\\\n\\\\n You are also given a target number of 53. Return all possible ways you can add the +(add), -(subtract), and *(multiply) operators to the string such that it evaluates to the target number. (Normal order of operations applies.)\\\\n\\\\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\\\\n\\\\n [\\\\\\\"3358\\\\\\\", 53]\\\\n\\\\n NOTE: The order of evaluation expects script operator precedence NOTE: Numbers in the expression cannot have leading 0's. In other words, \\\\\\\"1+01\\\\\\\" is not a valid expression Examples:\\\\n\\\\n Input: digits = \\\\\\\"123\\\\\\\", target = 6\\\\n Output: [1+2+3, 1*2*3]\\\\n\\\\n Input: digits = \\\\\\\"105\\\\\\\", target = 5\\\\n Output: [1*0+5, 10-5]\\\"},{\\\"server\\\":\\\"icarus\\\",\\\"name\\\":\\\"contract-461484.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,1,0,0],[0,0,0,0,1,0,0],[0,0,0,0,1,0,0],[0,0,0,0,0,0,0],[0,0,0,0,1,0,1],[0,1,1,0,0,0,0],[0,0,1,0,0,0,0],[1,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-523040.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[-2,-9,-2,-9,4,2,10,-5,-2,3,7,2,0,6,5,-7,8,-1,-8],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n -2,-9,-2,-9,4,2,10,-5,-2,3,7,2,0,6,5,-7,8,-1,-8\\\"},{\\\"server\\\":\\\"johnson-ortho\\\",\\\"name\\\":\\\"contract-741432.cct\\\",\\\"type\\\":\\\"Total Ways to Sum II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[111,[1,2,3,4,6,7,8,11,12,15]],\\\"description\\\":\\\"How many different distinct ways can the number 111 be written as a sum of integers contained in the set:\\\\n\\\\n [1,2,3,4,6,7,8,11,12,15]?\\\\n\\\\n You may use each integer in the set zero or more times.\\\"},{\\\"server\\\":\\\"omega-net\\\",\\\"name\\\":\\\"contract-149047-NiteSec.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"01101011010010011111101000011100\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '01101011010010011111101000011100' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"zb-institute\\\",\\\"name\\\":\\\"contract-55508.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":194455156,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 194455156?\\\"},{\\\"server\\\":\\\"rho-construction\\\",\\\"name\\\":\\\"contract-713464-BladeIndustries.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[9,-6,9,7,-4,8,0,-10,-10,-1,5,1,4,-1,9,1,6,-4,-4,6,8],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 9,-6,9,7,-4,8,0,-10,-10,-1,5,1,4,-1,9,1,6,-4,-4,6,8\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-9550.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[2],[4,4],[9,6,8],[6,1,4,4],[3,3,1,5,5],[9,5,1,2,3,2],[4,4,4,3,1,2,1],[2,6,2,2,1,4,3,9],[8,7,3,3,6,7,5,7,4],[5,1,4,5,2,1,5,4,3,4]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,6,8],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,1,4,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3,3,1,5,5],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,5,1,2,3,2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4,4,4,3,1,2,1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[2,6,2,2,1,4,3,9],\\\\n&nbsp;&nbsp;&nbsp;[8,7,3,3,6,7,5,7,4],\\\\n&nbsp;&nbsp;[5,1,4,5,2,1,5,4,3,4]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"millenium-fitness\\\",\\\"name\\\":\\\"contract-367378.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[7,[[1,3],[5,6],[2,4],[4,5],[2,3],[0,6]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [7,[[1,3],[5,6],[2,4],[4,5],[2,3],[0,6]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 6. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"}]\"}}],[\"contracts/2023-07-13T01:43:07.575Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-13T01:43:07.575Z.txt\",\"text\":\"[{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-313731.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[13,15],[2,12],[5,9],[5,14],[3,12],[5,8],[10,15],[11,15],[23,27],[16,25],[10,18],[9,11],[19,21],[13,15],[11,20],[21,23],[15,20]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[13,15],[2,12],[5,9],[5,14],[3,12],[5,8],[10,15],[11,15],[23,27],[16,25],[10,18],[9,11],[19,21],[13,15],[11,20],[21,23],[15,20]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"omega-net\\\",\\\"name\\\":\\\"contract-579159-NWO.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"(a()a))\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n (a()a))\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"syscore\\\",\\\"name\\\":\\\"contract-922188.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"10170141214\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 10170141214\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-202147-Aevum.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"91119053\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 91119053\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"aevum-police\\\",\\\"name\\\":\\\"contract-33073.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":97,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 97 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"galactic-cyber\\\",\\\"name\\\":\\\"contract-158550.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"724124252400\\\",-100],\\\"description\\\":\\\"You are given the following string which contains only digits between 0 and 9:\\\\n\\\\n 724124252400\\\\n\\\\n You are also given a target number of -100. Return all possible ways you can add the +(add), -(subtract), and *(multiply) operators to the string such that it evaluates to the target number. (Normal order of operations applies.)\\\\n\\\\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\\\\n\\\\n [\\\\\\\"724124252400\\\\\\\", -100]\\\\n\\\\n NOTE: The order of evaluation expects script operator precedence NOTE: Numbers in the expression cannot have leading 0's. In other words, \\\\\\\"1+01\\\\\\\" is not a valid expression Examples:\\\\n\\\\n Input: digits = \\\\\\\"123\\\\\\\", target = 6\\\\n Output: [1+2+3, 1*2*3]\\\\n\\\\n Input: digits = \\\\\\\"105\\\\\\\", target = 5\\\\n Output: [1*0+5, 10-5]\\\"},{\\\"server\\\":\\\"taiyang-digital\\\",\\\"name\\\":\\\"contract-409368-ECorp.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"0000000010011001\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '0000000010011001' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-613982-Aevum.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,0,1,1],[0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,0],[1,1,0,0,0,0,1,0,1,0],[0,0,1,0,0,0,0,0,1,0],[0,1,0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,0,0,0,0,0,\\\\n0,0,0,0,0,0,0,1,0,0,\\\\n0,1,0,0,0,0,0,0,0,0,\\\\n0,0,0,0,0,1,0,0,0,0,\\\\n0,0,0,0,0,1,0,0,1,1,\\\\n0,0,0,0,0,0,0,0,0,1,\\\\n0,0,0,0,0,0,0,0,0,1,\\\\n0,0,0,0,0,0,1,0,0,0,\\\\n0,0,0,1,0,0,0,0,0,0,\\\\n1,1,0,0,0,0,1,0,1,0,\\\\n0,0,1,0,0,0,0,0,1,0,\\\\n0,1,0,0,0,0,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"microdyne\\\",\\\"name\\\":\\\"contract-193179.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"yYDDDDDDDDDDDDDDGGrrrrQQQQQQQQQQQQQqqGGHHpHHppkWWoooooooooooooaaaggggggFF\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; yYDDDDDDDDDDDDDDGGrrrrQQQQQQQQQQQQQqqGGHHpHHppkWWoooooooooooooaaaggggggFF\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\".\\\",\\\"name\\\":\\\"contract-454624.cct\\\",\\\"type\\\":\\\"Find Largest Prime Factor\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":81239038,\\\"description\\\":\\\"A prime factor is a factor that is a prime number. What is the largest prime factor of 81239038?\\\"},{\\\"server\\\":\\\"clarkinc\\\",\\\"name\\\":\\\"contract-670555.cct\\\",\\\"type\\\":\\\"HammingCodes: Integer to Encoded Binary\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":486152158932188,\\\"description\\\":\\\"You are given the following decimal Value: \\\\n 486152158932188 \\\\n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\\\\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\\\\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\\\\n The answer should be given as a string containing only 1s and 0s.\\\\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\\\\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\\\\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\\\\n\\\\n Extra rule for encoding:\\\\n There should be no leading zeros in the 'data bit' section\\\"},{\\\"server\\\":\\\"icarus\\\",\\\"name\\\":\\\"contract-915610-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[9],[3,7],[1,3,1],[1,2,5,6],[6,9,9,4,8],[7,4,1,8,6,5],[6,8,5,2,5,5,3],[6,6,2,6,3,9,4,9],[6,3,4,8,5,5,4,6,7],[6,3,5,1,4,9,1,4,6,4]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3,7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,3,1],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,2,5,6],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,9,9,4,8],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7,4,1,8,6,5],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,8,5,2,5,5,3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[6,6,2,6,3,9,4,9],\\\\n&nbsp;&nbsp;&nbsp;[6,3,4,8,5,5,4,6,7],\\\\n&nbsp;&nbsp;[6,3,5,1,4,9,1,4,6,4]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"}]\"}}],[\"contracts/2023-07-13T11:39:25.939Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-13T11:39:25.939Z.txt\",\"text\":\"[]\"}}],[\"data/ramToReserveOnHome.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/ramToReserveOnHome.txt\",\"text\":\"{\\\"ramToReserve\\\":58.35,\\\"ramToReserveInLimitedEnvironment\\\":38,\\\"earlyGameLimiter\\\":\\\"scripts/tools/manually-end-round.js\\\"}\"}}],[\"data/ownedAugs.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/ownedAugs.txt\",\"text\":\"[\\\"Neuralstimulator\\\",\\\"Embedded Netburner Module\\\",\\\"Embedded Netburner Module Core Implant\\\",\\\"Enhanced Myelin Sheathing\\\",\\\"Cranial Signal Processors - Gen I\\\",\\\"Cranial Signal Processors - Gen II\\\",\\\"Cranial Signal Processors - Gen III\\\",\\\"Cranial Signal Processors - Gen IV\\\",\\\"The Black Hand\\\",\\\"DataJack\\\",\\\"Neural-Retention Enhancement\\\",\\\"CRTX42-AA Gene Modification\\\",\\\"Artificial Synaptic Potentiation\\\",\\\"Speech Processor Implant\\\",\\\"Neurotrainer II\\\",\\\"Social Negotiation Assistant (S.N.A)\\\",\\\"BitWire\\\",\\\"Neuregen Gene Modification\\\",\\\"Nuoptimal Nootropic Injector Implant\\\",\\\"ADR-V1 Pheromone Gene\\\",\\\"Speech Enhancement\\\",\\\"Synaptic Enhancement Implant\\\",\\\"Neurotrainer I\\\",\\\"Wired Reflexes\\\",\\\"NeuroFlux Governor\\\",\\\"Embedded Netburner Module Core V2 Upgrade\\\",\\\"BitRunners Neurolink\\\",\\\"Artificial Bio-neural Network Implant\\\",\\\"Cranial Signal Processors - Gen V\\\",\\\"Neural Accelerator\\\",\\\"Augmented Targeting I\\\",\\\"Augmented Targeting II\\\",\\\"PCMatrix\\\",\\\"CashRoot Starter Kit\\\"]\"}}],[\"buyOrUpgradeServerFlag.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"buyOrUpgradeServerFlag.txt\",\"text\":\"1907.5\"}}],[\"data/factionToMax.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/factionToMax.txt\",\"text\":\"Daedalus\"}}],[\"stopTrading.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"stopTrading.txt\",\"text\":\"\"}}],[\"orderedAugments.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"orderedAugments.txt\",\"text\":\"[]\"}}],[\"data/enviroment.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/enviroment.txt\",\"text\":\"[{\\\"name\\\":\\\"n00dles\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"n00dles\\\",\\\"ip\\\":\\\"26.1.6.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":4,\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":5.899749999999825,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000}},{\\\"name\\\":\\\"foodnstuff\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"foodnstuff\\\",\\\"ip\\\":\\\"98.9.0.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.696499999996863,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":5341132.02273333,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5}},{\\\"name\\\":\\\"sigma-cosmetics\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"ip\\\":\\\"10.0.7.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":15.75,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":4.2424999999997635,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":150954.87243441556,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10}},{\\\"name\\\":\\\"joesguns\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"joesguns\\\",\\\"ip\\\":\\\"89.7.8.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":10.5,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47682.05593788675,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"hong-fang-tea\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"ip\\\":\\\"54.9.9.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":11,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":708543.9182686502,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"harakiri-sushi\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"ip\\\":\\\"49.2.8.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":9.581999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62373.418360819735,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40}},{\\\"name\\\":\\\"iron-gym\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"iron-gym\\\",\\\"ip\\\":\\\"60.9.4.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":12,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":4292.71624844809,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"darkweb\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"darkweb\\\",\\\"ip\\\":\\\"61.9.0.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"darkweb\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CSEC\\\",\\\"lineage\\\":[\\\"iron-gym\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"CSEC\\\",\\\"ip\\\":\\\"55.7.3.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":8,\\\"organizationName\\\":\\\"CyberSec\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"omega-net\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omega-net\\\",\\\"ip\\\":\\\"30.2.4.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Omega Software\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":2052399.2421924577,\\\"moneyMax\\\":1625139175,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":181,\\\"serverGrowth\\\":40}},{\\\"name\\\":\\\"the-hub\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"the-hub\\\",\\\"ip\\\":\\\"95.3.9.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"The Hub\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":19,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":69096.46397778128,\\\"moneyMax\\\":4787389150,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":292,\\\"serverGrowth\\\":51}},{\\\"name\\\":\\\"avmnite-02h\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"ip\\\":\\\"12.0.9.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"NiteSec\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"catalyst\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\",\\\"avmnite-02h\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"catalyst\\\",\\\"ip\\\":\\\"34.2.8.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":28,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":1002977.1055919946,\\\"moneyMax\\\":8401659075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":29}},{\\\"name\\\":\\\"lexo-corp\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\",\\\"avmnite-02h\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"lexo-corp\\\",\\\"ip\\\":\\\"60.5.4.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":723382423,\\\"moneyMax\\\":18084560575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":680,\\\"serverGrowth\\\":57}},{\\\"name\\\":\\\"aevum-police\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\",\\\"avmnite-02h\\\",\\\"catalyst\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"aevum-police\\\",\\\"ip\\\":\\\"55.0.1.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":79,\\\"hackDifficulty\\\":79,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":229067343,\\\"moneyMax\\\":5726683575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":402,\\\"serverGrowth\\\":43}},{\\\"name\\\":\\\"aerocorp\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\",\\\"avmnite-02h\\\",\\\"catalyst\\\",\\\"lexo-corp\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"aerocorp\\\",\\\"ip\\\":\\\"77.5.6.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1082277950,\\\"moneyMax\\\":27056948750,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":908,\\\"serverGrowth\\\":58}},{\\\"name\\\":\\\"snap-fitness\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\",\\\"avmnite-02h\\\",\\\"catalyst\\\",\\\"lexo-corp\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"snap-fitness\\\",\\\"ip\\\":\\\"36.9.4.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":54,\\\"hackDifficulty\\\":54,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":718,\\\"serverGrowth\\\":53}},{\\\"name\\\":\\\"deltaone\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\",\\\"avmnite-02h\\\",\\\"catalyst\\\",\\\"lexo-corp\\\",\\\"snap-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"deltaone\\\",\\\"ip\\\":\\\"7.6.4.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1578090333,\\\"moneyMax\\\":39452258325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":880,\\\"serverGrowth\\\":60}},{\\\"name\\\":\\\"univ-energy\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\",\\\"avmnite-02h\\\",\\\"catalyst\\\",\\\"lexo-corp\\\",\\\"snap-fitness\\\",\\\"deltaone\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"univ-energy\\\",\\\"ip\\\":\\\"57.8.4.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1122045775,\\\"moneyMax\\\":28051144375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":86}},{\\\"name\\\":\\\"solaris\\\",\\\"lineage\\\":[\\\"iron-gym\\\",\\\"CSEC\\\",\\\"omega-net\\\",\\\"avmnite-02h\\\",\\\"catalyst\\\",\\\"lexo-corp\\\",\\\"snap-fitness\\\",\\\"deltaone\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"solaris\\\",\\\"ip\\\":\\\"2.0.2.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":822376194,\\\"moneyMax\\\":20559404850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":828,\\\"serverGrowth\\\":77}},{\\\"name\\\":\\\"max-hardware\\\",\\\"lineage\\\":[\\\"joesguns\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"max-hardware\\\",\\\"ip\\\":\\\"74.7.7.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":9,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":112268.88378651785,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"silver-helix\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"silver-helix\\\",\\\"ip\\\":\\\"86.9.4.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":348263377.1290929,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"netlink\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"netlink\\\",\\\"ip\\\":\\\"71.0.6.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":28.824,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":1618.2961129524288,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":422,\\\"serverGrowth\\\":61}},{\\\"name\\\":\\\"rothman-uni\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"rothman-uni\\\",\\\"ip\\\":\\\"3.4.7.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Rothman University\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":46,\\\"hackDifficulty\\\":21.336,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":16614.326440416175,\\\"moneyMax\\\":5783413425,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":377,\\\"serverGrowth\\\":35}},{\\\"name\\\":\\\"I.I.I.I\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"ip\\\":\\\"40.2.2.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":362,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"rho-construction\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"rho-construction\\\",\\\"ip\\\":\\\"95.0.5.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":46,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1081726.7251889703,\\\"moneyMax\\\":16400018675,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":50}},{\\\"name\\\":\\\"galactic-cyber\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"ip\\\":\\\"25.6.3.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":803739971,\\\"moneyMax\\\":20093499275,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":868,\\\"serverGrowth\\\":89}},{\\\"name\\\":\\\"omnia\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omnia\\\",\\\"ip\\\":\\\"66.1.5.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":945060219,\\\"moneyMax\\\":23626505475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":883,\\\"serverGrowth\\\":63}},{\\\"name\\\":\\\"unitalife\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"unitalife\\\",\\\"ip\\\":\\\"52.7.8.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1099544897,\\\"moneyMax\\\":27488622425,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":778,\\\"serverGrowth\\\":74}},{\\\"name\\\":\\\"defcomm\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"unitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"defcomm\\\",\\\"ip\\\":\\\"27.3.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"DefComm\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":891886322,\\\"moneyMax\\\":22297158050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":56}},{\\\"name\\\":\\\"zeus-med\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"unitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zeus-med\\\",\\\"ip\\\":\\\"96.4.7.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1346277239,\\\"moneyMax\\\":33656930975,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":812,\\\"serverGrowth\\\":77}},{\\\"name\\\":\\\"icarus\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"icarus\\\",\\\"ip\\\":\\\"0.4.4.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":927299455,\\\"moneyMax\\\":23182486375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":909,\\\"serverGrowth\\\":89}},{\\\"name\\\":\\\"infocomm\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"infocomm\\\",\\\"ip\\\":\\\"38.3.8.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"InfoComm\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":716175875,\\\"moneyMax\\\":17904396875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":910,\\\"serverGrowth\\\":57}},{\\\"name\\\":\\\"taiyang-digital\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"ip\\\":\\\"69.6.2.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":876149173,\\\"moneyMax\\\":21903729325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":883,\\\"serverGrowth\\\":74}},{\\\"name\\\":\\\"zb-def\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-def\\\",\\\"ip\\\":\\\"0.9.5.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":923217703,\\\"moneyMax\\\":23080442575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":794,\\\"serverGrowth\\\":67}},{\\\"name\\\":\\\"nova-med\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nova-med\\\",\\\"ip\\\":\\\"87.6.2.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":1161127518,\\\"moneyMax\\\":29028187950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":827,\\\"serverGrowth\\\":77}},{\\\"name\\\":\\\"microdyne\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"nova-med\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"microdyne\\\",\\\"ip\\\":\\\"77.9.4.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":567719143,\\\"moneyMax\\\":14192978575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":70}},{\\\"name\\\":\\\"fulcrumtech\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"nova-med\\\",\\\"microdyne\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"ip\\\":\\\"95.6.0.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":512,\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":1439058545,\\\"moneyMax\\\":35976463625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1146,\\\"serverGrowth\\\":94}},{\\\"name\\\":\\\".\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"nova-med\\\",\\\"microdyne\\\",\\\"fulcrumtech\\\"],\\\"server\\\":{\\\"hostname\\\":\\\".\\\",\\\"ip\\\":\\\"58.4.8.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\".\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":514,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"blade\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"nova-med\\\",\\\"microdyne\\\",\\\"fulcrumtech\\\",\\\".\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"blade\\\",\\\"ip\\\":\\\"49.8.6.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":91,\\\"hackDifficulty\\\":91,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":15734264584,\\\"moneyMax\\\":393356614600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":913,\\\"serverGrowth\\\":55}},{\\\"name\\\":\\\"megacorp\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"nova-med\\\",\\\"microdyne\\\",\\\"fulcrumtech\\\",\\\".\\\",\\\"blade\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"megacorp\\\",\\\"ip\\\":\\\"47.4.1.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":46480235667,\\\"moneyMax\\\":1162005891675,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1155,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"titan-labs\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"zb-def\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"titan-labs\\\",\\\"ip\\\":\\\"20.8.9.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":862068314,\\\"moneyMax\\\":21551707850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":817,\\\"serverGrowth\\\":64}},{\\\"name\\\":\\\"run4theh111z\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"run4theh111z\\\",\\\"ip\\\":\\\"69.0.8.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"The Runners\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"stormtech\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"stormtech\\\",\\\"ip\\\":\\\"12.5.5.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1012575826,\\\"moneyMax\\\":25314395650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1012,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"vitalife\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"vitalife\\\",\\\"ip\\\":\\\"68.6.9.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"VitaLife\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":737495112,\\\"moneyMax\\\":18437377800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":70}},{\\\"name\\\":\\\"4sigma\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"stormtech\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"4sigma\\\",\\\"ip\\\":\\\"14.5.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":18206091706,\\\"moneyMax\\\":455152292650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":986,\\\"serverGrowth\\\":89}},{\\\"name\\\":\\\"kuai-gong\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"stormtech\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"kuai-gong\\\",\\\"ip\\\":\\\"56.3.1.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":27049821469,\\\"moneyMax\\\":676245536725,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":952,\\\"serverGrowth\\\":97}},{\\\"name\\\":\\\"powerhouse-fitness\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"kuai-gong\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"ip\\\":\\\"49.9.9.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":977,\\\"serverGrowth\\\":54}},{\\\"name\\\":\\\"The-Cave\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"kuai-gong\\\",\\\"powerhouse-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"The-Cave\\\",\\\"ip\\\":\\\"41.5.3.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Helios\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"nwo\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"4sigma\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nwo\\\",\\\"ip\\\":\\\"65.7.7.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"NWO\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22384288239,\\\"moneyMax\\\":559607205975,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1247,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"clarkinc\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"4sigma\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"clarkinc\\\",\\\"ip\\\":\\\"50.0.1.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23434720147,\\\"moneyMax\\\":585868003675,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1083,\\\"serverGrowth\\\":57}},{\\\"name\\\":\\\"ecorp\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"4sigma\\\",\\\"nwo\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"ecorp\\\",\\\"ip\\\":\\\"53.1.0.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"ECorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":67063202835,\\\"moneyMax\\\":1676580070875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1296,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"applied-energetics\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"infocomm\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"applied-energetics\\\",\\\"ip\\\":\\\"28.3.8.6\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":964142442,\\\"moneyMax\\\":24103561050,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":805,\\\"serverGrowth\\\":73}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"infocomm\\\",\\\"applied-energetics\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"70.7.8.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":742298556,\\\"moneyMax\\\":18557463900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":75}},{\\\"name\\\":\\\"omnitek\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"infocomm\\\",\\\"applied-energetics\\\",\\\"helios\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omnitek\\\",\\\"ip\\\":\\\"95.3.4.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":512,\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":21176440832,\\\"moneyMax\\\":529411020800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":938,\\\"serverGrowth\\\":96}},{\\\"name\\\":\\\"b-and-a\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"infocomm\\\",\\\"applied-energetics\\\",\\\"helios\\\",\\\"omnitek\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"b-and-a\\\",\\\"ip\\\":\\\"83.5.5.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":74,\\\"hackDifficulty\\\":74,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":22755247403,\\\"moneyMax\\\":568881185075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1023,\\\"serverGrowth\\\":60}},{\\\"name\\\":\\\"fulcrumassets\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"galactic-cyber\\\",\\\"omnia\\\",\\\"icarus\\\",\\\"infocomm\\\",\\\"applied-energetics\\\",\\\"helios\\\",\\\"omnitek\\\",\\\"b-and-a\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"ip\\\":\\\"17.9.7.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1469,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"joesguns\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"rothman-uni\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"24.9.2.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":222.25,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":7977165.1843177015,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":32}},{\\\"name\\\":\\\"nectar-net\\\",\\\"lineage\\\":[\\\"foodnstuff\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nectar-net\\\",\\\"ip\\\":\\\"52.7.9.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":9104040.522713989,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25}},{\\\"name\\\":\\\"neo-net\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"nectar-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"neo-net\\\",\\\"ip\\\":\\\"39.9.7.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":480540.147375031,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25}},{\\\"name\\\":\\\"computek\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"nectar-net\\\",\\\"neo-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"computek\\\",\\\"ip\\\":\\\"41.7.5.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"CompuTek\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":20,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":289248.1799610076,\\\"moneyMax\\\":5534579875,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":339,\\\"serverGrowth\\\":52}},{\\\"name\\\":\\\"johnson-ortho\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"nectar-net\\\",\\\"neo-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"ip\\\":\\\"33.0.1.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":44,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":50731.71381954714,\\\"moneyMax\\\":1785050475,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":49}},{\\\"name\\\":\\\"crush-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"nectar-net\\\",\\\"neo-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"crush-fitness\\\",\\\"ip\\\":\\\"85.6.6.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":42,\\\"hackDifficulty\\\":18,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":311599909.4069876,\\\"moneyMax\\\":1052710225,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":233,\\\"serverGrowth\\\":33}},{\\\"name\\\":\\\"syscore\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"crush-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"syscore\\\",\\\"ip\\\":\\\"49.0.1.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":409697957,\\\"moneyMax\\\":10242448925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":633,\\\"serverGrowth\\\":62}},{\\\"name\\\":\\\"alpha-ent\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"crush-fitness\\\",\\\"syscore\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"alpha-ent\\\",\\\"ip\\\":\\\"72.2.9.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":641574809,\\\"moneyMax\\\":16039370225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":524,\\\"serverGrowth\\\":55}},{\\\"name\\\":\\\"global-pharm\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"crush-fitness\\\",\\\"syscore\\\",\\\"alpha-ent\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"global-pharm\\\",\\\"ip\\\":\\\"27.9.6.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":31,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":293704.01590965665,\\\"moneyMax\\\":42505706375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":793,\\\"serverGrowth\\\":81}},{\\\"name\\\":\\\"summit-uni\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"johnson-ortho\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"summit-uni\\\",\\\"ip\\\":\\\"72.5.1.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Summit University\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.826,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":5412956925,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":436,\\\"serverGrowth\\\":42}},{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"computek\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"86.8.1.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1033630088,\\\"moneyMax\\\":25840752200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":768,\\\"serverGrowth\\\":83}}]\"}}],[\"data/ramNeededToStartBatches.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/ramNeededToStartBatches.txt\",\"text\":\"88674\"}}],[\"data/memoryStarvedQueue.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/memoryStarvedQueue.txt\",\"text\":\"[[\\\"catalyst\\\",{\\\"name\\\":\\\"catalyst\\\",\\\"moneyThreshhold\\\":6301244306.25,\\\"securityThreshholdTarget\\\":27,\\\"hackDifficulty\\\":28,\\\"moneyAvailable\\\":1002977.1055919946,\\\"minDifficulty\\\":22,\\\"pids\\\":[940072],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"rho-construction\\\",{\\\"name\\\":\\\"rho-construction\\\",\\\"moneyThreshhold\\\":12300014006.25,\\\"securityThreshholdTarget\\\":20,\\\"hackDifficulty\\\":15,\\\"moneyAvailable\\\":1081726.7251889703,\\\"minDifficulty\\\":15,\\\"pids\\\":[942129],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"netlink\\\",{\\\"name\\\":\\\"netlink\\\",\\\"moneyThreshhold\\\":5156250000,\\\"securityThreshholdTarget\\\":28,\\\"hackDifficulty\\\":28.824,\\\"moneyAvailable\\\":1618.2961129524288,\\\"minDifficulty\\\":23,\\\"pids\\\":[940571],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"millenium-fitness\\\",{\\\"name\\\":\\\"millenium-fitness\\\",\\\"moneyThreshhold\\\":4687500000,\\\"securityThreshholdTarget\\\":21,\\\"hackDifficulty\\\":16,\\\"moneyAvailable\\\":7977165.1843177015,\\\"minDifficulty\\\":16,\\\"pids\\\":[941747],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"rothman-uni\\\",{\\\"name\\\":\\\"rothman-uni\\\",\\\"moneyThreshhold\\\":4337560068.75,\\\"securityThreshholdTarget\\\":20,\\\"hackDifficulty\\\":21.336,\\\"moneyAvailable\\\":16614.326440416175,\\\"minDifficulty\\\":15,\\\"pids\\\":[942497],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"computek\\\",{\\\"name\\\":\\\"computek\\\",\\\"moneyThreshhold\\\":4150934906.25,\\\"securityThreshholdTarget\\\":25,\\\"hackDifficulty\\\":20,\\\"moneyAvailable\\\":289248.1799610076,\\\"minDifficulty\\\":20,\\\"pids\\\":[942211],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"summit-uni\\\",{\\\"name\\\":\\\"summit-uni\\\",\\\"moneyThreshhold\\\":4059717693.75,\\\"securityThreshholdTarget\\\":22,\\\"hackDifficulty\\\":20.826,\\\"moneyAvailable\\\":0,\\\"minDifficulty\\\":17,\\\"pids\\\":[942470],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"the-hub\\\",{\\\"name\\\":\\\"the-hub\\\",\\\"moneyThreshhold\\\":3590541862.5,\\\"securityThreshholdTarget\\\":20,\\\"hackDifficulty\\\":19,\\\"moneyAvailable\\\":69096.46397778128,\\\"minDifficulty\\\":15,\\\"pids\\\":[942498],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"johnson-ortho\\\",{\\\"name\\\":\\\"johnson-ortho\\\",\\\"moneyThreshhold\\\":1338787856.25,\\\"securityThreshholdTarget\\\":20,\\\"hackDifficulty\\\":15,\\\"moneyAvailable\\\":50731.71381954714,\\\"minDifficulty\\\":15,\\\"pids\\\":[942471],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"omega-net\\\",{\\\"name\\\":\\\"omega-net\\\",\\\"moneyThreshhold\\\":1218854381.25,\\\"securityThreshholdTarget\\\":16,\\\"hackDifficulty\\\":13,\\\"moneyAvailable\\\":2052399.2421924577,\\\"minDifficulty\\\":11,\\\"pids\\\":[942499],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"silver-helix\\\",{\\\"name\\\":\\\"silver-helix\\\",\\\"moneyThreshhold\\\":843750000,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":14,\\\"moneyAvailable\\\":348263377.1290929,\\\"minDifficulty\\\":10,\\\"pids\\\":[942559],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"crush-fitness\\\",{\\\"name\\\":\\\"crush-fitness\\\",\\\"moneyThreshhold\\\":789532668.75,\\\"securityThreshholdTarget\\\":19,\\\"hackDifficulty\\\":18,\\\"moneyAvailable\\\":311599909.4069876,\\\"minDifficulty\\\":14,\\\"pids\\\":[942212],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"iron-gym\\\",{\\\"name\\\":\\\"iron-gym\\\",\\\"moneyThreshhold\\\":375000000,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":12,\\\"moneyAvailable\\\":4292.71624844809,\\\"minDifficulty\\\":10,\\\"pids\\\":[942370],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"max-hardware\\\",{\\\"name\\\":\\\"max-hardware\\\",\\\"moneyThreshhold\\\":187500000,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":9,\\\"moneyAvailable\\\":112268.88378651785,\\\"minDifficulty\\\":5,\\\"pids\\\":[942560],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"neo-net\\\",{\\\"name\\\":\\\"neo-net\\\",\\\"moneyThreshhold\\\":93750000,\\\"securityThreshholdTarget\\\":13,\\\"hackDifficulty\\\":10,\\\"moneyAvailable\\\":480540.147375031,\\\"minDifficulty\\\":8,\\\"pids\\\":[942500],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"harakiri-sushi\\\",{\\\"name\\\":\\\"harakiri-sushi\\\",\\\"moneyThreshhold\\\":75000000,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":9.581999999999999,\\\"moneyAvailable\\\":62373.418360819735,\\\"minDifficulty\\\":5,\\\"pids\\\":[942561,942562,942563],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":485},{\\\"machineToRunOn\\\":\\\"sigma-cosmetics\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"joesguns\\\",\\\"threads\\\":6}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"hong-fang-tea\\\",{\\\"name\\\":\\\"hong-fang-tea\\\",\\\"moneyThreshhold\\\":56250000,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":11,\\\"moneyAvailable\\\":708543.9182686502,\\\"minDifficulty\\\":5,\\\"pids\\\":[942501],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"nectar-net\\\",{\\\"name\\\":\\\"nectar-net\\\",\\\"moneyThreshhold\\\":51562500,\\\"securityThreshholdTarget\\\":12,\\\"hackDifficulty\\\":9,\\\"moneyAvailable\\\":9104040.522713989,\\\"minDifficulty\\\":7,\\\"pids\\\":[942599,942600],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":453},{\\\"machineToRunOn\\\":\\\"univ-energy\\\",\\\"threads\\\":47}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"joesguns\\\",{\\\"name\\\":\\\"joesguns\\\",\\\"moneyThreshhold\\\":46875000,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":5,\\\"moneyAvailable\\\":47682.05593788675,\\\"minDifficulty\\\":5,\\\"pids\\\":[942601,942602,942603,942604,942605,942606,942607,942608,942609,942610,942611,942612,942613,942614,942615,942616,942617,942618,942619,942620],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"alpha-ent\\\",\\\"threads\\\":73},{\\\"machineToRunOn\\\":\\\"lexo-corp\\\",\\\"threads\\\":36},{\\\"machineToRunOn\\\":\\\"silver-helix\\\",\\\"threads\\\":36},{\\\"machineToRunOn\\\":\\\"netlink\\\",\\\"threads\\\":36},{\\\"machineToRunOn\\\":\\\"rothman-uni\\\",\\\"threads\\\":36},{\\\"machineToRunOn\\\":\\\"unitalife\\\",\\\"threads\\\":36},{\\\"machineToRunOn\\\":\\\"run4theh111z\\\",\\\"threads\\\":36},{\\\"machineToRunOn\\\":\\\"univ-energy\\\",\\\"threads\\\":26},{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":19},{\\\"machineToRunOn\\\":\\\"iron-gym\\\",\\\"threads\\\":18},{\\\"machineToRunOn\\\":\\\"omega-net\\\",\\\"threads\\\":18},{\\\"machineToRunOn\\\":\\\"the-hub\\\",\\\"threads\\\":18},{\\\"machineToRunOn\\\":\\\"aevum-police\\\",\\\"threads\\\":18},{\\\"machineToRunOn\\\":\\\"max-hardware\\\",\\\"threads\\\":18},{\\\"machineToRunOn\\\":\\\"neo-net\\\",\\\"threads\\\":18},{\\\"machineToRunOn\\\":\\\"global-pharm\\\",\\\"threads\\\":18},{\\\"machineToRunOn\\\":\\\"summit-uni\\\",\\\"threads\\\":18},{\\\"machineToRunOn\\\":\\\"foodnstuff\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"hong-fang-tea\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"CSEC\\\",\\\"threads\\\":4}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"sigma-cosmetics\\\",{\\\"name\\\":\\\"sigma-cosmetics\\\",\\\"moneyThreshhold\\\":43125000,\\\"securityThreshholdTarget\\\":8,\\\"hackDifficulty\\\":4.2424999999997635,\\\"moneyAvailable\\\":150954.87243441556,\\\"minDifficulty\\\":3,\\\"pids\\\":[942621,942622,942623,942624,942625,942626,942627,942628,942629,942630],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":10},{\\\"machineToRunOn\\\":\\\"harakiri-sushi\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"avmnite-02h\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"catalyst\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"I.I.I.I\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"rho-construction\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\".\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"nectar-net\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"joesguns\\\",\\\"threads\\\":3},{\\\"machineToRunOn\\\":\\\"n00dles\\\",\\\"threads\\\":2}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}],[\\\"foodnstuff\\\",{\\\"name\\\":\\\"foodnstuff\\\",\\\"moneyThreshhold\\\":37500000,\\\"securityThreshholdTarget\\\":8,\\\"hackDifficulty\\\":7.640499999996864,\\\"moneyAvailable\\\":5301264.3508771425,\\\"minDifficulty\\\":3,\\\"pids\\\":[941750,941751],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"joesguns\\\",\\\"threads\\\":9},{\\\"machineToRunOn\\\":\\\"hong-fang-tea\\\",\\\"threads\\\":5}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"n00dles\\\",{\\\"name\\\":\\\"n00dles\\\",\\\"moneyThreshhold\\\":1312500,\\\"securityThreshholdTarget\\\":6,\\\"hackDifficulty\\\":5.639749999999825,\\\"moneyAvailable\\\":1750000,\\\"minDifficulty\\\":1,\\\"pids\\\":[933381],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":500}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":true}],[\\\"global-pharm\\\",{\\\"name\\\":\\\"global-pharm\\\",\\\"moneyThreshhold\\\":31879279781.25,\\\"securityThreshholdTarget\\\":30,\\\"hackDifficulty\\\":31,\\\"moneyAvailable\\\":293704.01590965665,\\\"minDifficulty\\\":25,\\\"pids\\\":[936868,936869],\\\"runningOn\\\":[{\\\"machineToRunOn\\\":\\\"home\\\",\\\"threads\\\":373},{\\\"machineToRunOn\\\":\\\"millenium-fitness\\\",\\\"threads\\\":127}],\\\"isHacking\\\":false,\\\"readyForNextProcess\\\":false}]]\"}}],[\"data/latestQuotes.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/latestQuotes.txt\",\"text\":\"[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7200.792982520218,\\\"ask\\\":7273.162761239013,\\\"price\\\":7236.977871879616,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44338750160505724,\\\"bias\\\":0.056612498394942756},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19424.64623823984,\\\"ask\\\":19463.534418896972,\\\"price\\\":19444.090328568407,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5979856343378792,\\\"bias\\\":0.09798563433787921},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23740.857628963462,\\\"ask\\\":24027.467580218556,\\\"price\\\":23884.16260459101,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40531317776547354,\\\"bias\\\":0.09468682223452646},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24227.27739125744,\\\"ask\\\":24470.7676162952,\\\"price\\\":24349.022503776323,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5855881930222577,\\\"bias\\\":0.08558819302225773},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23331.254904342335,\\\"ask\\\":23471.663660035465,\\\"price\\\":23401.459282188902,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4033301624598338,\\\"bias\\\":0.09666983754016623},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32205.777976589437,\\\"ask\\\":32659.83728340943,\\\"price\\\":32432.807629999435,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7127382335502946,\\\"bias\\\":0.21273823355029464},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11189.751166650152,\\\"ask\\\":11324.838705885366,\\\"price\\\":11257.29493626776,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4311369237481344,\\\"bias\\\":0.06886307625186561},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":70489.54379422848,\\\"ask\\\":71769.87859573818,\\\"price\\\":71129.71119498333,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.570161172023594,\\\"bias\\\":0.07016117202359395},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13637.838605741774,\\\"ask\\\":13774.902310322092,\\\"price\\\":13706.370458031934,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5593482612382865,\\\"bias\\\":0.059348261238286515},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":13896.281854969122,\\\"ask\\\":14064.043808952654,\\\"price\\\":13980.162831960888,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40772594154031094,\\\"bias\\\":0.09227405845968906},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13853.532242715131,\\\"ask\\\":13909.057422044652,\\\"price\\\":13881.294832379892,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.41377043885981996,\\\"bias\\\":0.08622956114018004},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17608.367555033783,\\\"ask\\\":17820.943420889325,\\\"price\\\":17714.655487961554,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5763475491901859,\\\"bias\\\":0.07634754919018594},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45602.68531126064,\\\"ask\\\":46245.6234727487,\\\"price\\\":45924.154392004675,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.41109426181922315,\\\"bias\\\":0.08890573818077685},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":19942.168615690018,\\\"ask\\\":20102.346676860216,\\\"price\\\":20022.257646275117,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5980644235001504,\\\"bias\\\":0.09806442350015043},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14081.959409235857,\\\"ask\\\":14223.486639479432,\\\"price\\\":14152.723024357645,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5580796978182581,\\\"bias\\\":0.05807969781825806},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12570.375625259021,\\\"ask\\\":12671.342497751062,\\\"price\\\":12620.859061505042,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5119850387315048,\\\"bias\\\":0.011985038731504805},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55691.26843894627,\\\"ask\\\":56476.442414923345,\\\"price\\\":56083.85542693481,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.40669298367790985,\\\"bias\\\":0.09330701632209015},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33715.10440496015,\\\"ask\\\":34327.4877342127,\\\"price\\\":34021.296069586424,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5883618773576862,\\\"bias\\\":0.08836187735768619},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28793.18808034724,\\\"ask\\\":29433.68366959662,\\\"price\\\":29113.435874971932,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5630029308857138,\\\"bias\\\":0.06300293088571385},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":79132.46548107994,\\\"ask\\\":80087.78699594206,\\\"price\\\":79610.126238511,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4442443890417125,\\\"bias\\\":0.055755610958287516},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13920.305025760383,\\\"ask\\\":14201.523309109078,\\\"price\\\":14060.91416743473,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42345432898296365,\\\"bias\\\":0.07654567101703635},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4531.132484544686,\\\"ask\\\":4595.015520580562,\\\"price\\\":4563.074002562625,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47838344664243765,\\\"bias\\\":0.02161655335756235},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1307.1007615355884,\\\"ask\\\":1330.842248627052,\\\"price\\\":1318.9715050813202,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6045137511996795,\\\"bias\\\":0.10451375119967954},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15030.644201511417,\\\"ask\\\":15273.073946697086,\\\"price\\\":15151.859074104252,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.44899693664956175,\\\"bias\\\":0.05100306335043825},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1164.5956143157503,\\\"ask\\\":1183.3794145466493,\\\"price\\\":1173.9875144311998,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.540697440568386,\\\"bias\\\":0.04069744056838598},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":127.53648646770652,\\\"ask\\\":130.6345387705658,\\\"price\\\":129.08551261913615,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4171415177698329,\\\"bias\\\":0.08285848223016712},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6253.862603677115,\\\"ask\\\":6367.454457225235,\\\"price\\\":6310.6585304511755,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.41969217877034537,\\\"bias\\\":0.08030782122965463},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3732.098678601972,\\\"ask\\\":3792.2938185794237,\\\"price\\\":3762.196248590698,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.553207591580786,\\\"bias\\\":0.05320759158078603},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":412.19897799507197,\\\"ask\\\":421.3682171415751,\\\"price\\\":416.78359756832356,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.48479658468605513,\\\"bias\\\":0.015203415313944868},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1115.5617151253284,\\\"ask\\\":1147.2409524716866,\\\"price\\\":1131.4013337985075,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.49167427300994254,\\\"bias\\\":0.008325726990057458},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":735.6845762626607,\\\"ask\\\":743.0783910994712,\\\"price\\\":739.381483681066,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.41063239656339035,\\\"bias\\\":0.08936760343660965},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18135.914513811742,\\\"ask\\\":18245.0574296421,\\\"price\\\":18190.48597172692,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5833715499227122,\\\"bias\\\":0.08337154992271223},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8196.425910116734,\\\"ask\\\":8362.010271937274,\\\"price\\\":8279.218091027004,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5929088681020771,\\\"bias\\\":0.0929088681020771}]\"}}],[\"data/stockHistory.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/stockHistory.txt\",\"text\":\"[[\\\"ECP\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7341.397654142416,\\\"ask\\\":7415.180545138822,\\\"price\\\":7378.2890996406195,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44435784304256615,\\\"bias\\\":0.05564215695743385,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7340.369543029987,\\\"ask\\\":7414.142101251393,\\\"price\\\":7377.25582214069,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44435004965838404,\\\"bias\\\":0.05564995034161596,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7328.086933577678,\\\"ask\\\":7401.7360484880055,\\\"price\\\":7364.911491032842,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4442567747542676,\\\"bias\\\":0.055743225245732386,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7349.8066006834315,\\\"ask\\\":7423.674003705375,\\\"price\\\":7386.740302194404,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44442199172108476,\\\"bias\\\":0.055578008278915236,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7341.138264298658,\\\"ask\\\":7414.91854836196,\\\"price\\\":7378.02840633031,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44435636581212995,\\\"bias\\\":0.05564363418787005,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7339.635669908361,\\\"ask\\\":7413.400852520504,\\\"price\\\":7376.518261214433,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.444344974264055,\\\"bias\\\":0.055655025735944996,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7312.958491260831,\\\"ask\\\":7386.455561524757,\\\"price\\\":7349.707026392794,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4445480000389128,\\\"bias\\\":0.055451999961087184,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7325.588579176041,\\\"ask\\\":7399.212584996904,\\\"price\\\":7362.400582086473,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44445222982014015,\\\"bias\\\":0.055547770179859846,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7299.538200347675,\\\"ask\\\":7372.900393315993,\\\"price\\\":7336.219296831834,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4442539925595711,\\\"bias\\\":0.0557460074404289,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7330.786763401025,\\\"ask\\\":7404.463012279427,\\\"price\\\":7367.624887840227,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4444926354134974,\\\"bias\\\":0.05550736458650263,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7311.381714957783,\\\"ask\\\":7384.8629382236895,\\\"price\\\":7348.1223265907365,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4443453139986471,\\\"bias\\\":0.05565468600135293,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7337.527917099447,\\\"ask\\\":7411.271916266275,\\\"price\\\":7374.399916682862,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4441462875044695,\\\"bias\\\":0.055853712495530505,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7344.816881171545,\\\"ask\\\":7418.634136258695,\\\"price\\\":7381.725508715121,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4440908034629404,\\\"bias\\\":0.05590919653705961,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7355.655687205158,\\\"ask\\\":7429.581875016263,\\\"price\\\":7392.618781110711,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44400829780669815,\\\"bias\\\":0.05599170219330185,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7331.228805634185,\\\"ask\\\":7404.909497148095,\\\"price\\\":7368.069151391141,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44382173935726305,\\\"bias\\\":0.056178260642736955,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7315.718635103174,\\\"ask\\\":7389.24344550622,\\\"price\\\":7352.481040304698,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44370263494029943,\\\"bias\\\":0.056297365059700566,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7285.319553195423,\\\"ask\\\":7358.538845187337,\\\"price\\\":7321.929199191381,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44346772579195737,\\\"bias\\\":0.05653227420804263,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7313.335881870094,\\\"ask\\\":7386.836745004467,\\\"price\\\":7350.086313437281,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4436851255591707,\\\"bias\\\":0.05631487444082928,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7330.453616058155,\\\"ask\\\":7404.126516722055,\\\"price\\\":7367.2900663901055,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44355331388429575,\\\"bias\\\":0.05644668611570425,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7310.813296941249,\\\"ask\\\":7384.288807463271,\\\"price\\\":7347.5510522022605,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44370495651055025,\\\"bias\\\":0.05629504348944975,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7325.6108733781075,\\\"ask\\\":7399.235103261303,\\\"price\\\":7362.422988319706,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44381890145418595,\\\"bias\\\":0.056181098545814045,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7299.838420536255,\\\"ask\\\":7373.203630792901,\\\"price\\\":7336.521025664579,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4440172516955833,\\\"bias\\\":0.055982748304416685,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7297.542927301216,\\\"ask\\\":7370.885067274092,\\\"price\\\":7334.213997287654,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4439996419300373,\\\"bias\\\":0.056000358069962675,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7309.434511276567,\\\"ask\\\":7382.896164656229,\\\"price\\\":7346.1653379663985,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44390838752190676,\\\"bias\\\":0.056091612478093245,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7314.8953351242235,\\\"ask\\\":7388.411871155621,\\\"price\\\":7351.653603139923,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44395029314601503,\\\"bias\\\":0.05604970685398497,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7285.146615525678,\\\"ask\\\":7358.364169450559,\\\"price\\\":7321.755392488119,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4441791707652007,\\\"bias\\\":0.05582082923479931,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7303.920922672015,\\\"ask\\\":7377.327163100879,\\\"price\\\":7340.624042886448,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4440353167772818,\\\"bias\\\":0.05596468322271819,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7330.770969807128,\\\"ask\\\":7404.447059955943,\\\"price\\\":7367.609014881536,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44424104934179615,\\\"bias\\\":0.055758950658203854,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7359.1632350539185,\\\"ask\\\":7433.124674602198,\\\"price\\\":7396.143954828059,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4440250934861992,\\\"bias\\\":0.055974906513800826,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7338.822655685703,\\\"ask\\\":7412.579667300633,\\\"price\\\":7375.701161493168,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4438699511586093,\\\"bias\\\":0.05613004884139072,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7312.140155601318,\\\"ask\\\":7385.6290013862545,\\\"price\\\":7348.884578493787,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44366512876720593,\\\"bias\\\":0.05633487123279407,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7283.809649219907,\\\"ask\\\":7357.013766297493,\\\"price\\\":7320.411707758701,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44344601328975414,\\\"bias\\\":0.05655398671024586,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7280.116418499554,\\\"ask\\\":7353.283417680453,\\\"price\\\":7316.699918090004,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44347470334209255,\\\"bias\\\":0.05652529665790745,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7258.486141485619,\\\"ask\\\":7331.435750947785,\\\"price\\\":7294.960946216702,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44330625804906965,\\\"bias\\\":0.056693741950930354,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7290.293337867805,\\\"ask\\\":7363.56261764537,\\\"price\\\":7326.927977756588,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44355469401060815,\\\"bias\\\":0.05644530598939185,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7271.973438633945,\\\"ask\\\":7345.058598821221,\\\"price\\\":7308.516018727583,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44341249432758184,\\\"bias\\\":0.05658750567241816,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7274.9678345711545,\\\"ask\\\":7348.0830891899595,\\\"price\\\":7311.5254618805575,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4433891931702671,\\\"bias\\\":0.05661080682973291,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7280.617450281731,\\\"ask\\\":7353.789484957928,\\\"price\\\":7317.20346761983,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44334523018501043,\\\"bias\\\":0.05665476981498957,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7255.8677080981515,\\\"ask\\\":7328.791001646876,\\\"price\\\":7292.329354872514,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4431519809413912,\\\"bias\\\":0.05684801905860881,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7283.649967279907,\\\"ask\\\":7356.852479513876,\\\"price\\\":7320.251223396892,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44293431346687356,\\\"bias\\\":0.057065686533126436,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7273.794328208973,\\\"ask\\\":7346.897788793986,\\\"price\\\":7310.34605850148,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44301163470863936,\\\"bias\\\":0.05698836529136064,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7292.966044066724,\\\"ask\\\":7366.262185213122,\\\"price\\\":7329.614114639923,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44316184032310474,\\\"bias\\\":0.05683815967689526,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7268.945097782614,\\\"ask\\\":7341.999822383443,\\\"price\\\":7305.472460083029,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44334966762983496,\\\"bias\\\":0.056650332370165035,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7272.0016622810235,\\\"ask\\\":7345.087106123044,\\\"price\\\":7308.544384202034,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44337348888483363,\\\"bias\\\":0.05662651111516637,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7252.21683967598,\\\"ask\\\":7325.103441079758,\\\"price\\\":7288.6601403778695,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4435279720590028,\\\"bias\\\":0.056472027940997205,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7239.453753252508,\\\"ask\\\":7312.212082430925,\\\"price\\\":7275.832917841717,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4436275316939816,\\\"bias\\\":0.056372468306018386,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7220.765099813986,\\\"ask\\\":7293.335603329704,\\\"price\\\":7257.050351571846,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4437734338953525,\\\"bias\\\":0.05622656610464749,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7207.959826660769,\\\"ask\\\":7280.401633963891,\\\"price\\\":7244.1807303123305,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44367354480679594,\\\"bias\\\":0.05632645519320406,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7237.143911911089,\\\"ask\\\":7309.879026603662,\\\"price\\\":7273.511469257376,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44390160324631817,\\\"bias\\\":0.056098396753681834,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7219.523901890253,\\\"ask\\\":7292.081931054978,\\\"price\\\":7255.802916472616,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4437646891884958,\\\"bias\\\":0.05623531081150418,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7234.2964543988755,\\\"ask\\\":7307.002951428009,\\\"price\\\":7270.6497029134425,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4436496207860512,\\\"bias\\\":0.05635037921394881,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7240.952375519946,\\\"ask\\\":7313.725766228689,\\\"price\\\":7277.339070874318,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44370146600438787,\\\"bias\\\":0.05629853399561213,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7207.502253343145,\\\"ask\\\":7279.939461919457,\\\"price\\\":7243.720857631301,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4434401836940487,\\\"bias\\\":0.056559816305951305,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7211.450159820484,\\\"ask\\\":7283.927045848831,\\\"price\\\":7247.688602834658,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44347116431081474,\\\"bias\\\":0.056528835689185264,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7200.792982520218,\\\"ask\\\":7273.162761239013,\\\"price\\\":7236.977871879616,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.44338750160505724,\\\"bias\\\":0.056612498394942756,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5820941399410179,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":20978.160453617584,\\\"ask\\\":21188.99623707103,\\\"price\\\":21083.578345344307,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.18251020498691717},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.598485929750264,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":22849.154846892776,\\\"ask\\\":23078.794594097722,\\\"price\\\":22963.97472049525,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.17757543868319592},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3315240447706975,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":21855.870375685412,\\\"ask\\\":22075.52736438576,\\\"price\\\":21965.6988700356,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.17120562185512223},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3356946766852378,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":20804.225094751662,\\\"ask\\\":21013.312784146146,\\\"price\\\":20908.768939448906,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.16683090509016607},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4005570903768983,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":19862.90622495491,\\\"ask\\\":20062.533423195655,\\\"price\\\":19962.719824075266,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.16201804021484406},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5239429187748451,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":20866.55472856395,\\\"ask\\\":21076.26884643895,\\\"price\\\":20971.411787501453,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.16478356647770087},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3450766048142135,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":19852.622534351874,\\\"ask\\\":20052.146378918216,\\\"price\\\":19952.38445663505,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.15919655511285968},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.627671356433303,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":19715.915934817654,\\\"ask\\\":19914.0658437103,\\\"price\\\":19814.990889263983,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.1577622479561357},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5315789258513544,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":21319.578675830784,\\\"ask\\\":21533.845798200942,\\\"price\\\":21426.71223701586,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.16104743673020971},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3370925586766456,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":20421.984986734922,\\\"ask\\\":20627.231067003613,\\\"price\\\":20524.608026869264,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.16529239411752494},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.37766698694111417,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":18707.377119188997,\\\"ask\\\":18895.39095958285,\\\"price\\\":18801.38403938592,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.16716850939777106},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5412943477522204,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":18557.686107303183,\\\"ask\\\":18744.195515416784,\\\"price\\\":18650.940811359982,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.17113400023612807},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5362384971282027,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":18213.73019035968,\\\"ask\\\":18396.78275508691,\\\"price\\\":18305.256472723293,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.1713785234975576},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.38294164523161406,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":18380.562030763605,\\\"ask\\\":18565.291297404445,\\\"price\\\":18472.926664084032,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.1702218471845765},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3262611012357259,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":16859.90210759842,\\\"ask\\\":17029.348359936095,\\\"price\\\":16944.625233767252,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.17721560454110202},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.32518004029534325,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":15278.072395881756,\\\"ask\\\":15431.620862172022,\\\"price\\\":15354.846629026886,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.1771695404085743},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.33142434894575934,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":13889.594044444391,\\\"ask\\\":14029.187954438808,\\\"price\\\":13959.390999441595,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.1739062222565408},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.32651720543202795,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":12462.019523413102,\\\"ask\\\":12587.265950784085,\\\"price\\\":12524.642737098593,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.1780808523465734},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5185945108839813,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":11628.872425919883,\\\"ask\\\":11745.74551562762,\\\"price\\\":11687.308970773756,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.17801284819827745},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3983178860107174,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":11642.449668516794,\\\"ask\\\":11759.459212923994,\\\"price\\\":11700.954440720398,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.17726096630569332},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3243336665867587,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10692.208371582152,\\\"ask\\\":10799.667752201065,\\\"price\\\":10745.938061891608,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.17823814806153043},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5061167352476343,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10235.634802978617,\\\"ask\\\":10338.505504516093,\\\"price\\\":10287.070153747354,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.17316119198125518},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6707194710046563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10985.4701311249,\\\"ask\\\":11095.876866111073,\\\"price\\\":11040.673498617987,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.1736906408070732},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5861216860549726,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":11438.096654921912,\\\"ask\\\":11553.052400197508,\\\"price\\\":11495.574527559716,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.1786959006661999},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.32509601547169564,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10654.046129728778,\\\"ask\\\":10761.121970228562,\\\"price\\\":10707.58404997867,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.177452832571863},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3248908789082616,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":9770.96269139285,\\\"ask\\\":9869.163321457094,\\\"price\\\":9820.063006424973,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.1777678775394389},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6607217182182253,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":9667.275053433936,\\\"ask\\\":9764.433596684536,\\\"price\\\":9715.85432505924,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.17611402605376442},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6665986624885657,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10641.967062355696,\\\"ask\\\":10748.921505193444,\\\"price\\\":10695.444283774574,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.1705634490136846},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4360199994760768,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":11049.231231624968,\\\"ask\\\":11160.278781691542,\\\"price\\\":11104.755006658253,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.1664125765146296},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3359127480697745,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10268.726848280969,\\\"ask\\\":10371.930133188318,\\\"price\\\":10320.328490734644,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.16758797390208868},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.33450636835012654,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":9305.902410737266,\\\"ask\\\":9399.429068131612,\\\"price\\\":9352.665739434437,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.16808226729780867},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5592934487468648,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8758.137136318714,\\\"ask\\\":8846.158615075687,\\\"price\\\":8802.1478756972,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.17149243369872436},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6689263788723049,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":9337.006481829065,\\\"ask\\\":9430.845742952979,\\\"price\\\":9383.92611239102,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.17306881287762332},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6668661015718773,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10172.47020966101,\\\"ask\\\":10274.706091165146,\\\"price\\\":10223.588150413085,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.1701636563678517},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.45235038616111384,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10950.377898861228,\\\"ask\\\":11060.431948096011,\\\"price\\\":11005.404923478623,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.17087019964680095},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3747292679762794,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10514.101548700848,\\\"ask\\\":10619.770910999348,\\\"price\\\":10566.936229850093,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.17137543231441144},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6709392910181745,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10695.395834369137,\\\"ask\\\":10802.887249789934,\\\"price\\\":10749.141542079535,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.1737026179234441},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.46336266585950503,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":11239.481260295082,\\\"ask\\\":11352.440870951305,\\\"price\\\":11295.961065623196,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.17245674023741908},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.33139606216552797,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10502.004834844398,\\\"ask\\\":10607.55262212926,\\\"price\\\":10554.77872848683,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.17205107757411986},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3333210990382586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":9714.829318236652,\\\"ask\\\":9812.465793796819,\\\"price\\\":9763.647556016735,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.16995973635402395},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.33054941562212775,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8785.646780957832,\\\"ask\\\":8873.944738555403,\\\"price\\\":8829.795759756615,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.1732145914855049},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5892324416098347,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8833.344129789428,\\\"ask\\\":8922.121457727008,\\\"price\\\":8877.732793758218,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.18119828999429277},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.43363069853790576,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8741.504008179927,\\\"ask\\\":8829.358319819923,\\\"price\\\":8785.431163999929,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.18075629111766744},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4822885465775595,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8766.657093352364,\\\"ask\\\":8854.764199818217,\\\"price\\\":8810.710646585292,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.1811434023824774},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.32012437267693633,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7907.505354605345,\\\"ask\\\":7986.977770229521,\\\"price\\\":7947.241562417433,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.18264883436127827},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.41982800745499815,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7556.345928054857,\\\"ask\\\":7632.289103211189,\\\"price\\\":7594.31751563302,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.1877431923826427},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6832169002586161,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8023.726424897152,\\\"ask\\\":8104.366891479032,\\\"price\\\":8064.046658188094,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.18615456882664871},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6780776602720399,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8578.749619965738,\\\"ask\\\":8664.968209111126,\\\"price\\\":8621.858914538434,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.18425431244831048},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6749330143744785,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":9497.155361328576,\\\"ask\\\":9592.604158929864,\\\"price\\\":9544.879760129226,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.17788399623774953},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6750676567719611,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10513.368802421395,\\\"ask\\\":10619.030800435681,\\\"price\\\":10566.199801428544,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.1799240531634979},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.6860351632029003,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":11486.32442803104,\\\"ask\\\":11601.764874543918,\\\"price\\\":11544.044651287477,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.19292565149710617},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3182324852084158,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":11402.430492035495,\\\"ask\\\":11517.027783412736,\\\"price\\\":11459.729137724116,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.19622566239696082},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.30879903231501316,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":10305.798675959633,\\\"ask\\\":10409.374542049678,\\\"price\\\":10357.586609004657,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.1930020664771533},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.30883233188784315,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":9383.03787092266,\\\"ask\\\":9477.339759072633,\\\"price\\\":9430.188814997646,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.1933436151142373},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5947202103421965,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":9497.498610721996,\\\"ask\\\":9592.950858065935,\\\"price\\\":9545.224734393965,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.19102144482294692},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.3185401847427492,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":9183.489435734005,\\\"ask\\\":9275.785811972533,\\\"price\\\":9229.637623853272,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.18955823125301036},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5612694695265776,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8714.099997679417,\\\"ask\\\":8801.678892128453,\\\"price\\\":8757.889444903938,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.1818816597495032},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.35249336588981406,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8762.524124188783,\\\"ask\\\":8850.589693276112,\\\"price\\\":8806.55690873245,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.18787302929805294},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4543286572084783,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8292.446614026845,\\\"ask\\\":8375.78778602712,\\\"price\\\":8334.117200026985,\\\"maxShares\\\":27600000,\\\"investedShares\\\":6479328.29,\\\"averagePrice\\\":2600.704631308291,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.18997665929310037},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4931293215240968,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8621.121432140239,\\\"ask\\\":8707.765868644157,\\\"price\\\":8664.443650392197,\\\"maxShares\\\":27600000,\\\"investedShares\\\":7733391.83,\\\"averagePrice\\\":3104.066818013122,\\\"sharesShort\\\":16836000,\\\"averageShortPrice\\\":5353.059688457067,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.1652245284097873},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5455351385212421,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8399.24571353109,\\\"ask\\\":8483.660243315317,\\\"price\\\":8441.452978423204,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":3588000,\\\"averageShortPrice\\\":1140.8159991793739,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.10143522290056323},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.516933353749845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8547.391856667191,\\\"ask\\\":8633.29529241259,\\\"price\\\":8590.343574539895,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.07380720063848645},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.42523362572936596,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":8070.652306457905,\\\"ask\\\":8151.764389939896,\\\"price\\\":8111.2083481988975,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.07597017313482918},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5539420375968489,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7765.672474221646,\\\"ask\\\":7843.719433761562,\\\"price\\\":7804.695953991604,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.07809956017916098},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5809528658658275,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7799.8321906126885,\\\"ask\\\":7878.222463885178,\\\"price\\\":7839.027327248932,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.08311392112097105},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.48514043314779814,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7737.022430903043,\\\"ask\\\":7814.7814503091,\\\"price\\\":7775.901940606069,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.0895720161525117},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.41993475778667394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7369.6559101491985,\\\"ask\\\":7443.722803718536,\\\"price\\\":7406.689356933867,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09813248003286362},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5765870491395121,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7547.035159076494,\\\"ask\\\":7622.884758665196,\\\"price\\\":7584.959958870849,\\\"maxShares\\\":27600000,\\\"investedShares\\\":17940000,\\\"averagePrice\\\":4952.3343489396675,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.10002532561334132},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5007111284389848,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7772.9414171782255,\\\"ask\\\":7851.061431421222,\\\"price\\\":7812.001424299727,\\\"maxShares\\\":27600000,\\\"investedShares\\\":12696000,\\\"averagePrice\\\":3504.728923864995,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.06620932968983195},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.5272295590247714,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7447.55576770176,\\\"ask\\\":7522.405574412333,\\\"price\\\":7484.980671057044,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.05517562029589784},{\\\"volatility\\\":0.004699999999999999,\\\"forecast\\\":0.4462175521417769,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ECP\\\",\\\"bid\\\":7392.553853899427,\\\"ask\\\":7466.850877556712,\\\"price\\\":7429.702365728065,\\\"maxShares\\\":27600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.055866850448261285}],\\\"recentTicksOfPrices\\\":[7308.516018727583,7311.5254618805575,7317.20346761983,7292.329354872514,7320.251223396892,7310.34605850148,7329.614114639923,7305.472460083029,7308.544384202034,7288.6601403778695,7275.832917841717,7257.050351571846,7244.1807303123305,7273.511469257376,7255.802916472616,7270.6497029134425,7277.339070874318,7243.720857631301,7247.688602834658,7236.977871879616]}],[\\\"MGCP\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19940.391856194638,\\\"ask\\\":19980.31256061144,\\\"price\\\":19960.35220840304,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4056938074226641,\\\"bias\\\":0.09430619257733591,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19943.125335504647,\\\"ask\\\":19983.0515123525,\\\"price\\\":19963.088423928573,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4056808796914503,\\\"bias\\\":0.09431912030854972,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19975.840809922975,\\\"ask\\\":20015.832483216112,\\\"price\\\":19995.836646569544,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4055261549572021,\\\"bias\\\":0.09447384504279788,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19918.061865607193,\\\"ask\\\":19957.937865338135,\\\"price\\\":19937.999865472666,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4058002076772336,\\\"bias\\\":0.09419979232276637,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19941.080491955003,\\\"ask\\\":19981.00257502198,\\\"price\\\":19961.041533488493,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40569134418257485,\\\"bias\\\":0.09430865581742515,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19945.07603598424,\\\"ask\\\":19985.00611813836,\\\"price\\\":19965.0410770613,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4056724477949489,\\\"bias\\\":0.09432755220505112,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":20016.286277513165,\\\"ask\\\":20056.35892271339,\\\"price\\\":20036.32260011328,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4053356685436071,\\\"bias\\\":0.09466433145639291,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":20050.12054222101,\\\"ask\\\":20090.260923686918,\\\"price\\\":20070.190732953964,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4054956831439421,\\\"bias\\\":0.09450431685605792,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19980.332447575613,\\\"ask\\\":20020.333113136323,\\\"price\\\":20000.33278035597,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4051655947319272,\\\"bias\\\":0.0948344052680728,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19896.967873019195,\\\"ask\\\":19936.80164253475,\\\"price\\\":19916.884757776974,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4047682563083574,\\\"bias\\\":0.09523174369164261,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19948.652590351827,\\\"ask\\\":19988.589832774953,\\\"price\\\":19968.62121156339,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4045208806385967,\\\"bias\\\":0.0954791193614033,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19879.07565165226,\\\"ask\\\":19918.873600904815,\\\"price\\\":19898.974626278537,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4041867028855005,\\\"bias\\\":0.09581329711449948,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19898.402996835473,\\\"ask\\\":19938.23963947178,\\\"price\\\":19918.321318153627,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40427985694854274,\\\"bias\\\":0.09572014305145726,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19869.704981422212,\\\"ask\\\":19909.484170574207,\\\"price\\\":19889.59457599821,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4041416073800051,\\\"bias\\\":0.0958583926199949,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19934.500153197343,\\\"ask\\\":19974.409062412953,\\\"price\\\":19954.45460780515,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4038290128537297,\\\"bias\\\":0.09617098714627031,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19893.221580457466,\\\"ask\\\":19933.04784988781,\\\"price\\\":19913.13471517264,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40362945738845085,\\\"bias\\\":0.09637054261154915,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19974.46289753096,\\\"ask\\\":20014.451812240728,\\\"price\\\":19994.457354885846,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40323589268716886,\\\"bias\\\":0.09676410731283114,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19899.565593119936,\\\"ask\\\":19939.40456327633,\\\"price\\\":19919.485078198133,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40360009012492476,\\\"bias\\\":0.09639990987507524,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19945.151891408903,\\\"ask\\\":19985.082125425735,\\\"price\\\":19965.11700841732,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4033792554023761,\\\"bias\\\":0.09662074459762388,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19892.847305316933,\\\"ask\\\":19932.672825447695,\\\"price\\\":19912.760065382314,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40363330189338426,\\\"bias\\\":0.09636669810661574,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19853.51745128067,\\\"ask\\\":19893.264232964913,\\\"price\\\":19873.390842122793,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40382420449690487,\\\"bias\\\":0.09617579550309513,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19785.15118639638,\\\"ask\\\":19824.761098681454,\\\"price\\\":19804.95614253892,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40415653351723313,\\\"bias\\\":0.09584346648276687,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19791.24232813958,\\\"ask\\\":19830.864434902618,\\\"price\\\":19811.0533815211,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40412702673540435,\\\"bias\\\":0.09587297326459565,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19759.72829473619,\\\"ask\\\":19799.287310341264,\\\"price\\\":19779.507802538727,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40397412260449345,\\\"bias\\\":0.09602587739550655,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19745.290598783213,\\\"ask\\\":19784.820710092084,\\\"price\\\":19765.05565443765,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4040443364316599,\\\"bias\\\":0.09595566356834012,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19824.204494800906,\\\"ask\\\":19863.892591887594,\\\"price\\\":19844.04854334425,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4044278321933079,\\\"bias\\\":0.09557216780669209,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19774.328984627016,\\\"ask\\\":19813.917230842482,\\\"price\\\":19794.12310773475,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4046688876865936,\\\"bias\\\":0.09533111231340641,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19703.43800539788,\\\"ask\\\":19742.884327731004,\\\"price\\\":19723.16116656444,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40432589597615964,\\\"bias\\\":0.09567410402384036,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19778.12627157575,\\\"ask\\\":19817.722119967293,\\\"price\\\":19797.924195771524,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4046885602454971,\\\"bias\\\":0.0953114397545029,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19724.619894906893,\\\"ask\\\":19764.10862342522,\\\"price\\\":19744.364259166057,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40443001180078547,\\\"bias\\\":0.09556998819921453,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19795.064968783427,\\\"ask\\\":19834.69472848069,\\\"price\\\":19814.87984863206,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4040886904006802,\\\"bias\\\":0.09591130959931982,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19870.420069519103,\\\"ask\\\":19910.2006902789,\\\"price\\\":19890.310379899,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4044538019276161,\\\"bias\\\":0.0955461980723839,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19880.285933808613,\\\"ask\\\":19920.086306048466,\\\"price\\\":19900.18611992854,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4044063622750943,\\\"bias\\\":0.0955936377249057,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19822.471828065063,\\\"ask\\\":19862.156456349476,\\\"price\\\":19842.31414220727,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40412755442873816,\\\"bias\\\":0.09587244557126184,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19737.819581752137,\\\"ask\\\":19777.334736069955,\\\"price\\\":19757.577158911048,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4037163733535689,\\\"bias\\\":0.09628362664643109,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19689.272799824514,\\\"ask\\\":19728.690763387724,\\\"price\\\":19708.98178160612,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40347897198920535,\\\"bias\\\":0.09652102801079465,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19697.20779360985,\\\"ask\\\":19736.641643046503,\\\"price\\\":19716.924718328177,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4035178710265241,\\\"bias\\\":0.09648212897347591,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19682.248106633677,\\\"ask\\\":19721.652006747056,\\\"price\\\":19701.950056690366,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40359120322111985,\\\"bias\\\":0.09640879677888015,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19616.75907699561,\\\"ask\\\":19656.031867940546,\\\"price\\\":19636.39547246808,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4039130565162968,\\\"bias\\\":0.09608694348370322,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19543.52031895531,\\\"ask\\\":19582.646485760022,\\\"price\\\":19563.083402357668,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.404273139463984,\\\"bias\\\":0.09572686053601598,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19569.43742716891,\\\"ask\\\":19608.61548007615,\\\"price\\\":19589.02645362253,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40440008503791186,\\\"bias\\\":0.09559991496208814,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19519.085117271134,\\\"ask\\\":19558.162364753156,\\\"price\\\":19538.623741012147,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40464669887844024,\\\"bias\\\":0.09535330112155976,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19582.21546115988,\\\"ask\\\":19621.419095716756,\\\"price\\\":19601.81727843832,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4043382988353765,\\\"bias\\\":0.09566170116462352,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19590.27451346371,\\\"ask\\\":19629.49428225943,\\\"price\\\":19609.884397861573,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4043776683671176,\\\"bias\\\":0.09562233163288242,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19538.106556697014,\\\"ask\\\":19577.221885138846,\\\"price\\\":19557.66422091793,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40412235080867964,\\\"bias\\\":0.09587764919132036,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19504.45201824743,\\\"ask\\\":19543.49997023591,\\\"price\\\":19523.97599424167,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40395691585935906,\\\"bias\\\":0.09604308414064094,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19553.859022361714,\\\"ask\\\":19593.005887271345,\\\"price\\\":19573.43245481653,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40371362776037295,\\\"bias\\\":0.09628637223962705,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19519.91881664059,\\\"ask\\\":19558.99773319042,\\\"price\\\":19539.458274915505,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40354621009267405,\\\"bias\\\":0.09645378990732595,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19442.87210266011,\\\"ask\\\":19481.7967715343,\\\"price\\\":19462.334437097204,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5968360095466922,\\\"bias\\\":0.09683600954669225,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19396.540018873584,\\\"ask\\\":19435.37193082328,\\\"price\\\":19415.95597484843,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5970673195691759,\\\"bias\\\":0.09706731956917591,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19357.773004934745,\\\"ask\\\":19396.527305244923,\\\"price\\\":19377.150155089836,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5972617122883065,\\\"bias\\\":0.09726171228830649,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19375.20420274803,\\\"ask\\\":19413.99340035113,\\\"price\\\":19394.598801549582,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5973492940646877,\\\"bias\\\":0.09734929406468773,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19463.21160129824,\\\"ask\\\":19502.176989889427,\\\"price\\\":19482.694295593836,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5977914807911697,\\\"bias\\\":0.09779148079116973,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19452.78305469315,\\\"ask\\\":19491.727565313155,\\\"price\\\":19472.255310003155,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5978439063496178,\\\"bias\\\":0.09784390634961782,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19424.64623823984,\\\"ask\\\":19463.534418896972,\\\"price\\\":19444.090328568407,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5979856343378792,\\\"bias\\\":0.09798563433787921,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6872199515403407,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":39773.775000800415,\\\"ask\\\":39853.402177979195,\\\"price\\\":39813.588589389816,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.19037262424552726},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6016968952715356,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":42426.0409312953,\\\"ask\\\":42510.97795017676,\\\"price\\\":42468.509440736045,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.186844485918927},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.3195882140678035,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":39241.84388021955,\\\"ask\\\":39320.40613023001,\\\"price\\\":39281.12500522476,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.1852900889077283},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5743929243792943,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":36932.81452567632,\\\"ask\\\":37006.75409429629,\\\"price\\\":36969.7843099863,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.18845111329699682},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4077464620537433,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":37147.92290058945,\\\"ask\\\":37222.29311660665,\\\"price\\\":37185.10800859805,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.18810218083988844},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5262135526864928,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":37443.894546873846,\\\"ask\\\":37518.85729871944,\\\"price\\\":37481.37592279664,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.18904968326488758},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5620558984377215,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":36890.85852612171,\\\"ask\\\":36964.71409874658,\\\"price\\\":36927.78631243413,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.1882479332673208},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6264319344153327,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":39329.47346746467,\\\"ask\\\":39408.21115208419,\\\"price\\\":39368.84230977444,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.1876858371977922},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.46645953901874543,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":39532.59501819167,\\\"ask\\\":39611.73935256242,\\\"price\\\":39572.167185377046,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.1903486540834396},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6868855882776743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":42755.668914786285,\\\"ask\\\":42841.26584955058,\\\"price\\\":42798.46738216846,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.18988337754956153},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.41018677175138757,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":42519.877617210914,\\\"ask\\\":42605.002497325426,\\\"price\\\":42562.44005726816,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.18694755844931843},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6824394119359745,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":44239.83301653693,\\\"ask\\\":44328.40125080427,\\\"price\\\":44284.11713367061,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.18678155476600855},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.46158288833165984,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":47868.16672062592,\\\"ask\\\":47963.99888623279,\\\"price\\\":47916.08280342933,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.18165408162657148},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.35854430668488946,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":44789.411704119186,\\\"ask\\\":44879.08019601932,\\\"price\\\":44834.24595006922,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.17943582168301075},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5558793318318489,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":44873.241149648966,\\\"ask\\\":44963.07746826688,\\\"price\\\":44918.159308957926,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.181756526781774},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.31365064066023707,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":41777.50581731591,\\\"ask\\\":41861.144467600825,\\\"price\\\":41819.325142458365,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.19060846260915637},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.3350847682346614,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":38383.439426728546,\\\"ask\\\":38460.283149304574,\\\"price\\\":38421.86128801657,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.1951504092907697},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5726604538609223,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":38182.777991796065,\\\"ask\\\":38259.21998977763,\\\"price\\\":38220.99899078685,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.19063709921373406},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.31482342087841436,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":35631.69560010054,\\\"ask\\\":35703.0303260267,\\\"price\\\":35667.362963063635,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.18938199884777207},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.31140378392492485,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":32837.51356462059,\\\"ask\\\":32903.25433251771,\\\"price\\\":32870.38394856916,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.19261571504317498},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4180508586005513,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":30431.813326661028,\\\"ask\\\":30492.73787786556,\\\"price\\\":30462.275602263297,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.18859758753337236},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4939327816637498,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":31272.024469684446,\\\"ask\\\":31334.631125279408,\\\"price\\\":31303.32779748193,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.18568504062402058},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5882772826677255,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":30589.99050180948,\\\"ask\\\":30651.2317240353,\\\"price\\\":30620.611112922397,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.1833374588030799},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5844656962250148,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":32519.496971844008,\\\"ask\\\":32584.60106988575,\\\"price\\\":32552.049020864895,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.17177465237941947},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.32959206573313965,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":32191.796351137535,\\\"ask\\\":32256.244391880562,\\\"price\\\":32224.020371509036,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.17227139863257945},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5826775457739448,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":31787.200031618515,\\\"ask\\\":31850.838069719848,\\\"price\\\":31819.019050669172,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.17879693305976763},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6771026173446857,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":35517.53467303149,\\\"ask\\\":35588.640848553085,\\\"price\\\":35553.08776079229,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.18146694579497846},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5144622276368164,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":37081.28966530317,\\\"ask\\\":37155.526481449924,\\\"price\\\":37118.408073376566,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.184824281630514},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5735266201136578,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":36119.14415790484,\\\"ask\\\":36191.45475681956,\\\"price\\\":36155.299457362205,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.18724972554538144},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6158685835532625,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":39118.92837080261,\\\"ask\\\":39197.24454371712,\\\"price\\\":39158.08645725987,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.19029342167681873},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.30483631318766025,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":37774.81942803305,\\\"ask\\\":37850.44469215323,\\\"price\\\":37812.63206009315,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.19916452205911084},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.565129947102833,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":35214.962607378366,\\\"ask\\\":35285.46303301876,\\\"price\\\":35250.21282019856,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.19743240763173214},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.40465775688036304,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":35698.90113946164,\\\"ask\\\":35770.37041101212,\\\"price\\\":35734.63577523687,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.19394304332334655},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6898739909047878,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":36233.88346256466,\\\"ask\\\":36306.42376979703,\\\"price\\\":36270.15361618086,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.1919711980932094},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.690419338521875,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":39622.75436282375,\\\"ask\\\":39702.07919638295,\\\"price\\\":39662.416779603365,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.19670217420558023},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6467387426225549,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":43343.8050205498,\\\"ask\\\":43430.579404975324,\\\"price\\\":43387.19221276258,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.20234940952015779},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4492653966360225,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":43330.72100748707,\\\"ask\\\":43417.46919769222,\\\"price\\\":43374.095102589636,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.19488092897073},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4552070161299677,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":43991.61109577454,\\\"ask\\\":44079.68238925958,\\\"price\\\":44035.64674251707,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.19656302236258322},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.3433290649049986,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":41784.322129269,\\\"ask\\\":41867.97442582407,\\\"price\\\":41826.148277546556,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.19762264646579752},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5609802610368421,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":41678.06525487104,\\\"ask\\\":41761.50482495086,\\\"price\\\":41719.78503991094,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.19966536694900444},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.2993813970405472,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":40040.164100937574,\\\"ask\\\":40120.324589628115,\\\"price\\\":40080.244345282845,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.20316949861401312},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.2950347524914507,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":36369.27331826096,\\\"ask\\\":36442.08467625548,\\\"price\\\":36405.67899725821,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.20813599849667969},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.42243900830160924,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":32044.30648862122,\\\"ask\\\":32108.459254364207,\\\"price\\\":32076.382871492697,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.20799044755516094},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4807137289541845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":31609.02921539409,\\\"ask\\\":31672.310555164655,\\\"price\\\":31640.66988527939,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.2023770423726805},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.3047094297561902,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":29276.598038779808,\\\"ask\\\":29335.209846665268,\\\"price\\\":29305.903942722525,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.1979876922360143},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.2976579355061315,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26630.997764766733,\\\"ask\\\":26684.313075607115,\\\"price\\\":26657.65542018693,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.20761550302522158},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.2930246609654553,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24206.089679773184,\\\"ask\\\":24254.550319772727,\\\"price\\\":24230.319999772953,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.20975669648738116},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6050872523679718,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":23442.93009487403,\\\"ask\\\":23489.86288785675,\\\"price\\\":23466.39649136539,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.20914217733447543},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.6019537533585732,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":26625.172682427405,\\\"ask\\\":26678.47633144126,\\\"price\\\":26651.824506934336,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.21212919560174032},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.28718203094736305,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25649.53524515701,\\\"ask\\\":25700.885666068225,\\\"price\\\":25675.21045561263,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.21489310751446605},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.284687071798759,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":22815.364707684963,\\\"ask\\\":22861.041113506155,\\\"price\\\":22838.20291059556,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.22385357279041318},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.2818934494239825,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19620.117038298933,\\\"ask\\\":19659.39655188913,\\\"price\\\":19639.756795094032,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.22288997558342233},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.2841797691495537,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":18214.53872482365,\\\"ask\\\":18251.004267816286,\\\"price\\\":18232.771496319965,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.22065635798839828},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5830262465351528,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":17914.75842502935,\\\"ask\\\":17950.623807261636,\\\"price\\\":17932.69111614549,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.21553709736665316},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.7026115198112806,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":19687.31283305197,\\\"ask\\\":19726.726872757772,\\\"price\\\":19707.01985290488,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.20540877702368288},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.7043897524319643,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":21632.91495863944,\\\"ask\\\":21676.22409769577,\\\"price\\\":21654.5695281676,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.20820367469985823},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.7034867377529775,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24285.26817285048,\\\"ask\\\":24333.887328351684,\\\"price\\\":24309.57775060109,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.20539370480801067},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.3998831187851616,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":24869.746534776597,\\\"ask\\\":24919.53581712852,\\\"price\\\":24894.64117595254,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.2044025152783761},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5402627908532819,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":25187.141759475962,\\\"ask\\\":25237.56646770315,\\\"price\\\":25212.354113589558,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.20206971848447464},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.3241875056033269,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":23867.026778905067,\\\"ask\\\":23914.808614298265,\\\"price\\\":23890.917696601668,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":8760000,\\\"averageShortPrice\\\":14467.914270524027,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.20059007243553856},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.554535627015333,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":23478.433726247655,\\\"ask\\\":23525.43759757148,\\\"price\\\":23501.935661909567,\\\"maxShares\\\":14600000,\\\"investedShares\\\":10804000,\\\"averagePrice\\\":16999.062770333392,\\\"sharesShort\\\":3650000,\\\"averageShortPrice\\\":6024.82633410331,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.16437479191168763},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.44123948575098687,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":23923.223726260723,\\\"ask\\\":23971.11806805503,\\\"price\\\":23947.170897157877,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":14600000,\\\"averageShortPrice\\\":24084.263129081417,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.061961793949108834},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5077312036611583,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":23462.88847961336,\\\"ask\\\":23509.861229322283,\\\"price\\\":23486.37485446784,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":5840000,\\\"averageShortPrice\\\":9633.70525163258,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.061921271961575874},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.459787553637368,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":23554.811758593474,\\\"ask\\\":23601.96853889093,\\\"price\\\":23578.39014874221,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.059191875432140995},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4817911150232932,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":22075.573779592825,\\\"ask\\\":22119.769122494912,\\\"price\\\":22097.671451043865,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.06429752536271305},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5656396443279375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":22515.79258272374,\\\"ask\\\":22560.869244551017,\\\"price\\\":22538.33091363737,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.06743337874557409},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.45486488700700833,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":22531.6711963659,\\\"ask\\\":22576.779647209485,\\\"price\\\":22554.225421787683,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.0728002754561215},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4719452381526586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":21271.737567090247,\\\"ask\\\":21314.323628285623,\\\"price\\\":21293.030597687943,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.07671068348063342},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.4909372253223537,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":21667.54155696295,\\\"ask\\\":21710.92001853845,\\\"price\\\":21689.230787750716,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.08235275122393632},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.42175700310965686,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":21353.31245637719,\\\"ask\\\":21396.061830664225,\\\"price\\\":21374.687143520703,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.08989263831790784},{\\\"volatility\\\":0.0046,\\\"forecast\\\":0.5393994887912487,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MGCP\\\",\\\"bid\\\":20329.06511589859,\\\"ask\\\":20369.76394495944,\\\"price\\\":20349.41453042901,\\\"maxShares\\\":14600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.09466378471531228}],\\\"recentTicksOfPrices\\\":[19708.98178160612,19716.924718328177,19701.950056690366,19636.39547246808,19563.083402357668,19589.02645362253,19538.623741012147,19601.81727843832,19609.884397861573,19557.66422091793,19523.97599424167,19573.43245481653,19539.458274915505,19462.334437097204,19415.95597484843,19377.150155089836,19394.598801549582,19482.694295593836,19472.255310003155,19444.090328568407]}],[\\\"BLD\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24322.096795228677,\\\"ask\\\":24615.72371830991,\\\"price\\\":24468.910256769293,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40348408550111864,\\\"bias\\\":0.09651591449888136,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24317.02417046793,\\\"ask\\\":24610.589854618447,\\\"price\\\":24463.807012543188,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40350421909206546,\\\"bias\\\":0.09649578090793454,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24256.472259771854,\\\"ask\\\":24549.306934940123,\\\"price\\\":24402.88959735599,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40326333476867704,\\\"bias\\\":0.09673666523132296,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24149.867282399766,\\\"ask\\\":24441.414975949865,\\\"price\\\":24295.641129174815,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.403690360304157,\\\"bias\\\":0.096309639695843,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24192.337773510397,\\\"ask\\\":24484.398189287185,\\\"price\\\":24338.36798139879,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40352098804017145,\\\"bias\\\":0.09647901195982855,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24184.963608002497,\\\"ask\\\":24476.934999648405,\\\"price\\\":24330.94930382545,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4034915709108442,\\\"bias\\\":0.0965084290891558,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24054.27454795679,\\\"ask\\\":24344.66820447136,\\\"price\\\":24199.471376214075,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40401590997827297,\\\"bias\\\":0.09598409002172703,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24116.1481943323,\\\"ask\\\":24407.288816396678,\\\"price\\\":24261.71850536449,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4042628052081349,\\\"bias\\\":0.0957371947918651,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23988.64398024204,\\\"ask\\\":24278.245316019613,\\\"price\\\":24133.444648130826,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40477166664237,\\\"bias\\\":0.09522833335762998,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24141.590833714625,\\\"ask\\\":24433.03861037919,\\\"price\\\":24287.314722046907,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4053788236771939,\\\"bias\\\":0.09462117632280609,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24046.53735776408,\\\"ask\\\":24336.837607556,\\\"price\\\":24191.68748266004,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40500479595028255,\\\"bias\\\":0.09499520404971745,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23919.141611171395,\\\"ask\\\":24207.90388414328,\\\"price\\\":24063.52274765734,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40551074993221753,\\\"bias\\\":0.09448925006778247,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23954.530083491245,\\\"ask\\\":24243.71958148108,\\\"price\\\":24099.124832486163,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40537095268259604,\\\"bias\\\":0.09462904731740396,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24007.17886320906,\\\"ask\\\":24297.00396014921,\\\"price\\\":24152.091411679135,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4055789343816633,\\\"bias\\\":0.09442106561833669,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23888.633996810175,\\\"ask\\\":24177.027968602655,\\\"price\\\":24032.830982706415,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4060474891182155,\\\"bias\\\":0.09395251088178452,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23964.065207350453,\\\"ask\\\":24253.36981749955,\\\"price\\\":24108.717512425002,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40575082286136466,\\\"bias\\\":0.09424917713863534,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24112.991897125954,\\\"ask\\\":24404.094414998704,\\\"price\\\":24258.54315606233,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40516510345842227,\\\"bias\\\":0.09483489654157773,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24251.09832748232,\\\"ask\\\":24543.868126204437,\\\"price\\\":24397.48322684338,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4057082674544311,\\\"bias\\\":0.09429173254556888,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24166.85199132176,\\\"ask\\\":24458.604731659652,\\\"price\\\":24312.728361490706,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40603697112671944,\\\"bias\\\":0.09396302887328056,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24070.542540113034,\\\"ask\\\":24361.132590899106,\\\"price\\\":24215.83756550607,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4064129297379395,\\\"bias\\\":0.09358707026206048,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24143.10482677295,\\\"ask\\\":24434.570881019703,\\\"price\\\":24288.837853896326,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40613080515314054,\\\"bias\\\":0.09386919484685946,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24016.81796973539,\\\"ask\\\":24306.759434158754,\\\"price\\\":24161.788701947073,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.405637215802345,\\\"bias\\\":0.09436278419765498,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24028.06958846607,\\\"ask\\\":24318.14688732079,\\\"price\\\":24173.10823789343,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.405681423743276,\\\"bias\\\":0.09431857625672402,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23969.895528803325,\\\"ask\\\":24259.270525126907,\\\"price\\\":24114.583026965116,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40591033147780786,\\\"bias\\\":0.09408966852219214,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23996.566615517564,\\\"ask\\\":24286.263596791418,\\\"price\\\":24141.41510615449,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40580563875167336,\\\"bias\\\":0.09419436124832664,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23851.507177333333,\\\"ask\\\":24139.452938025483,\\\"price\\\":23995.480057679408,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40637850741868115,\\\"bias\\\":0.09362149258131885,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23943.05365340684,\\\"ask\\\":24232.104602944954,\\\"price\\\":24087.579128175897,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40601917089261425,\\\"bias\\\":0.09398082910738575,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23812.677727312526,\\\"ask\\\":24100.154722008454,\\\"price\\\":23956.41622466049,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40550461987192277,\\\"bias\\\":0.09449538012807723,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23950.037261306898,\\\"ask\\\":24239.17251999471,\\\"price\\\":24094.604890650804,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4049595387379297,\\\"bias\\\":0.09504046126207027,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24048.902427655747,\\\"ask\\\":24339.231229599274,\\\"price\\\":24194.06682862751,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.404567214045069,\\\"bias\\\":0.09543278595493099,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24179.602989566,\\\"ask\\\":24471.509665496375,\\\"price\\\":24325.556327531187,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.405085870511263,\\\"bias\\\":0.09491412948873701,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24040.339737550377,\\\"ask\\\":24330.565166977547,\\\"price\\\":24185.452452263962,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4056356984454409,\\\"bias\\\":0.0943643015545591,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24022.189559622362,\\\"ask\\\":24312.19587221338,\\\"price\\\":24167.19271591787,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4055644006622386,\\\"bias\\\":0.09443559933776141,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23916.04309379947,\\\"ask\\\":24204.76796012301,\\\"price\\\":24060.40552696124,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4051452675690987,\\\"bias\\\":0.09485473243090131,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24072.13085363392,\\\"ask\\\":24362.74007923111,\\\"price\\\":24217.435466432515,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4057643358086384,\\\"bias\\\":0.09423566419136159,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24162.451183331254,\\\"ask\\\":24454.15079520246,\\\"price\\\":24308.300989266856,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40611791465509633,\\\"bias\\\":0.09388208534490367,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24147.641974710783,\\\"ask\\\":24439.16280337932,\\\"price\\\":24293.40238904505,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40606033887237375,\\\"bias\\\":0.09393966112762625,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24175.571447683637,\\\"ask\\\":24467.42945308827,\\\"price\\\":24321.500450385953,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4059516870533145,\\\"bias\\\":0.09404831294668548,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24053.375294874226,\\\"ask\\\":24343.758095214762,\\\"price\\\":24198.566695044494,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4054739020489476,\\\"bias\\\":0.09452609795105238,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23916.984579196615,\\\"ask\\\":24205.72081154104,\\\"price\\\":24061.352695368827,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4049348507271949,\\\"bias\\\":0.09506514927280513,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23965.24936456614,\\\"ask\\\":24254.568270375796,\\\"price\\\":24109.90881747097,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40512669343255686,\\\"bias\\\":0.09487330656744314,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23871.540517329773,\\\"ask\\\":24159.72812920901,\\\"price\\\":24015.63432326939,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40475426383650787,\\\"bias\\\":0.09524573616349213,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23754.626358547564,\\\"ask\\\":24041.402531890188,\\\"price\\\":23898.014445218876,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40428548883019666,\\\"bias\\\":0.09571451116980334,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23739.75883412018,\\\"ask\\\":24026.35552024638,\\\"price\\\":23883.05717718328,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4042255455998203,\\\"bias\\\":0.09577445440017968,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23643.691256175745,\\\"ask\\\":23929.128172749293,\\\"price\\\":23786.40971446252,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40383640078467764,\\\"bias\\\":0.09616359921532236,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23581.77188631794,\\\"ask\\\":23866.461285347934,\\\"price\\\":23724.116585832937,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4040889004482049,\\\"bias\\\":0.09591109955179511,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23491.21936733496,\\\"ask\\\":23774.815577000976,\\\"price\\\":23633.01747216797,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40445861270226174,\\\"bias\\\":0.09554138729773826,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23553.375249122633,\\\"ask\\\":23837.721831607014,\\\"price\\\":23695.548540364824,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4047114075479379,\\\"bias\\\":0.09528859245206212,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23695.40752992777,\\\"ask\\\":23981.46878783434,\\\"price\\\":23838.438158881054,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40528601972039846,\\\"bias\\\":0.09471398027960154,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23609.58798982558,\\\"ask\\\":23894.613196946215,\\\"price\\\":23752.100593385898,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40494173966636504,\\\"bias\\\":0.09505826033363496,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23681.538781052503,\\\"ask\\\":23967.432609395186,\\\"price\\\":23824.485695223844,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40465204731567234,\\\"bias\\\":0.09534795268432766,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23649.132644028283,\\\"ask\\\":23934.635251400858,\\\"price\\\":23791.88394771457,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4045213931024216,\\\"bias\\\":0.09547860689757842,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23812.598977206697,\\\"ask\\\":24100.075021197117,\\\"price\\\":23956.336999201907,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.405181355478271,\\\"bias\\\":0.094818644521729,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23793.188558773654,\\\"ask\\\":24080.430271756835,\\\"price\\\":23936.809415265245,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40510400268627866,\\\"bias\\\":0.09489599731372134,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23740.857628963462,\\\"ask\\\":24027.467580218556,\\\"price\\\":23884.16260459101,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40531317776547354,\\\"bias\\\":0.09468682223452646,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3702650545362062,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":18734.283088596465,\\\"ask\\\":18960.451496104684,\\\"price\\\":18847.36729235057,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.13219015017528252},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6207423271395762,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":18807.707843768538,\\\"ask\\\":19034.76266683215,\\\"price\\\":18921.235255300347,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.13132803711471341},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5113175210804773,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":19978.732209656577,\\\"ask\\\":20219.92414780133,\\\"price\\\":20099.328178728952,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.13130497435905875},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37759575713412025,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":18299.014077068143,\\\"ask\\\":18519.92772789793,\\\"price\\\":18409.47090248304,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.12607702873386556},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3745509061262948,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":16384.634309829078,\\\"ask\\\":16582.436736104682,\\\"price\\\":16483.535522966893,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.12841849416027917},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37180783169449166,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":14505.639075873454,\\\"ask\\\":14680.757455059058,\\\"price\\\":14593.198265466259,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.1317885625897442},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37062162273911375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":13143.974308091521,\\\"ask\\\":13302.654078410525,\\\"price\\\":13223.314193251026,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.13289705128283336},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5653427938745856,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":13008.608186516552,\\\"ask\\\":13165.653758184762,\\\"price\\\":13087.130972350651,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.1321746755862866},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37364093461023345,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":12215.681161567529,\\\"ask\\\":12363.154173578416,\\\"price\\\":12289.417667572969,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.13072827090972267},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5334268016697564,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":11642.887496843075,\\\"ask\\\":11783.445494792897,\\\"price\\\":11713.166495817988,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.12403890056100653},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4403466892184252,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":11697.625279535487,\\\"ask\\\":11838.844095787419,\\\"price\\\":11768.234687661454,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.12663314811565796},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5318989829029026,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":11959.422444944568,\\\"ask\\\":12103.801790356376,\\\"price\\\":12031.61211765048,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.13157328551343378},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3730206814134428,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":11414.228005077759,\\\"ask\\\":11552.025526265823,\\\"price\\\":11483.126765671796,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.13256088736262617},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40069145068826084,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":10633.504181960172,\\\"ask\\\":10761.876465847017,\\\"price\\\":10697.69032390359,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.12813972665748624},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6269898703171605,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":11186.479406316581,\\\"ask\\\":11321.527447439114,\\\"price\\\":11254.00342687785,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.12922524481609154},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4789797049877496,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":12259.874217341892,\\\"ask\\\":12407.880747128711,\\\"price\\\":12333.877482235297,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.12891316748344622},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.38833634785643534,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":11692.507368621784,\\\"ask\\\":11833.664399228892,\\\"price\\\":11763.08588392533,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.13334479464735038},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6279771767219303,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":12225.092494392458,\\\"ask\\\":12372.679124103433,\\\"price\\\":12298.88580924795,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.13073879730440152},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.48711639439670107,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":13125.09630419545,\\\"ask\\\":13283.548171046905,\\\"price\\\":13204.322237621172,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.12955285210955053},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.37031782066187496,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":11817.500557602623,\\\"ask\\\":11960.166560310105,\\\"price\\\":11888.833558956361,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.1351717169413621},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3630283172208613,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":10396.136436462542,\\\"ask\\\":10521.643113763901,\\\"price\\\":10458.889775113217,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.141124052322249},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5058676343135552,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":9490.395092972258,\\\"ask\\\":9604.967267132892,\\\"price\\\":9547.68118005258,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.14502661601854794},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6339924264704146,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":9873.010128140833,\\\"ask\\\":9992.201397293442,\\\"price\\\":9932.605762717138,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.1390678419756538},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5670879276847064,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":10923.550277692535,\\\"ask\\\":11055.424124103314,\\\"price\\\":10989.48720089793,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.13756626454971965},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3618577584513205,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":10424.686806504518,\\\"ask\\\":10550.538156281233,\\\"price\\\":10487.61248139287,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.14095215008366707},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3622527712322297,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":9151.935542713656,\\\"ask\\\":9262.421686086462,\\\"price\\\":9207.178614400056,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.14066254291828884},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5677786863143675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":9551.120379598513,\\\"ask\\\":9666.425655810968,\\\"price\\\":9608.773017704742,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.14024960331203018},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3596971573295898,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":9498.233950460657,\\\"ask\\\":9612.900758715714,\\\"price\\\":9555.56735458819,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.1516314808622108},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5611225435552172,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":8884.248689149097,\\\"ask\\\":8991.503200486912,\\\"price\\\":8937.875944818006,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.15545287689075837},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6557746954275328,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":9463.185994987638,\\\"ask\\\":9577.42968909212,\\\"price\\\":9520.307842039874,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.1614259591725875},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.660706432982863,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":10676.381335193028,\\\"ask\\\":10805.271250708442,\\\"price\\\":10740.826292950733,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.16392542416018585},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6600591348634758,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":12332.232532895605,\\\"ask\\\":12481.112603715266,\\\"price\\\":12406.672568305443,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.1633069094747961},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6076102184132889,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":13601.638460409107,\\\"ask\\\":13765.843351279242,\\\"price\\\":13683.740905844188,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.16408557397301937},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3379536172021577,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":13458.308770394673,\\\"ask\\\":13620.783322954772,\\\"price\\\":13539.546046674726,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.16743913548438755},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.34039734937893734,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":12344.65731433952,\\\"ask\\\":12493.687382520675,\\\"price\\\":12419.172348430104,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.16697379919097477},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6195857909863913,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":11704.04556535738,\\\"ask\\\":11845.341890090069,\\\"price\\\":11774.693727723721,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.1608121960391523},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6523316895571836,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":12586.581685667927,\\\"ask\\\":12738.532370001949,\\\"price\\\":12662.557027834951,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.15838415710932252},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4671031606462559,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":12861.194689044696,\\\"ask\\\":13016.46062090439,\\\"price\\\":12938.827654974544,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.15352040616336227},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6028145909830446,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":12835.043551081117,\\\"ask\\\":12989.993775037823,\\\"price\\\":12912.518663059476,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.14970212218433587},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5498327032869554,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":14195.723957330405,\\\"ask\\\":14367.100906513471,\\\"price\\\":14281.412431921937,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.1555708350431526},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5259704582392056,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":15022.614866512742,\\\"ask\\\":15203.974402124559,\\\"price\\\":15113.294634318652,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.15665772749571116},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4237264699359256,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":15318.90282616377,\\\"ask\\\":15503.839278793514,\\\"price\\\":15411.371052478642,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.15766833478668218},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.557078015227016,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":15177.473387313938,\\\"ask\\\":15360.70244229157,\\\"price\\\":15269.08791480274,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.15663123601879564},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5153447934586124,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":14696.300799900475,\\\"ask\\\":14873.72093028157,\\\"price\\\":14785.010865091024,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.1563155698328914},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.64563256481886,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":16041.003180604894,\\\"ask\\\":16234.65714254379,\\\"price\\\":16137.83016157434,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.16235066527352515},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.43150798520140177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":16481.576337862945,\\\"ask\\\":16680.549090432723,\\\"price\\\":16581.06271414784,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.15709129831026902},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6500641589407364,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":16449.983422436115,\\\"ask\\\":16648.57477160033,\\\"price\\\":16549.279097018225,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.1548834714606554},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6539457527654369,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":16861.345174854865,\\\"ask\\\":17064.902661875243,\\\"price\\\":16963.123918365058,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.15837559566660342},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.653240710239042,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":18826.175734169785,\\\"ask\\\":19053.45350963261,\\\"price\\\":18939.814621901194,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.1594257380455012},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6559594340322822,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":21349.15424212168,\\\"ask\\\":21606.890510638226,\\\"price\\\":21478.022376379948,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.15998114342148528},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6547173399523419,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23911.25384679547,\\\"ask\\\":24199.92089524773,\\\"price\\\":24055.587371021596,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.15942634030554514},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6496203602647616,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":25127.27706694338,\\\"ask\\\":25430.624476202243,\\\"price\\\":25278.9507715728,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.15210903355388583},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6474996451384457,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":28379.041242584608,\\\"ask\\\":28721.64536221339,\\\"price\\\":28550.343302399004,\\\"maxShares\\\":16200000,\\\"investedShares\\\":1545998.08,\\\"averagePrice\\\":12788.829088061646,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.15328650869540383},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6463327536916482,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":30247.253037812956,\\\"ask\\\":30612.411022172848,\\\"price\\\":30429.832029992904,\\\"maxShares\\\":16200000,\\\"investedShares\\\":3513632,\\\"averagePrice\\\":29065.520654685497,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.15021404051862275},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5921247112927059,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":33202.67459271567,\\\"ask\\\":33603.5117105352,\\\"price\\\":33403.09315162545,\\\"maxShares\\\":16200000,\\\"investedShares\\\":2881178.24,\\\"averagePrice\\\":23833.726936842137,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.15255865769343502},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.36224310300419044,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":31846.31756666779,\\\"ask\\\":32230.780152985706,\\\"price\\\":32038.548859826737,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":6480000,\\\"averageShortPrice\\\":12681.388688309202,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.14574165714692533},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3677191537280217,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":30617.87268193131,\\\"ask\\\":30987.504947709116,\\\"price\\\":30802.68881482022,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":16200000,\\\"averageShortPrice\\\":31703.47172077294,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.13553441014294693},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40642474264443984,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":28741.147924391134,\\\"ask\\\":29088.123553257035,\\\"price\\\":28914.63573882408,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":13770000,\\\"averageShortPrice\\\":26947.95096265702,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.13901978367514195},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.529762443718873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":28102.09929390676,\\\"ask\\\":28441.36004997001,\\\"price\\\":28271.72967193839,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":5994000,\\\"averageShortPrice\\\":10568.374592774546,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.12712981968257325},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.38452593833006715,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":26245.003240342907,\\\"ask\\\":26561.844325739403,\\\"price\\\":26403.42378304114,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":16200000,\\\"averageShortPrice\\\":28563.174575066332,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.12056523334016406},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.38184591140103774,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24872.192058775403,\\\"ask\\\":25172.459970953776,\\\"price\\\":25022.32601486459,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":16200000,\\\"averageShortPrice\\\":28563.174575066332,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.12017142924891638},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3796093127041899,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":22967.71155123632,\\\"ask\\\":23244.987747025887,\\\"price\\\":23106.3496491311,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":16200000,\\\"averageShortPrice\\\":28563.174575066332,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.12404304787192472},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5166357411527518,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":21630.132232445303,\\\"ask\\\":21891.260589376227,\\\"price\\\":21760.696410910765,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":6480000,\\\"averageShortPrice\\\":11425.269830026538,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.12216903413618341},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5767300659217475,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23580.451266278014,\\\"ask\\\":23865.124722208955,\\\"price\\\":23722.787994243485,\\\"maxShares\\\":16200000,\\\"investedShares\\\":12150000,\\\"averagePrice\\\":17390.371701903696,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.10743820864938014},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4237792377470231,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23667.603000518215,\\\"ask\\\":23953.3285900617,\\\"price\\\":23810.465795289947,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.0778219408843201},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5140763901333009,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24103.098551713527,\\\"ask\\\":24394.081632820722,\\\"price\\\":24248.59009226714,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.08201747904950019},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.45648275156923085,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":23047.473159548266,\\\"ask\\\":23325.7122721384,\\\"price\\\":23186.59271584333,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.08983575443182018},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5901098283174778,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":22364.288464170768,\\\"ask\\\":22634.279874201005,\\\"price\\\":22499.284169185878,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.09265174052855618},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5922359244749018,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":22890.736198726016,\\\"ask\\\":23167.083114606,\\\"price\\\":23028.90965666601,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.09463538241000846},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5913033064652781,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24565.954445859785,\\\"ask\\\":24862.525324481827,\\\"price\\\":24714.239885170795,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.09608486580713249},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.54245457411029,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"BLD\\\",\\\"bid\\\":24008.119081043107,\\\"ask\\\":24297.955528701557,\\\"price\\\":24153.03730487234,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.09835140979592238}],\\\"recentTicksOfPrices\\\":[24308.300989266856,24293.40238904505,24321.500450385953,24198.566695044494,24061.352695368827,24109.90881747097,24015.63432326939,23898.014445218876,23883.05717718328,23786.40971446252,23724.116585832937,23633.01747216797,23695.548540364824,23838.438158881054,23752.100593385898,23824.485695223844,23791.88394771457,23956.336999201907,23936.809415265245,23884.16260459101]}],[\\\"CLRK\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23304.481960787114,\\\"ask\\\":23538.6978598905,\\\"price\\\":23421.589910338807,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5875192466248389,\\\"bias\\\":0.0875192466248389,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23309.065570802486,\\\"ask\\\":23543.327536338187,\\\"price\\\":23426.19655357034,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5875020330220632,\\\"bias\\\":0.08750203302206316,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23363.927486862678,\\\"ask\\\":23598.740828439186,\\\"price\\\":23481.334157650934,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5877079841862645,\\\"bias\\\":0.08770798418626446,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23461.16962045152,\\\"ask\\\":23696.96026990329,\\\"price\\\":23579.064945177408,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5880730303250117,\\\"bias\\\":0.08807303032501168,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23422.332361617726,\\\"ask\\\":23657.732686860112,\\\"price\\\":23540.03252423892,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5882190668094318,\\\"bias\\\":0.08821906680943181,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23429.065902130267,\\\"ask\\\":23664.53390114665,\\\"price\\\":23546.79990163846,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5881937052591314,\\\"bias\\\":0.0881937052591314,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23549.084304223416,\\\"ask\\\":23785.75851833621,\\\"price\\\":23667.421411279814,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5877419216658764,\\\"bias\\\":0.08774192166587635,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23606.19709304183,\\\"ask\\\":23843.445305032197,\\\"price\\\":23724.821199037015,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5879547191478458,\\\"bias\\\":0.0879547191478458,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23724.498732703465,\\\"ask\\\":23962.935905896462,\\\"price\\\":23843.717319299965,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5875139371171715,\\\"bias\\\":0.08751393711717148,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23867.117864530068,\\\"ask\\\":24106.988395831875,\\\"price\\\":23987.05313018097,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5869878496379375,\\\"bias\\\":0.08698784963793749,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23956.07101381762,\\\"ask\\\":24196.835546619805,\\\"price\\\":24076.453280218713,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5866636444607993,\\\"bias\\\":0.08666364446079933,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23836.37067923983,\\\"ask\\\":24075.932193604047,\\\"price\\\":23956.15143642194,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5870988477632352,\\\"bias\\\":0.08709884776323518,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23869.62149090489,\\\"ask\\\":24109.517184280816,\\\"price\\\":23989.569337592853,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5872203472743055,\\\"bias\\\":0.0872203472743055,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23820.259458008626,\\\"ask\\\":24059.659050551425,\\\"price\\\":23939.959254280027,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5874010914706047,\\\"bias\\\":0.08740109147060471,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23931.71041915088,\\\"ask\\\":24172.23012185591,\\\"price\\\":24051.970270503396,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5869921565609555,\\\"bias\\\":0.08699215656095549,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23860.672809095486,\\\"ask\\\":24100.478565970814,\\\"price\\\":23980.57568753315,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5867331649162061,\\\"bias\\\":0.08673316491620608,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23721.676484037063,\\\"ask\\\":23960.085292921856,\\\"price\\\":23840.88088847946,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.586224955001441,\\\"bias\\\":0.086224955001441,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23849.777942470093,\\\"ask\\\":24089.47420319843,\\\"price\\\":23969.626072834264,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5857593242313545,\\\"bias\\\":0.08575932423135446,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23928.16803475775,\\\"ask\\\":24168.652135609584,\\\"price\\\":24048.410085183667,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5860412002872758,\\\"bias\\\":0.0860412002872758,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24018.436981333743,\\\"ask\\\":24259.828307779306,\\\"price\\\":24139.132644556525,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.586365790473235,\\\"bias\\\":0.086365790473235,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24086.704751621393,\\\"ask\\\":24328.782186311055,\\\"price\\\":24207.743468966226,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5866112685594785,\\\"bias\\\":0.08661126855947854,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24206.12170118105,\\\"ask\\\":24449.399306218045,\\\"price\\\":24327.76050369955,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5870406694922968,\\\"bias\\\":0.08704066949229683,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24216.813989200953,\\\"ask\\\":24460.19905441905,\\\"price\\\":24338.506521810003,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5870022220318095,\\\"bias\\\":0.08700222203180952,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24161.525658165367,\\\"ask\\\":24404.355061765014,\\\"price\\\":24282.940359965192,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5872013074588054,\\\"bias\\\":0.08720130745880539,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24136.20415772876,\\\"ask\\\":24378.779073886835,\\\"price\\\":24257.491615807798,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5872927911043058,\\\"bias\\\":0.08729279110430577,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24274.607006699556,\\\"ask\\\":24518.572906264373,\\\"price\\\":24396.589956481967,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.586792233066907,\\\"bias\\\":0.08679223306690698,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24362.45339432655,\\\"ask\\\":24607.302172158972,\\\"price\\\":24484.877783242762,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5871063219478064,\\\"bias\\\":0.08710632194780643,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24488.21732102426,\\\"ask\\\":24734.330057918978,\\\"price\\\":24611.27368947162,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.586656661443134,\\\"bias\\\":0.086656661443134,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24355.753269018,\\\"ask\\\":24600.534708907628,\\\"price\\\":24478.143988962816,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5861853603759363,\\\"bias\\\":0.08618536037593627,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24450.548080976267,\\\"ask\\\":24696.282232543865,\\\"price\\\":24573.415156760067,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5858499190968203,\\\"bias\\\":0.08584991909682027,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24325.896741744844,\\\"ask\\\":24570.378116033735,\\\"price\\\":24448.13742888929,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5862898332961585,\\\"bias\\\":0.08628983329615847,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24193.753463116172,\\\"ask\\\":24436.906764253014,\\\"price\\\":24315.330113684595,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5858185289364832,\\\"bias\\\":0.08581852893648323,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24176.530488195458,\\\"ask\\\":24419.510694106968,\\\"price\\\":24298.020591151213,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5858796646884609,\\\"bias\\\":0.08587966468846087,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24277.701497707883,\\\"ask\\\":24521.698497684847,\\\"price\\\":24399.699997696367,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5862390434825919,\\\"bias\\\":0.08623904348259193,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24427.095438422984,\\\"ask\\\":24672.5938850403,\\\"price\\\":24549.844661731644,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5857083676049524,\\\"bias\\\":0.08570836760495237,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24340.98515360469,\\\"ask\\\":24585.618170223832,\\\"price\\\":24463.30166191426,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.585405159994447,\\\"bias\\\":0.08540515999444698,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24355.05991917629,\\\"ask\\\":24599.8343907258,\\\"price\\\":24477.447154951045,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5853557758960655,\\\"bias\\\":0.08535577589606547,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24381.619615824042,\\\"ask\\\":24626.66101899815,\\\"price\\\":24504.140317411096,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5854488581353396,\\\"bias\\\":0.08544885813533964,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24265.390566138565,\\\"ask\\\":24509.263838160055,\\\"price\\\":24387.32720214931,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.58585815052034,\\\"bias\\\":0.08585815052033996,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24135.61805608704,\\\"ask\\\":24378.187081776356,\\\"price\\\":24256.9025689317,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.585396507993701,\\\"bias\\\":0.08539650799370102,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24181.54084719041,\\\"ask\\\":24424.571408468702,\\\"price\\\":24303.056127829557,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5855589917547731,\\\"bias\\\":0.0855589917547731,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24092.369452599585,\\\"ask\\\":24334.503818957368,\\\"price\\\":24213.43663577848,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5858756652405241,\\\"bias\\\":0.08587566524052415,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24204.170099223098,\\\"ask\\\":24447.428090170062,\\\"price\\\":24325.79909469658,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5854771591939518,\\\"bias\\\":0.08547715919395182,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24189.886354448467,\\\"ask\\\":24433.000790171565,\\\"price\\\":24311.443572310018,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5854266862852289,\\\"bias\\\":0.08542668628522887,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24097.569563387806,\\\"ask\\\":24339.75619216557,\\\"price\\\":24218.66287777669,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5857539523826688,\\\"bias\\\":0.08575395238266881,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24157.227637888096,\\\"ask\\\":24400.013845304056,\\\"price\\\":24278.620741596078,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5855416523137146,\\\"bias\\\":0.08554165231371458,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24069.746908620575,\\\"ask\\\":24311.65391272731,\\\"price\\\":24190.700410673944,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.585852550727211,\\\"bias\\\":0.08585255072721099,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24009.848953645633,\\\"ask\\\":24251.153968255134,\\\"price\\\":24130.501460950385,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5860667291765579,\\\"bias\\\":0.08606672917655789,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24146.360451947345,\\\"ask\\\":24389.03744141415,\\\"price\\\":24267.69894668075,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5865560741189814,\\\"bias\\\":0.08655607411898136,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24063.887893801882,\\\"ask\\\":24305.736013337577,\\\"price\\\":24184.81195356973,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.586259426258622,\\\"bias\\\":0.08625942625862204,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24133.032587492955,\\\"ask\\\":24375.575628573282,\\\"price\\\":24254.30410803312,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5865072823670341,\\\"bias\\\":0.08650728236703409,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24101.893269156804,\\\"ask\\\":24344.123352263905,\\\"price\\\":24223.008310710356,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5863955161346498,\\\"bias\\\":0.0863955161346498,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24258.969386630546,\\\"ask\\\":24502.77812418462,\\\"price\\\":24380.873755407585,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5858324619343004,\\\"bias\\\":0.08583246193430039,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24277.628907728034,\\\"ask\\\":24521.62517815746,\\\"price\\\":24399.62704294275,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5857664412963753,\\\"bias\\\":0.08576644129637534,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24227.27739125744,\\\"ask\\\":24470.7676162952,\\\"price\\\":24349.022503776323,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5855881930222577,\\\"bias\\\":0.08558819302225773,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.3901103535070986,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23664.972185010138,\\\"ask\\\":23902.81110144239,\\\"price\\\":23783.89164322626,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.11342565183060477},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4377077747210547,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21902.279103088105,\\\"ask\\\":22122.402511159336,\\\"price\\\":22012.34080712372,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.1118417248257515},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.602180611718602,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21681.455574110085,\\\"ask\\\":21899.35965023178,\\\"price\\\":21790.40761217094,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.10449928604800829},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4585445121282703,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22270.71878905806,\\\"ask\\\":22494.545108546088,\\\"price\\\":22382.63194880208,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.10492136722399054},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.3975192580787833,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20180.90220411682,\\\"ask\\\":20383.725341846643,\\\"price\\\":20282.313772981743,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.10508807328044867},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4850527634121923,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":17987.218770263396,\\\"ask\\\":18167.994838306233,\\\"price\\\":18077.606804284813,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.10837563937623629},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6059623784364887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":18617.921800233195,\\\"ask\\\":18805.03659219533,\\\"price\\\":18711.479196214263,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.10844293072788003},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.44949167319575595,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20080.898207525588,\\\"ask\\\":20282.71627996303,\\\"price\\\":20181.807243744315,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.10628853735805233},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6032970781351762,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21066.533094819388,\\\"ask\\\":21278.25704552108,\\\"price\\\":21172.39507017023,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.10824915644069089},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6063332832346644,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23162.48319304291,\\\"ask\\\":23395.27196885239,\\\"price\\\":23278.877580947646,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.11066516391839443},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4183213884640739,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23868.606065311018,\\\"ask\\\":24108.491553404587,\\\"price\\\":23988.54880935782,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.11023293124276035},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4734920136295623,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22145.55477034512,\\\"ask\\\":22368.12315999683,\\\"price\\\":22256.83896517097,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.10692405242282343},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.47474403345178273,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21736.36275139777,\\\"ask\\\":21954.818658446988,\\\"price\\\":21845.590704922368,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.11280360174943654},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.41068850697379616,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20706.6487762248,\\\"ask\\\":20914.755799101436,\\\"price\\\":20810.702287663105,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.11363797579664497},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6159126729684573,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20182.87610351871,\\\"ask\\\":20385.719079433456,\\\"price\\\":20284.29759147608,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.11823613798680599},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6148331361551687,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21636.159973161248,\\\"ask\\\":21853.60881711262,\\\"price\\\":21744.884395136934,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.1179268513162881},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.42638071704740566,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21657.290047927778,\\\"ask\\\":21874.951254439606,\\\"price\\\":21766.1206511837,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.12000314862946448},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.38587099778963413,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21085.110472832268,\\\"ask\\\":21297.02113085069,\\\"price\\\":21191.065801841483,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.11587495973889667},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.3875882559990437,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20899.28252205346,\\\"ask\\\":21109.3255624761,\\\"price\\\":21004.304042264783,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.11439657553979093},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5565852428302109,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20778.906319484442,\\\"ask\\\":20987.73954882599,\\\"price\\\":20883.322934155225,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.11764871992993953},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4488651584857539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20280.73407400522,\\\"ask\\\":20484.560547110803,\\\"price\\\":20382.647310558004,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.11966612119096198},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6231964587552177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21414.18318554721,\\\"ask\\\":21629.401107010002,\\\"price\\\":21521.79214627861,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.1274479042604698},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.44169862742157,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21532.011543103854,\\\"ask\\\":21748.41366916519,\\\"price\\\":21640.21260613451,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.12168250540222392},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.611013733515664,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21559.85383189679,\\\"ask\\\":21776.535779956062,\\\"price\\\":21668.19480592643,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.11541992412852797},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5002865038799249,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22407.520330450825,\\\"ask\\\":22632.72153980208,\\\"price\\\":22520.12093512647,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.11307683282452302},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.38536821228506624,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21565.19583523039,\\\"ask\\\":21781.931471765347,\\\"price\\\":21673.563653497873,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.11895570044532428},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6069793472313277,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22370.167821749295,\\\"ask\\\":22594.99362900306,\\\"price\\\":22482.58072537619,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.1171919935184228},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5107359417834295,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23113.503869379532,\\\"ask\\\":23345.800390679808,\\\"price\\\":23229.652130029674,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.11880083827071719},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.3849693578035228,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22572.4954942305,\\\"ask\\\":22799.354745428776,\\\"price\\\":22685.925119829626,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.11834428839517469},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.3834486134116684,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21176.338326200705,\\\"ask\\\":21389.16584706704,\\\"price\\\":21282.75208663387,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.12205590742170225},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.48192363958578727,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20564.9878258175,\\\"ask\\\":20771.67112054933,\\\"price\\\":20668.329473183425,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.12733853063938716},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4616452274305245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21081.42885899464,\\\"ask\\\":21293.302515868963,\\\"price\\\":21187.3656874318,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.11902739705893328},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4218417196592243,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20043.776176997,\\\"ask\\\":20245.221163700473,\\\"price\\\":20144.498670348738,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.11972402036249752},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6179824271836084,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20298.24898005711,\\\"ask\\\":20502.25148236923,\\\"price\\\":20400.25023121318,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.12082333933742051},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6157860675396575,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20921.967510480852,\\\"ask\\\":21132.238540736947,\\\"price\\\":21027.1030256089,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.11839703558919812},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.40751365919439386,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21076.029333209255,\\\"ask\\\":21287.848723492763,\\\"price\\\":21181.939028351015,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.12339906805900192},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4672764218963969,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":19397.504224229906,\\\"ask\\\":19592.454015428193,\\\"price\\\":19494.979119829055,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.12617389936914125},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4744745240544736,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20389.13422324437,\\\"ask\\\":20594.05014508602,\\\"price\\\":20491.592184165198,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.119212305024324},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4042837455377142,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20497.378151372846,\\\"ask\\\":20703.381951889154,\\\"price\\\":20600.38005163101,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.12180940530834489},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5386325304964924,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20930.48840650445,\\\"ask\\\":21140.8450739065,\\\"price\\\":21035.666740205485,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.12101379427538816},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5184400955989948,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20470.706279731618,\\\"ask\\\":20676.44202123643,\\\"price\\\":20573.574150484033,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.11394270219218594},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.596681139520083,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22414.42086087014,\\\"ask\\\":22639.691422285927,\\\"price\\\":22527.056141578047,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.11498962670972457},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.39046570246885104,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22132.841271922945,\\\"ask\\\":22355.281887721176,\\\"price\\\":22244.061579822082,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.11297249671659165},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.3897241122224552,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":20757.03097328134,\\\"ask\\\":20965.64434989723,\\\"price\\\":20861.337661589292,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.11347695646286399},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5607280978077518,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":19879.293273554802,\\\"ask\\\":20079.085165751338,\\\"price\\\":19979.18921965308,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.10796367057946571},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.6018781380619369,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":21169.58412029544,\\\"ask\\\":21382.343759695385,\\\"price\\\":21275.963939995407,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.10374308605599036},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.497433573151067,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22203.209755064476,\\\"ask\\\":22426.357591798784,\\\"price\\\":22314.783673431637,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.1004894775641485},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5470346277870296,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22237.633704922948,\\\"ask\\\":22461.127511002578,\\\"price\\\":22349.380607962776,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.09548879414321598},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5908726412603663,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23544.59459841095,\\\"ask\\\":23781.223689852282,\\\"price\\\":23662.90914413162,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.0926853129946772},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5012101687321597,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23790.773305009632,\\\"ask\\\":24029.87655430621,\\\"price\\\":23910.32492965792,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.09520221176215332},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5441539811749597,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23566.842909983374,\\\"ask\\\":23803.695602546013,\\\"price\\\":23685.26925626469,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.09679608738229661},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.453084846251059,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23539.970040775905,\\\"ask\\\":23776.55265425104,\\\"price\\\":23658.26134751348,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.09672362832340914},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5955913098943324,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":24048.70657448735,\\\"ask\\\":24290.40211794953,\\\"price\\\":24169.55434621843,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.09704193477664258},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5934371550799339,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":25608.781806743864,\\\"ask\\\":25866.15649826893,\\\"price\\\":25737.46915250639,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.09652144022160514},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.41694188631919005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":26722.062060323642,\\\"ask\\\":26990.625498115816,\\\"price\\\":26856.343779219736,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.09569460552558712},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4867498786666505,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":25205.744945865994,\\\"ask\\\":25459.069015673696,\\\"price\\\":25332.40698076986,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.09586646099615959},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5927891912725104,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":25496.018329998245,\\\"ask\\\":25752.2597202495,\\\"price\\\":25624.139025123888,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.09411706338671433},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5914611697880731,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":26893.9271631182,\\\"ask\\\":27164.21788837565,\\\"price\\\":27029.07252574692,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.09395982642736234},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5176505803150462,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":28166.418275254793,\\\"ask\\\":28449.497855910595,\\\"price\\\":28307.958065582694,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.09040176124884897},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5240936681835074,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":29156.18303069412,\\\"ask\\\":29449.209995826728,\\\"price\\\":29302.696513260427,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.09070700338561155},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5631906967501409,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":31195.785721725246,\\\"ask\\\":31509.311206365706,\\\"price\\\":31352.548464045467,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.08835585593589645},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4780552084353241,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":30828.93795544253,\\\"ask\\\":31138.776527859027,\\\"price\\\":30983.857241650767,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.08602135215328943},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4825730659434679,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":30980.092901405464,\\\"ask\\\":31291.450619007534,\\\"price\\\":31135.771760206502,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.08467766323087134},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.41476813952470587,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":29407.69611674522,\\\"ask\\\":29703.25085158686,\\\"price\\\":29555.47348416605,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.08869544968861631},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4099936735576735,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":27974.659771752376,\\\"ask\\\":28255.81213126747,\\\"price\\\":28115.235951509923,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.09308724628918713},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.408927427246382,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":27402.59045856701,\\\"ask\\\":27677.9933777486,\\\"price\\\":27540.29191815779,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.09316036074297868},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.40653404207105576,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":25404.167227583002,\\\"ask\\\":25659.4854911768,\\\"price\\\":25531.82635937991,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09595695123665515},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4635549080479287,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22961.467352391184,\\\"ask\\\":23192.235868495627,\\\"price\\\":23076.851610443402,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.09825120953726407},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.4922054193104759,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23406.026459511217,\\\"ask\\\":23641.262906340467,\\\"price\\\":23523.64468292584,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.09756004254919393},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5519353596867523,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":22953.88083004191,\\\"ask\\\":23184.573099690577,\\\"price\\\":23069.226964866255,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.09308496012158873},{\\\"volatility\\\":0.0066,\\\"forecast\\\":0.5900772737852821,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CLRK\\\",\\\"bid\\\":23522.53654794476,\\\"ask\\\":23758.943950436664,\\\"price\\\":23640.7402491907,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.0930962281353187}],\\\"recentTicksOfPrices\\\":[24463.30166191426,24477.447154951045,24504.140317411096,24387.32720214931,24256.9025689317,24303.056127829557,24213.43663577848,24325.79909469658,24311.443572310018,24218.66287777669,24278.620741596078,24190.700410673944,24130.501460950385,24267.69894668075,24184.81195356973,24254.30410803312,24223.008310710356,24380.873755407585,24399.62704294275,24349.022503776323]}],[\\\"OMTK\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24491.53190264998,\\\"ask\\\":24638.923268162413,\\\"price\\\":24565.227585406195,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4051423048377181,\\\"bias\\\":0.09485769516228187,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24486.496896332894,\\\"ask\\\":24633.857960904603,\\\"price\\\":24560.17742861875,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40512279983884514,\\\"bias\\\":0.09487720016115486,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24426.39189880715,\\\"ask\\\":24573.391248248314,\\\"price\\\":24499.891573527733,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4053562601838916,\\\"bias\\\":0.09464373981610841,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24320.56709256464,\\\"ask\\\":24466.929582590103,\\\"price\\\":24393.748337577374,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4049444418496403,\\\"bias\\\":0.09505555815035971,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24278.480372098402,\\\"ask\\\":24424.589581960576,\\\"price\\\":24351.53497702949,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4051092205608003,\\\"bias\\\":0.09489077943919971,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24285.77729896217,\\\"ask\\\":24431.930422125428,\\\"price\\\":24358.8538605438,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4050807010213974,\\\"bias\\\":0.09491929897860257,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24415.839179703315,\\\"ask\\\":24562.77502230935,\\\"price\\\":24489.307101006332,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4055890389836464,\\\"bias\\\":0.0944109610163536,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24354.089260811434,\\\"ask\\\":24500.65348906105,\\\"price\\\":24427.371374936243,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4053496595052011,\\\"bias\\\":0.09465034049479892,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24481.68664870241,\\\"ask\\\":24629.018764943343,\\\"price\\\":24555.352706822876,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4048537618314761,\\\"bias\\\":0.09514623816852391,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24635.547181994523,\\\"ask\\\":24783.80523925828,\\\"price\\\":24709.676210626403,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4054517292491386,\\\"bias\\\":0.09454827075086142,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24539.92914792013,\\\"ask\\\":24687.611770675918,\\\"price\\\":24613.770459298026,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4050833288466828,\\\"bias\\\":0.0949166711533172,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24411.767050542934,\\\"ask\\\":24558.678386855125,\\\"price\\\":24485.22271869903,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4045850150775122,\\\"bias\\\":0.09541498492248779,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24376.21754268621,\\\"ask\\\":24522.91494013467,\\\"price\\\":24449.56624141044,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4044458648689037,\\\"bias\\\":0.09555413513109628,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24429.027768158438,\\\"ask\\\":24576.042980404123,\\\"price\\\":24502.53537428128,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40465287957133816,\\\"bias\\\":0.09534712042866184,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24310.114724838826,\\\"ask\\\":24456.414311949186,\\\"price\\\":24383.264518394008,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40418648867231255,\\\"bias\\\":0.09581351132768745,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24234.68401872753,\\\"ask\\\":24380.529659762997,\\\"price\\\":24307.606839245265,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40448470922302676,\\\"bias\\\":0.09551529077697324,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24383.140942150792,\\\"ask\\\":24529.880004992217,\\\"price\\\":24456.510473571507,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4050698171698715,\\\"bias\\\":0.0949301828301285,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24246.255103551437,\\\"ask\\\":24392.170380002095,\\\"price\\\":24319.212741776766,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40453387470660884,\\\"bias\\\":0.09546612529339116,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24329.570767833302,\\\"ask\\\":24475.98744246419,\\\"price\\\":24402.779105148747,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4048619180935676,\\\"bias\\\":0.09513808190643241,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24425.525970420116,\\\"ask\\\":24572.520108657347,\\\"price\\\":24499.023039538733,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40523714024648455,\\\"bias\\\":0.09476285975351545,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24498.106487212644,\\\"ask\\\":24645.53741893107,\\\"price\\\":24571.82195307186,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40495555215122814,\\\"bias\\\":0.09504444784877186,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24371.78388670252,\\\"ask\\\":24518.45460216913,\\\"price\\\":24445.119244435828,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.404462922564813,\\\"bias\\\":0.09553707743518702,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24383.038690023695,\\\"ask\\\":24529.77713750628,\\\"price\\\":24456.40791376499,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4044188038814449,\\\"bias\\\":0.09558119611855509,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24441.37005098362,\\\"ask\\\":24588.459539755833,\\\"price\\\":24514.91479536973,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4046474620615287,\\\"bias\\\":0.09535253793847132,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24468.17723326121,\\\"ask\\\":24615.428049108315,\\\"price\\\":24541.802641184764,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4047520442866582,\\\"bias\\\":0.09524795571334183,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24322.367318043354,\\\"ask\\\":24468.740641923254,\\\"price\\\":24395.553979983306,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4053230452984279,\\\"bias\\\":0.09467695470157211,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24414.387417403028,\\\"ask\\\":24561.31452322491,\\\"price\\\":24487.85097031397,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4056812416312432,\\\"bias\\\":0.0943187583687568,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24283.333944264064,\\\"ask\\\":24429.472363186414,\\\"price\\\":24356.40315372524,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40517221758640853,\\\"bias\\\":0.09482778241359147,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24421.40731822185,\\\"ask\\\":24568.376670187074,\\\"price\\\":24494.891994204463,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40571140186369226,\\\"bias\\\":0.09428859813630774,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24322.439206242358,\\\"ask\\\":24468.81296274933,\\\"price\\\":24395.626084495845,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4060950625837219,\\\"bias\\\":0.09390493741627809,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24192.83472928405,\\\"ask\\\":24338.42851902899,\\\"price\\\":24265.631624156522,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4055920003988301,\\\"bias\\\":0.09440799960116991,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24330.97927447613,\\\"ask\\\":24477.404425576282,\\\"price\\\":24404.191850026207,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4050529172234464,\\\"bias\\\":0.09494708277655362,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24349.10013996712,\\\"ask\\\":24495.634343417267,\\\"price\\\":24422.367241692195,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4049822039448583,\\\"bias\\\":0.09501779605514171,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24243.039478603736,\\\"ask\\\":24388.935403249292,\\\"price\\\":24315.987440926514,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4053978964697083,\\\"bias\\\":0.09460210353029169,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24088.07482044139,\\\"ask\\\":24233.038159380852,\\\"price\\\":24160.556489911123,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4047892972875699,\\\"bias\\\":0.0952107027124301,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24177.163827987777,\\\"ask\\\":24322.663309399937,\\\"price\\\":24249.913568693857,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40514143115778045,\\\"bias\\\":0.09485856884221955,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24162.55716301272,\\\"ask\\\":24307.968740723925,\\\"price\\\":24235.262951868324,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40508408758583386,\\\"bias\\\":0.09491591241416614,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24190.1046481687,\\\"ask\\\":24335.682008137617,\\\"price\\\":24262.89332815316,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40519230025019115,\\\"bias\\\":0.09480769974980885,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24311.23983217391,\\\"ask\\\":24457.54619024115,\\\"price\\\":24384.393011207532,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40566706248546625,\\\"bias\\\":0.09433293751453375,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24175.345256919594,\\\"ask\\\":24320.83379407257,\\\"price\\\":24248.08952549608,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4051367976913219,\\\"bias\\\":0.09486320230867812,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24127.35150990388,\\\"ask\\\":24272.551218087854,\\\"price\\\":24199.951363995868,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40532549807689194,\\\"bias\\\":0.09467450192310806,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24034.351369190623,\\\"ask\\\":24178.991397490667,\\\"price\\\":24106.671383340647,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40569183798203684,\\\"bias\\\":0.09430816201796316,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23918.31329661329,\\\"ask\\\":24062.255001507652,\\\"price\\\":23990.284149060473,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4061493676252506,\\\"bias\\\":0.09385063237474939,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23903.55704876542,\\\"ask\\\":24047.409949760997,\\\"price\\\":23975.48349926321,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40609143134450476,\\\"bias\\\":0.09390856865549524,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23808.20298002667,\\\"ask\\\":23951.482035071964,\\\"price\\\":23879.842507549318,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4057153187870704,\\\"bias\\\":0.0942846812129296,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23746.741195772665,\\\"ask\\\":23889.650370471394,\\\"price\\\":23818.19578312203,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4054712893142517,\\\"bias\\\":0.09452871068574831,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23656.85293110841,\\\"ask\\\":23799.221153361817,\\\"price\\\":23728.037042235115,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40511211128709673,\\\"bias\\\":0.09488788871290327,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23718.552864090077,\\\"ask\\\":23861.29239988199,\\\"price\\\":23789.922631986035,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4048646321996878,\\\"bias\\\":0.09513536780031218,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23578.400861517937,\\\"ask\\\":23720.29695496739,\\\"price\\\":23649.348908242664,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40429913955279617,\\\"bias\\\":0.09570086044720383,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23662.882664190358,\\\"ask\\\":23805.287173704037,\\\"price\\\":23734.0849189472,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4039562417771851,\\\"bias\\\":0.09604375822281491,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23592.01253785915,\\\"ask\\\":23733.990547114066,\\\"price\\\":23663.00154248661,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4042447560897158,\\\"bias\\\":0.09575524391028423,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23560.189482339243,\\\"ask\\\":23701.975978722425,\\\"price\\\":23631.082730530834,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40411541823164954,\\\"bias\\\":0.09588458176835046,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23400.75070901291,\\\"ask\\\":23541.577694222615,\\\"price\\\":23471.164201617765,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40346211781884844,\\\"bias\\\":0.09653788218115156,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23381.94827827699,\\\"ask\\\":23522.662109440138,\\\"price\\\":23452.305193858563,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4035397480839359,\\\"bias\\\":0.09646025191606411,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23331.254904342335,\\\"ask\\\":23471.663660035465,\\\"price\\\":23401.459282188902,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4033301624598338,\\\"bias\\\":0.09666983754016623,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.386691671762553,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36190.317801972495,\\\"ask\\\":36408.113094662374,\\\"price\\\":36299.21544831745,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.11663520032765967},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.607698511276097,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":35798.54012995466,\\\"ask\\\":36013.97768339472,\\\"price\\\":35906.258906674695,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.11876728635311073},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.6189977071880209,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36684.2731927872,\\\"ask\\\":36905.04113577286,\\\"price\\\":36794.657164280055,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.1222148800921884},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4573518007494897,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":39406.791163783324,\\\"ask\\\":39643.943367376814,\\\"price\\\":39525.36726558006,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.1177604314736943},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5976935799698424,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":38750.57145337122,\\\"ask\\\":38983.77449120495,\\\"price\\\":38867.17297228807,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.11348575649347648},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.516412658127203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":39024.99986282125,\\\"ask\\\":39259.85442568679,\\\"price\\\":39142.427144254005,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.11170963785873012},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.390847427581458,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":35218.67030697398,\\\"ask\\\":35430.618172412134,\\\"price\\\":35324.64423969307,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.11224655459447413},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5878476005047691,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":33772.19607463907,\\\"ask\\\":33975.43897980238,\\\"price\\\":33873.81752722072,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.11070307665320961},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.6050714893674298,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36188.06446849033,\\\"ask\\\":36405.846200497304,\\\"price\\\":36296.95533449383,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.10684170570529372},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.46936246703767187,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":37832.92183223101,\\\"ask\\\":38060.602404942525,\\\"price\\\":37946.76211858674,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.10994448727230621},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4176420109916087,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36211.085217331,\\\"ask\\\":36429.00548945134,\\\"price\\\":36320.04535339118,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.12142791494758409},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5314647614150292,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":38498.615047433675,\\\"ask\\\":38730.30179796989,\\\"price\\\":38614.45842270179,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.12600983726676263},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.3803171644347259,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":36200.29090801275,\\\"ask\\\":36418.14621939498,\\\"price\\\":36309.21856370386,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.12384804679009903},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4055322825458756,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":34179.386949600106,\\\"ask\\\":34385.080351503406,\\\"price\\\":34282.233650551774,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.1201250564016969},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5372191571977446,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":35990.439819789666,\\\"ask\\\":36207.032235956896,\\\"price\\\":36098.73602787328,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.1230573121193872},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.3771663483583697,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":34570.89350180157,\\\"ask\\\":34778.943011341005,\\\"price\\\":34674.91825657128,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.12634863838802063},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.37545326970857107,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":32177.54510571301,\\\"ask\\\":32371.191314975087,\\\"price\\\":32274.368210344048,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.12672224696823375},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4536398135445578,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":31227.63374566214,\\\"ask\\\":31415.563336909847,\\\"price\\\":31321.598541286006,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.12833302060743923},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.6209808735806083,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":33219.38357558784,\\\"ask\\\":33419.299625190186,\\\"price\\\":33319.34160038901,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.12833302060743923},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4300147735500183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":35219.29025016262,\\\"ask\\\":35431.241846452474,\\\"price\\\":35325.266048307545,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.12693474865248405},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.375729975225783,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":34144.136078255935,\\\"ask\\\":34349.61733850623,\\\"price\\\":34246.87670838107,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.12734727038693344},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.3776361950455472,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":31764.917944287947,\\\"ask\\\":31956.08094094363,\\\"price\\\":31860.499442615783,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.12605115721983395},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5613508725596632,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":31362.07949210875,\\\"ask\\\":31550.818185140495,\\\"price\\\":31456.448838624623,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.12704518767133094},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.37957628564932283,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":30425.791577592958,\\\"ask\\\":30608.895639243467,\\\"price\\\":30517.343608418225,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.12489165692826132},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4972943385075539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":28074.71739466863,\\\"ask\\\":28243.672564546272,\\\"price\\\":28159.194979607455,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.11930776052452752},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.616573696282996,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":29630.57776784726,\\\"ask\\\":29808.896189719955,\\\"price\\\":29719.736978783618,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.11933188466346745},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.567237109166078,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":31593.153501514564,\\\"ask\\\":31783.282810450466,\\\"price\\\":31688.218155982504,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.12260358100345448},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.3783130432630864,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":28511.768057060406,\\\"ask\\\":28683.35342149606,\\\"price\\\":28597.560739278222,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.12753280747328566},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.3787932900362753,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":26077.330112818963,\\\"ask\\\":26234.26489785096,\\\"price\\\":26155.79750533495,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.1253189285210724},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4271081605123995,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24005.69324194909,\\\"ask\\\":24150.1608040872,\\\"price\\\":24077.927023018143,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.12181873940558996},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.6171344537521667,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23935.47113711285,\\\"ask\\\":24079.516098820648,\\\"price\\\":24007.49361796675,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.12025947663804959},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.6205194756599783,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":28039.89179193977,\\\"ask\\\":28208.637379453947,\\\"price\\\":28124.26458569687,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.12465097052597696},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5852408547964234,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":31531.185453570914,\\\"ask\\\":31720.941835437916,\\\"price\\\":31626.063644504404,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.12681334024421542},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.3762796686485232,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":30596.22175199731,\\\"ask\\\":30780.351471668324,\\\"price\\\":30688.286611832806,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.12716738186410453},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5324690524159095,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":28878.426825274735,\\\"ask\\\":29052.218762036646,\\\"price\\\":28965.32279365568,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.12217466486718448},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40738555618012107,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":28620.37521973484,\\\"ask\\\":28792.614187957934,\\\"price\\\":28706.494703846372,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.12543185814848173},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.3769077740247336,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":25153.056526994616,\\\"ask\\\":25304.428983526166,\\\"price\\\":25228.742755260384,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.1261847797054773},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5291252660996226,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":22765.603300600982,\\\"ask\\\":22902.607934305706,\\\"price\\\":22834.105617453344,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.1311747431337309},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5999191119364826,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23956.18506992117,\\\"ask\\\":24100.35468919851,\\\"price\\\":24028.26987955985,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.12826294794174659},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.37146907434708126,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23477.818990625194,\\\"ask\\\":23619.109776927828,\\\"price\\\":23548.464383776514,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.13495641576233536},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5193218671352209,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":20915.045203368707,\\\"ask\\\":21040.913078213445,\\\"price\\\":20977.979140791067,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.13591077253010697},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.44210851283661645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":20381.990381226038,\\\"ask\\\":20504.65030327956,\\\"price\\\":20443.32034225281,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.12205685825218415},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.543430271467581,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":21542.10781769162,\\\"ask\\\":21671.74938931264,\\\"price\\\":21606.928603502118,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.11566401394870196},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.3807864981057446,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":21329.106760259005,\\\"ask\\\":21457.466479979732,\\\"price\\\":21393.286620119365,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.12386939199042302},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.39147363908064925,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":19555.976337518026,\\\"ask\\\":19673.665262317543,\\\"price\\\":19614.820799917787,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.12231986055238125},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.6165714518865818,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":19903.71105335253,\\\"ask\\\":20023.492664506117,\\\"price\\\":19963.601858929327,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.11864649183370535},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.6159269180132623,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":21695.2632692498,\\\"ask\\\":21825.82653867356,\\\"price\\\":21760.544903961676,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.11909801299637512},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4452542698382637,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":22259.858680701996,\\\"ask\\\":22393.819715891776,\\\"price\\\":22326.83919829688,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.11640166925185202},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.6090552918475918,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":20870.27833852783,\\\"ask\\\":20995.87680395528,\\\"price\\\":20933.07757124155,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.11227784178143396},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.6043107879614682,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":21987.520362964813,\\\"ask\\\":22119.842451407923,\\\"price\\\":22053.68140718637,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.10684471096997572},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4530935200050464,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23002.6641776571,\\\"ask\\\":23141.095456559742,\\\"price\\\":23071.879817108427,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.10488730471449559},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.3987257832028316,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":21755.507640815733,\\\"ask\\\":21886.433464130583,\\\"price\\\":21820.970552473147,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.10425566239831147},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4923228235400017,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":20833.795382990975,\\\"ask\\\":20959.174292015996,\\\"price\\\":20896.484837503474,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.09940503953643726},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5951532658893947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":22631.803674512226,\\\"ask\\\":22768.003094820222,\\\"price\\\":22699.90338466622,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.09694695771031792},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.41849508684881753,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24123.812556558394,\\\"ask\\\":24268.99096712944,\\\"price\\\":24196.401761843925,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.09517108482503955},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.48613182403561944,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23170.023342709577,\\\"ask\\\":23309.46179813211,\\\"price\\\":23239.74257042083,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.09411075679451997},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5901065799550309,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23326.71068618287,\\\"ask\\\":23467.092094524996,\\\"price\\\":23396.901390353945,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.09225177372015547},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5614185156630358,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24683.45195912931,\\\"ask\\\":24831.998309936513,\\\"price\\\":24757.725134532902,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.0919143904680233},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.40939941044133965,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24198.704650176063,\\\"ask\\\":24344.333765422874,\\\"price\\\":24271.51920779948,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.09164682946212027},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4090684247624398,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":21812.999503021296,\\\"ask\\\":21944.271315476788,\\\"price\\\":21878.635409249044,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.09355949209722153},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5449756749052131,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":21304.77666514876,\\\"ask\\\":21432.98996503932,\\\"price\\\":21368.883315094037,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.09139190349761184},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4157381319431137,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":21097.54098579844,\\\"ask\\\":21224.507130146278,\\\"price\\\":21161.024057972372,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.0869990735437336},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4182591696726377,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":20453.618824710742,\\\"ask\\\":20576.709810616718,\\\"price\\\":20515.164317663744,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.08365933353359806},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.43210230702771296,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":19213.954224359022,\\\"ask\\\":19329.584841556774,\\\"price\\\":19271.7695329579,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.08639925271719534},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5842344749022874,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":19095.618220390894,\\\"ask\\\":19210.536685107378,\\\"price\\\":19153.077452749134,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.08603371900429257},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5840959864097494,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":20343.351665763228,\\\"ask\\\":20465.77905793432,\\\"price\\\":20404.565361848778,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.08625675918011422},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5754513328922917,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":22223.449305389608,\\\"ask\\\":22357.191226986735,\\\"price\\\":22290.320266188177,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09034389501359097},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.4128198013615574,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":22555.223790249,\\\"ask\\\":22690.962348665726,\\\"price\\\":22623.093069457354,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.08944461393707498},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5087874943497479,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":22051.504420920606,\\\"ask\\\":22184.21156889004,\\\"price\\\":22117.857994905313,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.09147487562427292},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5926703907606634,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":23949.845496489248,\\\"ask\\\":24093.976963870326,\\\"price\\\":24021.911230179787,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.09567927138417087},{\\\"volatility\\\":0.0069,\\\"forecast\\\":0.5412073352555558,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMTK\\\",\\\"bid\\\":24959.064900569738,\\\"ask\\\":25109.269904986406,\\\"price\\\":25034.167402778072,\\\"maxShares\\\":10400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.09633785400718431}],\\\"recentTicksOfPrices\\\":[24249.913568693857,24235.262951868324,24262.89332815316,24384.393011207532,24248.08952549608,24199.951363995868,24106.671383340647,23990.284149060473,23975.48349926321,23879.842507549318,23818.19578312203,23728.037042235115,23789.922631986035,23649.348908242664,23734.0849189472,23663.00154248661,23631.082730530834,23471.164201617765,23452.305193858563,23401.459282188902]}],[\\\"FSIG\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33568.964977673255,\\\"ask\\\":34042.24343657298,\\\"price\\\":33805.60420712312,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.29239199353548917,\\\"bias\\\":0.20760800646451083,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33557.96447411362,\\\"ask\\\":34031.08784031462,\\\"price\\\":33794.526157214124,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2924600486946715,\\\"bias\\\":0.20753995130532849,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33689.60526029455,\\\"ask\\\":34164.5845892413,\\\"price\\\":33927.094924767924,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2932741839612744,\\\"bias\\\":0.20672581603872558,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33923.30234861722,\\\"ask\\\":34401.57650056147,\\\"price\\\":34162.43942458934,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2918401742447428,\\\"bias\\\":0.2081598257552572,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33829.8120032505,\\\"ask\\\":34306.76806371929,\\\"price\\\":34068.2900334849,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2924154341368009,\\\"bias\\\":0.20758456586319912,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33846.02120665367,\\\"ask\\\":34323.20579566993,\\\"price\\\":34084.6135011618,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.29231597214596533,\\\"bias\\\":0.20768402785403467,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":34134.98886470443,\\\"ask\\\":34616.24751939311,\\\"price\\\":34375.61819204877,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.29408911903307217,\\\"bias\\\":0.20591088096692783,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":34272.96623324831,\\\"ask\\\":34756.17018819843,\\\"price\\\":34514.56821072337,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2949214333959969,\\\"bias\\\":0.2050785666040031,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33989.07444965385,\\\"ask\\\":34468.275902116235,\\\"price\\\":34228.675175885044,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2932085264989161,\\\"bias\\\":0.2067914735010839,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33651.91197161999,\\\"ask\\\":34126.35987454313,\\\"price\\\":33889.135923081565,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.291136658317973,\\\"bias\\\":0.20886334168202703,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33444.167017634674,\\\"ask\\\":33915.685988678866,\\\"price\\\":33679.92650315677,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28983926301181767,\\\"bias\\\":0.21016073698818233,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33166.57649870883,\\\"ask\\\":33634.18180684772,\\\"price\\\":33400.37915277828,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2880803046206597,\\\"bias\\\":0.2119196953793403,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33089.64521472658,\\\"ask\\\":33556.165892477,\\\"price\\\":33322.90555360179,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28758760504165654,\\\"bias\\\":0.21241239495834346,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33203.92973504527,\\\"ask\\\":33672.061674914985,\\\"price\\\":33437.99570498013,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2868539782980022,\\\"bias\\\":0.2131460217019978,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32947.007286647175,\\\"ask\\\":33411.51695634814,\\\"price\\\":33179.26212149766,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2885161018798361,\\\"bias\\\":0.21148389812016388,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33110.48945071179,\\\"ask\\\":33577.30400490108,\\\"price\\\":33343.89672780644,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28746672446510757,\\\"bias\\\":0.21253327553489243,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32790.26709856261,\\\"ask\\\":33252.56693681022,\\\"price\\\":33021.41701768641,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28539117243629425,\\\"bias\\\":0.21460882756370575,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":33085.38965173749,\\\"ask\\\":33551.850331621,\\\"price\\\":33318.61999167925,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28732271831038214,\\\"bias\\\":0.21267728168961786,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32905.13385189942,\\\"ask\\\":33369.05316098964,\\\"price\\\":33137.09350644454,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28615766261752607,\\\"bias\\\":0.21384233738247393,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32699.53567470839,\\\"ask\\\":33160.55631866198,\\\"price\\\":32930.045996685185,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28481312992417307,\\\"bias\\\":0.21518687007582693,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32545.362491538897,\\\"ask\\\":33004.2094954478,\\\"price\\\":32774.78599349335,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2837937513646473,\\\"bias\\\":0.2162062486353527,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32278.64431102589,\\\"ask\\\":32733.730937767443,\\\"price\\\":32506.18762439667,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28200724085646384,\\\"bias\\\":0.21799275914353616,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32254.898343827845,\\\"ask\\\":32709.650183519272,\\\"price\\\":32482.27426367356,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28184675518843116,\\\"bias\\\":0.21815324481156884,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32132.351990661104,\\\"ask\\\":32585.376087206172,\\\"price\\\":32358.86403893364,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28267874795979503,\\\"bias\\\":0.21732125204020497,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32188.535871084307,\\\"ask\\\":32642.352086789422,\\\"price\\\":32415.443978936866,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2830587373001831,\\\"bias\\\":0.2169412626998169,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32496.163991317004,\\\"ask\\\":32954.31736078169,\\\"price\\\":32725.24067604935,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28513206033396554,\\\"bias\\\":0.21486793966603446,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32692.162400792364,\\\"ask\\\":33153.07909123656,\\\"price\\\":32922.620746014465,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.286428021741381,\\\"bias\\\":0.213571978258619,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32413.289110966474,\\\"ask\\\":32870.27405311504,\\\"price\\\":32641.78158204076,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28459051861148565,\\\"bias\\\":0.21540948138851435,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32707.1002943766,\\\"ask\\\":33168.22758956418,\\\"price\\\":32937.66394197039,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2865431039979254,\\\"bias\\\":0.21345689600207463,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32496.30267383904,\\\"ask\\\":32954.45799854573,\\\"price\\\":32725.380336192386,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28515844783515537,\\\"bias\\\":0.21484155216484463,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32221.122270746542,\\\"ask\\\":32675.397912025946,\\\"price\\\":32448.260091386244,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.286993274829354,\\\"bias\\\":0.213006725170646,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31930.455297721204,\\\"ask\\\":32380.632915211732,\\\"price\\\":32155.54410646647,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28505424766979426,\\\"bias\\\":0.21494575233020574,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31892.589011037242,\\\"ask\\\":32342.23276345871,\\\"price\\\":32117.410887247977,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28530945421562903,\\\"bias\\\":0.21469054578437097,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32115.022735056427,\\\"ask\\\":32567.802511784306,\\\"price\\\":32341.41262342037,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28381210266495993,\\\"bias\\\":0.21618789733504007,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32444.39149092197,\\\"ask\\\":32901.81493590979,\\\"price\\\":32673.10321341588,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2860293061016775,\\\"bias\\\":0.21397069389832252,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32254.217058786468,\\\"ask\\\":32708.959293250726,\\\"price\\\":32481.5881760186,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28729090098496324,\\\"bias\\\":0.21270909901503676,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32223.16288816544,\\\"ask\\\":32677.467299478947,\\\"price\\\":32450.315093822195,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2870859085490443,\\\"bias\\\":0.2129140914509557,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32164.702432568858,\\\"ask\\\":32618.182627992785,\\\"price\\\":32391.442530280823,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2874728872507827,\\\"bias\\\":0.21252711274921732,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31909.959348962933,\\\"ask\\\":32359.848000408532,\\\"price\\\":32134.903674685735,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2857762441601559,\\\"bias\\\":0.2142237558398441,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32195.91539331296,\\\"ask\\\":32649.835650620495,\\\"price\\\":32422.87552196673,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392818,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28385651191744593,\\\"bias\\\":0.21614348808255407,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32094.139636920914,\\\"ask\\\":32546.624989304488,\\\"price\\\":32320.382313112703,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2902836723048011,\\\"bias\\\":0.20971632769519888,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31897.37378884247,\\\"ask\\\":32347.085000366933,\\\"price\\\":32122.229394604703,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28898999178589657,\\\"bias\\\":0.21101000821410343,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31652.567542511413,\\\"ask\\\":32098.82730645417,\\\"price\\\":31875.697424482794,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.29062197844795173,\\\"bias\\\":0.20937802155204827,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31621.447602526263,\\\"ask\\\":32067.268616056335,\\\"price\\\":31844.3581092913,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2904159211052642,\\\"bias\\\":0.2095840788947358,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31420.82778579714,\\\"ask\\\":31863.82032255561,\\\"price\\\":31642.324054176377,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2890777412271322,\\\"bias\\\":0.2109222587728678,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31291.71356302087,\\\"ask\\\":31732.8857582699,\\\"price\\\":31512.299660645385,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28820744489603395,\\\"bias\\\":0.21179255510396605,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31103.306930740742,\\\"ask\\\":31541.822839129836,\\\"price\\\":31322.56488493529,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2894903670669142,\\\"bias\\\":0.21050963293308578,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31232.630559675006,\\\"ask\\\":31672.96976192621,\\\"price\\\":31452.80016080061,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28861509455273604,\\\"bias\\\":0.21138490544726396,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31528.593354070796,\\\"ask\\\":31973.105244259103,\\\"price\\\":31750.84929916495,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7133880049681234,\\\"bias\\\":0.21338800496812338,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31708.686429644848,\\\"ask\\\":32155.737396427347,\\\"price\\\":31932.2119130361,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7146068890989106,\\\"bias\\\":0.21460688909891057,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31860.538270890658,\\\"ask\\\":32309.73014983574,\\\"price\\\":32085.1342103632,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7156346343297328,\\\"bias\\\":0.21563463432973284,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":31929.143907835092,\\\"ask\\\":32379.303036445053,\\\"price\\\":32154.223472140075,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7160989626882085,\\\"bias\\\":0.2160989626882085,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32275.9566321368,\\\"ask\\\":32731.005366124627,\\\"price\\\":32503.480999130716,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.713751706833651,\\\"bias\\\":0.21375170683365097,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32317.33334825092,\\\"ask\\\":32772.96543976704,\\\"price\\\":32545.149394008982,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7134776841673869,\\\"bias\\\":0.21347768416738688,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":32205.777976589437,\\\"ask\\\":32659.83728340943,\\\"price\\\":32432.807629999435,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7127382335502946,\\\"bias\\\":0.21273823355029464,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6529652029262172,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":113795.00181823198,\\\"ask\\\":115399.36236753233,\\\"price\\\":114597.18209288214,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.1599765975574179},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6563647562044836,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":137349.9383304773,\\\"ask\\\":139286.39264732192,\\\"price\\\":138318.16548889966,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.16180242738334893},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.5142473207913063,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":149767.65654527076,\\\"ask\\\":151879.18443211244,\\\"price\\\":150823.4204886916,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.16147132997951474},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.5644077349803998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":140135.91251628508,\\\"ask\\\":142111.64542185198,\\\"price\\\":141123.77896906855,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.16762388263638672},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6080838713408526,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":140397.77117468382,\\\"ask\\\":142377.19594451826,\\\"price\\\":141387.48355960107,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.17843260060641786},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.3317530765394548,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":117623.82227683415,\\\"ask\\\":119282.16418204634,\\\"price\\\":118452.99322944024,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.17291329653004228},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.5522298406095901,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":107860.89481083975,\\\"ask\\\":109381.59222005602,\\\"price\\\":108621.24351544789,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.16704189569672445},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4162732355247438,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":107226.09686337957,\\\"ask\\\":108737.84445259135,\\\"price\\\":107981.97065798551,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.169986375671683},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6669087562092001,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":110190.41544896636,\\\"ask\\\":111743.95604945534,\\\"price\\\":110967.18574921087,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.17345796003427583},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6746018035134165,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":133126.4282832249,\\\"ask\\\":135003.33663767113,\\\"price\\\":134064.88246044808,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.18529550561337316},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.3591630679986405,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":144063.17984017637,\\\"ask\\\":146094.2820735725,\\\"price\\\":145078.73095687447,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.19118758232719124},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.45043069789033224,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":125792.93256727379,\\\"ask\\\":127566.44823287483,\\\"price\\\":126679.69040007431,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.19132315200238298},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6800988438849873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":147686.80896003294,\\\"ask\\\":149768.99962009382,\\\"price\\\":148727.90429006334,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.18565108591575818},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.41000407665091143,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":155672.08255232495,\\\"ask\\\":157866.85511600328,\\\"price\\\":156769.46883416412,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.18856644617895346},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.5615612126910793,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":147684.6343438496,\\\"ask\\\":149766.7943446693,\\\"price\\\":148725.71434425944,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.19279556551005983},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.3190992262784001,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":131947.85243502713,\\\"ask\\\":133808.14441296295,\\\"price\\\":132877.99842399507,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.1846629375743476},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.3200109643889057,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":109514.41626839185,\\\"ask\\\":111058.42616542861,\\\"price\\\":110286.42121691024,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.18690700185389464},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4318731676520288,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":91748.80571059087,\\\"ask\\\":93042.34375686305,\\\"price\\\":92395.57473372694,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.18744206050812773},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6847175243478502,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":93626.78054514254,\\\"ask\\\":94946.79557800454,\\\"price\\\":94286.78806157356,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.19618051673495318},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.38149966757841947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":106400.12663307063,\\\"ask\\\":107900.2291233658,\\\"price\\\":107150.17787821824,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.2104027718751359},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.29575648467816157,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":86370.77455074055,\\\"ask\\\":87588.48939838441,\\\"price\\\":86979.6319745625,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.2182642871979999},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.27995475991228524,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":74114.99797166818,\\\"ask\\\":75159.92241437043,\\\"price\\\":74637.46019301927,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.23124465932163812},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2890269958327613,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":58189.471165565665,\\\"ask\\\":59009.8665294306,\\\"price\\\":58599.66884749813,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.22970206585911024},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6125073472499872,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":53913.87195931742,\\\"ask\\\":54673.98697183547,\\\"price\\\":54293.92946557645,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.2302536303415479},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2801333922425049,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":46151.88321467664,\\\"ask\\\":46802.56434761267,\\\"price\\\":46477.22378114467,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.2306981986281758},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2929611406122791,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":34274.5342955367,\\\"ask\\\":34757.760358112246,\\\"price\\\":34516.14732682448,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.226312226083143},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.3867526950997189,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":25421.20061019399,\\\"ask\\\":25779.606258273256,\\\"price\\\":25600.40343423362,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.20769231433690866},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7143317821039968,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":29593.129853134902,\\\"ask\\\":30010.354241799447,\\\"price\\\":29801.742047467167,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.22613367120124028},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.73058707065126,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":39412.22128826823,\\\"ask\\\":39967.88201136564,\\\"price\\\":39690.05164981696,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.23858639968110174},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.38374830990261793,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":42121.50104086156,\\\"ask\\\":42715.35906157863,\\\"price\\\":42418.430051220115,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.23745959192866128},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.5311341539026971,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":43229.983660168524,\\\"ask\\\":43839.46983463212,\\\"price\\\":43534.72674740033,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.23966183401883712},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.5779438688551485,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":37173.089018704064,\\\"ask\\\":37697.18090819234,\\\"price\\\":37435.1349634482,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.23651167331867917},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.387123441198464,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":39864.829050554436,\\\"ask\\\":40426.870950562276,\\\"price\\\":40145.85000055835,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.2333240252832075},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7243537119621883,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":44233.61115107458,\\\"ask\\\":44857.24715924682,\\\"price\\\":44545.4291551607,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.23230755519191948},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7275889982682274,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":50674.620653610604,\\\"ask\\\":51389.066463429874,\\\"price\\\":51031.84355852024,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.23438942840599464},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6708029749669124,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":61788.90670441367,\\\"ask\\\":62660.049397124436,\\\"price\\\":62224.47805076903,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.2405738461375294},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4384048662281884,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":59261.9614465359,\\\"ask\\\":60097.47751929677,\\\"price\\\":59679.71948291631,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.2269707687164388},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4482556840875359,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":66486.56903108301,\\\"ask\\\":67423.94261258868,\\\"price\\\":66955.2558218359,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.22908361539853223},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.27061306864800094,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":55697.845012110025,\\\"ask\\\":56483.111709158904,\\\"price\\\":56090.47836063444,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.2392306436383333},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4245127115011249,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":46106.57920838956,\\\"ask\\\":46756.621614147305,\\\"price\\\":46431.60041126844,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.24607529145664186},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7341939004786522,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":57623.04114456904,\\\"ask\\\":58435.45058668781,\\\"price\\\":58029.2458656284,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.24607529145664186},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.35191484163747766,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":66081.2209463999,\\\"ask\\\":67012.87965057872,\\\"price\\\":66547.05029848927,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.24819516886011156},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.25556771761437586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":55265.62006489284,\\\"ask\\\":56044.79295603938,\\\"price\\\":55655.206510466116,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.251943974918728},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2640004910271998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":41339.52256060422,\\\"ask\\\":41922.35570848785,\\\"price\\\":41630.939134546046,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.2508832818530327},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6232664609263552,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":36845.61698062147,\\\"ask\\\":37365.09194308743,\\\"price\\\":37105.35446185447,\\\"maxShares\\\":7400000,\\\"investedShares\\\":1176826.51,\\\"averagePrice\\\":12314.492022832897,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.22230110694597183},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7229111773343964,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":46890.25631990631,\\\"ask\\\":47551.34754697455,\\\"price\\\":47220.801933440445,\\\"maxShares\\\":7400000,\\\"investedShares\\\":3712681,\\\"averagePrice\\\":38511.775457362986,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.22844932784870853},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.48753214839522857,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":58939.04390222815,\\\"ask\\\":59770.0072603663,\\\"price\\\":59354.52558129723,\\\"maxShares\\\":7400000,\\\"investedShares\\\":1819213.69,\\\"averagePrice\\\":18870.76997410781,\\\"sharesShort\\\":1893465.78,\\\"averageShortPrice\\\":32107.535953894225,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.2379435207598013},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6156962593756571,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":53390.74704231895,\\\"ask\\\":54143.48667836373,\\\"price\\\":53767.11686034135,\\\"maxShares\\\":7400000,\\\"investedShares\\\":2972415.46,\\\"averagePrice\\\":37158.05578113166,\\\"sharesShort\\\":928169.5,\\\"averageShortPrice\\\":15738.988212693244,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.2350558003493467},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6131514289165361,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":63650.3335364616,\\\"ask\\\":64547.719910590946,\\\"price\\\":64099.02672352624,\\\"maxShares\\\":7400000,\\\"investedShares\\\":3094569.52,\\\"averagePrice\\\":38685.09916939735,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.24349319656745977},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4961697997033323,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":57212.134229564545,\\\"ask\\\":58018.75042212638,\\\"price\\\":57615.44232584547,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.24202614560673902},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7263786934048378,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":69883.12625432135,\\\"ask\\\":70868.38684602379,\\\"price\\\":70375.75655017258,\\\"maxShares\\\":7400000,\\\"investedShares\\\":4084949.52,\\\"averagePrice\\\":48021.97236663408,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.24301201599837174},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.6334677687810458,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":91197.78442778485,\\\"ask\\\":92483.55379534674,\\\"price\\\":91840.66911156588,\\\"maxShares\\\":7400000,\\\"investedShares\\\":4489054.67,\\\"averagePrice\\\":52710.42464898244,\\\"sharesShort\\\":1135870.2,\\\"averageShortPrice\\\":20332.888492771854,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.2647600746725665},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.471872872589302,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":86993.6983110463,\\\"ask\\\":88220.19556820102,\\\"price\\\":87606.94693962367,\\\"maxShares\\\":7400000,\\\"investedShares\\\":3330000,\\\"averagePrice\\\":36216.830315142564,\\\"sharesShort\\\":3123643.05,\\\"averageShortPrice\\\":55915.4433551226,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.2661821677609587},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4104135859416362,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":90861.48610228943,\\\"ask\\\":92142.51410373155,\\\"price\\\":91502.00010301053,\\\"maxShares\\\":7400000,\\\"investedShares\\\":2294000,\\\"averagePrice\\\":24949.37199487599,\\\"sharesShort\\\":5032000,\\\"averageShortPrice\\\":65971.52792487106,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.25110969859599297},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.25920475214920397,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":67114.72163964059,\\\"ask\\\":68060.95135057202,\\\"price\\\":67587.83649510625,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":97016.95283069274,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.249048648637968},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.45872611735875246,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":50619.16827825643,\\\"ask\\\":51332.8322821795,\\\"price\\\":50976.00028021796,\\\"maxShares\\\":7400000,\\\"investedShares\\\":3034000,\\\"averagePrice\\\":19967.167229330033,\\\"sharesShort\\\":4292000,\\\"averageShortPrice\\\":56269.832641801775,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.24129902843477846},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4267858949920005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":53950.0895706664,\\\"ask\\\":54710.715204089676,\\\"price\\\":54330.402387378075,\\\"maxShares\\\":7400000,\\\"investedShares\\\":2516000,\\\"averagePrice\\\":16558.138677981002,\\\"sharesShort\\\":4884000,\\\"averageShortPrice\\\":38360.857696039995,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.22894529739441116},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.28240389824515644,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":45641.48687249335,\\\"ask\\\":46284.97208519715,\\\"price\\\":45963.22947884525,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":58122.51166066654,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.2257162144158273},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.45278318020365943,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":38436.28869334092,\\\"ask\\\":38978.19004450584,\\\"price\\\":38707.2393689234,\\\"maxShares\\\":7400000,\\\"investedShares\\\":2812000,\\\"averagePrice\\\":14122.209343434337,\\\"sharesShort\\\":4514000,\\\"averageShortPrice\\\":35454.73211300666,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.21835968712622167},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7078192606931243,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":43065.47734592906,\\\"ask\\\":43672.64419672765,\\\"price\\\":43369.060771328375,\\\"maxShares\\\":7400000,\\\"investedShares\\\":7400000,\\\"averagePrice\\\":37163.70879851141,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.21720679861021353},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.35362058346260433,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":48776.73958756724,\\\"ask\\\":49464.42775899312,\\\"price\\\":49120.583673280176,\\\"maxShares\\\":7400000,\\\"investedShares\\\":962000,\\\"averagePrice\\\":4831.282143806484,\\\"sharesShort\\\":6438000,\\\"averageShortPrice\\\":43754.3774653975,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.20808441256606125},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4438764501986991,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":49087.83208031999,\\\"ask\\\":49779.90624862255,\\\"price\\\":49433.86916447131,\\\"maxShares\\\":7400000,\\\"investedShares\\\":2590000,\\\"averagePrice\\\":16737.083008155623,\\\"sharesShort\\\":4736000,\\\"averageShortPrice\\\":32187.12825040737,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.20386861439980647},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.457621853282756,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":52225.91126674376,\\\"ask\\\":52962.22824331407,\\\"price\\\":52594.069755028904,\\\"maxShares\\\":7400000,\\\"investedShares\\\":2960000,\\\"averagePrice\\\":19128.094866463565,\\\"sharesShort\\\":4366000,\\\"averageShortPrice\\\":32182.55658860351,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.20092106138359395},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.3350108669892923,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":44642.73333352534,\\\"ask\\\":45272.13742886205,\\\"price\\\":44957.43538119369,\\\"maxShares\\\":7400000,\\\"investedShares\\\":666000,\\\"averagePrice\\\":3758.616232547936,\\\"sharesShort\\\":6734000,\\\"averageShortPrice\\\":49637.50253496472,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.22371228166161672},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.5709849677995562,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":44296.208997251764,\\\"ask\\\":44920.72755310424,\\\"price\\\":44608.468275178,\\\"maxShares\\\":7400000,\\\"investedShares\\\":4958000,\\\"averagePrice\\\":27980.809731190173,\\\"sharesShort\\\":2294000,\\\"averageShortPrice\\\":14108.562490792327,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.23035337152408086},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.5300616773392467,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":41965.04108296942,\\\"ask\\\":42556.69322311196,\\\"price\\\":42260.867153040694,\\\"maxShares\\\":7400000,\\\"investedShares\\\":4144000,\\\"averagePrice\\\":22361.857271453635,\\\"sharesShort\\\":3182000,\\\"averageShortPrice\\\":19569.941519486125,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.2068360977164937},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7069156106781859,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":47742.07761128602,\\\"ask\\\":48415.17840338871,\\\"price\\\":48078.62800733736,\\\"maxShares\\\":7400000,\\\"investedShares\\\":7400000,\\\"averagePrice\\\":39931.887984738656,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.21336380052173065},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.7220728222532058,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":57849.513243410845,\\\"ask\\\":58665.115645634134,\\\"price\\\":58257.31444452247,\\\"maxShares\\\":7400000,\\\"investedShares\\\":7400000,\\\"averagePrice\\\":39931.887984738656,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.22992511270248273},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.4813391930980644,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":66861.830387278,\\\"ask\\\":67804.4946626273,\\\"price\\\":67333.16252495261,\\\"maxShares\\\":7400000,\\\"investedShares\\\":3404000,\\\"averagePrice\\\":18368.668472979767,\\\"sharesShort\\\":3996000,\\\"averageShortPrice\\\":38177.85236072127,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.22959646462726757},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.2943766088864038,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":51122.29944806655,\\\"ask\\\":51843.05694280262,\\\"price\\\":51482.678195434586,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392834,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.21484330207390562},{\\\"volatility\\\":0.011000000000000001,\\\"forecast\\\":0.29828233826179296,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FSIG\\\",\\\"bid\\\":37282.26756933352,\\\"ask\\\":37807.89873345303,\\\"price\\\":37545.08315139328,\\\"maxShares\\\":7400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7400000,\\\"averageShortPrice\\\":70699.72659392834,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.20771363323058883}],\\\"recentTicksOfPrices\\\":[32481.5881760186,32450.315093822195,32391.442530280823,32134.903674685735,32422.87552196673,32320.382313112703,32122.229394604703,31875.697424482794,31844.3581092913,31642.324054176377,31512.299660645385,31322.56488493529,31452.80016080061,31750.84929916495,31932.2119130361,32085.1342103632,32154.223472140075,32503.480999130716,32545.149394008982,32432.807629999435]}],[\\\"KGI\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11292.672771719912,\\\"ask\\\":11429.002825302045,\\\"price\\\":11360.837798510978,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42814149211046804,\\\"bias\\\":0.07185850788953196,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11295.499605683573,\\\"ask\\\":11431.863786033879,\\\"price\\\":11363.681695858726,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42815948006378846,\\\"bias\\\":0.07184051993621154,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11261.764048905163,\\\"ask\\\":11397.720958952308,\\\"price\\\":11329.742503928735,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42794427577352145,\\\"bias\\\":0.07205572422647855,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11321.419537073161,\\\"ask\\\":11458.096634100202,\\\"price\\\":11389.758085586682,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42832596725501254,\\\"bias\\\":0.07167403274498746,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11345.311655842333,\\\"ask\\\":11482.277188910854,\\\"price\\\":11413.794422376594,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4281747102066008,\\\"bias\\\":0.0718252897933992,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11349.462774227039,\\\"ask\\\":11486.478421400807,\\\"price\\\":11417.970597813923,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4282009902498462,\\\"bias\\\":0.0717990097501538,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11275.946881021377,\\\"ask\\\":11412.075012381796,\\\"price\\\":11344.010946701586,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.427732881594426,\\\"bias\\\":0.07226711840557398,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11241.248497598192,\\\"ask\\\":11376.957734993744,\\\"price\\\":11309.103116295968,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.427509814540632,\\\"bias\\\":0.07249018545936797,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11170.003659954804,\\\"ask\\\":11304.852798706772,\\\"price\\\":11237.428229330788,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4279721735201825,\\\"bias\\\":0.07202782647981748,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11255.464943109004,\\\"ask\\\":11391.34580761334,\\\"price\\\":11323.405375361172,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42852325574550365,\\\"bias\\\":0.07147674425449635,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11202.326974751613,\\\"ask\\\":11337.56633460777,\\\"price\\\":11269.946654679692,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4288623039613828,\\\"bias\\\":0.07113769603861719,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11131.184012145022,\\\"ask\\\":11265.564503237318,\\\"price\\\":11198.37425769117,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4284076401588914,\\\"bias\\\":0.07159235984110862,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11111.456674933701,\\\"ask\\\":11245.599009037529,\\\"price\\\":11178.527841985615,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4282805347157746,\\\"bias\\\":0.0717194652842254,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11140.762428765665,\\\"ask\\\":11275.258554666256,\\\"price\\\":11208.01049171596,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4284696902024104,\\\"bias\\\":0.07153030979758962,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11074.813295166312,\\\"ask\\\":11208.513254464093,\\\"price\\\":11141.663274815202,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4288956442868285,\\\"bias\\\":0.07110435571317147,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11033.00765036911,\\\"ask\\\":11166.20291375385,\\\"price\\\":11099.60528206148,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4291650688655724,\\\"bias\\\":0.07083493113442763,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":10951.338041692125,\\\"ask\\\":11083.547354066679,\\\"price\\\":11017.442697879402,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4296933203983427,\\\"bias\\\":0.07030667960165732,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11026.606189801652,\\\"ask\\\":11159.724171972295,\\\"price\\\":11093.165180886974,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42921010514617897,\\\"bias\\\":0.07078989485382103,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":10980.671468631655,\\\"ask\\\":11113.234906884754,\\\"price\\\":11046.953187758205,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42950623586013875,\\\"bias\\\":0.07049376413986125,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":10928.20123972795,\\\"ask\\\":11060.13123457376,\\\"price\\\":10994.166237150856,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42984470180339535,\\\"bias\\\":0.07015529819660465,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":10967.733806293721,\\\"ask\\\":11100.14105546427,\\\"price\\\":11033.937430878996,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4300984873015811,\\\"bias\\\":0.06990151269841888,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11036.9393421628,\\\"ask\\\":11170.182070639616,\\\"price\\\":11103.560706401207,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4296574142659119,\\\"bias\\\":0.07034258573408808,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11030.738004824705,\\\"ask\\\":11163.905868062027,\\\"price\\\":11097.321936443366,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4296969599520828,\\\"bias\\\":0.07030304004791721,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":10998.705856668701,\\\"ask\\\":11131.487013892067,\\\"price\\\":11065.096435280384,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4299017074400126,\\\"bias\\\":0.0700982925599874,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11013.391649719159,\\\"ask\\\":11146.350100218786,\\\"price\\\":11079.870874968972,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4299953047260153,\\\"bias\\\":0.07000469527398467,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11093.768779432594,\\\"ask\\\":11227.697577574636,\\\"price\\\":11160.733178503615,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42948440157723555,\\\"bias\\\":0.07051559842276445,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11144.864692017767,\\\"ask\\\":11279.410342223215,\\\"price\\\":11212.13751712049,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.42980918379728517,\\\"bias\\\":0.07019081620271483,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11218.087304210654,\\\"ask\\\":11353.516929613601,\\\"price\\\":11285.802116912128,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43027034282041754,\\\"bias\\\":0.06972965717958246,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11295.738944839739,\\\"ask\\\":11432.106014596355,\\\"price\\\":11363.922479718047,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4307530117579703,\\\"bias\\\":0.06924698824202968,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11240.060511934145,\\\"ask\\\":11375.755407450451,\\\"price\\\":11307.907959692298,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4304099919152698,\\\"bias\\\":0.0695900080847302,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11313.365257341185,\\\"ask\\\":11449.94511960285,\\\"price\\\":11381.655188472017,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.429956144018267,\\\"bias\\\":0.07004385598173302,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11392.009871561022,\\\"ask\\\":11529.5391657851,\\\"price\\\":11460.77451867306,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43044305237018987,\\\"bias\\\":0.06955694762981013,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11381.690427239102,\\\"ask\\\":11519.095140646414,\\\"price\\\":11450.392783942758,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.430506117611057,\\\"bias\\\":0.069493882388943,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11321.393201390872,\\\"ask\\\":11458.06998048211,\\\"price\\\":11389.731590936492,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4308762388714829,\\\"bias\\\":0.06912376112851709,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11233.415504353588,\\\"ask\\\":11369.030178450414,\\\"price\\\":11301.222841402001,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4314176013192874,\\\"bias\\\":0.06858239868071259,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11183.063932527046,\\\"ask\\\":11318.070740565603,\\\"price\\\":11250.567336546324,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4317263925051416,\\\"bias\\\":0.06827360749485839,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11191.293920049624,\\\"ask\\\":11326.400084074367,\\\"price\\\":11258.847002061995,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4316761476937738,\\\"bias\\\":0.06832385230622617,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11175.782655473808,\\\"ask\\\":11310.701560771276,\\\"price\\\":11243.242108122542,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43158131859923676,\\\"bias\\\":0.06841868140076324,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11108.065116174006,\\\"ask\\\":11242.16650590649,\\\"price\\\":11175.115811040248,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4319984159693135,\\\"bias\\\":0.06800158403068651,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11184.079897015885,\\\"ask\\\":11319.098970219295,\\\"price\\\":11251.58943361759,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.431533067103158,\\\"bias\\\":0.06846693289684203,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11157.06178239535,\\\"ask\\\":11291.754681176782,\\\"price\\\":11224.408231786067,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4316988676944608,\\\"bias\\\":0.06830113230553919,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11104.751119386949,\\\"ask\\\":11238.812501109931,\\\"price\\\":11171.78181024844,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43137712455256455,\\\"bias\\\":0.06862287544743545,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11170.336792645505,\\\"ask\\\":11305.1899531201,\\\"price\\\":11237.763372882802,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43178241751579904,\\\"bias\\\":0.06821758248420096,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11161.948306127604,\\\"ask\\\":11296.700197147253,\\\"price\\\":11229.324251637428,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43173115027684955,\\\"bias\\\":0.06826884972315045,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11216.371348314668,\\\"ask\\\":11351.780257952269,\\\"price\\\":11284.075803133468,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4320640131773618,\\\"bias\\\":0.06793598682263818,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11181.140957364798,\\\"ask\\\":11316.124550411456,\\\"price\\\":11248.632753888127,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43184995529324666,\\\"bias\\\":0.06815004470675334,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11232.861413231862,\\\"ask\\\":11368.469398099853,\\\"price\\\":11300.665405665857,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4315347145326629,\\\"bias\\\":0.0684652854673371,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11268.526913360425,\\\"ask\\\":11404.565467646467,\\\"price\\\":11336.546190503446,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4317520989156627,\\\"bias\\\":0.06824790108433731,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11350.069090405894,\\\"ask\\\":11487.09205729208,\\\"price\\\":11418.580573848987,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.432245959601801,\\\"bias\\\":0.06775404039819899,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11300.775859833295,\\\"ask\\\":11437.203737416796,\\\"price\\\":11368.989798625045,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4319504209965762,\\\"bias\\\":0.06804957900342379,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11342.10312560058,\\\"ask\\\":11479.029923897571,\\\"price\\\":11410.566524749076,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4317015617083549,\\\"bias\\\":0.06829843829164511,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11323.483397253522,\\\"ask\\\":11460.185410097629,\\\"price\\\":11391.834403675575,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43158925542212606,\\\"bias\\\":0.06841074457787394,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11230.332516610388,\\\"ask\\\":11365.909971539286,\\\"price\\\":11298.121244074837,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43102181709441356,\\\"bias\\\":0.06897818290558644,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11219.349259122484,\\\"ask\\\":11354.794119393582,\\\"price\\\":11287.071689258033,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4309542904378846,\\\"bias\\\":0.06904570956211542,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11189.751166650152,\\\"ask\\\":11324.838705885366,\\\"price\\\":11257.29493626776,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4311369237481344,\\\"bias\\\":0.06886307625186561,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5452250502206369,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17262.80560783969,\\\"ask\\\":17471.209699684823,\\\"price\\\":17367.007653762255,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.09915933787442865},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.6023042582269378,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17930.748785487147,\\\"ask\\\":18147.216577666073,\\\"price\\\":18038.982681576614,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.10846431646817989},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5073117179807123,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":18842.633154803276,\\\"ask\\\":19070.109611400505,\\\"price\\\":18956.371383101898,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.10499712243351822},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5412145656982775,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":19558.862270857186,\\\"ask\\\":19794.985356622055,\\\"price\\\":19676.923813739613,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.10809063377986161},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5670611947086106,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":20561.907890562845,\\\"ask\\\":20810.14017898011,\\\"price\\\":20686.024034771475,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.11012599611676299},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4004801468976374,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":20817.139379939043,\\\"ask\\\":21068.452933821613,\\\"price\\\":20942.79615688033,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.1020601469086837},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5307850224877348,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":19980.8073196341,\\\"ask\\\":20222.02430940834,\\\"price\\\":20101.415814521217,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.09660299228190661},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4276671625401949,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":21908.62481723781,\\\"ask\\\":22173.11525768737,\\\"price\\\":22040.87003746259,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.09316069483850797},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.41064545662364643,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":20771.452633010445,\\\"ask\\\":21022.214636628287,\\\"price\\\":20896.833634819355,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.09201950266174053},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5246951665665835,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":19183.7732189527,\\\"ask\\\":19415.36806666642,\\\"price\\\":19299.570642809555,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.09065190029737646},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5649711019550518,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":20416.819483376414,\\\"ask\\\":20663.30020148559,\\\"price\\\":20540.059842431,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.0901025433224053},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4111639677346379,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":20543.058030232263,\\\"ask\\\":20791.062754943316,\\\"price\\\":20667.060392587784,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.09353374476477555},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5206258625549873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":18603.15361894295,\\\"ask\\\":18827.73897450362,\\\"price\\\":18715.446296723283,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.09513708468728987},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5941235743181855,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":19288.523929131232,\\\"ask\\\":19521.383372943685,\\\"price\\\":19404.953651037456,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.09640268730419321},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5914388191929628,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":21300.979923294297,\\\"ask\\\":21558.134610497058,\\\"price\\\":21429.55726689568,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.09458708170814001},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4834761211940816,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":22985.159738921695,\\\"ask\\\":23262.646576816114,\\\"price\\\":23123.903157868917,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.09630784476684212},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4096032095577477,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":22134.000398972035,\\\"ask\\\":22401.211671394216,\\\"price\\\":22267.606035183122,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.09482161481219253},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.40684833013465427,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":21392.352459041358,\\\"ask\\\":21650.610235206845,\\\"price\\\":21521.481347124103,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.09741123970882798},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5093286053348983,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":21395.885370659944,\\\"ask\\\":21654.18579766993,\\\"price\\\":21525.035584164936,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.09301898203136683},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.44505163487016786,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":21772.991956964637,\\\"ask\\\":22035.844978577905,\\\"price\\\":21904.418467771262,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.09921186357205874},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4554962710742322,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":19795.861256423177,\\\"ask\\\":20034.845496943377,\\\"price\\\":19915.35337668329,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.10325697627705321},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5965377030634118,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":20429.10614594246,\\\"ask\\\":20675.735193982007,\\\"price\\\":20552.42066996223,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.09906828225776476},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.45135899059792123,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":21333.101801484463,\\\"ask\\\":21590.644277961143,\\\"price\\\":21461.873039722796,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.0967069833452},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.404177722202829,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":20339.94598695025,\\\"ask\\\":20585.49865480075,\\\"price\\\":20462.7223208755,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.09771162382040616},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4020466386891228,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":18524.154015737935,\\\"ask\\\":18747.785653754883,\\\"price\\\":18635.969834746407,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.10070592149940977},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5464473312672712,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":17816.88656695963,\\\"ask\\\":18031.9797649511,\\\"price\\\":17924.43316595537,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.10295302461655853},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5942789680443812,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":20452.262955225295,\\\"ask\\\":20699.171562330634,\\\"price\\\":20575.717258777964,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.09947926569623389},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5920845399993229,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":22554.07357436725,\\\"ask\\\":22826.35615272984,\\\"price\\\":22690.214863548554,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.09555326042954282},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.46296115011680866,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":23869.52672722675,\\\"ask\\\":24157.69002775665,\\\"price\\\":24013.608377491684,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.09668969774698527},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5454764425114285,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":23919.43865082343,\\\"ask\\\":24208.20450978711,\\\"price\\\":24063.821580305263,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.09398471317880286},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.41226376093981576,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":23639.549548882274,\\\"ask\\\":23924.936464965354,\\\"price\\\":23782.243006923814,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.09035977185859395},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.412693548970423,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":21614.079927654042,\\\"ask\\\":21875.014494185074,\\\"price\\\":21744.547210919565,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.08970932544262744},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5691226233784422,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":21430.41879215815,\\\"ask\\\":21689.136121640946,\\\"price\\\":21559.777456899552,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.08706493481685607},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.517982218549695,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":25105.10502071941,\\\"ask\\\":25408.18475940012,\\\"price\\\":25256.64489005977,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.08634793319545297},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4141361018789744,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":25125.742421674215,\\\"ask\\\":25429.07130402844,\\\"price\\\":25277.40686285133,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.08902015996562113},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.41337918404065377,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":23748.638260710104,\\\"ask\\\":24035.342143133184,\\\"price\\\":23891.99020192164,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.0894970547166144},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.47650362388491885,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":23102.525378659648,\\\"ask\\\":23381.42910556499,\\\"price\\\":23241.97724211231,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.08889821185598484},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5879749861104214,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":23965.22590578613,\\\"ask\\\":24254.544528391194,\\\"price\\\":24109.885217088668,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.09442966667350228},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4521778096354613,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":24273.744679420884,\\\"ask\\\":24566.78787474589,\\\"price\\\":24420.266277083385,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.09780051143639734},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5302066680068028,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":24181.244107979765,\\\"ask\\\":24473.170596204898,\\\"price\\\":24327.20735209234,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.10850163396489793},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5151136172603419,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":21858.90478270982,\\\"ask\\\":22122.794981293842,\\\"price\\\":21990.849882001836,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.10921202362734123},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5845815597822029,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":20244.295750658785,\\\"ask\\\":20488.693687286446,\\\"price\\\":20366.49471897261,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.10133027476102563},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4032413840809375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":18928.11860900522,\\\"ask\\\":19156.627083158208,\\\"price\\\":19042.372846081726,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.10062293835779335},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4049874919366932,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":16350.069661223637,\\\"ask\\\":16547.454808039198,\\\"price\\\":16448.762234631417,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.09943724014400668},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5453916778810036,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":14951.69471065379,\\\"ask\\\":15132.198067321635,\\\"price\\\":15041.946388987708,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.0946837629487568},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4067546764834347,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":14385.314124811865,\\\"ask\\\":14558.979888894104,\\\"price\\\":14472.147006852992,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.09548302941460274},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4057932725656947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":13203.918099994109,\\\"ask\\\":13363.321537821008,\\\"price\\\":13283.619818907559,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.09642718269178652},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.40751344722449573,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":12721.980881997302,\\\"ask\\\":12875.566164274935,\\\"price\\\":12798.773523136118,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.09596059304583981},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.40182193329065313,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11926.368725256605,\\\"ask\\\":12070.34903179894,\\\"price\\\":11998.358878527775,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.10079530074918025},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.49778195750819143,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11160.73292755184,\\\"ask\\\":11295.47014599311,\\\"price\\\":11228.101536772478,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.10002478971402967},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.6002205852035641,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11247.040332279868,\\\"ask\\\":11382.819491220878,\\\"price\\\":11314.929911750378,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.10378396488312192},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.40738680431858043,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11228.066052118233,\\\"ask\\\":11363.616145302763,\\\"price\\\":11295.841098710502,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.10203525384891765},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.49341116552372005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":10725.330747586251,\\\"ask\\\":10854.811601681857,\\\"price\\\":10790.071174634057,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.10340987928242207},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.46050674099694733,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11010.532183365456,\\\"ask\\\":11143.456113144512,\\\"price\\\":11076.994148254978,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2101029.96,\\\"averageShortPrice\\\":6827.837204194965,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.10260325411090643},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4327662206752285,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":10679.878447630635,\\\"ask\\\":10808.810581807269,\\\"price\\\":10744.344514718954,\\\"maxShares\\\":20300000,\\\"investedShares\\\":2440114.56,\\\"averagePrice\\\":1684.696838721666,\\\"sharesShort\\\":2890534.2,\\\"averageShortPrice\\\":9032.109225392202,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.10801087386483571},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5850723873748546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11067.800852865961,\\\"ask\\\":11201.416154912633,\\\"price\\\":11134.608503889298,\\\"maxShares\\\":20300000,\\\"investedShares\\\":15250716,\\\"averagePrice\\\":10529.355242010432,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.08842638841159423},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5901546892596089,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":12065.608007289962,\\\"ask\\\":12211.269270959463,\\\"price\\\":12138.438639124712,\\\"maxShares\\\":20300000,\\\"investedShares\\\":15250716,\\\"averagePrice\\\":10529.355242010432,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.09409589807364716},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5954136817084363,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":12342.020204116916,\\\"ask\\\":12491.018435957369,\\\"price\\\":12416.519320037132,\\\"maxShares\\\":20300000,\\\"investedShares\\\":15250716,\\\"averagePrice\\\":10529.355242010432,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.0973668430389083},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.524555616828629,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":13447.456242830194,\\\"ask\\\":13609.799778960942,\\\"price\\\":13528.628010895569,\\\"maxShares\\\":20300000,\\\"investedShares\\\":9302936.76,\\\"averagePrice\\\":6422.90669762636,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.10104439083441391},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.41588649249488185,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":13155.581024687719,\\\"ask\\\":13314.400916333845,\\\"price\\\":13234.99097051079,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.08611007617655025},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.4414151370750361,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":12423.504810932873,\\\"ask\\\":12573.486760360633,\\\"price\\\":12498.495785646755,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.0843287721470437},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5725126661883836,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":12621.589465584093,\\\"ask\\\":12773.962779051913,\\\"price\\\":12697.776122317999,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.07500896241686694},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.48265483954287425,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":13837.27787265529,\\\"ask\\\":14004.327504920746,\\\"price\\\":13920.802688788013,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.07657948993917396},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.44084088834567575,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":13520.857496380839,\\\"ask\\\":13684.087164345197,\\\"price\\\":13602.472330363016,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.07512458944433154},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5213900984926514,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":12773.500904422413,\\\"ask\\\":12927.708158801757,\\\"price\\\":12850.604531612094,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.06966040276411656},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.43175149724268996,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":12129.823303418478,\\\"ask\\\":12276.259802051298,\\\"price\\\":12203.041552734892,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.07029998180295122},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.533238619970991,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11975.221841219452,\\\"ask\\\":12119.791923809633,\\\"price\\\":12047.506882514546,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.06858543743123857},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.474639639669252,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11942.75173612551,\\\"ask\\\":12086.929825495235,\\\"price\\\":12014.840780810373,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.06760242839203284},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.49308863776978434,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11970.660572969697,\\\"ask\\\":12115.175589947197,\\\"price\\\":12042.918081458442,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.06675775366650555},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5385250084650984,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11708.713738335922,\\\"ask\\\":11850.06641928163,\\\"price\\\":11779.39007880877,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.0698006730951567},{\\\"volatility\\\":0.0084,\\\"forecast\\\":0.5309361409979062,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"KGI\\\",\\\"bid\\\":11352.48212650041,\\\"ask\\\":11489.534224607056,\\\"price\\\":11421.008175553723,\\\"maxShares\\\":20300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.07425220308671521}],\\\"recentTicksOfPrices\\\":[11250.567336546324,11258.847002061995,11243.242108122542,11175.115811040248,11251.58943361759,11224.408231786067,11171.78181024844,11237.763372882802,11229.324251637428,11284.075803133468,11248.632753888127,11300.665405665857,11336.546190503446,11418.580573848987,11368.989798625045,11410.566524749076,11391.834403675575,11298.121244074837,11287.071689258033,11257.29493626776]}],[\\\"FLCM\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65481.07163609697,\\\"ask\\\":66670.43519760024,\\\"price\\\":66075.7534168486,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5863946565436381,\\\"bias\\\":0.0863946565436381,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65455.90861180349,\\\"ask\\\":66644.81512543866,\\\"price\\\":66050.36186862108,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5864278689898105,\\\"bias\\\":0.08642786898981047,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65757.02939984048,\\\"ask\\\":66951.40531224928,\\\"price\\\":66354.21735604489,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5860302696199367,\\\"bias\\\":0.08603026961993665,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66291.95895029757,\\\"ask\\\":67496.05104021216,\\\"price\\\":66894.00499525487,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5867301207822156,\\\"bias\\\":0.08673012078221565,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66506.80385466633,\\\"ask\\\":67714.79827382273,\\\"price\\\":67110.80106424453,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5864490380566424,\\\"bias\\\":0.08644903805664239,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66469.45466114569,\\\"ask\\\":67676.7706892997,\\\"price\\\":67073.1126752227,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.586497613780161,\\\"bias\\\":0.08649761378016096,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67134.97411792875,\\\"ask\\\":68354.37828959647,\\\"price\\\":67744.67620376262,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5856315641754294,\\\"bias\\\":0.08563156417542939,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66818.23615105801,\\\"ask\\\":68031.88726177349,\\\"price\\\":67425.06170641576,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5860374828152984,\\\"bias\\\":0.08603748281529844,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67472.72992115296,\\\"ask\\\":68698.26891063909,\\\"price\\\":68085.49941589603,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5851947338931336,\\\"bias\\\":0.08519473389313359,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66689.15285109848,\\\"ask\\\":67900.45936100742,\\\"price\\\":67294.80610605296,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5841937219277079,\\\"bias\\\":0.08419372192770791,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66206.86078073242,\\\"ask\\\":67409.40719249142,\\\"price\\\":66808.13398661192,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5848070415139486,\\\"bias\\\":0.08480704151394858,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66856.69713646197,\\\"ask\\\":68071.04683217974,\\\"price\\\":67463.87198432085,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5839746398844536,\\\"bias\\\":0.08397463988445364,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66674.90700072989,\\\"ask\\\":67885.95475654535,\\\"price\\\":67280.43087863762,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5837456817670845,\\\"bias\\\":0.08374568176708452,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66944.96356790746,\\\"ask\\\":68160.91648841434,\\\"price\\\":67552.9400281609,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5834064826237889,\\\"bias\\\":0.08340648262378891,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67557.17440750894,\\\"ask\\\":68784.24720199447,\\\"price\\\":68170.71080475171,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5826437314019808,\\\"bias\\\":0.08264373140198078,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67166.33076239507,\\\"ask\\\":68386.30447957278,\\\"price\\\":67776.31762098393,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5831246386788905,\\\"bias\\\":0.08312463867889053,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67935.55921171552,\\\"ask\\\":69169.50478771035,\\\"price\\\":68552.53199971294,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5840766310861799,\\\"bias\\\":0.08407663108617991,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67225.99498989819,\\\"ask\\\":68447.05241655627,\\\"price\\\":67836.52370322723,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.584964052229127,\\\"bias\\\":0.08496405222912695,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66796.87499037244,\\\"ask\\\":68010.13810826013,\\\"price\\\":67403.50654931628,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.584418221693529,\\\"bias\\\":0.08441822169352897,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66307.95216280766,\\\"ask\\\":67512.33474497772,\\\"price\\\":66910.1434538927,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5850406809054656,\\\"bias\\\":0.08504068090546557,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65941.6188980789,\\\"ask\\\":67139.34759653038,\\\"price\\\":66540.48324730464,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5845682443655164,\\\"bias\\\":0.08456824436551635,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65308.76157886367,\\\"ask\\\":66494.99539159781,\\\"price\\\":65901.87848523074,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5837487581108999,\\\"bias\\\":0.08374875811089988,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65365.14645876142,\\\"ask\\\":66552.40441664003,\\\"price\\\":65958.77543770072,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5838210633200864,\\\"bias\\\":0.08382106332008643,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65074.09949830621,\\\"ask\\\":66256.07103308877,\\\"price\\\":65665.08526569749,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5834461696851454,\\\"bias\\\":0.0834461696851454,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":64940.9361259263,\\\"ask\\\":66120.48895162425,\\\"price\\\":65530.71253877528,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5832750607663286,\\\"bias\\\":0.08327506076632862,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65668.78359934437,\\\"ask\\\":66861.55666169371,\\\"price\\\":66265.17013051905,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5823417273992213,\\\"bias\\\":0.0823417273992213,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65207.55588356463,\\\"ask\\\":66391.95144956277,\\\"price\\\":65799.7536665637,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5829241489656655,\\\"bias\\\":0.08292414896566547,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65865.48448201879,\\\"ask\\\":67061.83031519369,\\\"price\\\":66463.65739860624,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5837608337388903,\\\"bias\\\":0.08376083373889032,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65172.68452035637,\\\"ask\\\":66356.44670135174,\\\"price\\\":65764.56561085406,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5846512298124936,\\\"bias\\\":0.08465122981249362,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65668.47066833994,\\\"ask\\\":66861.23804677598,\\\"price\\\":66264.85435755797,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5840072651291346,\\\"bias\\\":0.08400726512913459,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66326.17509813231,\\\"ask\\\":67530.88867206407,\\\"price\\\":66928.5318850982,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5831658879834839,\\\"bias\\\":0.0831658879834839,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67034.2391646735,\\\"ask\\\":68251.81363991479,\\\"price\\\":67643.02640229416,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5822780518199184,\\\"bias\\\":0.08227805181991843,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":66941.03134123882,\\\"ask\\\":68156.9128388597,\\\"price\\\":67548.97209004927,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5823926147116595,\\\"bias\\\":0.08239261471165948,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67488.55171067284,\\\"ask\\\":68714.37807877788,\\\"price\\\":68101.46489472536,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5817187136088277,\\\"bias\\\":0.08171871360882765,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":68300.26246330627,\\\"ask\\\":69540.83231632292,\\\"price\\\":68920.5473898146,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5827015759883913,\\\"bias\\\":0.08270157598839134,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":68772.52665945883,\\\"ask\\\":70021.67446962054,\\\"price\\\":69397.1005645397,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5821297334815534,\\\"bias\\\":0.08212973348155339,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":68694.88885979635,\\\"ask\\\":69942.62649801666,\\\"price\\\":69318.7576789065,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5820369118480926,\\\"bias\\\":0.08203691184809259,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":68841.31010909572,\\\"ask\\\":70091.70726546677,\\\"price\\\":69466.50868728125,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.581862052447039,\\\"bias\\\":0.08186205244703904,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":69485.80919017622,\\\"ask\\\":70747.91268707144,\\\"price\\\":70116.86093862384,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5810956519021646,\\\"bias\\\":0.08109565190216461,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":70216.050125108,\\\"ask\\\":71491.41733222398,\\\"price\\\":70853.73372866599,\\\"maxShares\\\":13500000,\\\"investedShares\\\":13500000,\\\"averagePrice\\\":63434.87958991237,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5819479031079017,\\\"bias\\\":0.08194790310790168,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":70477.17727067003,\\\"ask\\\":71757.28745318472,\\\"price\\\":71117.23236192738,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5665344218296614,\\\"bias\\\":0.0665344218296614,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":70987.02480190498,\\\"ask\\\":72276.39558539064,\\\"price\\\":71631.71019364781,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.566053097065735,\\\"bias\\\":0.06605309706573503,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":71630.88199246577,\\\"ask\\\":72931.9474575156,\\\"price\\\":72281.4147249907,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5654539909386187,\\\"bias\\\":0.0654539909386187,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":71713.55320870524,\\\"ask\\\":73016.12027001371,\\\"price\\\":72364.83673935948,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5655295332311063,\\\"bias\\\":0.06552953323110633,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":72250.52871135154,\\\"ask\\\":73562.84911175953,\\\"price\\\":72906.68891155554,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5660202041359846,\\\"bias\\\":0.06602020413598464,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":72600.13786397128,\\\"ask\\\":73918.80838016853,\\\"price\\\":73259.4731220699,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.566339665709975,\\\"bias\\\":0.06633966570997496,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":72088.04363055808,\\\"ask\\\":73397.41273787396,\\\"price\\\":72742.72818421603,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5668109249999446,\\\"bias\\\":0.06681092499994457,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":71738.24421057441,\\\"ask\\\":73041.25974618524,\\\"price\\\":72389.75197837983,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5671366985544931,\\\"bias\\\":0.06713669855449311,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":70949.78960898802,\\\"ask\\\":72238.48407211796,\\\"price\\\":71594.136840553,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5678827788346791,\\\"bias\\\":0.06788277883467908,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":71425.05977883877,\\\"ask\\\":72722.38679803058,\\\"price\\\":72073.72328843467,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5683375040707158,\\\"bias\\\":0.06833750407071582,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":71026.16605015231,\\\"ask\\\":72316.24777457485,\\\"price\\\":71671.20691236359,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5687212978656483,\\\"bias\\\":0.06872129786564829,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":71205.52460230143,\\\"ask\\\":72498.86410062779,\\\"price\\\":71852.19435146461,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5688948360582953,\\\"bias\\\":0.06889483605829527,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":70309.90969432163,\\\"ask\\\":71586.98171702372,\\\"price\\\":70948.44570567268,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5697724256118147,\\\"bias\\\":0.06977242561181474,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":70204.3646043078,\\\"ask\\\":71479.5195618028,\\\"price\\\":70841.9420830553,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5698773213256808,\\\"bias\\\":0.06987732132568081,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":70489.54379422848,\\\"ask\\\":71769.87859573818,\\\"price\\\":71129.71119498333,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0129,\\\"forecast\\\":0.570161172023594,\\\"bias\\\":0.07016117202359395,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.417708508414774,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":39527.774740527704,\\\"ask\\\":40245.73634025472,\\\"price\\\":39886.7555403912,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.1775075415622817},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.3282167500799731,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32537.155996149708,\\\"ask\\\":33128.143693355254,\\\"price\\\":32832.64984475248,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.1762391408689437},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.329751262356979,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":27446.90492111158,\\\"ask\\\":27945.435989305326,\\\"price\\\":27696.170455208452,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.17780906816671133},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.329116767621487,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":22201.99011374222,\\\"ask\\\":22605.25532266993,\\\"price\\\":22403.622718206087,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.17943933250031407},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.3934051864892001,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":16914.738716953983,\\\"ask\\\":17221.969087191297,\\\"price\\\":17068.353902072642,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.17616327237797302},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6601729944371048,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":18995.708981334763,\\\"ask\\\":19340.736995122876,\\\"price\\\":19168.222988228816,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.1678922912632017},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6537996318611345,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":24922.420161211652,\\\"ask\\\":25375.097823070184,\\\"price\\\":25148.758992140913,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.15978523809120926},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6573329138867808,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":30830.81031422589,\\\"ask\\\":31390.804850710312,\\\"price\\\":31110.8075824681,\\\"maxShares\\\":13500000,\\\"investedShares\\\":28382.4,\\\"averagePrice\\\":26468.166794780347,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.17038178131140513},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5353431849751886,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":37494.62198186387,\\\"ask\\\":38175.654469930014,\\\"price\\\":37835.13822589696,\\\"maxShares\\\":13500000,\\\"investedShares\\\":19236.96,\\\"averagePrice\\\":17939.53527201779,\\\"sharesShort\\\":12297.09,\\\"averageShortPrice\\\":15231.94636321076,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.17489194053929835},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.34962222802125204,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":33830.58361157658,\\\"ask\\\":34445.06444407746,\\\"price\\\":34137.82402782704,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":31531,\\\"averageShortPrice\\\":39056.272726181436,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.16150238130010502},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6083107614195989,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":32767.173015820474,\\\"ask\\\":33362.33862054779,\\\"price\\\":33064.75581818414,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":4099.03,\\\"averageShortPrice\\\":5077.315454403586,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.14780045995582713},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6429466649576373,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":39341.78064252532,\\\"ask\\\":40056.363943802266,\\\"price\\\":39699.07229316378,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.14844790055531532},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6330132156935949,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":46662.61879468159,\\\"ask\\\":47510.173929196506,\\\"price\\\":47086.39636193907,\\\"maxShares\\\":13500000,\\\"investedShares\\\":24303.6,\\\"averagePrice\\\":27392.06477180459,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.14329229376791996},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4128417395641385,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":48671.816888383764,\\\"ask\\\":49555.866034691426,\\\"price\\\":49113.8414615376,\\\"maxShares\\\":13500000,\\\"investedShares\\\":6480.96,\\\"averagePrice\\\":7304.550605814563,\\\"sharesShort\\\":34021.68,\\\"averageShortPrice\\\":42697.56967520634,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.12707425877930795},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.45795540004561447,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":44365.32996181817,\\\"ask\\\":45171.1583566847,\\\"price\\\":44768.24415925143,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":27136.34,\\\"averageShortPrice\\\":34056.39485998602,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.13416179197228745},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6257412758398303,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":44859.16558697754,\\\"ask\\\":45673.96375101951,\\\"price\\\":45266.564668998515,\\\"maxShares\\\":13500000,\\\"investedShares\\\":35523.54,\\\"averagePrice\\\":25345.867198014654,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.1361278574710384},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6199107579509154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":53929.45324266964,\\\"ask\\\":54908.999315694906,\\\"price\\\":54419.22627918229,\\\"maxShares\\\":13500000,\\\"investedShares\\\":58582.68,\\\"averagePrice\\\":41798.447659883874,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.14817427283726348},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4434907166604786,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":52267.520417997715,\\\"ask\\\":53216.88002195731,\\\"price\\\":52742.20021997754,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.14828097237964744},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.631556485479203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":54158.576462024495,\\\"ask\\\":55142.28420805519,\\\"price\\\":54650.43033503985,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.14027655351712254},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6279807376711118,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":56287.3121387735,\\\"ask\\\":57309.685114048894,\\\"price\\\":56798.49862641117,\\\"maxShares\\\":13500000,\\\"investedShares\\\":1975.82,\\\"averagePrice\\\":1112.6612280557322,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.13758143388558997},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5533631508606132,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":58193.62923493511,\\\"ask\\\":59250.627545963216,\\\"price\\\":58722.1283904492,\\\"maxShares\\\":13500000,\\\"investedShares\\\":72117.43,\\\"averagePrice\\\":40612.13482403418,\\\"sharesShort\\\":25092.5,\\\"averageShortPrice\\\":15510.05074293465,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.12322760433472324},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.3852792480788779,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":59825.80078901615,\\\"ask\\\":60912.44500112746,\\\"price\\\":60369.12289507182,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":100370,\\\"averageShortPrice\\\":62040.2029717387,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.12162244935078947},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5531654236108148,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":55093.782935954536,\\\"ask\\\":56094.47727787907,\\\"price\\\":55594.13010691681,\\\"maxShares\\\":13500000,\\\"investedShares\\\":90270.72,\\\"averagePrice\\\":39663.876923599564,\\\"sharesShort\\\":25092.5,\\\"averageShortPrice\\\":15510.05074293465,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.1192655029324527},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.39438861075452436,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":53451.92998982972,\\\"ask\\\":54422.80258298506,\\\"price\\\":53937.3662864074,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.11086769227019028},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.38269934381889703,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":46569.51657744202,\\\"ask\\\":47415.38065251162,\\\"price\\\":46992.448614976805,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.12581752455155226},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5533275870815156,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":45509.26676178019,\\\"ask\\\":46335.873019814535,\\\"price\\\":45922.569890797364,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.13097240924797915},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.43416715351513935,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":46942.63552321204,\\\"ask\\\":47795.276733522645,\\\"price\\\":47368.95612836732,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.13325331824891984},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6188238549097842,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":48292.221631696244,\\\"ask\\\":49169.37601047577,\\\"price\\\":48730.798821086035,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.1221795682593183},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4533690453511322,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":49185.73410097746,\\\"ask\\\":50079.117767796415,\\\"price\\\":49632.42593438694,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.12021917365524226},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4322551394193408,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":44659.828626706505,\\\"ask\\\":45471.00613960328,\\\"price\\\":45065.41738315491,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.11633807349685388},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6144534158453522,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":47285.43920180154,\\\"ask\\\":48144.306916869566,\\\"price\\\":47714.87305933556,\\\"maxShares\\\":13500000,\\\"investedShares\\\":141657.2,\\\"averagePrice\\\":19595.034469854083,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.11948745047426212},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.62230251839791,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":53001.88281336708,\\\"ask\\\":53964.580987575566,\\\"price\\\":53483.2319004713,\\\"maxShares\\\":13500000,\\\"investedShares\\\":354143,\\\"averagePrice\\\":48987.58617463521,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.1309372348286384},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6383225029936295,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":55870.617383714736,\\\"ask\\\":56885.42173579028,\\\"price\\\":56378.01955975252,\\\"maxShares\\\":13500000,\\\"investedShares\\\":362116.28,\\\"averagePrice\\\":49171.95456013386,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.145295637961668},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6407390982654391,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":63883.638892406554,\\\"ask\\\":65043.987530210085,\\\"price\\\":64463.813211308356,\\\"maxShares\\\":13500000,\\\"investedShares\\\":411095,\\\"averagePrice\\\":50304.50321391102,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.15617081986541703},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.45792650807759677,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":71109.37080049673,\\\"ask\\\":72400.96381200933,\\\"price\\\":71755.16730625303,\\\"maxShares\\\":13500000,\\\"investedShares\\\":152105.15,\\\"averagePrice\\\":18612.666189147098,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.16382033541005525},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6161660240455695,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":64924.458522821915,\\\"ask\\\":66103.71205804974,\\\"price\\\":65514.085290435825,\\\"maxShares\\\":13500000,\\\"investedShares\\\":16685.72,\\\"averagePrice\\\":51530.347629231605,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.1582006474488996},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6527017716434301,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":75226.72802817849,\\\"ask\\\":76593.10653928568,\\\"price\\\":75909.91728373208,\\\"maxShares\\\":13500000,\\\"investedShares\\\":19402,\\\"averagePrice\\\":59919.00887119954,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.1581419951992976},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6396267419270244,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":91435.73670214094,\\\"ask\\\":93096.52707614552,\\\"price\\\":92266.13188914322,\\\"maxShares\\\":13500000,\\\"investedShares\\\":189875.6,\\\"averagePrice\\\":61545.59119226404,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.15161088362642017},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6375028808134546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":110404.422433451,\\\"ask\\\":112409.74998521896,\\\"price\\\":111407.08620933496,\\\"maxShares\\\":13500000,\\\"investedShares\\\":323023,\\\"averagePrice\\\":92682.9655844967,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.1430487250421103},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.6282935630961883,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":143100.76911682094,\\\"ask\\\":145699.9758212637,\\\"price\\\":144400.37246904237,\\\"maxShares\\\":13500000,\\\"investedShares\\\":323023,\\\"averagePrice\\\":92682.9655844967,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.13352774751982321},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4809777430921405,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":164861.2813243238,\\\"ask\\\":167855.73446644063,\\\"price\\\":166358.5078953822,\\\"maxShares\\\":13500000,\\\"investedShares\\\":138899.89,\\\"averagePrice\\\":39853.675201333535,\\\"sharesShort\\\":184122.54,\\\"averageShortPrice\\\":97309.81883538546,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.12693398249060028},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.3766851589328775,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":134752.67685607987,\\\"ask\\\":137200.25322682594,\\\"price\\\":135976.465041453,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":333396.4,\\\"averageShortPrice\\\":170084.74637430685,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.12828521873745946},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.38078942704471536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":98778.88396994617,\\\"ask\\\":100573.05138816917,\\\"price\\\":99675.96767905774,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":508548.3,\\\"averageShortPrice\\\":115828.08403133668,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.1285502689601229},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.38599266082055755,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":82037.2182480685,\\\"ask\\\":83527.29890242292,\\\"price\\\":82782.25857524575,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":824496.28,\\\"averageShortPrice\\\":97567.75097100691,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.12147946765041406},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5472486038322044,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":74537.24464743822,\\\"ask\\\":75891.09974698804,\\\"price\\\":75214.17219721318,\\\"maxShares\\\":13500000,\\\"investedShares\\\":640646.49,\\\"averagePrice\\\":24933.707370023498,\\\"sharesShort\\\":188159.4,\\\"averageShortPrice\\\":21340.705008772224,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.12012161417942002},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.40242792344781597,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":74921.15369730136,\\\"ask\\\":76281.9819178376,\\\"price\\\":75601.56780756949,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.10161524268636385},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.40476083333685237,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67588.36248563587,\\\"ask\\\":68816.0017638815,\\\"price\\\":68202.18212475868,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.09983084475280463},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5545238692799633,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67092.38885040925,\\\"ask\\\":68311.01952579507,\\\"price\\\":67701.70418810214,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.1058013992541944},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5532583469424366,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":80261.51644585702,\\\"ask\\\":81719.34419159408,\\\"price\\\":80990.43031872548,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":852678.31,\\\"averageShortPrice\\\":19386.46632646087,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.11215188756705419},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4128961478856802,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":78506.17362979267,\\\"ask\\\":79932.11825677175,\\\"price\\\":79219.14594328219,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":3707297,\\\"averageShortPrice\\\":84288.98402809074,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.09371886059927348},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5367292834991225,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":72842.05768257001,\\\"ask\\\":74165.12230243506,\\\"price\\\":73503.58999250253,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":1038043.16,\\\"averageShortPrice\\\":23600.915527865407,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.09097060401731272},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5772368693575136,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":70094.76670365383,\\\"ask\\\":71367.93098283229,\\\"price\\\":70731.34884324306,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.08020956657978962},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5764707114942575,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":77344.78455948601,\\\"ask\\\":78749.63432948675,\\\"price\\\":78047.20944448636,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.07974494095871143},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5776934674550119,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":82634.44277941137,\\\"ask\\\":84135.37110436536,\\\"price\\\":83384.90694188837,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.08123303421101236},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4626473365649841,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":81631.24389731839,\\\"ask\\\":83113.95064822829,\\\"price\\\":82372.59727277338,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.07667191944736318},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5693478398477592,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":83237.50710185546,\\\"ask\\\":84749.38916828677,\\\"price\\\":83993.44813507111,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.07363149328819152},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.47413498002700555,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":84893.57253720543,\\\"ask\\\":86435.53450054517,\\\"price\\\":85664.55351887536,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.07799242689528674},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.564538065380803,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":77970.93313599774,\\\"ask\\\":79387.15593766066,\\\"price\\\":78679.04453682921,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.08148274825694612},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5794701568482147,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":84260.72545780652,\\\"ask\\\":85791.1927214195,\\\"price\\\":85025.959089613,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.08215422319324217},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5816623462196524,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":91319.21494699323,\\\"ask\\\":92977.88888144921,\\\"price\\\":92148.5519142212,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.08558420567338931},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4330842184170581,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":96275.19153180327,\\\"ask\\\":98023.88320442935,\\\"price\\\":97149.53736811638,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.09154647088934204},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4072545872062706,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":78340.80100737065,\\\"ask\\\":79763.74189347822,\\\"price\\\":79052.27145042442,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":3699025.41,\\\"averageShortPrice\\\":39731.15671415366,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.10061641202058086},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4165839938133133,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":58852.76101253005,\\\"ask\\\":59921.73144464464,\\\"price\\\":59387.24622858737,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7252991,\\\"averageShortPrice\\\":77904.22885128185,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.08900941739128337},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5332048190562504,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":55281.9877188894,\\\"ask\\\":56286.10051297623,\\\"price\\\":55784.04411593283,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":1160478.56,\\\"averageShortPrice\\\":12464.676616205084,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.08653950705397473},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.42056759422759,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":51813.785351262224,\\\"ask\\\":52754.90355138603,\\\"price\\\":52284.34445132409,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.0903391332156594},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.41188137759891974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":49239.58406089377,\\\"ask\\\":50133.945829911,\\\"price\\\":49686.764945402385,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.09193966933236197},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5592725531701047,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":47926.299320410304,\\\"ask\\\":48796.80727981233,\\\"price\\\":48361.553300111314,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09719452635357018},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5921632741856088,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":51131.86425276143,\\\"ask\\\":52060.59639862389,\\\"price\\\":51596.230325692675,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.09885289676619702},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.594261734219009,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":56431.361265810636,\\\"ask\\\":57456.35067326224,\\\"price\\\":56943.855969536424,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.09831209301412935},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.5834434386866534,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":65333.09579033025,\\\"ask\\\":66519.77159681452,\\\"price\\\":65926.43369357237,\\\"maxShares\\\":13500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.09499859745524264},{\\\"volatility\\\":0.0129,\\\"forecast\\\":0.4566849972671545,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FLCM\\\",\\\"bid\\\":67446.44755979121,\\\"ask\\\":68671.5091703626,\\\"price\\\":68058.97836507692,\\\"maxShares\\\":13500000,\\\"investedShares\\\":2970000,\\\"averagePrice\\\":13955.673509780727,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.1001594535162379}],\\\"recentTicksOfPrices\\\":[69397.1005645397,69318.7576789065,69466.50868728125,70116.86093862384,70853.73372866599,71117.23236192738,71631.71019364781,72281.4147249907,72364.83673935948,72906.68891155554,73259.4731220699,72742.72818421603,72389.75197837983,71594.136840553,72073.72328843467,71671.20691236359,71852.19435146461,70948.44570567268,70841.9420830553,71129.71119498333]}],[\\\"STM\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12950.24572892688,\\\"ask\\\":13080.39895233318,\\\"price\\\":13015.322340630031,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4380395512798076,\\\"bias\\\":0.06196044872019241,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12946.927629141675,\\\"ask\\\":13077.04750481144,\\\"price\\\":13011.987566976559,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43802367176325513,\\\"bias\\\":0.06197632823674487,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12986.634653641342,\\\"ask\\\":13117.153594883966,\\\"price\\\":13051.894124262655,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4378335961210497,\\\"bias\\\":0.06216640387895028,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12916.584220467801,\\\"ask\\\":13046.399137256421,\\\"price\\\":12981.491678862112,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4381707428036581,\\\"bias\\\":0.061829257196341914,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12888.736906936849,\\\"ask\\\":13018.27195122767,\\\"price\\\":12953.50442908226,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43803715494916434,\\\"bias\\\":0.06196284505083566,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12893.565028680163,\\\"ask\\\":13023.148596807601,\\\"price\\\":12958.356812743883,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43806036623523736,\\\"bias\\\":0.061939633764762636,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12979.628804767279,\\\"ask\\\":13110.077335468455,\\\"price\\\":13044.853070117868,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4384738095892974,\\\"bias\\\":0.06152619041070262,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13020.646960639822,\\\"ask\\\":13151.507734113588,\\\"price\\\":13086.077347376706,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4386682443382775,\\\"bias\\\":0.0613317556617225,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12936.172573150163,\\\"ask\\\":13066.184357804937,\\\"price\\\":13001.178465477551,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43826774237651933,\\\"bias\\\":0.06173225762348067,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13037.503277062593,\\\"ask\\\":13168.533460751663,\\\"price\\\":13103.01836890713,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4387512990919016,\\\"bias\\\":0.06124870090809842,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12974.49374024477,\\\"ask\\\":13104.89066225728,\\\"price\\\":13039.692201251026,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43845384993109604,\\\"bias\\\":0.06154615006890396,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13059.392270197426,\\\"ask\\\":13190.642443767249,\\\"price\\\":13125.017356982338,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.438856576832793,\\\"bias\\\":0.061143423167207,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13035.697586642664,\\\"ask\\\":13166.709622689323,\\\"price\\\":13101.203604665994,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4387454378581602,\\\"bias\\\":0.061254562141839775,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13070.896993229764,\\\"ask\\\":13202.262792156696,\\\"price\\\":13136.579892693231,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4385800363348574,\\\"bias\\\":0.061419963665142574,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13150.58578430118,\\\"ask\\\":13282.752475600688,\\\"price\\\":13216.669129950935,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43895449285874105,\\\"bias\\\":0.06104550714125895,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13201.601651179499,\\\"ask\\\":13334.28106475919,\\\"price\\\":13267.941357969345,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4387176753118333,\\\"bias\\\":0.06128232468816669,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13302.396672051957,\\\"ask\\\":13436.089100916799,\\\"price\\\":13369.242886484379,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43824978108511237,\\\"bias\\\":0.061750218914887633,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13209.44700295744,\\\"ask\\\":13342.205264293696,\\\"price\\\":13275.82613362557,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43868429302292233,\\\"bias\\\":0.061315706977077666,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13153.114383218346,\\\"ask\\\":13285.3064875723,\\\"price\\\":13219.210435395324,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4389468980839397,\\\"bias\\\":0.06105310191606028,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13217.770860214612,\\\"ask\\\":13350.612778407723,\\\"price\\\":13284.191819311169,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4386467806847766,\\\"bias\\\":0.06135321931522342,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13266.724356075278,\\\"ask\\\":13400.058269201661,\\\"price\\\":13333.39131263847,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43887400920912834,\\\"bias\\\":0.061125990790871665,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13352.42948361384,\\\"ask\\\":13486.624754805938,\\\"price\\\":13419.52711920989,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43847912568731506,\\\"bias\\\":0.06152087431268494,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13344.748614771546,\\\"ask\\\":13478.866691301913,\\\"price\\\":13411.80765303673,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43851453540392343,\\\"bias\\\":0.06148546459607657,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13305.076894699818,\\\"ask\\\":13438.796260475694,\\\"price\\\":13371.936577587756,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43833120432216865,\\\"bias\\\":0.061668795677831345,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13286.913413602222,\\\"ask\\\":13420.45023182938,\\\"price\\\":13353.681822715802,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4384155068211568,\\\"bias\\\":0.06158449317884318,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13188.371329840547,\\\"ask\\\":13320.917775366583,\\\"price\\\":13254.644552603566,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43887565949152624,\\\"bias\\\":0.06112434050847376,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13250.560875217558,\\\"ask\\\":13383.732341300145,\\\"price\\\":13317.146608258852,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43858742868177564,\\\"bias\\\":0.06141257131822436,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13339.690862555532,\\\"ask\\\":13473.758107405334,\\\"price\\\":13406.724484980434,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4390005207580683,\\\"bias\\\":0.06099947924193172,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13434.226759879,\\\"ask\\\":13569.244114249643,\\\"price\\\":13501.735437064322,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43856822884322433,\\\"bias\\\":0.06143177115677567,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13502.358611798629,\\\"ask\\\":13638.060708399618,\\\"price\\\":13570.209660099124,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.438256676834283,\\\"bias\\\":0.06174332316571701,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13592.514115459604,\\\"ask\\\":13729.122297524522,\\\"price\\\":13660.818206492064,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4386689381700798,\\\"bias\\\":0.06133106182992021,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13496.459947800944,\\\"ask\\\":13632.102761346681,\\\"price\\\":13564.281354573814,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43910543071097413,\\\"bias\\\":0.06089456928902587,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13483.943369278173,\\\"ask\\\":13619.460388064887,\\\"price\\\":13551.70187867153,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4391619565830609,\\\"bias\\\":0.0608380434169391,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13557.468116925997,\\\"ask\\\":13693.724077900126,\\\"price\\\":13625.596097413061,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43949369201587274,\\\"bias\\\":0.06050630798412726,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13666.175370428504,\\\"ask\\\":13803.523866613714,\\\"price\\\":13734.84961852111,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43997884709820845,\\\"bias\\\":0.06002115290179155,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13603.467649329585,\\\"ask\\\":13740.18591716204,\\\"price\\\":13671.826783245813,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4402555257961129,\\\"bias\\\":0.05974447420388712,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13593.225760344194,\\\"ask\\\":13729.841094619009,\\\"price\\\":13661.533427481601,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4402105110010175,\\\"bias\\\":0.05978948899898251,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13573.93744635368,\\\"ask\\\":13710.35892822658,\\\"price\\\":13642.148187290131,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4401255512432683,\\\"bias\\\":0.0598744487567317,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13658.657800038167,\\\"ask\\\":13795.930742752118,\\\"price\\\":13727.294271395143,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4397518509447822,\\\"bias\\\":0.0602481490552178,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13563.629118889403,\\\"ask\\\":13699.946999481255,\\\"price\\\":13631.78805918533,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4401739578968514,\\\"bias\\\":0.059826042103148624,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13530.084344839534,\\\"ask\\\":13666.065092023848,\\\"price\\\":13598.074718431692,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4400256328004588,\\\"bias\\\":0.05997436719954119,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13465.144450614374,\\\"ask\\\":13600.472535545172,\\\"price\\\":13532.808493079774,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4397363875512568,\\\"bias\\\":0.060263612448743176,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13546.56430727749,\\\"ask\\\":13682.710682224999,\\\"price\\\":13614.637494751245,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4401007842872572,\\\"bias\\\":0.059899215712742815,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13556.987287943532,\\\"ask\\\":13693.238416465576,\\\"price\\\":13625.112852204555,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4401468718673346,\\\"bias\\\":0.05985312813266541,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13624.661804475776,\\\"ask\\\":13761.593078892616,\\\"price\\\":13693.127441684197,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4404456500120131,\\\"bias\\\":0.05955434998798692,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13668.613560983313,\\\"ask\\\":13805.986561596208,\\\"price\\\":13737.300061289761,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.44025353380926247,\\\"bias\\\":0.059746466190737535,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13733.345684192765,\\\"ask\\\":13871.36925890827,\\\"price\\\":13802.357471550518,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.440536482448752,\\\"bias\\\":0.05946351755124801,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13688.847328553084,\\\"ask\\\":13826.423683613917,\\\"price\\\":13757.635506083501,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.44034318430698205,\\\"bias\\\":0.05965681569301795,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13588.178373555933,\\\"ask\\\":13724.742980325338,\\\"price\\\":13656.460676940636,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5592148440667137,\\\"bias\\\":0.059214844066713734,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13527.766225873234,\\\"ask\\\":13663.723675379497,\\\"price\\\":13595.744950626366,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.558950403075863,\\\"bias\\\":0.05895040307586297,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13477.305829150882,\\\"ask\\\":13612.756138991594,\\\"price\\\":13545.030984071238,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5587296868018643,\\\"bias\\\":0.0587296868018643,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13499.99483889489,\\\"ask\\\":13635.673178984285,\\\"price\\\":13567.834008939588,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5586308155249933,\\\"bias\\\":0.058630815524993274,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13614.637726722325,\\\"ask\\\":13751.468256639131,\\\"price\\\":13683.052991680728,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5591287124566349,\\\"bias\\\":0.05912871245663487,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13601.005911461312,\\\"ask\\\":13737.699438209667,\\\"price\\\":13669.35267483549,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5591879751089767,\\\"bias\\\":0.059187975108976665,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13637.838605741774,\\\"ask\\\":13774.902310322092,\\\"price\\\":13706.370458031934,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5593482612382865,\\\"bias\\\":0.059348261238286515,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5318963903871569,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":21454.825452822963,\\\"ask\\\":21670.45183928349,\\\"price\\\":21562.63864605323,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.07313136206575122},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5690997498007522,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23032.0023967021,\\\"ask\\\":23263.479807724227,\\\"price\\\":23147.741102213156,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.07149811448645671},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.506327638676888,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24117.354210833386,\\\"ask\\\":24359.739680288996,\\\"price\\\":24238.546945561193,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.0691493352533733},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5244092986136518,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23337.18332697248,\\\"ask\\\":23571.727883022457,\\\"price\\\":23454.45560499748,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.064303097465635},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4443343678442334,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":21462.138456717097,\\\"ask\\\":21677.83834070419,\\\"price\\\":21569.98839871065,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.06442723458084232},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4914831186163209,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":20648.898191164844,\\\"ask\\\":20856.42480615143,\\\"price\\\":20752.661498658137,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.06471017317634875},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5643072711937923,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":20629.55218683106,\\\"ask\\\":20836.884369613275,\\\"price\\\":20733.21827822217,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.06667735845261225},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.46726389864372886,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":20949.202206501082,\\\"ask\\\":21159.746952295052,\\\"price\\\":21054.47457939806,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.06680155672534427},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5134677365247899,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":21573.997587156897,\\\"ask\\\":21790.821683510225,\\\"price\\\":21682.409635333548,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.06695984141462219},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43408076350692076,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22722.80400945249,\\\"ask\\\":22951.173898994723,\\\"price\\\":22836.98895422361,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.06741297948651637},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4337386819434282,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":21522.680582476867,\\\"ask\\\":21738.988930039453,\\\"price\\\":21630.83475625816,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.06859244302732576},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4823914082637434,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":20569.21064875713,\\\"ask\\\":20775.936383920503,\\\"price\\\":20672.573516338827,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.06862413605260526},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5672873019916458,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":19000.862239244332,\\\"ask\\\":19191.825678834735,\\\"price\\\":19096.343959039532,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.06893239581098343},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.574144923198796,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":19155.761456647597,\\\"ask\\\":19348.2816722923,\\\"price\\\":19252.021564469967,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.07842678062281272},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5749566559309645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":19798.441205999512,\\\"ask\\\":19997.42051460252,\\\"price\\\":19897.930860301007,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.07856406094869828},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.48827191644505546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":18845.773473930694,\\\"ask\\\":19035.17823246266,\\\"price\\\":18940.475853196684,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.07713400254352193},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5369183059451382,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":17187.33849634268,\\\"ask\\\":17360.075566657673,\\\"price\\\":17273.707031500184,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.07513198672258625},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.42711632429404317,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":16613.617895831016,\\\"ask\\\":16780.588929959966,\\\"price\\\":16697.1034128955,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.07651057039021408},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5073997826177866,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":16011.873388989723,\\\"ask\\\":16172.796739632837,\\\"price\\\":16092.335064311288,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.07651057039021408},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5691392287803392,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":17106.019333968787,\\\"ask\\\":17277.939126269983,\\\"price\\\":17191.97923011939,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.07826255474975952},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.46584298222673126,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":16311.17185985266,\\\"ask\\\":16475.103235328563,\\\"price\\\":16393.137547590606,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.07850266825523311},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.49712361383775966,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":16010.127314060719,\\\"ask\\\":16171.033116212075,\\\"price\\\":16090.580215136402,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.07402285498812078},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.42733461664626005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":15912.249989294354,\\\"ask\\\":16072.172099739522,\\\"price\\\":15992.211044516933,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.07374874316966568},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4624652709508153,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":15521.74635703817,\\\"ask\\\":15677.743807862673,\\\"price\\\":15599.745082450425,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.07801680214713441},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.501359312726216,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":15211.473966536852,\\\"ask\\\":15364.353101878925,\\\"price\\\":15287.913534207892,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.07705601722382327},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5346804788003258,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":15011.622580045227,\\\"ask\\\":15162.493158739151,\\\"price\\\":15087.057869392183,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.07778857714100029},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4609656301517006,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":14832.522989814626,\\\"ask\\\":14981.593572626829,\\\"price\\\":14907.058281220714,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.08166829875382364},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5827224906777535,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":16094.984895821179,\\\"ask\\\":16256.743537990234,\\\"price\\\":16175.86421690571,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.084328005047686},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5824373719354362,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":18745.817619358833,\\\"ask\\\":18934.217796437806,\\\"price\\\":18840.01770789833,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.08492658458614877},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.460724219144007,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":19472.191891103284,\\\"ask\\\":19667.892312119384,\\\"price\\\":19570.04210161134,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.08330971245336816},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5734931693676263,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":20079.66880539278,\\\"ask\\\":20281.47452202989,\\\"price\\\":20180.571663711344,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.07638964239169621},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5741451697413915,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22688.067391628563,\\\"ask\\\":22916.08816943389,\\\"price\\\":22802.077780531225,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.07646455931268392},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4438958874130104,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23480.625429060092,\\\"ask\\\":23716.61161427677,\\\"price\\\":23598.618521668428,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.07441688617487435},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4872657129670613,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22378.647494661087,\\\"ask\\\":22603.558524758177,\\\"price\\\":22491.10300970965,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.06624870893437168},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5665001423911206,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22433.460917298056,\\\"ask\\\":22658.922836064874,\\\"price\\\":22546.191876681467,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.06775594814004815},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.46570597482042564,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":20636.236111214726,\\\"ask\\\":20843.635469116376,\\\"price\\\":20739.935790165553,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.07012885191190821},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5170317162059971,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":20611.75867937722,\\\"ask\\\":20818.9120329388,\\\"price\\\":20715.33535615801,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.0663990308236646},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4374398131473755,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":18905.98688258921,\\\"ask\\\":19095.996801007186,\\\"price\\\":19000.991841798204,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.0642986994795311},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5432265827567878,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":17800.529977244198,\\\"ask\\\":17979.429776010475,\\\"price\\\":17889.979876627338,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.06329061381075185},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5614292013212026,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":18067.449028099483,\\\"ask\\\":18249.03143039194,\\\"price\\\":18158.240229245723,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.06472848798242159},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5626666476490353,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":18614.30450848053,\\\"ask\\\":18801.382945751688,\\\"price\\\":18707.84372711611,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.0647388915162751},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5639306511585582,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":19317.7738292214,\\\"ask\\\":19511.92230991708,\\\"price\\\":19414.848069569238,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.06731786504722248},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5659948517470493,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":21260.4128843179,\\\"ask\\\":21474.08537561758,\\\"price\\\":21367.249129967735,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.06868880245772102},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5617375428542629,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22956.363814178458,\\\"ask\\\":23187.08103844157,\\\"price\\\":23071.72242631003,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.0636373620290247},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.557576819461391,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23554.723862916126,\\\"ask\\\":23791.454756010757,\\\"price\\\":23673.08930946344,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.059559251667975266},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5597841789193019,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":23082.67444170777,\\\"ask\\\":23314.66111951389,\\\"price\\\":23198.667780610816,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.06234437187321662},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.49771659645578764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22878.40431499879,\\\"ask\\\":23108.33802670733,\\\"price\\\":22993.371170853065,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.06108577141347327},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4370245296910838,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":21066.209886746914,\\\"ask\\\":21277.930589126274,\\\"price\\\":21172.070237936598,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.06631779911236857},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4285803054243844,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":20611.86171817735,\\\"ask\\\":20819.016107304757,\\\"price\\\":20715.43891274106,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.07576424060185388},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4982953750572404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":19809.537712742163,\\\"ask\\\":20008.62854402601,\\\"price\\\":19909.083128384085,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.07485686176996337},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5749627850403882,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":21645.980573023207,\\\"ask\\\":21863.528116470665,\\\"price\\\":21754.754344746925,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.07735163668888345},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5428212129669912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":24100.27313863824,\\\"ask\\\":24342.48693902654,\\\"price\\\":24221.38003883237,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.08175378148398182},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.49376720939388213,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":22611.041450019446,\\\"ask\\\":22838.28809775833,\\\"price\\\":22724.66477388889,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.07889848489553808},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.47390183910920086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":21640.971126311495,\\\"ask\\\":21858.46832356085,\\\"price\\\":21749.719724936178,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.07680028529286753},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43468418548798965,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":19921.37115010034,\\\"ask\\\":20121.585935528485,\\\"price\\\":20021.478542814413,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.06675357552940864},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.43340708443829645,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":19797.169246050435,\\\"ask\\\":19996.135771136363,\\\"price\\\":19896.65250859339,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.0689745264300809},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4309735211709062,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":19098.9399220347,\\\"ask\\\":19290.889066979762,\\\"price\\\":19194.914494507233,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.07307929667623825},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.44989534662095965,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":17935.030077175667,\\\"ask\\\":18115.281635740244,\\\"price\\\":18025.15585645795,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.076409123364649},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5138762800380421,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":18560.34784402082,\\\"ask\\\":18746.884003257215,\\\"price\\\":18653.61592363902,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.07645614946557133},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.42580591050713823,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":18097.218368645485,\\\"ask\\\":18279.099960290157,\\\"price\\\":18188.15916446782,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.07664520770216549},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4254933640965396,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":16892.79217482886,\\\"ask\\\":17062.568980606033,\\\"price\\\":16977.68057771744,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.0764901309363944},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.42635909897822694,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":16269.433246080167,\\\"ask\\\":16432.945138000578,\\\"price\\\":16351.189192040376,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.07764424317523155},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5146703732598323,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":15940.58078103674,\\\"ask\\\":16100.7876230572,\\\"price\\\":16020.684202046974,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.06943174961201143},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4548824433035169,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":15920.173284597111,\\\"ask\\\":16080.175026150864,\\\"price\\\":16000.17415537399,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.06823194310969599},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.47941377633800286,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":14569.565820510306,\\\"ask\\\":14715.99361770137,\\\"price\\\":14642.77971910584,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.06198740542420994},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.5563693977612236,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":14598.152948497112,\\\"ask\\\":14744.868053507129,\\\"price\\\":14671.510501002127,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.058180240550238294},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4640035210744125,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":15057.654112335127,\\\"ask\\\":15208.987319494272,\\\"price\\\":15133.320715914704,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.05824501236395674},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4454014658506394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":14220.71538926292,\\\"ask\\\":14363.637151969084,\\\"price\\\":14292.176270615999,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.056853843424201855},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4438739314161916,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13002.161656873433,\\\"ask\\\":13132.836648399807,\\\"price\\\":13067.499152636621,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.058325406389052425},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.4452245766219621,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":12905.334611781274,\\\"ask\\\":13035.036467176058,\\\"price\\\":12970.185539478669,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.06257722611606215},{\\\"volatility\\\":0.0086,\\\"forecast\\\":0.527452565092293,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"STM\\\",\\\"bid\\\":13277.64310394543,\\\"ask\\\":13411.086753231306,\\\"price\\\":13344.364928588366,\\\"maxShares\\\":11800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.06494249899688254}],\\\"recentTicksOfPrices\\\":[13671.826783245813,13661.533427481601,13642.148187290131,13727.294271395143,13631.78805918533,13598.074718431692,13532.808493079774,13614.637494751245,13625.112852204555,13693.127441684197,13737.300061289761,13802.357471550518,13757.635506083501,13656.460676940636,13595.744950626366,13545.030984071238,13567.834008939588,13683.052991680728,13669.35267483549,13706.370458031934]}],[\\\"DCOMM\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14849.794838887303,\\\"ask\\\":15029.068016016727,\\\"price\\\":14939.431427452015,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.403492181680801,\\\"bias\\\":0.09650781831919902,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14852.892563200267,\\\"ask\\\":15032.20313740389,\\\"price\\\":14942.547850302079,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4035123135828536,\\\"bias\\\":0.09648768641714639,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14815.907321183788,\\\"ask\\\":14994.77139347172,\\\"price\\\":14905.339357327754,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40375317769980484,\\\"bias\\\":0.09624682230019516,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14750.79276339456,\\\"ask\\\":14928.870744441576,\\\"price\\\":14839.831753918068,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4033283144824022,\\\"bias\\\":0.0966716855175978,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14724.897233214813,\\\"ask\\\":14902.662592167106,\\\"price\\\":14813.77991269096,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4034983234481831,\\\"bias\\\":0.0965016765518169,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14729.386957948102,\\\"ask\\\":14907.206518808644,\\\"price\\\":14818.296738378373,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40346889940826236,\\\"bias\\\":0.09653110059173764,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14649.793299351619,\\\"ask\\\":14826.65197097357,\\\"price\\\":14738.222635162594,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4029444371644994,\\\"bias\\\":0.0970555628355006,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14612.20702633761,\\\"ask\\\":14788.611940136454,\\\"price\\\":14700.409483237032,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4026947858369697,\\\"bias\\\":0.09730521416303028,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14689.873691220873,\\\"ask\\\":14867.216230752714,\\\"price\\\":14778.544960986794,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4021775900809712,\\\"bias\\\":0.0978224099190288,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14596.807332236598,\\\"ask\\\":14773.026334235432,\\\"price\\\":14684.916833236015,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4028012864353188,\\\"bias\\\":0.09719871356468118,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14539.334844848905,\\\"ask\\\":14714.86001400201,\\\"price\\\":14627.097429425457,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40318550290044997,\\\"bias\\\":0.09681449709955003,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14462.307146849695,\\\"ask\\\":14636.902404155726,\\\"price\\\":14549.60477550271,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4037011466195888,\\\"bias\\\":0.09629885338041122,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14483.704192131137,\\\"ask\\\":14658.557763867126,\\\"price\\\":14571.130977999132,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40384362118505124,\\\"bias\\\":0.09615637881494876,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14451.940803527483,\\\"ask\\\":14626.410913831638,\\\"price\\\":14539.17585867956,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4036322826203185,\\\"bias\\\":0.09636771737968147,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14380.578674660928,\\\"ask\\\":14554.187270330878,\\\"price\\\":14467.382972495903,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40315406782647706,\\\"bias\\\":0.09684593217352294,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14335.31321371707,\\\"ask\\\":14508.375345069793,\\\"price\\\":14421.844279393432,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4028482652468601,\\\"bias\\\":0.09715173475313987,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14246.775434874773,\\\"ask\\\":14418.768699682114,\\\"price\\\":14332.772067278444,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.403452022837133,\\\"bias\\\":0.096547977162867,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14328.373409435275,\\\"ask\\\":14501.351760454616,\\\"price\\\":14414.862584944945,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4028990472237799,\\\"bias\\\":0.0971009527762201,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14378.322528307635,\\\"ask\\\":14551.90388679827,\\\"price\\\":14465.113207552953,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4025605505295463,\\\"bias\\\":0.09743944947045369,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14435.852114510179,\\\"ask\\\":14610.12799516825,\\\"price\\\":14522.990054839214,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4029504187632573,\\\"bias\\\":0.09704958123674268,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14479.369971972994,\\\"ask\\\":14654.17121911955,\\\"price\\\":14566.770595546272,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40265785620376415,\\\"bias\\\":0.09734214379623585,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14403.63182069691,\\\"ask\\\":14577.518723964882,\\\"price\\\":14490.575272330896,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40316970724967777,\\\"bias\\\":0.09683029275032223,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14396.887035270564,\\\"ask\\\":14570.692512557533,\\\"price\\\":14483.789773914048,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40312434330775254,\\\"bias\\\":0.09687565669224746,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14431.827753486928,\\\"ask\\\":14606.05505030971,\\\"price\\\":14518.941401898319,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4028892296325381,\\\"bias\\\":0.09711077036746191,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14415.78743673556,\\\"ask\\\":14589.821087883274,\\\"price\\\":14502.804262309417,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40278117535360963,\\\"bias\\\":0.09721882464639037,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14503.460974973994,\\\"ask\\\":14678.55305917891,\\\"price\\\":14591.007017076452,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40337243811865364,\\\"bias\\\":0.09662756188134636,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14559.12792856552,\\\"ask\\\":14734.892048427477,\\\"price\\\":14647.009988496498,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40300156374513735,\\\"bias\\\":0.09699843625486265,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14479.849829193166,\\\"ask\\\":14654.656869384633,\\\"price\\\":14567.2533492889,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40247049113326044,\\\"bias\\\":0.09752950886673956,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14396.804220405753,\\\"ask\\\":14570.608697915683,\\\"price\\\":14483.706459160718,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4019079081242412,\\\"bias\\\":0.09809209187575879,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14337.618881348226,\\\"ask\\\":14510.70884772265,\\\"price\\\":14424.163864535438,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40150298637506,\\\"bias\\\":0.09849701362494001,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14260.118235657064,\\\"ask\\\":14432.272580554334,\\\"price\\\":14346.1954081057,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4020382962531714,\\\"bias\\\":0.09796170374682861,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14177.986596006827,\\\"ask\\\":14349.149412055198,\\\"price\\\":14263.568004031013,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4026057784762061,\\\"bias\\\":0.0973942215237939,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14167.282380418035,\\\"ask\\\":14338.315970523685,\\\"price\\\":14252.79917547086,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40253219141015495,\\\"bias\\\":0.09746780858984505,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14104.6816357497,\\\"ask\\\":14274.95948245895,\\\"price\\\":14189.820559104324,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40209960047641485,\\\"bias\\\":0.09790039952358515,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14013.224499151012,\\\"ask\\\":14182.398235559274,\\\"price\\\":14097.811367355143,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4014606547282156,\\\"bias\\\":0.09853934527178437,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14065.803104035716,\\\"ask\\\":14235.611592213208,\\\"price\\\":14150.707348124462,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40109092816735475,\\\"bias\\\":0.09890907183264525,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14057.182148694648,\\\"ask\\\":14226.886560952533,\\\"price\\\":14142.03435482359,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40115158688843244,\\\"bias\\\":0.09884841311156756,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14073.44086618382,\\\"ask\\\":14243.341560745397,\\\"price\\\":14158.391213464609,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40126591623310714,\\\"bias\\\":0.09873408376689286,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14002.306236156153,\\\"ask\\\":14171.34816254838,\\\"price\\\":14086.827199352267,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4017675059285063,\\\"bias\\\":0.0982324940714937,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14082.156794338456,\\\"ask\\\":14252.162711372725,\\\"price\\\":14167.15975285559,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.7231551216,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4012073182457806,\\\"bias\\\":0.0987926817542194,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14053.796051461157,\\\"ask\\\":14223.459585281615,\\\"price\\\":14138.627818371386,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4083526377897263,\\\"bias\\\":0.0916473622102737,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14108.964884252715,\\\"ask\\\":14279.294440199426,\\\"price\\\":14194.12966222607,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40799287178892113,\\\"bias\\\":0.09200712821107887,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14039.864284752959,\\\"ask\\\":14209.35962823086,\\\"price\\\":14124.61195649191,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40754003637764585,\\\"bias\\\":0.09245996362235415,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14048.657045735463,\\\"ask\\\":14218.25853924535,\\\"price\\\":14133.457792490406,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40748213137628014,\\\"bias\\\":0.09251786862371986,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14105.738676565985,\\\"ask\\\":14276.029284331367,\\\"price\\\":14190.883980448676,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40785804423434285,\\\"bias\\\":0.09214195576565715,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14068.797809728889,\\\"ask\\\":14238.64245129503,\\\"price\\\":14153.72013051196,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40809998414733917,\\\"bias\\\":0.09190001585266083,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14014.774512121116,\\\"ask\\\":14183.966960959599,\\\"price\\\":14099.370736540357,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40774573357396937,\\\"bias\\\":0.09225426642603063,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":13977.79040013535,\\\"ask\\\":14146.536360700366,\\\"price\\\":14062.163380417858,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40798983096153874,\\\"bias\\\":0.09201016903846126,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14062.079697535359,\\\"ask\\\":14231.84323513136,\\\"price\\\":14146.96146633336,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40743498843779963,\\\"bias\\\":0.09256501156220037,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14011.149946232346,\\\"ask\\\":14180.298637736158,\\\"price\\\":14095.724291984252,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40777145710998675,\\\"bias\\\":0.09222854289001325,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14053.84926504574,\\\"ask\\\":14223.513441283716,\\\"price\\\":14138.681353164728,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4074903883917396,\\\"bias\\\":0.09250961160826038,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":14034.617788188958,\\\"ask\\\":14204.049793680171,\\\"price\\\":14119.333790934565,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4073636235249279,\\\"bias\\\":0.09263637647507211,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":13938.27435631108,\\\"ask\\\":14106.543262021072,\\\"price\\\":14022.408809166076,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4080039399800491,\\\"bias\\\":0.09199606001995092,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":13926.912818759067,\\\"ask\\\":14095.044563049922,\\\"price\\\":14010.978690904494,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40792888984480685,\\\"bias\\\":0.09207111015519315,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":13896.281854969122,\\\"ask\\\":14064.043808952654,\\\"price\\\":13980.162831960888,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40772594154031094,\\\"bias\\\":0.09227405845968906,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.601185070328073,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20009.17633804459,\\\"ask\\\":20250.735810938488,\\\"price\\\":20129.956074491536,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.10474480596452873},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.44967508422948027,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19602.815017117857,\\\"ask\\\":19839.468719537774,\\\"price\\\":19721.14186832782,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.1023503598482467},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6009800333114551,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20298.024572983017,\\\"ask\\\":20543.07114730474,\\\"price\\\":20420.547860143877,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.10244878167637106},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6066087371251059,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":22136.197017324303,\\\"ask\\\":22403.434808277918,\\\"price\\\":22269.81591280111,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.1126104207784685},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4442885018401212,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":22344.876547009786,\\\"ask\\\":22614.633607939482,\\\"price\\\":22479.75507747463,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.11323796221161131},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6045648120265941,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":24596.758585567797,\\\"ask\\\":24893.701345152134,\\\"price\\\":24745.22996535997,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.1079513476732632},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6067419877620113,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":26836.01262247777,\\\"ask\\\":27159.988629992597,\\\"price\\\":26998.000626235196,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.11057677318422932},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6096677634159731,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":29647.081966736587,\\\"ask\\\":30004.994425087534,\\\"price\\\":29826.03819591205,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.11239675742797961},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6059470149593014,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":31638.02575815727,\\\"ask\\\":32019.973755237632,\\\"price\\\":31828.99975669743,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.11044473005623978},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.47058757160532333,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":33895.58503755379,\\\"ask\\\":34304.78727140757,\\\"price\\\":34100.18615448068,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.10528962373638207},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.39860898526674654,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":33296.134538637816,\\\"ask\\\":33698.09994554289,\\\"price\\\":33497.117242090346,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.10568729018687906},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40128236711650134,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":31526.06202473043,\\\"ask\\\":31906.658346960558,\\\"price\\\":31716.3601858455,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.10140182887677635},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5225228801357166,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":32028.513753333522,\\\"ask\\\":32415.175891200717,\\\"price\\\":32221.844822267118,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.10126806924160825},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4513361515305856,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":32787.42822021666,\\\"ask\\\":33183.25230335812,\\\"price\\\":32985.34026178739,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.10077648255676253},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.599007398942732,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":33204.00477490309,\\\"ask\\\":33604.85795126009,\\\"price\\\":33404.43136308161,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.1015260528537465},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5976926362678143,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":34653.28303097748,\\\"ask\\\":35071.63252430921,\\\"price\\\":34862.45777764335,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.10285959144393308},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5878742271153764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":37548.96871940626,\\\"ask\\\":38002.27618885582,\\\"price\\\":37775.622454131044,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.10450753822836234},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3972003801375201,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":37636.72912969652,\\\"ask\\\":38091.096080960444,\\\"price\\\":37863.91260532848,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.10635714752612702},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40072778629765987,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":33968.332727723915,\\\"ask\\\":34378.41320331013,\\\"price\\\":34173.37296551703,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.10138654982433382},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4014695871429063,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":31634.268972206646,\\\"ask\\\":32016.171615734293,\\\"price\\\":31825.22029397045,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.10092328343158413},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.39818434927635676,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":28405.330171439982,\\\"ask\\\":28748.251662443272,\\\"price\\\":28576.790916941627,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.107900331663423},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.50192222245437,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":26916.89362783324,\\\"ask\\\":27241.8460659962,\\\"price\\\":27079.369846914717,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.10637394776826992},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5969259321464954,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":29220.880552215636,\\\"ask\\\":29573.647721860114,\\\"price\\\":29397.264137037884,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.10331038921171198},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40363235182093915,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":28746.09920158235,\\\"ask\\\":29093.134604418356,\\\"price\\\":28919.61690300035,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.09921868324709043},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3967953034181408,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":26946.62456228263,\\\"ask\\\":27271.935925207577,\\\"price\\\":27109.280243745106,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.10585683373707999},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.39499996037022844,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":24885.29902860989,\\\"ask\\\":25185.72517382451,\\\"price\\\":25035.512101217206,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.10717501794650991},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5540389240860424,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":25557.95279074637,\\\"ask\\\":25866.49950451796,\\\"price\\\":25712.22614763216,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.10902694588614392},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.39641193551654547,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":24223.233118524397,\\\"ask\\\":24515.666516333557,\\\"price\\\":24369.44981742898,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.1051293217117022},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3974485888158002,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":21376.30482412614,\\\"ask\\\":21634.36886626851,\\\"price\\\":21505.336845197322,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.10557981273277406},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5902410940716935,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":22080.10159151431,\\\"ask\\\":22346.662174108034,\\\"price\\\":22213.381882811176,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.10495355613743185},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6026329136630736,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":23671.26180825484,\\\"ask\\\":23957.031568515464,\\\"price\\\":23814.146688385154,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.10496371575815677},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6037245826942257,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":24454.67326788634,\\\"ask\\\":24749.900711764247,\\\"price\\\":24602.2869898253,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.10678462716791659},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5716099245721074,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":24767.788394003026,\\\"ask\\\":25066.79589976563,\\\"price\\\":24917.292146884323,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.10812140194694819},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.3966901249854651,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":24227.662984920968,\\\"ask\\\":24520.149862002512,\\\"price\\\":24373.90642346172,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.10879419092054099},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.400803332208268,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":22181.064972490018,\\\"ask\\\":22448.844428898337,\\\"price\\\":22314.95470069419,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.102632109348677},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.42858592865225476,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20636.368981622494,\\\"ask\\\":20885.50019669239,\\\"price\\\":20760.934589157452,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.09816218733292992},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5238861544677322,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20257.527140024173,\\\"ask\\\":20502.084811734716,\\\"price\\\":20379.805975879448,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.09700743521914751},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40128330819913494,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19983.941137182337,\\\"ask\\\":20225.195959764023,\\\"price\\\":20104.568548473184,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.10403783581222881},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.39761252033377675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19729.92886183418,\\\"ask\\\":19968.117137832167,\\\"price\\\":19849.022999833174,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.10466821329065368},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4675145864931455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":18945.81079381451,\\\"ask\\\":19174.53285571167,\\\"price\\\":19060.171824763085,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.1009474737468008},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.48411074511218005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20140.16927418311,\\\"ask\\\":20383.3101507326,\\\"price\\\":20261.739712457853,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.09784498441527473},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4182753442531429,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19684.621144746972,\\\"ask\\\":19922.262446293214,\\\"price\\\":19803.4417955201,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.09705413812390573},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5359020877335571,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19922.664221472332,\\\"ask\\\":20163.179282496138,\\\"price\\\":20042.921751984242,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.0968479741666547},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40579949078413613,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":18509.03770590785,\\\"ask\\\":18732.486853262864,\\\"price\\\":18620.762279585353,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.09756608500180747},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.41007743316346534,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":17624.075541168262,\\\"ask\\\":17836.84104065923,\\\"price\\\":17730.458290913746,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.09181724395778518},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4602683321346727,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":17148.589258436245,\\\"ask\\\":17355.6144808721,\\\"price\\\":17252.10186965418,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.09110648441933322},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4952093667739039,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":17363.60707355023,\\\"ask\\\":17573.228084498518,\\\"price\\\":17468.41757902438,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.09205195443636105},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.552489586992834,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":17529.00395584327,\\\"ask\\\":17740.621709837353,\\\"price\\\":17634.81283284031,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.10098301821475941},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5491868475552568,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":18721.56732016983,\\\"ask\\\":18947.582217395226,\\\"price\\\":18834.574768782528,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.10157537418570273},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40180580232894675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":17834.066421994718,\\\"ask\\\":18049.36702266268,\\\"price\\\":17941.716722328703,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.1000421595074692},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5482325728467752,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":17349.045638017193,\\\"ask\\\":17558.490856987217,\\\"price\\\":17453.768247502205,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.10467551327550206},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5597650744695344,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":18484.85683149799,\\\"ask\\\":18708.014056827935,\\\"price\\\":18596.435444162966,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.10957920157196843},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.49076661133797295,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":17841.58518037907,\\\"ask\\\":18056.976550765932,\\\"price\\\":17949.280865572495,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.11023442261659755},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6096135825303074,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":17900.749778761445,\\\"ask\\\":18116.85540989337,\\\"price\\\":18008.80259432741,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.11189508285579819},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6109257512274966,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":18884.315435414555,\\\"ask\\\":19112.295098618753,\\\"price\\\":18998.30526701665,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.1132158918831827},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.6111738078258514,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19477.109799405265,\\\"ask\\\":19712.245933804523,\\\"price\\\":19594.6778666049,\\\"maxShares\\\":12100000,\\\"investedShares\\\":3651095.76,\\\"averagePrice\\\":7768.624460138767,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.11536049655316394},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4700528439636355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20156.55168473109,\\\"ask\\\":20399.890336860633,\\\"price\\\":20278.221010795874,\\\"maxShares\\\":12100000,\\\"investedShares\\\":3183006.56,\\\"averagePrice\\\":6772.646965249182,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.1065083720703518},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4335471723077006,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":18962.153280303377,\\\"ask\\\":19191.0726358,\\\"price\\\":19076.612958051675,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.10189239302914532},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5228558580241173,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19520.452231436226,\\\"ask\\\":19756.111614511923,\\\"price\\\":19638.281922974067,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":4356000,\\\"averageShortPrice\\\":7141.166869584484,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.10356836738060704},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5229574534185891,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19021.891114608457,\\\"ask\\\":19251.531651203335,\\\"price\\\":19136.71138290589,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":4477000,\\\"averageShortPrice\\\":7339.532615961831,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.0962149584275101},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5920862485580568,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19317.47687870783,\\\"ask\\\":19550.685855110743,\\\"price\\\":19434.081366909282,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.09481765400096265},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5233978603825689,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20422.837158099617,\\\"ask\\\":20669.39052419337,\\\"price\\\":20546.1138411465,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.0982414124908979},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5222429314447617,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20776.02526260412,\\\"ask\\\":21026.84246899371,\\\"price\\\":20901.433865798906,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.10099298626852138},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.43329433256378386,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":21154.490897278585,\\\"ask\\\":21409.877105294017,\\\"price\\\":21282.184001286296,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":8954000,\\\"averageShortPrice\\\":16011.853338960738,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.10004316560227794},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4013999683441895,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19820.07198752401,\\\"ask\\\":20059.348510512234,\\\"price\\\":19939.710249018113,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":21637.639647244232,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.10069127938714134},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5128634893779067,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":19795.37036834978,\\\"ask\\\":20034.34868265581,\\\"price\\\":19914.859525502812,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":5203000,\\\"averageShortPrice\\\":9304.185048315023,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.10048344399496417},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.5808761818883607,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20858.834828026556,\\\"ask\\\":21110.6517474796,\\\"price\\\":20984.74328775308,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09695265556073734},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4031486628545536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":20722.345430372694,\\\"ask\\\":20972.514590497914,\\\"price\\\":20847.4300104353,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":4961000,\\\"averageShortPrice\\\":8356.09649359985,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.10047606019122751},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.40483970602530356,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":18171.486515873567,\\\"ask\\\":18390.860598560175,\\\"price\\\":18281.173557216865,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.723155121566,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.0988283659677896},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4051473397294977,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":16295.337883245857,\\\"ask\\\":16492.06228425085,\\\"price\\\":16393.70008374837,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.723155121566,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.09674243903823665},{\\\"volatility\\\":0.006999999999999999,\\\"forecast\\\":0.4044189470435328,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"DCOMM\\\",\\\"bid\\\":15112.9765125485,\\\"ask\\\":15295.426933223125,\\\"price\\\":15204.201722885806,\\\"maxShares\\\":12100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":12100000,\\\"averageShortPrice\\\":20380.723155121566,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.0982280648690772}],\\\"recentTicksOfPrices\\\":[14150.707348124462,14142.03435482359,14158.391213464609,14086.827199352267,14167.15975285559,14138.627818371386,14194.12966222607,14124.61195649191,14133.457792490406,14190.883980448676,14153.72013051196,14099.370736540357,14062.163380417858,14146.96146633336,14095.724291984252,14138.681353164728,14119.333790934565,14022.408809166076,14010.978690904494,13980.162831960888]}],[\\\"HLS\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14036.081763842725,\\\"ask\\\":14092.33860457957,\\\"price\\\":14064.210184211148,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5852947679974926,\\\"bias\\\":0.08529476799749258,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14038.67511812043,\\\"ask\\\":14094.942353062797,\\\"price\\\":14066.808735591614,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.585310527349367,\\\"bias\\\":0.08531052734936695,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14007.703720130909,\\\"ask\\\":14063.846821213598,\\\"price\\\":14035.775270672253,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5854991511486721,\\\"bias\\\":0.08549915114867213,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14062.471272314682,\\\"ask\\\":14118.833882624562,\\\"price\\\":14090.652577469622,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5858334371469884,\\\"bias\\\":0.08583343714698843,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14084.375494312611,\\\"ask\\\":14140.825897095427,\\\"price\\\":14112.600695704019,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5859671344627522,\\\"bias\\\":0.08596713446275217,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14088.17912801691,\\\"ask\\\":14144.644775824594,\\\"price\\\":14116.411951920752,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5859903507913878,\\\"bias\\\":0.08599035079138784,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14020.709145063658,\\\"ask\\\":14076.904372097983,\\\"price\\\":14048.80675858082,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5855765509299107,\\\"bias\\\":0.08557655092991068,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13988.83865380125,\\\"ask\\\":14044.906143395641,\\\"price\\\":14016.872398598445,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5857715182739609,\\\"bias\\\":0.0857715182739609,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13923.291414917241,\\\"ask\\\":13979.096190127331,\\\"price\\\":13951.193802522286,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5861753082996243,\\\"bias\\\":0.08617530829962428,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13845.106172372745,\\\"ask\\\":13900.597579877247,\\\"price\\\":13872.851876124996,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5856886643333832,\\\"bias\\\":0.08568866433338318,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13796.801679593173,\\\"ask\\\":13852.09948191619,\\\"price\\\":13824.450580754681,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5859886720861731,\\\"bias\\\":0.08598867208617311,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13861.886754554946,\\\"ask\\\":13917.44541890186,\\\"price\\\":13889.666086728403,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5863943153141156,\\\"bias\\\":0.08639431531411557,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13880.051621498696,\\\"ask\\\":13935.68309092354,\\\"price\\\":13907.867356211118,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5865075279863993,\\\"bias\\\":0.08650752798639927,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13907.071623990441,\\\"ask\\\":13962.81139001846,\\\"price\\\":13934.94150700445,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5866759303587742,\\\"bias\\\":0.08667593035877419,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13968.196891925047,\\\"ask\\\":14024.18164900691,\\\"price\\\":13996.189270465979,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5870568940591064,\\\"bias\\\":0.08705689405910644,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14007.262425318362,\\\"ask\\\":14063.403757684368,\\\"price\\\":14035.333091501365,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5868134178231759,\\\"bias\\\":0.08681341782317586,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14084.363238486343,\\\"ask\\\":14140.813592147611,\\\"price\\\":14112.588415316977,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5872912688767807,\\\"bias\\\":0.08729126887678074,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14013.275270122533,\\\"ask\\\":14069.440702066913,\\\"price\\\":14041.357986094723,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5868484488478629,\\\"bias\\\":0.08684844884786291,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13970.140710320948,\\\"ask\\\":14026.133258258107,\\\"price\\\":13998.136984289527,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5865802933805572,\\\"bias\\\":0.08658029338055717,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14019.648947049012,\\\"ask\\\":14075.839924792697,\\\"price\\\":14047.744435920855,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5862734648560953,\\\"bias\\\":0.08627346485609533,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13982.31552253744,\\\"ask\\\":14038.35686731715,\\\"price\\\":14010.336194927295,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5865038189689292,\\\"bias\\\":0.08650381896892922,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13917.497245608169,\\\"ask\\\":13973.278797694775,\\\"price\\\":13945.388021651472,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5861009427624951,\\\"bias\\\":0.08610094276249514,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13923.272276802198,\\\"ask\\\":13979.076975306414,\\\"price\\\":13951.174626054306,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5861366701365707,\\\"bias\\\":0.08613667013657067,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13953.201689607162,\\\"ask\\\":14009.12634567773,\\\"price\\\":13981.164017642446,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5863218291930704,\\\"bias\\\":0.08632182919307041,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13966.952936880145,\\\"ask\\\":14022.932708170247,\\\"price\\\":13994.942822525196,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5862367567598973,\\\"bias\\\":0.08623675675989728,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13892.120077200552,\\\"ask\\\":13947.799917189333,\\\"price\\\":13919.959997194943,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5857722241268669,\\\"bias\\\":0.08577222412686691,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13845.053340634176,\\\"ask\\\":13900.544536388223,\\\"price\\\":13872.7989385112,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5854806384913068,\\\"bias\\\":0.08548063849130683,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13778.237951481595,\\\"ask\\\":13833.461350084726,\\\"price\\\":13805.84965078316,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5858951633489788,\\\"bias\\\":0.08589516334897884,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13708.201408585834,\\\"ask\\\":13763.144099602208,\\\"price\\\":13735.672754094021,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5854563165511297,\\\"bias\\\":0.08545631655112973,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13658.263970354119,\\\"ask\\\":13713.006511317462,\\\"price\\\":13685.63524083579,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5857687625207305,\\\"bias\\\":0.08576876252073051,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13724.010274709746,\\\"ask\\\":13779.016327914995,\\\"price\\\":13751.51330131237,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5853559004485717,\\\"bias\\\":0.08535590044857166,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13653.953843239,\\\"ask\\\":13708.679109143766,\\\"price\\\":13681.316476191383,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5857938490354098,\\\"bias\\\":0.08579384903540976,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13663.091195689001,\\\"ask\\\":13717.853084248876,\\\"price\\\":13690.472139968939,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5857364349965402,\\\"bias\\\":0.08573643499654016,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13609.59105346875,\\\"ask\\\":13664.13851260089,\\\"price\\\":13636.86478303482,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5853993997801438,\\\"bias\\\":0.08539939978014377,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13688.262701038408,\\\"ask\\\":13743.125477395273,\\\"price\\\":13715.69408921684,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5858930598361858,\\\"bias\\\":0.08589305983618578,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13733.752389196792,\\\"ask\\\":13788.79748895309,\\\"price\\\":13761.274939074941,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5856076146637592,\\\"bias\\\":0.08560761466375921,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13741.212409089754,\\\"ask\\\":13796.287408725386,\\\"price\\\":13768.74990890757,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5856541157575814,\\\"bias\\\":0.08565411575758142,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13755.289299023618,\\\"ask\\\":13810.420719059784,\\\"price\\\":13782.855009041701,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5857418622768845,\\\"bias\\\":0.08574186227688452,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13817.182776446793,\\\"ask\\\":13872.56226653275,\\\"price\\\":13844.872521489771,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5861276674680143,\\\"bias\\\":0.08612766746801426,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13886.972509441071,\\\"ask\\\":13942.631717895743,\\\"price\\\":13914.802113668407,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.585692641962941,\\\"bias\\\":0.08569264196294102,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13862.195457950793,\\\"ask\\\":13917.755359585864,\\\"price\\\":13889.975408768329,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5855394763977393,\\\"bias\\\":0.08553947639773929,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13910.393102725078,\\\"ask\\\":13966.146181293114,\\\"price\\\":13938.269642009096,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5852420630976526,\\\"bias\\\":0.08524206309765259,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13850.017306520554,\\\"ask\\\":13905.528397929456,\\\"price\\\":13877.772852225005,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5856136552275205,\\\"bias\\\":0.08561365522752051,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13857.699872938183,\\\"ask\\\":13913.241756196452,\\\"price\\\":13885.470814567318,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.585566165568989,\\\"bias\\\":0.085566165568989,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13907.570676099944,\\\"ask\\\":13963.312442336819,\\\"price\\\":13935.441559218381,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5852582318253284,\\\"bias\\\":0.08525823182532843,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13939.914772229688,\\\"ask\\\":13995.786174122393,\\\"price\\\":13967.85047317604,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5854565123525488,\\\"bias\\\":0.08545651235254881,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13892.483092820741,\\\"ask\\\":13948.164387781948,\\\"price\\\":13920.323740301345,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.585748277753322,\\\"bias\\\":0.08574827775332206,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13925.040529007441,\\\"ask\\\":13980.852314694846,\\\"price\\\":13952.946421851144,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.585547324182789,\\\"bias\\\":0.08554732418278899,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13851.061162787844,\\\"ask\\\":13906.576437989397,\\\"price\\\":13878.81880038862,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.41399576231791696,\\\"bias\\\":0.08600423768208304,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13806.610473862924,\\\"ask\\\":13861.94758999063,\\\"price\\\":13834.279031926777,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.41427265487041337,\\\"bias\\\":0.08572734512958663,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13769.443499877703,\\\"ask\\\":13824.631650177813,\\\"price\\\":13797.037575027758,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4145040531840985,\\\"bias\\\":0.0854959468159015,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13786.155255822587,\\\"ask\\\":13841.41038710845,\\\"price\\\":13813.782821465518,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4144002881047416,\\\"bias\\\":0.08559971189525839,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13870.556707844145,\\\"ask\\\":13926.15012150284,\\\"price\\\":13898.353414673493,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.41387623046557237,\\\"bias\\\":0.08612376953442763,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13880.579063104035,\\\"ask\\\":13936.212646523289,\\\"price\\\":13908.395854813662,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.41393846034089576,\\\"bias\\\":0.08606153965910424,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13853.532242715131,\\\"ask\\\":13909.057422044652,\\\"price\\\":13881.294832379892,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0062,\\\"forecast\\\":0.41377043885981996,\\\"bias\\\":0.08622956114018004,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5921051483983358,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":18901.74252633726,\\\"ask\\\":18977.501013416764,\\\"price\\\":18939.621769877012,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.09327980877940223},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5887828611176771,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":18863.01628717663,\\\"ask\\\":18938.61955886871,\\\"price\\\":18900.817923022678,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.09290263181188163},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5078759471616917,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":19670.58840561089,\\\"ask\\\":19749.428439300707,\\\"price\\\":19710.008422455794,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.0878073460254375},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.41370806477610456,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":18604.81064553664,\\\"ask\\\":18679.379024877468,\\\"price\\\":18642.094835207063,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.08877263439695832},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4443209640077432,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":17465.236737362542,\\\"ask\\\":17535.237686209693,\\\"price\\\":17500.237211786116,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.09027985194471788},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5894536177760745,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":16692.329655891564,\\\"ask\\\":16759.232780764876,\\\"price\\\":16725.781218328233,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.09238832576971179},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5913628600147194,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":17632.753469454547,\\\"ask\\\":17703.425828049563,\\\"price\\\":17668.089648752055,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.0928006599822746},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4542907911876934,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":17824.845384536184,\\\"ask\\\":17896.28765060646,\\\"price\\\":17860.566517571322,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.09686145076675312},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.593931372556864,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":17425.018337920777,\\\"ask\\\":17494.858090778183,\\\"price\\\":17459.938214349488,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.09701505195132942},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5975961541673637,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":18072.017869965883,\\\"ask\\\":18144.450807320452,\\\"price\\\":18108.234338643182,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.10003553339628302},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4230171705525228,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":18147.690745755586,\\\"ask\\\":18220.426981209515,\\\"price\\\":18184.058863482558,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.1038787611396686},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.39658382027413813,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":16909.00372723735,\\\"ask\\\":16976.775285262345,\\\"price\\\":16942.889506249852,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.10576651044227775},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.3942357977330412,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15902.287580170561,\\\"ask\\\":15966.024203738372,\\\"price\\\":15934.155891954468,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.10775653341126257},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.3932126219152435,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15276.308884217658,\\\"ask\\\":15337.536575136366,\\\"price\\\":15306.922729677006,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.1095008641162194},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.39734820155898276,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13613.060839969663,\\\"ask\\\":13667.622206061727,\\\"price\\\":13640.341523015702,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.10515325026894456},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5180111072961906,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12969.5531524884,\\\"ask\\\":13021.535329452285,\\\"price\\\":12995.544240970334,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.10745262838506275},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.6075114144011015,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14249.246892343757,\\\"ask\\\":14306.35810233311,\\\"price\\\":14277.802497338434,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.11044811737697202},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.6045238806066551,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14777.453198990097,\\\"ask\\\":14836.681468324721,\\\"price\\\":14807.06733365741,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.10683922876205865},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.49051670062338515,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14859.59153682134,\\\"ask\\\":14919.149017930846,\\\"price\\\":14889.37027737609,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.10668129260566739},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.3946779653904357,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13776.211936189675,\\\"ask\\\":13831.427214491032,\\\"price\\\":13803.81957534036,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.1078303871959514},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4529810728698544,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12463.970206812633,\\\"ask\\\":12513.92599922471,\\\"price\\\":12488.948103018673,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.10854114886132543},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4957232321364199,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12338.882746611811,\\\"ask\\\":12388.337186477984,\\\"price\\\":12363.6099665449,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.10786077902203495},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.39481352980523376,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":11588.140805199982,\\\"ask\\\":11634.586259329044,\\\"price\\\":11611.363532264515,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.11012484777897724},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.6067784215004227,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":11687.830793645593,\\\"ask\\\":11734.67580684658,\\\"price\\\":11711.253300246086,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.1111119625683199},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5033188743536469,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12290.259584286034,\\\"ask\\\":12339.519141738081,\\\"price\\\":12314.889363012062,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.10507348347739898},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5479087141779196,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12185.22704581216,\\\"ask\\\":12234.065631166111,\\\"price\\\":12209.646338489134,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.10644925490259793},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.44995834687596803,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12180.372957903444,\\\"ask\\\":12229.192087995238,\\\"price\\\":12204.782522949343,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.1035888561575089},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5962380979024429,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12774.910309244988,\\\"ask\\\":12826.112354572611,\\\"price\\\":12800.511331908794,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.098562913353481},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4627194982511902,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13281.10731212043,\\\"ask\\\":13334.33820315097,\\\"price\\\":13307.722757635696,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.09865693233622908},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4023532088487517,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13001.96724763194,\\\"ask\\\":13054.079340808816,\\\"price\\\":13028.023294220373,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.10008146843073928},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.40287452511483307,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12080.675439636198,\\\"ask\\\":12129.094980476419,\\\"price\\\":12104.885210056313,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.09923001530751901},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5323071310180549,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":11735.313850066335,\\\"ask\\\":11782.3491761187,\\\"price\\\":11758.831513092511,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.09673220911803782},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5938946972337658,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":11814.281268622126,\\\"ask\\\":11861.633097354073,\\\"price\\\":11837.957182988102,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.0951158936817672},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5930045188564771,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12626.122912133038,\\\"ask\\\":12676.72861518768,\\\"price\\\":12651.425763660354,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.09486096487590101},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5878162953110302,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13205.012886421957,\\\"ask\\\":13257.938789774355,\\\"price\\\":13231.475838098151,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.09037888983343145},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.45604124230248355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13632.889453094187,\\\"ask\\\":13687.530292585541,\\\"price\\\":13660.209872839861,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.09203605463415276},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5912574555022985,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14227.449662358029,\\\"ask\\\":14284.473508700148,\\\"price\\\":14255.961585529096,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.0927478330700855},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5876104484178154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15554.361269171972,\\\"ask\\\":15616.70339850734,\\\"price\\\":15585.532333839654,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.09152521270309111},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5683137429782343,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":17465.223022280607,\\\"ask\\\":17535.223916157476,\\\"price\\\":17500.22346921904,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.08683717443434658},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4121336037415942,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":17607.917469078835,\\\"ask\\\":17678.490284586154,\\\"price\\\":17643.203876832486,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.08992926262539414},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.41251927268393124,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":16174.017192177627,\\\"ask\\\":16238.842912386754,\\\"price\\\":16206.43005228219,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.09002446325067298},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5535420227284746,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15293.092925825065,\\\"ask\\\":15354.387887451621,\\\"price\\\":15323.740406638351,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.08789705406501225},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5331675880397326,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15897.575377115449,\\\"ask\\\":15961.293114097873,\\\"price\\\":15929.434245606659,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.08818925191326399},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4137042284232504,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15541.562752503272,\\\"ask\\\":15603.853585178633,\\\"price\\\":15572.708168840943,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.08837947123546724},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.42148192884517305,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14952.7673075015,\\\"ask\\\":15012.698238593694,\\\"price\\\":14982.732773047597,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.0876665211144485},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5389634881277957,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15230.515439154604,\\\"ask\\\":15291.559589211332,\\\"price\\\":15261.03751418297,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.09246915842187686},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.40949159700655335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":15283.392361100705,\\\"ask\\\":15344.648442708321,\\\"price\\\":15314.02040190451,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.09329638218077496},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.40850082757797535,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14211.244729650276,\\\"ask\\\":14268.20362636231,\\\"price\\\":14239.724178006292,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.09450991204398285},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4046321237464239,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13818.487815049139,\\\"ask\\\":13873.872535750734,\\\"price\\\":13846.180175399939,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.0973002494719728},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4979796818722959,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12927.688385356118,\\\"ask\\\":12979.502767662161,\\\"price\\\":12953.595576509133,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.09876164585672936},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.598029647954266,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13568.700685605249,\\\"ask\\\":13623.08425548743,\\\"price\\\":13595.892470546336,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.1004979593948836},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.40589079166546455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13804.463010504027,\\\"ask\\\":13859.791519564164,\\\"price\\\":13832.127265034096,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.10209979137370939},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.3976369720648373,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12984.556474313142,\\\"ask\\\":13036.598784831429,\\\"price\\\":13010.577629572283,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.10475874323697276},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.3930478927782787,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":11433.078798129478,\\\"ask\\\":11478.902761248237,\\\"price\\\":11455.990779688856,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.10875519801986966},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5919584598165422,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":11631.493191566135,\\\"ask\\\":11678.112402754776,\\\"price\\\":11654.802797160453,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.10645160821392308},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.6006630102753098,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12321.91257376473,\\\"ask\\\":12371.29899690607,\\\"price\\\":12346.6057853354,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.103910571933153},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5950471839889256,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12786.010217098661,\\\"ask\\\":12837.256751034933,\\\"price\\\":12811.633484066799,\\\"maxShares\\\":9700000,\\\"investedShares\\\":6305000,\\\"averagePrice\\\":8264.901760231343,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.1045982212134211},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5639806195248991,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13173.328371526548,\\\"ask\\\":13226.12728283528,\\\"price\\\":13199.727827180917,\\\"maxShares\\\":9700000,\\\"investedShares\\\":8245000,\\\"averagePrice\\\":10807.94845568714,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.09304403219296675},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4207066607761736,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13104.20602536549,\\\"ask\\\":13156.727893202622,\\\"price\\\":13130.466959284062,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.08336799957037433},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.41714787080311455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12097.747384839218,\\\"ask\\\":12146.235350309522,\\\"price\\\":12121.991367574376,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.08462408306868663},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5638312325989944,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":12016.84693946633,\\\"ask\\\":12065.010654654565,\\\"price\\\":12040.928797060447,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.08581533332869007},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5845141360733268,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13290.7738361065,\\\"ask\\\":13344.043470720146,\\\"price\\\":13317.408653413331,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.0863461437498203},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5820422720436569,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14007.749867559527,\\\"ask\\\":14063.893153601852,\\\"price\\\":14035.821510580687,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.08404880372537438},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4584861787713429,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14024.036328956832,\\\"ask\\\":14080.24489139754,\\\"price\\\":14052.140610177184,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.085130057241803},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5248431643328254,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14024.465000902155,\\\"ask\\\":14080.675281466893,\\\"price\\\":14052.570141184518,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.08069514801172467},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.42236477560802244,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":13909.515928202632,\\\"ask\\\":13965.265491041115,\\\"price\\\":13937.390709621875,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.07883092005725101},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5401391743046507,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14039.091141803467,\\\"ask\\\":14095.360044175424,\\\"price\\\":14067.225592989442,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.08165189407835938},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4705033577089403,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14185.152171682159,\\\"ask\\\":14242.00648900352,\\\"price\\\":14213.579330342844,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.08063184638009813},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.5819192360733314,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14390.031636901365,\\\"ask\\\":14447.707114403982,\\\"price\\\":14418.86937565268,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.08315456923668907},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.4525867919402109,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14724.853032176236,\\\"ask\\\":14783.870479198986,\\\"price\\\":14754.361755687612,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.08332269050320718},{\\\"volatility\\\":0.0062,\\\"forecast\\\":0.46351285449017204,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"HLS\\\",\\\"bid\\\":14424.230794630586,\\\"ask\\\":14482.043342905661,\\\"price\\\":14453.13706876813,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.08577749053925066}],\\\"recentTicksOfPrices\\\":[13761.274939074941,13768.74990890757,13782.855009041701,13844.872521489771,13914.802113668407,13889.975408768329,13938.269642009096,13877.772852225005,13885.470814567318,13935.441559218381,13967.85047317604,13920.323740301345,13952.946421851144,13878.81880038862,13834.279031926777,13797.037575027758,13813.782821465518,13898.353414673493,13908.395854813662,13881.294832379892]}],[\\\"VITA\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17559.045438465742,\\\"ask\\\":17771.0258662943,\\\"price\\\":17665.035652380022,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42753294624068294,\\\"bias\\\":0.07246705375931706,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17555.278708422717,\\\"ask\\\":17767.21366264915,\\\"price\\\":17661.246185535932,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42751739742297074,\\\"bias\\\":0.07248260257702926,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17510.318458855254,\\\"ask\\\":17721.71063340884,\\\"price\\\":17616.014546132046,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4273312879636357,\\\"bias\\\":0.07266871203636432,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17431.173398713778,\\\"ask\\\":17641.61009970429,\\\"price\\\":17536.391749209033,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4270013406070827,\\\"bias\\\":0.07299865939291728,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17462.704098837257,\\\"ask\\\":17673.521452143137,\\\"price\\\":17568.112775490197,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4268692956330534,\\\"bias\\\":0.07313070436694658,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17468.18072874876,\\\"ask\\\":17679.06419831112,\\\"price\\\":17573.62246352994,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42689223078677985,\\\"bias\\\":0.07310776921322015,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17565.798548533174,\\\"ask\\\":17777.860502841424,\\\"price\\\":17671.8295256873,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4264836810270357,\\\"bias\\\":0.07351631897296429,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17612.27316361848,\\\"ask\\\":17824.896179678257,\\\"price\\\":17718.58467164837,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.426678186424403,\\\"bias\\\":0.07332181357559697,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17708.560397095775,\\\"ask\\\":17922.345834485262,\\\"price\\\":17815.45311579052,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.426277332172533,\\\"bias\\\":0.073722667827467,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17824.69257244847,\\\"ask\\\":18039.880007930744,\\\"price\\\":17932.286290189608,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42676080308127007,\\\"bias\\\":0.07323919691872993,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17752.513753868316,\\\"ask\\\":17966.829815283225,\\\"price\\\":17859.67178457577,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4264630244804113,\\\"bias\\\":0.07353697551958871,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17849.76689840248,\\\"ask\\\":18065.257042045167,\\\"price\\\":17957.511970223823,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4260601687379532,\\\"bias\\\":0.07393983126204678,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17822.64482831277,\\\"ask\\\":18037.80754253787,\\\"price\\\":17930.22618542532,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4259476488900165,\\\"bias\\\":0.07405235110998348,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17782.444779622656,\\\"ask\\\":17997.122181388728,\\\"price\\\":17889.783480505692,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42578024175578205,\\\"bias\\\":0.07421975824421795,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17873.209559790717,\\\"ask\\\":18088.982713430043,\\\"price\\\":17981.09613661038,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42615907268283676,\\\"bias\\\":0.07384092731716324,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17815.348213730907,\\\"ask\\\":18030.422840053612,\\\"price\\\":17922.88552689226,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42591924939127834,\\\"bias\\\":0.07408075060872166,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17702.1932582914,\\\"ask\\\":17915.901828814036,\\\"price\\\":17809.04754355272,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42544571462009245,\\\"bias\\\":0.07455428537990755,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17806.478855875604,\\\"ask\\\":18021.446407455594,\\\"price\\\":17913.9626316656,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4258849222419878,\\\"bias\\\":0.07411507775801218,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17742.859537568766,\\\"ask\\\":17957.05904908871,\\\"price\\\":17849.95929332874,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.425619173042247,\\\"bias\\\":0.074380826957753,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17815.87941503364,\\\"ask\\\":18030.96045424934,\\\"price\\\":17923.41993464149,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4253130623581889,\\\"bias\\\":0.07468693764181111,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17871.12108539137,\\\"ask\\\":18086.869026060074,\\\"price\\\":17978.99505572572,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42508148068359836,\\\"bias\\\":0.07491851931640164,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17774.985010161014,\\\"ask\\\":17989.57235434807,\\\"price\\\":17882.278682254542,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4254866777853135,\\\"bias\\\":0.07451332221468648,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17783.55032321203,\\\"ask\\\":17998.241071580786,\\\"price\\\":17890.89569739641,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4255225838595451,\\\"bias\\\":0.07447741614045489,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17739.267696424387,\\\"ask\\\":17953.423845676996,\\\"price\\\":17846.345771050692,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.425336665495862,\\\"bias\\\":0.07466333450413798,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17759.569971799952,\\\"ask\\\":17973.971218944418,\\\"price\\\":17866.770595372185,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4254221163500631,\\\"bias\\\":0.0745778836499369,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17649.164961512975,\\\"ask\\\":17862.233351390398,\\\"price\\\":17755.699156451687,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4249555916147848,\\\"bias\\\":0.0750444083852152,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17579.76275624259,\\\"ask\\\":17791.993292535262,\\\"price\\\":17685.878024388927,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42465932780807925,\\\"bias\\\":0.07534067219192075,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17481.316824837624,\\\"ask\\\":17692.358879061016,\\\"price\\\":17586.83785194932,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4242350472621153,\\\"bias\\\":0.0757649527378847,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17378.209372505637,\\\"ask\\\":17588.00666875319,\\\"price\\\":17483.108020629414,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4246845717836243,\\\"bias\\\":0.07531542821637571,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17304.73489358153,\\\"ask\\\":17513.645173986944,\\\"price\\\":17409.190033784238,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4243647886793366,\\\"bias\\\":0.07563521132066342,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17401.469440341833,\\\"ask\\\":17611.547542237306,\\\"price\\\":17506.50849128957,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4239419831332697,\\\"bias\\\":0.0760580168667303,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17505.15453086702,\\\"ask\\\":17716.484364237647,\\\"price\\\":17610.819447552334,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42439516798590704,\\\"bias\\\":0.07560483201409296,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17491.561029873585,\\\"ask\\\":17702.726756592383,\\\"price\\\":17597.143893232984,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42445392399729653,\\\"bias\\\":0.07554607600270347,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17571.411823632792,\\\"ask\\\":17783.541543837615,\\\"price\\\":17677.476683735204,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4247987996847155,\\\"bias\\\":0.07520120031528449,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17454.242216088183,\\\"ask\\\":17664.957413867924,\\\"price\\\":17559.599814978053,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4242939771310498,\\\"bias\\\":0.07570602286895017,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17521.602891577255,\\\"ask\\\":17733.13129670696,\\\"price\\\":17627.367094142108,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4245861472966697,\\\"bias\\\":0.07541385270333029,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17532.655516003153,\\\"ask\\\":17744.317353218485,\\\"price\\\":17638.48643461082,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42453857624991115,\\\"bias\\\":0.07546142375008885,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17511.822420079607,\\\"ask\\\":17723.232751106723,\\\"price\\\":17617.527585593165,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42462834960654994,\\\"bias\\\":0.07537165039345006,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17420.792560819707,\\\"ask\\\":17631.10393982357,\\\"price\\\":17525.94825032164,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4250221933828046,\\\"bias\\\":0.07497780661719539,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17522.976055277082,\\\"ask\\\":17734.52103783576,\\\"price\\\":17628.74854655642,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42458240315740897,\\\"bias\\\":0.07541759684259103,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17486.67947063207,\\\"ask\\\":17697.786265046136,\\\"price\\\":17592.232867839102,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4244258610767859,\\\"bias\\\":0.07557413892321407,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17416.357354274696,\\\"ask\\\":17626.615189537573,\\\"price\\\":17521.486271906135,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42412071498435905,\\\"bias\\\":0.07587928501564095,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17504.525293295537,\\\"ask\\\":17715.847530236733,\\\"price\\\":17610.186411766135,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4237365864299136,\\\"bias\\\":0.07626341357008642,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17515.80108778676,\\\"ask\\\":17727.259451019596,\\\"price\\\":17621.530269403178,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4236874602431586,\\\"bias\\\":0.07631253975684138,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17589.00360625627,\\\"ask\\\":17801.345702106442,\\\"price\\\":17695.174654181355,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4240063877117344,\\\"bias\\\":0.07599361228826562,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17541.628036269667,\\\"ask\\\":17753.39819364918,\\\"price\\\":17647.513114959424,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4238011478850745,\\\"bias\\\":0.0761988521149255,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17472.352354072675,\\\"ask\\\":17683.286185308963,\\\"price\\\":17577.81926969082,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42410326676156673,\\\"bias\\\":0.07589673323843327,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17424.93010221931,\\\"ask\\\":17635.291431421152,\\\"price\\\":17530.11076682023,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42389671247541655,\\\"bias\\\":0.07610328752458345,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17533.00862770573,\\\"ask\\\":17744.674727839,\\\"price\\\":17638.841677772365,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.575631255151881,\\\"bias\\\":0.07563125515188096,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17598.561039906945,\\\"ask\\\":17811.018517249886,\\\"price\\\":17704.789778578415,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5759140252866755,\\\"bias\\\":0.07591402528667546,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17653.725424944798,\\\"ask\\\":17866.848870718783,\\\"price\\\":17760.28714783179,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5761519851125495,\\\"bias\\\":0.0761519851125495,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17678.607286586608,\\\"ask\\\":17892.031117008177,\\\"price\\\":17785.319201797392,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5760446534807432,\\\"bias\\\":0.07604465348074319,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17553.806059400948,\\\"ask\\\":17765.723235168367,\\\"price\\\":17659.764647284657,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5765853035279859,\\\"bias\\\":0.07658530352798587,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17568.535559358585,\\\"ask\\\":17780.630556051045,\\\"price\\\":17674.583057704815,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5765210403578646,\\\"bias\\\":0.07652104035786456,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17608.367555033783,\\\"ask\\\":17820.943420889325,\\\"price\\\":17714.655487961554,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5763475491901859,\\\"bias\\\":0.07634754919018594,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5762040153553765,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11487.98381796982,\\\"ask\\\":11626.671751385955,\\\"price\\\":11557.327784677891,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.07745641464722486},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5758320163270192,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":12451.387170000866,\\\"ask\\\":12601.705727385188,\\\"price\\\":12526.546448693029,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.07800677059620209},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5062095634779076,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":13285.471695744624,\\\"ask\\\":13445.859684023233,\\\"price\\\":13365.665689883926,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.07828481893635608},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42585196066729447,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":12912.547209988199,\\\"ask\\\":13068.433091798914,\\\"price\\\":12990.490150893564,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.07708216293575104},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5623316576559421,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":12451.225742797815,\\\"ask\\\":12601.542351362785,\\\"price\\\":12526.384047080302,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.07248841118751059},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5700082251328554,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":13419.15499396746,\\\"ask\\\":13581.156865121995,\\\"price\\\":13500.155929544739,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.07198064816169103},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.47415313838455186,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":13487.59752567933,\\\"ask\\\":13650.425664822353,\\\"price\\\":13569.011595250846,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.07610004460582881},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4489738046759926,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":12702.266854911666,\\\"ask\\\":12855.614140886448,\\\"price\\\":12778.940497899055,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.07700893051417096},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5164841676945239,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":13135.082474910072,\\\"ask\\\":13293.654899154466,\\\"price\\\":13214.368687032258,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.0783735904397227},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4300215929591124,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":12864.301000579317,\\\"ask\\\":13019.604433181876,\\\"price\\\":12941.952716880589,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.0713929200481131},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4303647876371685,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":12641.136605423808,\\\"ask\\\":12793.7459004591,\\\"price\\\":12717.441252941457,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.07070200523930731},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4289834116009677,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11646.100028808542,\\\"ask\\\":11786.696809840436,\\\"price\\\":11716.398419324483,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.07264296789648772},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.43037415704186194,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11000.682245702432,\\\"ask\\\":11133.487262753162,\\\"price\\\":11067.084754227802,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.07190686391119139},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5340655145990983,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10640.239472403804,\\\"ask\\\":10768.693067644092,\\\"price\\\":10704.46627002395,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.07120152533062096},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4780191047192263,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10811.676857327524,\\\"ask\\\":10942.200119186606,\\\"price\\\":10876.938488257061,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.07429706162549332},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5734496798379856,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10665.148643255818,\\\"ask\\\":10793.902952832346,\\\"price\\\":10729.525798044078,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.07534860314946568},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5628720055445455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10720.774286597425,\\\"ask\\\":10850.200133115704,\\\"price\\\":10785.487209856563,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.07676347725773253},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42273397900128884,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10670.927417230485,\\\"ask\\\":10799.751490677938,\\\"price\\\":10735.339453954208,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.07894731755241174},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.41942857756512675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10538.255058663932,\\\"ask\\\":10665.477453738351,\\\"price\\\":10601.866256201143,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.08284892215846151},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4236839735223428,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9503.125039389548,\\\"ask\\\":9617.850894995861,\\\"price\\\":9560.487967192705,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.08942570183800347},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5874703623160533,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9346.292958640899,\\\"ask\\\":9459.125469207993,\\\"price\\\":9402.709213924445,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.0897730382725056},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.58415044565617,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10350.896737840827,\\\"ask\\\":10475.857261838904,\\\"price\\\":10413.376999839862,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.08550505217348536},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.45619633123252074,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10740.472773507356,\\\"ask\\\":10870.13642872072,\\\"price\\\":10805.304601114041,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.08835132512271748},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5873199957671111,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10786.711803063716,\\\"ask\\\":10916.933675937727,\\\"price\\\":10851.822739500716,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.08887537173841042},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.588062485417441,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11101.993523884326,\\\"ask\\\":11236.021614715932,\\\"price\\\":11169.007569300129,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.0897894429383429},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5873885984280832,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11671.97400859165,\\\"ask\\\":11812.883151552522,\\\"price\\\":11742.42858007209,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.08987940937735905},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5484598476294762,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":12329.543846245573,\\\"ask\\\":12478.391458071483,\\\"price\\\":12403.967652158532,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.09058008228329384},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.41228663047277225,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11518.362633437533,\\\"ask\\\":11657.417313116859,\\\"price\\\":11587.889973277195,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.0903566722487898},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.536664857149055,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11425.042572291217,\\\"ask\\\":11562.970651634767,\\\"price\\\":11494.006611962986,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.0914214518301466},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.45800112283129607,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11281.046491909243,\\\"ask\\\":11417.236187988643,\\\"price\\\":11349.141339948948,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.09141716324422189},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5118982119437206,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11400.408600804685,\\\"ask\\\":11538.039288138338,\\\"price\\\":11469.223944471509,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.08404741170585905},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.41721024510256455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10754.941575159728,\\\"ask\\\":10884.77990403491,\\\"price\\\":10819.860739597318,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.08548882572050859},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4449099231941267,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10124.407200069922,\\\"ask\\\":10246.633443933952,\\\"price\\\":10185.520322001936,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.08457353693574055},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5169145841456557,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10632.877195039722,\\\"ask\\\":10761.241909667966,\\\"price\\\":10697.059552353838,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.08977769914151357},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5253690747313408,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11042.24005241473,\\\"ask\\\":11175.546773369431,\\\"price\\\":11108.893412892083,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.09135470554671954},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4548467954992967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11285.75274083456,\\\"ask\\\":11421.999252796339,\\\"price\\\":11353.875996815446,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.09246192938262993},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5233817046640544,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11527.687293156336,\\\"ask\\\":11666.85454418036,\\\"price\\\":11597.270918668353,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.09083029573555423},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.412494675341563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10861.651549160719,\\\"ask\\\":10992.778127218997,\\\"price\\\":10927.214838189851,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.08932151970006275},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5649340534125478,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10391.137582278714,\\\"ask\\\":10516.583911239824,\\\"price\\\":10453.86074675927,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.0948257540556624},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5912511453079312,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9989.314323656305,\\\"ask\\\":10109.909667603859,\\\"price\\\":10049.611995630084,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.09474815260000014},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4851144446724664,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9885.55709390881,\\\"ask\\\":10004.89983548517,\\\"price\\\":9945.22846469699,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.09626062691571313},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42084786456498363,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9245.753564400524,\\\"ask\\\":9357.372319705159,\\\"price\\\":9301.562942052838,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.09514253787486171},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5371242953865063,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9381.839793794836,\\\"ask\\\":9495.10144120484,\\\"price\\\":9438.470617499835,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.09920995002754573},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5100669325398335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9674.289732185835,\\\"ask\\\":9791.081962353073,\\\"price\\\":9732.68584726945,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.09873057181629391},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5958635534465728,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":9954.536929854336,\\\"ask\\\":10074.712425989403,\\\"price\\\":10014.624677921873,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.09751205472562896},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5932737511876421,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":10850.365168757571,\\\"ask\\\":10981.355492726481,\\\"price\\\":10915.860330742022,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.09608780827897112},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.596064431338725,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":11547.871127739898,\\\"ask\\\":11687.282046787064,\\\"price\\\":11617.576587263478,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.09835447917283502},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.598052754411404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":12861.240474009477,\\\"ask\\\":13016.506958605161,\\\"price\\\":12938.873716307315,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.09956879436625732},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5467424201927731,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":13792.191133444408,\\\"ask\\\":13958.696458999068,\\\"price\\\":13875.443796221734,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.10147730885364381},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4984931424309211,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":14060.301533332777,\\\"ask\\\":14230.043604157714,\\\"price\\\":14145.172568745249,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.10217268801251256},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.6024999159197584,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":14379.554980890196,\\\"ask\\\":14553.151218084042,\\\"price\\\":14466.353099487122,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.10576431836727707},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5563943975229804,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":15553.819821418836,\\\"ask\\\":15741.592294112032,\\\"price\\\":15647.706057765436,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.10236111479442433},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4006541604979178,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":14185.272167675781,\\\"ask\\\":14356.522938311706,\\\"price\\\":14270.897552993742,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.10185979483026264},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4072716823904182,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":13697.496895082455,\\\"ask\\\":13862.859030636775,\\\"price\\\":13780.177962859609,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.09788324164415052},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5802144324669583,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":13711.286891821932,\\\"ask\\\":13876.815506210127,\\\"price\\\":13794.051199016028,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.0928463132774332},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5926036667987119,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":14651.469790304656,\\\"ask\\\":14828.34870125401,\\\"price\\\":14739.909245779338,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.09598103751387399},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5908195598739556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":16071.488467552017,\\\"ask\\\":16265.51046112407,\\\"price\\\":16168.49946433804,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.09218956752009955},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4254952005487812,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17012.28488179767,\\\"ask\\\":17217.66457855981,\\\"price\\\":17114.974730178736,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.09259084341293394},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.410824153294324,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":16552.880400460537,\\\"ask\\\":16752.713966663272,\\\"price\\\":16652.79718356191,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.09044648668788513},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4126119332957156,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":15818.053678635548,\\\"ask\\\":16009.016097291107,\\\"price\\\":15913.534887963324,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.09008188175789117},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.566123803481262,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":15854.226600981134,\\\"ask\\\":16045.625714876283,\\\"price\\\":15949.926157928712,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.08948033797395993},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5883974907132159,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17167.86435648648,\\\"ask\\\":17375.1222762831,\\\"price\\\":17271.493316384785,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.09055757945909437},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5858268916006717,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":18486.837885911486,\\\"ask\\\":18710.0190273913,\\\"price\\\":18598.4284566514,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.09032149675086643},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4428095520926799,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":19419.47173818693,\\\"ask\\\":19653.912040861214,\\\"price\\\":19536.691889524074,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.08328581848884725},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4191328184005753,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":19506.70721501391,\\\"ask\\\":19742.200662277664,\\\"price\\\":19624.45393864578,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.08278236650542908},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4173334551557834,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":18481.03049455589,\\\"ask\\\":18704.14152668333,\\\"price\\\":18592.586010619612,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.08486166577643867},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.41634124949751494,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17597.669450832036,\\\"ask\\\":17810.11616452418,\\\"price\\\":17703.892807678112,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.08567857351113889},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4246541146009378,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":16683.509100007665,\\\"ask\\\":16884.919672643573,\\\"price\\\":16784.214386325617,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.07951723315980219},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5065136586853672,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":16764.70373661088,\\\"ask\\\":16967.094526187662,\\\"price\\\":16865.899131399274,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.07484023410968971},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.46432429307015277,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":16792.741506124756,\\\"ask\\\":16995.470779840565,\\\"price\\\":16894.10614298266,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.07523276894491016},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5321537488834264,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"VITA\\\",\\\"bid\\\":17046.207909434324,\\\"ask\\\":17251.99713972931,\\\"price\\\":17149.10252458182,\\\"maxShares\\\":19000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.07438115975086024}],\\\"recentTicksOfPrices\\\":[17627.367094142108,17638.48643461082,17617.527585593165,17525.94825032164,17628.74854655642,17592.232867839102,17521.486271906135,17610.186411766135,17621.530269403178,17695.174654181355,17647.513114959424,17577.81926969082,17530.11076682023,17638.841677772365,17704.789778578415,17760.28714783179,17785.319201797392,17659.764647284657,17674.583057704815,17714.655487961554]}],[\\\"ICRS\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42794.43571340153,\\\"ask\\\":43397.78123201947,\\\"price\\\":43096.108472710504,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5916712000589749,\\\"bias\\\":0.09167120005897489,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42802.47008888393,\\\"ask\\\":43405.92888167786,\\\"price\\\":43104.19948528089,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5916539893905803,\\\"bias\\\":0.09165398939058034,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42706.52186840244,\\\"ask\\\":43308.627916899546,\\\"price\\\":43007.57489265099,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.591448071493329,\\\"bias\\\":0.09144807149332901,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42537.525463666854,\\\"ask\\\":43137.24888410123,\\\"price\\\":42837.387173884046,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5910847594498118,\\\"bias\\\":0.09108475944981176,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42604.85215405205,\\\"ask\\\":43205.52479267916,\\\"price\\\":42905.18847336561,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5909405941432632,\\\"bias\\\":0.09094059414326316,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42593.16389432848,\\\"ask\\\":43193.67174379534,\\\"price\\\":42893.41781906191,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5909655497273658,\\\"bias\\\":0.09096554972736581,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42801.435172198966,\\\"ask\\\":43404.879374022516,\\\"price\\\":43103.157273110744,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5905207480373361,\\\"bias\\\":0.09052074803733612,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42702.57757576304,\\\"ask\\\":43304.62801489766,\\\"price\\\":43003.60279533035,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5903111901116423,\\\"bias\\\":0.09031119011164235,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42906.85267935453,\\\"ask\\\":43511.78313002015,\\\"price\\\":43209.31790468734,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5907432091784726,\\\"bias\\\":0.09074320917847256,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43153.061731588234,\\\"ask\\\":43761.46340756228,\\\"price\\\":43457.26256957526,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5912639138709244,\\\"bias\\\":0.09126391387092436,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43000.08433284374,\\\"ask\\\":43606.329227768016,\\\"price\\\":43303.20678030588,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5915885950049229,\\\"bias\\\":0.09158859500492289,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42794.94717113043,\\\"ask\\\":43398.29990063277,\\\"price\\\":43096.6235358816,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5920276240414464,\\\"bias\\\":0.09202762404144638,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42738.039170554985,\\\"ask\\\":43340.58957175112,\\\"price\\\":43039.31437115306,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5919050843043984,\\\"bias\\\":0.09190508430439837,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42822.578297050786,\\\"ask\\\":43426.32058925492,\\\"price\\\":43124.44944315286,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5920868796253445,\\\"bias\\\":0.09208687962534445,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42632.176322521416,\\\"ask\\\":43233.23419615213,\\\"price\\\":42932.70525933678,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5924981540481248,\\\"bias\\\":0.09249815404812478,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42753.3308850453,\\\"ask\\\":43356.09687939639,\\\"price\\\":43054.71388222085,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5922352874915787,\\\"bias\\\":0.09223528749157872,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42992.45562416805,\\\"ask\\\":43598.59296428723,\\\"price\\\":43295.52429422764,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5927511710169732,\\\"bias\\\":0.09275117101697317,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43214.06981221471,\\\"ask\\\":43823.331622255995,\\\"price\\\":43518.700717235355,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5922730644478813,\\\"bias\\\":0.0922730644478813,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43349.65074547882,\\\"ask\\\":43960.824069181435,\\\"price\\\":43655.23740733013,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5925625643317698,\\\"bias\\\":0.09256256433176979,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43505.75370658935,\\\"ask\\\":44119.127877679224,\\\"price\\\":43812.440792134286,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.592895883980987,\\\"bias\\\":0.09289588398098703,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43623.78965321984,\\\"ask\\\":44238.827976628774,\\\"price\\\":43931.30881492431,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5926438471198923,\\\"bias\\\":0.09264384711989226,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43830.23665901734,\\\"ask\\\":44448.185614935006,\\\"price\\\":44139.21113697618,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5930822786499244,\\\"bias\\\":0.09308227864992435,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43811.76385645428,\\\"ask\\\":44429.45237003973,\\\"price\\\":44120.608113247006,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5931215258840977,\\\"bias\\\":0.09312152588409772,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43907.46044992951,\\\"ask\\\":44526.49816020042,\\\"price\\\":44216.97930506497,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5929181236007401,\\\"bias\\\":0.09291812360074014,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43951.43034188375,\\\"ask\\\":44571.087970067405,\\\"price\\\":44261.25915597558,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5930111738435337,\\\"bias\\\":0.09301117384353375,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44192.0026785016,\\\"ask\\\":44815.05206168289,\\\"price\\\":44503.52737009225,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.592502068332085,\\\"bias\\\":0.09250206833208496,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44039.87285195805,\\\"ask\\\":44660.77740374798,\\\"price\\\":44350.325127853015,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5928216043048065,\\\"bias\\\":0.09282160430480646,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44256.881848027726,\\\"ask\\\":44880.84594256185,\\\"price\\\":44568.86389529479,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5932789880768141,\\\"bias\\\":0.09327898807681412,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44028.30876442384,\\\"ask\\\":44649.05027771883,\\\"price\\\":44338.67952107134,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5927947299588325,\\\"bias\\\":0.09279472995883253,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44191.88176517974,\\\"ask\\\":44814.929443641486,\\\"price\\\":44503.40560441062,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.593139478891046,\\\"bias\\\":0.09313947889104601,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44408.037717259474,\\\"ask\\\":45034.13291166192,\\\"price\\\":44721.0853144607,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5935950524473586,\\\"bias\\\":0.09359505244735855,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44639.56385349915,\\\"ask\\\":45268.92326331686,\\\"price\\\":44954.24355840801,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5931070844582694,\\\"bias\\\":0.09310708445826943,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44609.22944519357,\\\"ask\\\":45238.16117956689,\\\"price\\\":44923.69531238023,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5930437713647408,\\\"bias\\\":0.09304377136474085,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44787.41949223048,\\\"ask\\\":45418.863472986995,\\\"price\\\":45103.14148260874,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.592672111190329,\\\"bias\\\":0.09267211119032903,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45050.493578311565,\\\"ask\\\":45685.64655927466,\\\"price\\\":45368.07006879312,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.592127770140253,\\\"bias\\\":0.09212777014025297,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45202.62293952123,\\\"ask\\\":45839.92074531508,\\\"price\\\":45521.27184241816,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5918166672486332,\\\"bias\\\":0.09181666724863324,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45227.57252120729,\\\"ask\\\":45865.22208343981,\\\"price\\\":45546.39730232355,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.591765989051425,\\\"bias\\\":0.09176598905142497,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45274.65223354995,\\\"ask\\\":45912.96555809143,\\\"price\\\":45593.80889582069,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5916704651016186,\\\"bias\\\":0.09167046510161858,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45068.59019691749,\\\"ask\\\":45703.99831651149,\\\"price\\\":45386.29425671449,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5912513305634547,\\\"bias\\\":0.09125133056345469,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44838.46106850296,\\\"ask\\\":45470.62466866312,\\\"price\\\":45154.54286858304,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.590782991805415,\\\"bias\\\":0.09078299180541505,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44919.89720537652,\\\"ask\\\":45553.20894845332,\\\"price\\\":45236.55307691492,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5906181106750131,\\\"bias\\\":0.09061811067501313,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45078.59884441956,\\\"ask\\\":45714.14807284038,\\\"price\\\":45396.37345862997,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5909382637382615,\\\"bias\\\":0.09093826373826153,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45278.277582577095,\\\"ask\\\":45916.64201979369,\\\"price\\\":45597.459801185396,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5905354464764349,\\\"bias\\\":0.09053544647643486,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45303.79841083923,\\\"ask\\\":45942.52265832336,\\\"price\\\":45623.16053458129,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5904844167176958,\\\"bias\\\":0.0904844167176958,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45138.734000214616,\\\"ask\\\":45775.13105560535,\\\"price\\\":45456.93252790999,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5901535311213885,\\\"bias\\\":0.09015353112138846,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45032.315561658266,\\\"ask\\\":45667.21225638456,\\\"price\\\":45349.763909021414,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5899404841596095,\\\"bias\\\":0.08994048415960954,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44876.62664783103,\\\"ask\\\":45509.328332694706,\\\"price\\\":45192.97749026287,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5902525115407626,\\\"bias\\\":0.09025251154076264,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":44983.49260619621,\\\"ask\\\":45617.70096116775,\\\"price\\\":45300.596783681984,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5900375907264965,\\\"bias\\\":0.09003759072649653,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45227.62735067658,\\\"ask\\\":45865.277685932844,\\\"price\\\":45546.452518304715,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4104510619532337,\\\"bias\\\":0.08954893804676628,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45375.58727114359,\\\"ask\\\":46015.32364757461,\\\"price\\\":45695.4554593591,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.41015810708189876,\\\"bias\\\":0.08984189291810124,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45500.04215223497,\\\"ask\\\":46141.53317955752,\\\"price\\\":45820.78766589625,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.41040452289208607,\\\"bias\\\":0.08959547710791393,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45443.99789892105,\\\"ask\\\":46084.698775642995,\\\"price\\\":45764.34833728203,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4102940283967297,\\\"bias\\\":0.08970597160327032,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45726.702023084435,\\\"ask\\\":46371.38865785098,\\\"price\\\":46049.04534046771,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.41085208335022955,\\\"bias\\\":0.08914791664977045,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45693.15330805033,\\\"ask\\\":46337.36694985566,\\\"price\\\":46015.260128953,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.41091753731510267,\\\"bias\\\":0.08908246268489733,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":45602.68531126064,\\\"ask\\\":46245.6234727487,\\\"price\\\":45924.154392004675,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0063,\\\"forecast\\\":0.41109426181922315,\\\"bias\\\":0.08890573818077685,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4211709871836649,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19472.93543525626,\\\"ask\\\":19747.478331624414,\\\"price\\\":19610.206883440333,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.08025032669537202},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.539906863319643,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19919.010326069158,\\\"ask\\\":20199.842294412527,\\\"price\\\":20059.426310240844,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.08071026340622384},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42509392239224825,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19629.45216407028,\\\"ask\\\":19906.20174140863,\\\"price\\\":19767.826952739455,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.07854502767448984},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42647249395725245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18982.62646705638,\\\"ask\\\":19250.256648867853,\\\"price\\\":19116.441557962113,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.0753627900398815},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.45393112110196776,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18052.75112138769,\\\"ask\\\":18307.271278184704,\\\"price\\\":18180.011199786208,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.0778724640150098},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5112094585329395,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17635.899430470352,\\\"ask\\\":17884.542524152712,\\\"price\\\":17760.220977311532,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.08064248810877739},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42443142258403405,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17845.591626443234,\\\"ask\\\":18097.19110556731,\\\"price\\\":17971.391366005282,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.07852514428506557},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5591548917423015,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17400.602813954996,\\\"ask\\\":17645.928533386385,\\\"price\\\":17523.2656736707,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.07521662003840712},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5142069245128448,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18364.83383208245,\\\"ask\\\":18623.75394653275,\\\"price\\\":18494.293889307606,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.07284768131660824},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42761989788526916,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18067.488881809484,\\\"ask\\\":18322.21682173428,\\\"price\\\":18194.852851771888,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.07371988628073767},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5342614978025615,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17796.68305710291,\\\"ask\\\":18047.592989428627,\\\"price\\\":17922.13802326576,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.07264615064519142},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.48224505020286723,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":17284.71618842755,\\\"ask\\\":17528.40805815361,\\\"price\\\":17406.562123290576,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.07257851725857212},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5726046495713026,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18152.371616524422,\\\"ask\\\":18408.296291883267,\\\"price\\\":18280.33395420385,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.07546430252335201},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5600251756161578,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19384.9134196604,\\\"ask\\\":19658.215320843923,\\\"price\\\":19521.564370252156,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.0770053974270597},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4758056106553101,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19762.609789310125,\\\"ask\\\":20041.23671483917,\\\"price\\\":19901.923252074652,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.07771656711268493},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5751694372906584,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20758.784706448794,\\\"ask\\\":21051.456394153014,\\\"price\\\":20905.12055030091,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.07716829217287091},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4491304874377012,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":21090.79166829699,\\\"ask\\\":21388.14421951164,\\\"price\\\":21239.467943904318,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.08129660198932226},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.46927498655206107,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20526.991415382774,\\\"ask\\\":20816.395121138423,\\\"price\\\":20671.693268260595,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.08491316294665907},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5821507388069598,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19680.261830863674,\\\"ask\\\":19957.72775798561,\\\"price\\\":19818.994794424638,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.08454858493480621},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4546270583495756,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20552.410563293623,\\\"ask\\\":20842.172645756993,\\\"price\\\":20697.291604525304,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.08123443479306292},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.46630871836393906,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20294.32424093427,\\\"ask\\\":20580.447644129723,\\\"price\\\":20437.385942532004,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.08126489359957079},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5797157321168669,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20805.48933217548,\\\"ask\\\":21098.81949395842,\\\"price\\\":20952.154413066943,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.08088233008707157},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.45879604386222517,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":21295.847732451755,\\\"ask\\\":21596.091305718954,\\\"price\\\":21445.969519085364,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.0828632220071947},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5412234596480235,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":21528.249024785284,\\\"ask\\\":21831.76915202292,\\\"price\\\":21680.009088404106,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.08288307380912019},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42029289902041933,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":21408.223164122515,\\\"ask\\\":21710.051083858372,\\\"price\\\":21559.137123990437,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.08169049109323767},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5351856271810539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20598.51500108787,\\\"ask\\\":20888.92709576584,\\\"price\\\":20743.721048426854,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.08096382607125235},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42796474998630996,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":19917.920975078443,\\\"ask\\\":20198.73758499899,\\\"price\\\":20058.32928003872,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.07814926148315643},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42204744978665265,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18795.89491292909,\\\"ask\\\":19060.892424289617,\\\"price\\\":18928.393668609362,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.08063403517164419},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5324679275990355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":18785.537195611138,\\\"ask\\\":19050.38867671744,\\\"price\\\":18917.9629361643,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.08291977322530497},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5474653409564667,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20798.738854845964,\\\"ask\\\":21091.97384373603,\\\"price\\\":20945.356349290993,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.07759009775643566},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.48958009538243563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20715.84982824946,\\\"ask\\\":21007.91619037985,\\\"price\\\":20861.88300931465,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.07938700251078823},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5788188443421375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20788.61769675062,\\\"ask\\\":21081.7099905618,\\\"price\\\":20935.16384365622,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.07986919945272275},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5776427243810912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20189.00066256901,\\\"ask\\\":20473.639141195363,\\\"price\\\":20331.319901882183,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.08100854146084457},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5836834231932774,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":20909.256778990944,\\\"ask\\\":21204.04992592535,\\\"price\\\":21056.65335245815,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.08542026932723612},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5835666262760175,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":21232.099780062916,\\\"ask\\\":21531.444590657964,\\\"price\\\":21381.77218536044,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.08486880248599016},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5836038950031827,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":23255.720356207687,\\\"ask\\\":23583.595567674838,\\\"price\\\":23419.657961941273,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.08488212578574528},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5808445907891329,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":25172.354965804516,\\\"ask\\\":25527.252216077693,\\\"price\\\":25349.803590941105,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.08261282003611892},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5797330640333325,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":26156.74472404256,\\\"ask\\\":26525.520581179113,\\\"price\\\":26341.132652610828,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.08200268682335943},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5819476564464092,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":27289.2290505605,\\\"ask\\\":27673.971454093073,\\\"price\\\":27481.600252326796,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.08359497220946177},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5839505342743516,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":29645.57725400263,\\\"ask\\\":30063.54108235714,\\\"price\\\":29854.559168179898,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.08749906219875259},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.48659360208234553,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":31852.23206603417,\\\"ask\\\":32301.306838364944,\\\"price\\\":32076.769452199555,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.08730998719165667},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42744785178870665,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":31170.143520912377,\\\"ask\\\":31609.60173772282,\\\"price\\\":31389.87262931759,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.08726288929100223},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5323966173177191,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":30857.20786629853,\\\"ask\\\":31292.25410006305,\\\"price\\\":31074.730983180794,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.08803728222057616},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.41318173393530594,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":30027.109634060434,\\\"ask\\\":30450.45256948526,\\\"price\\\":30238.781101772845,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.08893799776899342},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4184034951379169,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":29322.747061500508,\\\"ask\\\":29736.159406778464,\\\"price\\\":29529.453234139484,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.08599374140712412},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.46439273158764327,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":28387.57359180209,\\\"ask\\\":28787.801215452862,\\\"price\\\":28587.68740362747,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.08030835945286668},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5746829506281125,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":27832.430764308494,\\\"ask\\\":28224.831600864698,\\\"price\\\":28028.631182586603,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.07639711259957727},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5751773835459272,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":29107.48425984166,\\\"ask\\\":29517.861681430564,\\\"price\\\":29312.672970636115,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.07719767138633438},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5724834921877183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":32113.91644347559,\\\"ask\\\":32566.68062294049,\\\"price\\\":32340.29853320803,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.07372558312487665},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5696199588674351,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":33097.299546268645,\\\"ask\\\":33563.928140073025,\\\"price\\\":33330.61384317084,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.07293838447286882},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4682942091675228,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":33720.48590758008,\\\"ask\\\":34195.90061322571,\\\"price\\\":33958.193260402906,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.07175400895524758},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5681962820996077,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":33342.88434982242,\\\"ask\\\":33812.975367846106,\\\"price\\\":33577.92985883427,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.07408174129828005},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5051175835896133,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":34452.921486096835,\\\"ask\\\":34938.66257452116,\\\"price\\\":34695.792030309,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.07330809709088326},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.529253462431003,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":33684.79706292216,\\\"ask\\\":34159.70860258067,\\\"price\\\":33922.25283275143,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.07346006022781648},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5734218215004029,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":35971.30706534625,\\\"ask\\\":36478.45540262202,\\\"price\\\":36224.881233984124,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.07503220320059789},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5110553463647738,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":38432.5552213575,\\\"ask\\\":38974.40393545519,\\\"price\\\":38703.479578406346,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.07463181836456656},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4317377656524303,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":39114.6358483395,\\\"ask\\\":39666.10100632213,\\\"price\\\":39390.368427330824,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.07001009086792914},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4302717520977154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":36037.33023373064,\\\"ask\\\":36545.40941124548,\\\"price\\\":36291.369822488065,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.07095041373586464},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.48557239165729577,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":33989.433877326424,\\\"ask\\\":34468.64039724846,\\\"price\\\":34229.037137287436,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.07123111616731642},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5715355954547611,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":36469.68128052797,\\\"ask\\\":36983.85604178415,\\\"price\\\":36726.76866115608,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.07330950060218666},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5727269567175562,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":39705.83495636922,\\\"ask\\\":40265.635247798375,\\\"price\\\":39985.73510208378,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.07432967222329745},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5760620318155504,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":41024.422614963056,\\\"ask\\\":41602.81326613069,\\\"price\\\":41313.61794054689,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.07813713727775329},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.4838482451988535,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":43434.62668944745,\\\"ask\\\":44046.99806271257,\\\"price\\\":43740.81237608001,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.07727244538411515},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42537827542360845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42341.745378898886,\\\"ask\\\":42938.70855644629,\\\"price\\\":42640.226967672585,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.0775475297585409},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.42659254348719444,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":41741.66165281908,\\\"ask\\\":42330.16443543688,\\\"price\\\":42035.913044128,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.07654605010751553},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5124027139524862,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42262.329974036256,\\\"ask\\\":42858.173498342934,\\\"price\\\":42560.251736189595,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.07773751664089495},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5671106395462474,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":41791.23894862929,\\\"ask\\\":42380.44070621318,\\\"price\\\":42085.83982742121,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.08023486491909154},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.41805412466733133,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":40924.414000224926,\\\"ask\\\":41501.39466085245,\\\"price\\\":41212.904330538644,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.08454526700849302},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5076831997348428,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":38640.20761990848,\\\"ask\\\":39184.983960974656,\\\"price\\\":38912.59579044156,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.08607710979617855},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5820916436156197,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":39920.12072849347,\\\"ask\\\":40482.94216877435,\\\"price\\\":40201.53144863391,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.08543283102725108},{\\\"volatility\\\":0.0063,\\\"forecast\\\":0.5880985810877806,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"ICRS\\\",\\\"bid\\\":42110.79700205692,\\\"ask\\\":42704.5041098402,\\\"price\\\":42407.65055594854,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.09224242100980162}],\\\"recentTicksOfPrices\\\":[45521.27184241816,45546.39730232355,45593.80889582069,45386.29425671449,45154.54286858304,45236.55307691492,45396.37345862997,45597.459801185396,45623.16053458129,45456.93252790999,45349.763909021414,45192.97749026287,45300.596783681984,45546.452518304715,45695.4554593591,45820.78766589625,45764.34833728203,46049.04534046771,46015.260128953,45924.154392004675]}],[\\\"UNV\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20271.744185862015,\\\"ask\\\":20434.569440366933,\\\"price\\\":20353.156813114474,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40335515060672056,\\\"bias\\\":0.09664484939327944,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20268.482521522685,\\\"ask\\\":20431.281577920457,\\\"price\\\":20349.88204972157,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.403339598230833,\\\"bias\\\":0.09666040176916701,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20307.514194532912,\\\"ask\\\":20470.626758344424,\\\"price\\\":20389.07047643867,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4031534561656396,\\\"bias\\\":0.09684654383436042,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20238.59521820734,\\\"ask\\\":20401.154215943945,\\\"price\\\":20319.874717075643,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40348325003669494,\\\"bias\\\":0.09651674996330506,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20266.05193592863,\\\"ask\\\":20428.831469550543,\\\"price\\\":20347.441702739587,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4036141896167669,\\\"bias\\\":0.09638581038323307,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20261.286197812908,\\\"ask\\\":20424.027452413815,\\\"price\\\":20342.65682511336,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4036368609085039,\\\"bias\\\":0.09636313909149608,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20346.206142341107,\\\"ask\\\":20509.629484849873,\\\"price\\\":20427.91781359549,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4032329797162479,\\\"bias\\\":0.09676702028375211,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20386.579289751637,\\\"ask\\\":20550.32691456892,\\\"price\\\":20468.453102160278,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4034249953257951,\\\"bias\\\":0.09657500467420488,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20470.170174144,\\\"ask\\\":20634.589211687326,\\\"price\\\":20552.379692915663,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4038209808384295,\\\"bias\\\":0.09617901916157051,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20570.852217412452,\\\"ask\\\":20736.07994606637,\\\"price\\\":20653.46608173941,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4033479266289938,\\\"bias\\\":0.09665207337100618,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20633.580508916362,\\\"ask\\\":20799.312079269104,\\\"price\\\":20716.446294092733,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4030531979824217,\\\"bias\\\":0.09694680201757833,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20718.357823356706,\\\"ask\\\":20884.77033599411,\\\"price\\\":20801.56407967541,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40345152388204325,\\\"bias\\\":0.09654847611795675,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20742.004345454377,\\\"ask\\\":20908.606789996178,\\\"price\\\":20825.305567725278,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4033413300291576,\\\"bias\\\":0.09665866997084238,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20706.89591824777,\\\"ask\\\":20873.21636739032,\\\"price\\\":20790.056142819045,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4031774457902086,\\\"bias\\\":0.09682255420979141,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20627.929435976268,\\\"ask\\\":20793.61561618491,\\\"price\\\":20710.77252608059,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4028067960585319,\\\"bias\\\":0.09719320394146808,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20577.804420941466,\\\"ask\\\":20743.087990587584,\\\"price\\\":20660.446205764525,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40304354681722265,\\\"bias\\\":0.09695645318277735,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20479.622908185633,\\\"ask\\\":20644.117871303588,\\\"price\\\":20561.87038974461,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40350836647174476,\\\"bias\\\":0.09649163352825524,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20389.535136638206,\\\"ask\\\":20553.306503197546,\\\"price\\\":20471.420819917876,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4030820342292841,\\\"bias\\\":0.09691796577071587,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20444.367123693602,\\\"ask\\\":20608.578907819658,\\\"price\\\":20526.47301575663,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4028214003007045,\\\"bias\\\":0.09717859969929549,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20381.457947804294,\\\"ask\\\":20545.164437344894,\\\"price\\\":20463.311192574594,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40252144994205913,\\\"bias\\\":0.09747855005794087,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20334.170349367407,\\\"ask\\\":20497.497018840237,\\\"price\\\":20415.83368410382,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40229476124750446,\\\"bias\\\":0.09770523875249554,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20416.65342865001,\\\"ask\\\":20580.64261281587,\\\"price\\\":20498.64802073294,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4026910906189951,\\\"bias\\\":0.0973089093810049,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20424.032128040075,\\\"ask\\\":20588.080578867703,\\\"price\\\":20506.05635345389,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40272625863479194,\\\"bias\\\":0.09727374136520806,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20462.27059175666,\\\"ask\\\":20626.626178839044,\\\"price\\\":20544.448385297852,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4025441399225586,\\\"bias\\\":0.09745586007744139,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20444.721627409894,\\\"ask\\\":20608.936258955353,\\\"price\\\":20526.828943182623,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40246048755276603,\\\"bias\\\":0.09753951244723397,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20540.641166939557,\\\"ask\\\":20705.626236553526,\\\"price\\\":20623.13370174654,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4029181090988253,\\\"bias\\\":0.0970818909011747,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20480.002237722394,\\\"ask\\\":20644.500247663942,\\\"price\\\":20562.251242693168,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4026306607947533,\\\"bias\\\":0.09736933920524671,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20393.866285485215,\\\"ask\\\":20557.672440388713,\\\"price\\\":20475.769362936964,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4030419119343726,\\\"bias\\\":0.09695808806562739,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20303.518481843676,\\\"ask\\\":20466.59895157736,\\\"price\\\":20385.05871671052,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40261046206966833,\\\"bias\\\":0.09738953793033167,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20239.068418820738,\\\"ask\\\":20401.63121736548,\\\"price\\\":20320.34981809311,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4029205930365436,\\\"bias\\\":0.0970794069634564,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20154.56944416208,\\\"ask\\\":20316.453536083063,\\\"price\\\":20235.51149012257,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40332760298888265,\\\"bias\\\":0.09667239701111735,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20064.90325315527,\\\"ask\\\":20226.067134706715,\\\"price\\\":20145.485193930992,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40289559265192165,\\\"bias\\\":0.09710440734807835,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20053.215042560292,\\\"ask\\\":20214.285042902146,\\\"price\\\":20133.75004273122,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40283899440768123,\\\"bias\\\":0.09716100559231877,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20121.873800453788,\\\"ask\\\":20283.495276762653,\\\"price\\\":20202.68453860822,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40317165697303514,\\\"bias\\\":0.09682834302696486,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20223.18178164853,\\\"ask\\\":20385.616976681853,\\\"price\\\":20304.399379165192,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40268415347053965,\\\"bias\\\":0.09731584652946035,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20281.716857326057,\\\"ask\\\":20444.6222136098,\\\"price\\\":20363.16953546793,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.402402477199084,\\\"bias\\\":0.09759752280091599,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20272.126116784093,\\\"ask\\\":20434.954439007255,\\\"price\\\":20353.540277895674,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.402356303822235,\\\"bias\\\":0.09764369617776503,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20290.213803683586,\\\"ask\\\":20453.18740853245,\\\"price\\\":20371.700606108017,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4024434258435759,\\\"bias\\\":0.0975565741564241,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20211.006511371488,\\\"ask\\\":20373.34391306925,\\\"price\\\":20292.17521222037,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40206109990241967,\\\"bias\\\":0.09793890009758033,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20299.91885267094,\\\"ask\\\":20462.970409720503,\\\"price\\\":20381.44463119572,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40249195310644337,\\\"bias\\\":0.09750804689355663,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20268.36601566981,\\\"ask\\\":20431.1641362776,\\\"price\\\":20349.765075973704,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4026437490384664,\\\"bias\\\":0.09735625096153361,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20207.173060121677,\\\"ask\\\":20369.47967104635,\\\"price\\\":20288.326365584013,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4023489271591418,\\\"bias\\\":0.09765107284085822,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20283.89510793171,\\\"ask\\\":20446.817960204255,\\\"price\\\":20365.35653406798,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40271968610978304,\\\"bias\\\":0.09728031389021696,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20274.100215595507,\\\"ask\\\":20436.944394034028,\\\"price\\\":20355.522304814767,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40267268771326464,\\\"bias\\\":0.09732731228673536,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20210.751219366186,\\\"ask\\\":20373.086570525757,\\\"price\\\":20291.91889494597,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40236762297459455,\\\"bias\\\":0.09763237702540545,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20169.895819184894,\\\"ask\\\":20331.90301451971,\\\"price\\\":20250.899416852302,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.402169862417486,\\\"bias\\\":0.09783013758251402,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20110.095317914507,\\\"ask\\\":20271.622187937915,\\\"price\\\":20190.85875292621,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4018789492629584,\\\"bias\\\":0.09812105073704158,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20151.142799857054,\\\"ask\\\":20312.999368530607,\\\"price\\\":20232.07108419383,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4020792278789789,\\\"bias\\\":0.09792077212102113,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20057.835912091494,\\\"ask\\\":20218.943027851263,\\\"price\\\":20138.38946997138,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5974652552579728,\\\"bias\\\":0.09746525525797278,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20001.749008088114,\\\"ask\\\":20162.405626626973,\\\"price\\\":20082.077317357544,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5971919529376053,\\\"bias\\\":0.0971919529376053,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20048.77206502487,\\\"ask\\\":20209.80637880017,\\\"price\\\":20129.28922191252,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5974204460926255,\\\"bias\\\":0.09742044609262546,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20069.96521663744,\\\"ask\\\":20231.16975653011,\\\"price\\\":20150.567486583775,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5973174649086652,\\\"bias\\\":0.09731746490866522,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":19963.515174508946,\\\"ask\\\":20123.864693982912,\\\"price\\\":20043.68993424593,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5978363839541745,\\\"bias\\\":0.09783638395417449,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":19976.07880009485,\\\"ask\\\":20136.529232224126,\\\"price\\\":20056.304016159487,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5978979552599257,\\\"bias\\\":0.09789795525992573,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":19942.168615690018,\\\"ask\\\":20102.346676860216,\\\"price\\\":20022.257646275117,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5980644235001504,\\\"bias\\\":0.09806442350015043,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5458658482120611,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":21704.257277258206,\\\"ask\\\":21878.58866101129,\\\"price\\\":21791.422969134754,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.1006414995946543},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.6012639315233277,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23539.855548570154,\\\"ask\\\":23728.930693538594,\\\"price\\\":23634.393121054367,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.10400416952008373},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.6027016464432646,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25380.56977292107,\\\"ask\\\":25584.429771097126,\\\"price\\\":25482.49977200909,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.104342876207967},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4591829440128305,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26570.361538563255,\\\"ask\\\":26783.77809710594,\\\"price\\\":26677.06981783459,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.104248671064053},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.3980684647832195,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26165.66801390497,\\\"ask\\\":26375.834022048788,\\\"price\\\":26270.751017976883,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.10355520029482418},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4849309849559687,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25080.8740022339,\\\"ask\\\":25282.32680546469,\\\"price\\\":25181.600403849305,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.10162899548236076},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5981196982121357,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25505.937003390012,\\\"ask\\\":25710.80396727265,\\\"price\\\":25608.370485331343,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.09939233055418073},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5669583754192223,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":27171.382714672036,\\\"ask\\\":27389.62675254089,\\\"price\\\":27280.504733606456,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.10007211999798504},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4044795861190515,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25955.95855114068,\\\"ask\\\":26164.440145928947,\\\"price\\\":26060.199348534836,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.09802240476692675},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40156342571666315,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23989.469877875803,\\\"ask\\\":24182.156382918987,\\\"price\\\":24085.813130397397,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.1004778392211898},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4285444780999881,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":22783.414428673965,\\\"ask\\\":22966.41374135407,\\\"price\\\":22874.91408501403,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.09828261281482364},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5915457064806782,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":22476.631513571414,\\\"ask\\\":22657.16670645151,\\\"price\\\":22566.89911001147,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.09381306595951866},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.48061948730242754,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":22577.88029434454,\\\"ask\\\":22759.228730443694,\\\"price\\\":22668.554512394123,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.0913152264668109},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.42900387412437846,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":21690.12999220005,\\\"ask\\\":21864.347903783993,\\\"price\\\":21777.238947992017,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.09067583784837047},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5890135210444574,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":21801.005687984605,\\\"ask\\\":21976.114167406187,\\\"price\\\":21888.559927695398,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.09072946629692746},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5931810355810083,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":22662.282599455357,\\\"ask\\\":22844.308965716045,\\\"price\\\":22753.2957825857,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.09598380297575237},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5812150241468247,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":22722.61330950418,\\\"ask\\\":22905.12425978132,\\\"price\\\":22813.868784642757,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.09641748881721879},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40811400631153255,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23153.35207461138,\\\"ask\\\":23339.32277400584,\\\"price\\\":23246.337424308622,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.09355767151851674},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5088739301301589,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23302.961473617623,\\\"ask\\\":23490.133854931817,\\\"price\\\":23396.547664274727,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.09545126463873743},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5944487154316846,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":24534.534994310132,\\\"ask\\\":24731.599532417044,\\\"price\\\":24633.067263363595,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.09811522535823358},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5405282214677567,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25603.50921579806,\\\"ask\\\":25809.159892230167,\\\"price\\\":25706.3345540141,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.09415601892015912},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40399746762801525,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":24529.149725859996,\\\"ask\\\":24726.17100879864,\\\"price\\\":24627.660367329325,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.09782121848654202},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40673867186910473,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23671.321832698377,\\\"ask\\\":23861.45293175619,\\\"price\\\":23766.387382227294,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.09788830688562045},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5476389490723484,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23028.794963354623,\\\"ask\\\":23213.76520402413,\\\"price\\\":23121.280083689373,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.0995256752615643},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40389101320394366,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":22577.452269786852,\\\"ask\\\":22758.797267937753,\\\"price\\\":22668.12476886229,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.09815399339602038},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40683340456555656,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":22441.106569199626,\\\"ask\\\":22621.356421161065,\\\"price\\\":22531.23149518034,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.09493844341221447},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5844628039312674,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23296.423884985757,\\\"ask\\\":23483.543755547893,\\\"price\\\":23389.983820266825,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.09149293328644503},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5873377268255527,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":24862.78485430459,\\\"ask\\\":25062.485937471713,\\\"price\\\":24962.635395888166,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.08961421794879543},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5885456030736855,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25887.169835838322,\\\"ask\\\":26095.09891082496,\\\"price\\\":25991.134373331643,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.09133702596428639},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.45293184582241913,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25181.162199924318,\\\"ask\\\":25383.420530847394,\\\"price\\\":25282.291365385867,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.09533123615255645},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5150294480632888,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25606.11768097682,\\\"ask\\\":25811.78930893647,\\\"price\\\":25708.953494956637,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.09600224549731318},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5292873919002801,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":26418.691843898338,\\\"ask\\\":26630.890171961764,\\\"price\\\":26524.791007930045,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.09127483824355936},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.45633875928731804,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25944.656732966792,\\\"ask\\\":26153.047550099054,\\\"price\\\":26048.85214153292,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.08915409846832667},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.517562894150419,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25111.029362656336,\\\"ask\\\":25312.724377617444,\\\"price\\\":25211.876870136886,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.08816387753001786},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5241614328893581,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25011.943253239962,\\\"ask\\\":25212.84239583625,\\\"price\\\":25112.392824538114,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.08936500216312637},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5662558818534277,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25899.40538700088,\\\"ask\\\":26107.432739506898,\\\"price\\\":26003.41906325388,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.09161703074999683},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4101268545841093,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":25206.252229973055,\\\"ask\\\":25408.71208724191,\\\"price\\\":25307.482158607483,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.09082341747992528},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40895174348498214,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":24501.813163343402,\\\"ask\\\":24698.61487549878,\\\"price\\\":24600.214019421077,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.09288510178257126},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.546810005060189,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":24971.35514983797,\\\"ask\\\":25171.928283571597,\\\"price\\\":25071.64171670479,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.09494066885769137},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4706683763379669,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23967.702359649255,\\\"ask\\\":24160.214025188616,\\\"price\\\":24063.95819241893,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.09549829853756198},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5927193430986653,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":24488.18351854075,\\\"ask\\\":24684.875755637466,\\\"price\\\":24586.529637089116,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.09474069402394736},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4520825402490576,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":24786.26909056906,\\\"ask\\\":24985.35558928849,\\\"price\\\":24885.81233992877,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.0963797571892615},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5359051401571902,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":24267.952608697105,\\\"ask\\\":24462.87592282318,\\\"price\\\":24365.414265760148,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.09483125071956822},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4104027063023339,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23983.175757608406,\\\"ask\\\":24175.811707468718,\\\"price\\\":24079.49373253857,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.09166139182217775},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5435666565842351,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23313.583116522394,\\\"ask\\\":23500.840812237446,\\\"price\\\":23407.211964379923,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.09024757316800347},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4110933994592404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":23334.736964553693,\\\"ask\\\":23522.164570694677,\\\"price\\\":23428.450767624192,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.09052147417739193},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4096078855690258,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":22712.887210649344,\\\"ask\\\":22895.320039650545,\\\"price\\\":22804.103625149946,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.09221907103932109},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4109078570405666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":21471.081737476405,\\\"ask\\\":21643.54022532763,\\\"price\\\":21557.310981402024,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.09179404106203504},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.41372743463545175,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20332.853916180356,\\\"ask\\\":20496.170011892642,\\\"price\\\":20414.511964036505,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.08941537509816333},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.41189576290020974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":18870.18671858742,\\\"ask\\\":19021.754483395358,\\\"price\\\":18945.970600991393,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.08946765733425044},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5445808064691705,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":18573.109106662356,\\\"ask\\\":18722.29070591267,\\\"price\\\":18647.69990628753,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.09890882949670232},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5564618042990281,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":19431.52384452037,\\\"ask\\\":19587.6003412635,\\\"price\\\":19509.56209289193,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.10308925855994522},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4010855466847675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":18677.27250987977,\\\"ask\\\":18827.290762971166,\\\"price\\\":18752.28163642546,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.10178865865986741},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40099349322172173,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":17409.849281368726,\\\"ask\\\":17549.68742820703,\\\"price\\\":17479.768354787884,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.10217400294257639},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.3980823053280173,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":16750.566528643158,\\\"ask\\\":16885.10923168448,\\\"price\\\":16817.837880163817,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.10285367635157355},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.3975105285487082,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":16358.213466730334,\\\"ask\\\":16489.604739555474,\\\"price\\\":16423.90910314291,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.10425674938214669},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5360502030239634,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":15995.061865496813,\\\"ask\\\":16123.53625799077,\\\"price\\\":16059.299061743792,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.10605631819462524},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4147007677939723,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":15965.772688778101,\\\"ask\\\":16094.011826840573,\\\"price\\\":16029.892257809333,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.10567016598316348},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.3971318484354525,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":15657.138229139784,\\\"ask\\\":15782.898375558578,\\\"price\\\":15720.018302349185,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":3102000,\\\"averageShortPrice\\\":5174.633248321611,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.1062059631686546},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5253004177541957,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":15559.284137641871,\\\"ask\\\":15684.258307422126,\\\"price\\\":15621.771222531996,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":3478000,\\\"averageShortPrice\\\":5801.861520845444,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.10068071547920099},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.45123073869123387,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":16731.58393229256,\\\"ask\\\":16865.974164680465,\\\"price\\\":16798.779048486515,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":3478000,\\\"averageShortPrice\\\":6166.817757318284,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.10036056032621787},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5927687316744062,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":17824.89674343244,\\\"ask\\\":17968.068604825476,\\\"price\\\":17896.482674128954,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.09496752706370182},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5941347442427429,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":18735.57600570112,\\\"ask\\\":18886.062559963793,\\\"price\\\":18810.81928283247,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.09759994695673146},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4509859648501432,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":18730.332523340272,\\\"ask\\\":18880.776961278738,\\\"price\\\":18805.554742309498,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":4888000,\\\"averageShortPrice\\\":9759.490847342213,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.10016087217057418},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5878920965701326,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":18959.844025940016,\\\"ask\\\":19112.131929762825,\\\"price\\\":19035.987977851426,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.0888659519399575},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.48593783326471884,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":19582.899190762673,\\\"ask\\\":19740.191553740682,\\\"price\\\":19661.54537225166,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.08978096209755404},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.4240678641787461,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":19122.63889375341,\\\"ask\\\":19276.234386875938,\\\"price\\\":19199.436640314663,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.08944864618885034},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5898007483420956,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":18797.38471776495,\\\"ask\\\":18948.36772754619,\\\"price\\\":18872.876222655574,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.09271511588552561},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5927779699216755,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":19423.94592404305,\\\"ask\\\":19579.961553955047,\\\"price\\\":19501.953738999044,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.09492565676176545},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.5865153751549516,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20546.5133803999,\\\"ask\\\":20711.545616387055,\\\"price\\\":20629.029498393476,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.09631690146649519},{\\\"volatility\\\":0.0054,\\\"forecast\\\":0.40334886838173056,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"UNV\\\",\\\"bid\\\":20954.296497744108,\\\"ask\\\":21122.604100135624,\\\"price\\\":21038.45029893986,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.0986529822054355}],\\\"recentTicksOfPrices\\\":[20363.16953546793,20353.540277895674,20371.700606108017,20292.17521222037,20381.44463119572,20349.765075973704,20288.326365584013,20365.35653406798,20355.522304814767,20291.91889494597,20250.899416852302,20190.85875292621,20232.07108419383,20138.38946997138,20082.077317357544,20129.28922191252,20150.567486583775,20043.68993424593,20056.304016159487,20022.257646275117]}],[\\\"AERO\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14184.089956598522,\\\"ask\\\":14326.643624504033,\\\"price\\\":14255.366790551278,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44208880547348356,\\\"bias\\\":0.05791119452651644,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14181.596502332219,\\\"ask\\\":14324.125110395857,\\\"price\\\":14252.860806364039,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44209898760742283,\\\"bias\\\":0.05790101239257717,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14211.435161821115,\\\"ask\\\":14354.263655909768,\\\"price\\\":14282.849408865442,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44197716150747984,\\\"bias\\\":0.05802283849252016,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14158.755643878576,\\\"ask\\\":14301.054695575845,\\\"price\\\":14229.905169727212,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.442193043131425,\\\"bias\\\":0.05780695686857501,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14137.799646809497,\\\"ask\\\":14279.888085470897,\\\"price\\\":14208.843866140198,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44210735777380405,\\\"bias\\\":0.057892642226195945,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14134.167263757598,\\\"ask\\\":14276.219196056669,\\\"price\\\":14205.193229907134,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.442092479765887,\\\"bias\\\":0.057907520234113,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14198.892131088201,\\\"ask\\\":14341.594564566472,\\\"price\\\":14270.243347827338,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44182730273107096,\\\"bias\\\":0.05817269726892904,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14168.174951987925,\\\"ask\\\":14310.568670098353,\\\"price\\\":14239.37181104314,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4417011819592135,\\\"bias\\\":0.058298818040786515,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14104.98537450741,\\\"ask\\\":14246.744021487384,\\\"price\\\":14175.864697997398,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4414400063832169,\\\"bias\\\":0.0585599936167831,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14180.784022551035,\\\"ask\\\":14323.304464988734,\\\"price\\\":14252.044243769886,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4411253113851194,\\\"bias\\\":0.0588746886148806,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14133.694409287138,\\\"ask\\\":14275.74158927997,\\\"price\\\":14204.717999283555,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44132146578308673,\\\"bias\\\":0.05867853421691327,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14197.14256561469,\\\"ask\\\":14339.827415520364,\\\"price\\\":14268.484990567527,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44158488203535967,\\\"bias\\\":0.05841511796464033,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14214.84655498343,\\\"ask\\\":14357.7093344305,\\\"price\\\":14286.277944706966,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44165772631530126,\\\"bias\\\":0.05834227368469874,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14241.179340485713,\\\"ask\\\":14384.306771043355,\\\"price\\\":14312.743055764535,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4415496481469783,\\\"bias\\\":0.05845035185302172,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14181.86240931929,\\\"ask\\\":14324.393689814959,\\\"price\\\":14253.128049567125,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4417941220670778,\\\"bias\\\":0.0582058779329222,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14144.21867543454,\\\"ask\\\":14286.371626946444,\\\"price\\\":14215.295151190492,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44194903246755407,\\\"bias\\\":0.05805096753244593,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14218.306181793667,\\\"ask\\\":14361.20373135943,\\\"price\\\":14289.75495657655,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4416449611346014,\\\"bias\\\":0.05835503886539861,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14286.944183919348,\\\"ask\\\":14430.531562652204,\\\"price\\\":14358.737873285776,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4419266665100853,\\\"bias\\\":0.058073333489914725,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14245.088920787477,\\\"ask\\\":14388.25564360946,\\\"price\\\":14316.67228219847,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4420972989763115,\\\"bias\\\":0.057902701023688496,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14197.210477485927,\\\"ask\\\":14339.89600992297,\\\"price\\\":14268.55324370445,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4422925691100019,\\\"bias\\\":0.05770743088999808,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14233.28346185117,\\\"ask\\\":14376.331536844647,\\\"price\\\":14304.80749934791,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44243919504441026,\\\"bias\\\":0.05756080495558974,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14296.364925089156,\\\"ask\\\":14440.04698463779,\\\"price\\\":14368.205954863473,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4426943027159104,\\\"bias\\\":0.057305697284089574,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14302.010122554468,\\\"ask\\\":14445.748917756018,\\\"price\\\":14373.879520155244,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4427169309839178,\\\"bias\\\":0.05728306901608221,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14331.266077836759,\\\"ask\\\":14475.29890273964,\\\"price\\\":14403.2824902882,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44283410828215813,\\\"bias\\\":0.057165891717841866,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14317.83824291666,\\\"ask\\\":14461.736114704765,\\\"price\\\":14389.787178810713,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4428877207161041,\\\"bias\\\":0.057112279283895895,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14244.81837355725,\\\"ask\\\":14387.982377311591,\\\"price\\\":14316.400375434421,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4431804819899066,\\\"bias\\\":0.056819518010093384,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14198.884401773234,\\\"ask\\\":14341.586757569947,\\\"price\\\":14270.235579671591,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44299666852518604,\\\"bias\\\":0.057003331474813956,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14133.661841938256,\\\"ask\\\":14275.708694621051,\\\"price\\\":14204.685268279654,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44273361545093765,\\\"bias\\\":0.057266384549062355,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14065.278098761617,\\\"ask\\\":14206.637677643643,\\\"price\\\":14135.95788820263,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44245519296215635,\\\"bias\\\":0.05754480703784365,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14016.510543174149,\\\"ask\\\":14157.379995869363,\\\"price\\\":14086.945269521757,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44225497768265837,\\\"bias\\\":0.05774502231734163,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14080.716611123737,\\\"ask\\\":14222.231350934024,\\\"price\\\":14151.473981028881,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4419904624300755,\\\"bias\\\":0.058009537569924496,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14012.300349341502,\\\"ask\\\":14153.127488530861,\\\"price\\\":14082.713918936182,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44227369898719343,\\\"bias\\\":0.05772630101280657,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14003.382600771183,\\\"ask\\\":14144.120114346772,\\\"price\\\":14073.751357558978,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44231046072205443,\\\"bias\\\":0.05768953927794557,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14055.767141165063,\\\"ask\\\":14197.031132533555,\\\"price\\\":14126.39913684931,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4425262685798248,\\\"bias\\\":0.0574737314201752,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14133.086464692939,\\\"ask\\\":14275.127534689851,\\\"price\\\":14204.106999691396,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4422101115184989,\\\"bias\\\":0.05778988848150107,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14088.532054921348,\\\"ask\\\":14230.125341905481,\\\"price\\\":14159.328698413416,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.442392869691034,\\\"bias\\\":0.057607130308966026,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14095.814493645588,\\\"ask\\\":14237.480970968658,\\\"price\\\":14166.647732307123,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4423630922525529,\\\"bias\\\":0.05763690774744712,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14109.555930919689,\\\"ask\\\":14251.360513139985,\\\"price\\\":14180.458222029838,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.442419280133916,\\\"bias\\\":0.057580719866083985,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14049.397958335627,\\\"ask\\\":14190.597937816385,\\\"price\\\":14119.997948076007,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44266583442594665,\\\"bias\\\":0.05733416557405335,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14116.926919800453,\\\"ask\\\":14258.805582311008,\\\"price\\\":14187.866251055731,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44239025559551204,\\\"bias\\\":0.05760974440448796,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14092.956257625865,\\\"ask\\\":14234.594008958788,\\\"price\\\":14163.775133292327,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4422922673738898,\\\"bias\\\":0.057707732626110175,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14046.481015920215,\\\"ask\\\":14187.6516793968,\\\"price\\\":14117.066347658509,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4424832035107802,\\\"bias\\\":0.05751679648921981,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14104.750398142143,\\\"ask\\\":14246.506683550606,\\\"price\\\":14175.628540846375,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4422446050892244,\\\"bias\\\":0.05775539491077558,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14097.309034126432,\\\"ask\\\":14238.990531956848,\\\"price\\\":14168.149783041641,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4422750916818331,\\\"bias\\\":0.0577249083181669,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14145.587310176828,\\\"ask\\\":14287.75401681177,\\\"price\\\":14216.6706634943,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44247277898882353,\\\"bias\\\":0.057527221011176466,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14176.89312768191,\\\"ask\\\":14319.37446564856,\\\"price\\\":14248.133796665235,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44260009336913597,\\\"bias\\\":0.05739990663086403,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14130.981649088833,\\\"ask\\\":14273.001565160075,\\\"price\\\":14201.991607124455,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44278658533763254,\\\"bias\\\":0.05721341466236746,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14099.537813281275,\\\"ask\\\":14241.241710902192,\\\"price\\\":14170.389762091734,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44265899184907587,\\\"bias\\\":0.05734100815092413,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14171.20044584091,\\\"ask\\\":14313.624570924736,\\\"price\\\":14242.412508382824,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.557632450867142,\\\"bias\\\":0.05763245086714197,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14127.916199861562,\\\"ask\\\":14269.905307397858,\\\"price\\\":14198.91075362971,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5578090216468972,\\\"bias\\\":0.05780902164689716,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14164.205554735363,\\\"ask\\\":14306.559379406068,\\\"price\\\":14235.382467070716,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5579575114929419,\\\"bias\\\":0.05795751149294193,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14180.564610739864,\\\"ask\\\":14323.082848033731,\\\"price\\\":14251.823729386799,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5578905730280397,\\\"bias\\\":0.05789057302803968,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14098.427814283586,\\\"ask\\\":14240.120556135682,\\\"price\\\":14169.274185209635,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5582278408621683,\\\"bias\\\":0.058227840862168256,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14108.121901170436,\\\"ask\\\":14249.912071031446,\\\"price\\\":14179.016986100942,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5581878033660739,\\\"bias\\\":0.058187803366073876,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14081.959409235857,\\\"ask\\\":14223.486639479432,\\\"price\\\":14152.723024357645,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5580796978182581,\\\"bias\\\":0.05807969781825806,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.557273680606183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":9092.488295581099,\\\"ask\\\":9183.870087496485,\\\"price\\\":9138.179191538793,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.05868007240779205},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.47147023785897674,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":9344.171746308552,\\\"ask\\\":9438.083020140797,\\\"price\\\":9391.127383224673,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.058209884056608985},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5046320485893586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":9499.334313235897,\\\"ask\\\":9594.805009851329,\\\"price\\\":9547.069661543614,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.05834427415848831},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5230702283711051,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":9833.815684049512,\\\"ask\\\":9932.648002482169,\\\"price\\\":9883.23184326584,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.05837822261665582},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4711552360165792,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":9983.640160858593,\\\"ask\\\":10083.97825292753,\\\"price\\\":10033.809206893062,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.05846633510092597},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5610354511073797,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":10236.83467888955,\\\"ask\\\":10339.717439481401,\\\"price\\\":10288.276059185477,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.06335226103206959},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5593099695212459,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":10759.549730511184,\\\"ask\\\":10867.68590870728,\\\"price\\\":10813.617819609239,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.06271864709009534},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5383323913692675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11089.810272225535,\\\"ask\\\":11201.265651845888,\\\"price\\\":11145.53796203571,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.05766921474494935},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.48880661293152144,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11183.169310812016,\\\"ask\\\":11295.56297222721,\\\"price\\\":11239.366141519611,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.05964354645688019},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5590002590814613,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11064.363853932691,\\\"ask\\\":11175.563490655637,\\\"price\\\":11119.963672294158,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.06054046114948908},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5572426268699057,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11405.084310670669,\\\"ask\\\":11519.708273591983,\\\"price\\\":11462.396292131325,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.058104077200038295},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5150073328993937,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11908.76568499043,\\\"ask\\\":12028.451772276761,\\\"price\\\":11968.608728633593,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.058627200283804526},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44088639554223635,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11684.163965579108,\\\"ask\\\":11801.592749152764,\\\"price\\\":11742.878357365946,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.061640007699509114},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5435265591052467,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11496.062506945673,\\\"ask\\\":11611.600823598399,\\\"price\\\":11553.831665272033,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.06362404732489768},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5208641588359614,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12164.288930294642,\\\"ask\\\":12286.54309039809,\\\"price\\\":12225.416010346371,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.06442553657407168},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5098766043977808,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12428.182332898716,\\\"ask\\\":12553.088688003227,\\\"price\\\":12490.63551045097,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.06303019756396555},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5609786139700919,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12825.541617040379,\\\"ask\\\":12954.441532789519,\\\"price\\\":12889.99157491494,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.06212187934394753},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5233173660128556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13604.94659550783,\\\"ask\\\":13741.679727120965,\\\"price\\\":13673.313161314405,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.06159358890421385},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.50559603425977,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13463.536232564307,\\\"ask\\\":13598.84815449962,\\\"price\\\":13531.19219353197,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.05848759780445423},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5512739794578958,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13537.159531452271,\\\"ask\\\":13673.211386039726,\\\"price\\\":13605.185458745993,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.056741294534797815},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4456158761465918,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13857.243375950966,\\\"ask\\\":13996.512153598707,\\\"price\\\":13926.877764774837,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.055349328007388565},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44714250967874974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13851.4032798819,\\\"ask\\\":13990.613363096783,\\\"price\\\":13921.008321489358,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.05491992747570007},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4484186450417843,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13687.312731110775,\\\"ask\\\":13824.873663081735,\\\"price\\\":13756.093197096261,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.05262336787879135},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4745215502078372,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13519.113840614205,\\\"ask\\\":13654.984331474647,\\\"price\\\":13587.049086044433,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.05260296857692115},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5522898227581493,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14001.185807342841,\\\"ask\\\":14141.901242592528,\\\"price\\\":14071.543524967683,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.053143961341872714},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.47477834421330883,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14373.467626790029,\\\"ask\\\":14517.924587863296,\\\"price\\\":14445.696107326658,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.05468885077808794},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5493984550671933,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14699.538592492776,\\\"ask\\\":14847.272648698732,\\\"price\\\":14773.405620595753,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.05388562978895095},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5042337864350303,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":15535.286443937513,\\\"ask\\\":15691.419976037396,\\\"price\\\":15613.353209987456,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.05370526643681739},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5213682516415271,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":15690.95987806777,\\\"ask\\\":15848.657967294585,\\\"price\\\":15769.808922681183,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.05369859826969947},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4538732942760772,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":15815.110220606724,\\\"ask\\\":15974.056051969601,\\\"price\\\":15894.58313628816,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.05353039923038716},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44590779092074856,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":15034.159500081509,\\\"ask\\\":15185.256580484347,\\\"price\\\":15109.708040282929,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.05567594116417085},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44539856272743156,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13763.067332610512,\\\"ask\\\":13901.389617360364,\\\"price\\\":13832.22847498544,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.055480011929623596},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4462998330679199,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13186.23914846473,\\\"ask\\\":13318.764165032211,\\\"price\\\":13252.501656748476,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.054804921374682625},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4895461083453954,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12557.475380649288,\\\"ask\\\":12683.681163369381,\\\"price\\\":12620.578272009336,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.05255316458724979},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4847335128048336,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12486.21861338548,\\\"ask\\\":12611.70824769085,\\\"price\\\":12548.963430538159,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.054063617652511775},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44616935435127225,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11786.39525650032,\\\"ask\\\":11904.851490233998,\\\"price\\\":11845.623373367162,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.05486118177863025},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4453040275677892,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11542.811581244794,\\\"ask\\\":11658.819737840218,\\\"price\\\":11600.815659542503,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.05604825697256233},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5116480316433819,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11222.507268246824,\\\"ask\\\":11335.296286018152,\\\"price\\\":11278.90177713249,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.05631191513890693},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5437502749330708,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12056.35570489981,\\\"ask\\\":12177.525108969156,\\\"price\\\":12116.94040693449,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.055906376832604576},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44412622508237143,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12266.568971358174,\\\"ask\\\":12389.851071572826,\\\"price\\\":12328.210021465498,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.05785347807336322},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4423403587044013,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11926.409820023599,\\\"ask\\\":12046.273235300216,\\\"price\\\":11986.341527661909,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.05883102140567581},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5372432444834809,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":11876.255312658519,\\\"ask\\\":11995.614662534477,\\\"price\\\":11935.9349875965,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.05916333924750505},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5219875261103047,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12446.766599233226,\\\"ask\\\":12571.859730883816,\\\"price\\\":12509.313165058522,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.05974674170811006},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4411620931398686,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12762.977534306716,\\\"ask\\\":12891.248665304773,\\\"price\\\":12827.113099805742,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.06000268218604704},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.533866436447031,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12771.116963800276,\\\"ask\\\":12899.46989810983,\\\"price\\\":12835.29343095506,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.05967316769587083},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5583341665541167,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12845.718922665137,\\\"ask\\\":12974.821625405488,\\\"price\\\":12910.270274035314,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.05954670327081035},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4981550554243671,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13645.902283995978,\\\"ask\\\":13783.047030568803,\\\"price\\\":13714.474657282399,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.058821115156994175},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4450614511540689,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14201.74470055853,\\\"ask\\\":14344.475803076692,\\\"price\\\":14273.110251817605,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.05820306066687364},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5280566242497486,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13792.10851146897,\\\"ask\\\":13930.722667363134,\\\"price\\\":13861.415589416049,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.05850708937816618},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44112713307356743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13302.405906565265,\\\"ask\\\":13436.098428239284,\\\"price\\\":13369.25216740227,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.05975902066884792},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4409063472825443,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12847.343113666182,\\\"ask\\\":12976.462139934178,\\\"price\\\":12911.902626800183,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.06084707405101264},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5524835932197013,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12957.076049883157,\\\"ask\\\":13087.297919731222,\\\"price\\\":13022.186984807184,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.057798489253612695},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5040841011546822,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13463.48813085943,\\\"ask\\\":13598.799569360532,\\\"price\\\":13531.143850109978,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.05985022601347678},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.439963524425493,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13637.144603244178,\\\"ask\\\":13774.201332925028,\\\"price\\\":13705.672968084607,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.061056011892233975},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.529983116788039,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13378.846671555559,\\\"ask\\\":13513.307442123954,\\\"price\\\":13446.07705683976,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.061672663664474214},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44137306746576477,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13200.228728140944,\\\"ask\\\":13332.894343499152,\\\"price\\\":13266.561535820048,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.06042909388666873},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44380201508027534,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12942.991365977568,\\\"ask\\\":13073.071681213529,\\\"price\\\":13008.03152359554,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.05793951453029478},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5471509976258805,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12494.356980281398,\\\"ask\\\":12619.928407218897,\\\"price\\\":12557.142693750151,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.05860862283377122},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5586329493797122,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13167.261218364343,\\\"ask\\\":13299.595501965996,\\\"price\\\":13233.428360165179,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.05983504810276119},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.48361967015080043,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13984.315595032775,\\\"ask\\\":14124.861480409983,\\\"price\\\":14054.588537721376,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.061215058101064534},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.44189343522650254,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13342.225377545445,\\\"ask\\\":13476.318094907703,\\\"price\\\":13409.27173622658,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.06001629884971893},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.48419716361672727,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12727.238076499158,\\\"ask\\\":12855.150016966485,\\\"price\\\":12791.194046732817,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.05825629873912741},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.48866693758347085,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12155.662310274378,\\\"ask\\\":12277.82977067915,\\\"price\\\":12216.746040476766,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.054233773964488474},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.45915002200679117,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":12603.437687904716,\\\"ask\\\":12730.105403361043,\\\"price\\\":12666.771545632875,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.05182828096454706},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5165215626104533,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13104.72566484886,\\\"ask\\\":13236.431450425225,\\\"price\\\":13170.578557637044,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.05288109550035247},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5082972464156224,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13596.075615141248,\\\"ask\\\":13732.71959117281,\\\"price\\\":13664.39760315703,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.053051564278643604},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5529716282729692,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14574.05291143487,\\\"ask\\\":14720.525805017121,\\\"price\\\":14647.289358225999,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.05368447404771148},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5206894272304592,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14677.900018222308,\\\"ask\\\":14825.416601320014,\\\"price\\\":14751.658309771161,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.056520963631877086},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4433144395896474,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":14218.492849506087,\\\"ask\\\":14361.39227512927,\\\"price\\\":14289.942562317681,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.05793395933685219},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.5280363481533724,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13828.419055073078,\\\"ask\\\":13967.398141053705,\\\"price\\\":13897.908598063386,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.05798238902264585},{\\\"volatility\\\":0.0059,\\\"forecast\\\":0.4441593265975947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"AERO\\\",\\\"bid\\\":13925.370926786141,\\\"ask\\\":14065.324403437264,\\\"price\\\":13995.347665111702,\\\"maxShares\\\":15500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.05820506179186635}],\\\"recentTicksOfPrices\\\":[14159.328698413416,14166.647732307123,14180.458222029838,14119.997948076007,14187.866251055731,14163.775133292327,14117.066347658509,14175.628540846375,14168.149783041641,14216.6706634943,14248.133796665235,14201.991607124455,14170.389762091734,14242.412508382824,14198.91075362971,14235.382467070716,14251.823729386799,14169.274185209635,14179.016986100942,14152.723024357645]}],[\\\"OMN\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12855.159256559225,\\\"ask\\\":12958.41354777657,\\\"price\\\":12906.786402167898,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48377247513970717,\\\"bias\\\":0.01622752486029283,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12857.994128542114,\\\"ask\\\":12961.271189815545,\\\"price\\\":12909.63265917883,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48373668954214283,\\\"bias\\\":0.016263310457857172,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12824.151620872757,\\\"ask\\\":12927.15685477535,\\\"price\\\":12875.654237824054,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48416587287151275,\\\"bias\\\":0.015834127128487252,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12764.584979604722,\\\"ask\\\":12867.1117665895,\\\"price\\\":12815.848373097111,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48342696457801,\\\"bias\\\":0.016573035421990012,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12740.898186885595,\\\"ask\\\":12843.234718507167,\\\"price\\\":12792.066452696381,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4831188528193182,\\\"bias\\\":0.016881147180681788,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12736.792732758433,\\\"ask\\\":12839.096288844845,\\\"price\\\":12787.944510801639,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48317326587040443,\\\"bias\\\":0.016826734129595566,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12664.056052681191,\\\"ask\\\":12765.775378405537,\\\"price\\\":12714.915715543364,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4822068134383891,\\\"bias\\\":0.017793186561610885,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12629.712864934028,\\\"ask\\\":12731.156341760807,\\\"price\\\":12680.434603347418,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48172297445230866,\\\"bias\\\":0.01827702554769134,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12559.144092543293,\\\"ask\\\":12660.020751921149,\\\"price\\\":12609.58242223222,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48274994511714914,\\\"bias\\\":0.017250054882850863,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12643.794406006231,\\\"ask\\\":12745.350987580578,\\\"price\\\":12694.572696793404,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4839126219224525,\\\"bias\\\":0.01608737807754751,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12591.178685491504,\\\"ask\\\":12692.312650836819,\\\"price\\\":12641.745668164162,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48324036636172546,\\\"bias\\\":0.01675963363827454,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12520.68162793285,\\\"ask\\\":12621.24935185199,\\\"price\\\":12570.96548989242,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48418400896231956,\\\"bias\\\":0.015815991037680444,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12501.12926946793,\\\"ask\\\":12601.539946331128,\\\"price\\\":12551.33460789953,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4844313785555627,\\\"bias\\\":0.015568621444437325,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12530.17508532586,\\\"ask\\\":12630.819061914823,\\\"price\\\":12580.497073620341,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48406964858550194,\\\"bias\\\":0.015930351414498056,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12595.907903787665,\\\"ask\\\":12697.079854822103,\\\"price\\\":12646.493879304884,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4849053487177278,\\\"bias\\\":0.01509465128227222,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12554.001959363919,\\\"ask\\\":12654.837316467245,\\\"price\\\":12604.419637915582,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48540921642443857,\\\"bias\\\":0.014590783575561428,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12472.064204217837,\\\"ask\\\":12572.241426741675,\\\"price\\\":12522.152815479756,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4844506453070773,\\\"bias\\\":0.015549354692922679,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12397.003402271743,\\\"ask\\\":12496.57772678798,\\\"price\\\":12446.790564529862,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48350917018190215,\\\"bias\\\":0.016490829818097852,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12351.48533564351,\\\"ask\\\":12450.694053198878,\\\"price\\\":12401.089694421195,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4841168952206462,\\\"bias\\\":0.015883104779353785,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12299.461447857864,\\\"ask\\\":12398.252302860737,\\\"price\\\":12348.8568753593,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48478871395371165,\\\"bias\\\":0.015211286046288353,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12338.657728298542,\\\"ask\\\":12437.763412863187,\\\"price\\\":12388.210570580864,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4852734716288841,\\\"bias\\\":0.014726528371115877,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12407.245119662262,\\\"ask\\\":12506.901706968785,\\\"price\\\":12457.073413315524,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4860920810652267,\\\"bias\\\":0.013907918934773278,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12413.389931417727,\\\"ask\\\":12513.095874641966,\\\"price\\\":12463.242903029846,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4861609614193587,\\\"bias\\\":0.013839038580641283,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12445.238308619417,\\\"ask\\\":12545.200062102303,\\\"price\\\":12495.21918536086,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48580590053489436,\\\"bias\\\":0.014194099465105636,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12430.616505959008,\\\"ask\\\":12530.460815243818,\\\"price\\\":12480.538660601413,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4859728619412104,\\\"bias\\\":0.014027138058789579,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12510.536696721641,\\\"ask\\\":12611.022935249524,\\\"price\\\":12560.779815985583,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48687470904507274,\\\"bias\\\":0.01312529095492726,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12459.980215774627,\\\"ask\\\":12560.060378150327,\\\"price\\\":12510.020296962477,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48634214919297386,\\\"bias\\\":0.01365785080702614,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12388.277800126458,\\\"ask\\\":12487.782039484902,\\\"price\\\":12438.02991980568,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4871326552755999,\\\"bias\\\":0.012867344724400098,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12313.19249962908,\\\"ask\\\":12412.093644204415,\\\"price\\\":12362.643071916747,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4863480103143,\\\"bias\\\":0.013651989685699972,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12259.692918738852,\\\"ask\\\":12358.164347805028,\\\"price\\\":12308.92863327194,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48575225662671273,\\\"bias\\\":0.01424774337328727,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12330.129045473797,\\\"ask\\\":12429.166226561942,\\\"price\\\":12379.64763601787,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48493367506469504,\\\"bias\\\":0.015066324935304964,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12405.637787189322,\\\"ask\\\":12505.281464194859,\\\"price\\\":12455.45962569209,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48585632496880105,\\\"bias\\\":0.014143675031198955,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12395.736895115515,\\\"ask\\\":12495.301046883513,\\\"price\\\":12445.518970999514,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4859692952594709,\\\"bias\\\":0.014030704740529087,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12453.896606245084,\\\"ask\\\":12553.927904287213,\\\"price\\\":12503.912255266148,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48662760362916124,\\\"bias\\\":0.013372396370838757,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12368.560590734178,\\\"ask\\\":12467.906458932845,\\\"price\\\":12418.233524833511,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48570498452910627,\\\"bias\\\":0.014295015470893735,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12417.620169995565,\\\"ask\\\":12517.360091039705,\\\"price\\\":12467.490130517635,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4862719926618574,\\\"bias\\\":0.013728007338142612,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12409.574768854029,\\\"ask\\\":12509.250068202255,\\\"price\\\":12459.412418528142,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4861829909611815,\\\"bias\\\":0.013817009038818495,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12424.748018113787,\\\"ask\\\":12524.54519095004,\\\"price\\\":12474.646604531914,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4863519322231307,\\\"bias\\\":0.013648067776869277,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12358.377281970872,\\\"ask\\\":12457.641356524855,\\\"price\\\":12408.009319247863,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48708490248663017,\\\"bias\\\":0.012915097513369833,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12432.880239615002,\\\"ask\\\":12532.74273149946,\\\"price\\\":12482.811485557231,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48786349415854174,\\\"bias\\\":0.012136505841458256,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12459.403651268596,\\\"ask\\\":12559.479182604086,\\\"price\\\":12509.44141693634,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4876045826800546,\\\"bias\\\":0.012395417319945423,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12511.108477709364,\\\"ask\\\":12611.599308855624,\\\"price\\\":12561.353893282494,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.487090189761158,\\\"bias\\\":0.012909810238842023,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12446.35030208976,\\\"ask\\\":12546.320987247107,\\\"price\\\":12496.335644668434,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4877618852689747,\\\"bias\\\":0.012238114731025318,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12438.11554818741,\\\"ask\\\":12538.020090743134,\\\"price\\\":12488.067819465272,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48784290868658836,\\\"bias\\\":0.012157091313411639,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12491.541199891222,\\\"ask\\\":12591.874864147378,\\\"price\\\":12541.7080320193,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48836509432132175,\\\"bias\\\":0.011634905678678253,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12526.214868840776,\\\"ask\\\":12626.827036461986,\\\"price\\\":12576.52095265138,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4886880527628032,\\\"bias\\\":0.011311947237196807,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12577.259316923355,\\\"ask\\\":12678.281480111495,\\\"price\\\":12627.770398517425,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4882270898067083,\\\"bias\\\":0.011772910193291686,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12612.4393599737,\\\"ask\\\":12713.74409378875,\\\"price\\\":12663.091726881225,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48789778794770117,\\\"bias\\\":0.012102212052298833,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12692.84132828737,\\\"ask\\\":12794.791861044698,\\\"price\\\":12743.816594666034,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5128737056882106,\\\"bias\\\":0.012873705688210557,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12644.253816451752,\\\"ask\\\":12745.81408806984,\\\"price\\\":12695.033952260796,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5133683978516028,\\\"bias\\\":0.01336839785160282,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12603.64903784911,\\\"ask\\\":12704.883166667176,\\\"price\\\":12654.266102258143,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5129377123942356,\\\"bias\\\":0.012937712394235579,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12621.906568055181,\\\"ask\\\":12723.287343702212,\\\"price\\\":12672.596955878696,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5131251269073863,\\\"bias\\\":0.01312512690738632,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12530.345713638104,\\\"ask\\\":12630.9910607356,\\\"price\\\":12580.668387186852,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5121660569332316,\\\"bias\\\":0.012166056933231584,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12541.152062515197,\\\"ask\\\":12641.884207595642,\\\"price\\\":12591.51813505542,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.512270978743598,\\\"bias\\\":0.012270978743597949,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12570.375625259021,\\\"ask\\\":12671.342497751062,\\\"price\\\":12620.859061505042,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5119850387315048,\\\"bias\\\":0.011985038731504805,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.47518252499040303,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":14951.185966674446,\\\"ask\\\":15071.275813796332,\\\"price\\\":15011.2308902354,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.05438560870387754},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.46994210165269984,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":15522.599055800063,\\\"ask\\\":15647.278566288405,\\\"price\\\":15584.93881104424,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.05434534589608403},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5515447309640572,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":14795.5505193544,\\\"ask\\\":14914.390282562055,\\\"price\\\":14854.970400958224,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.05246016589532798},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4797521832692235,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":13785.12506617666,\\\"ask\\\":13895.848962290518,\\\"price\\\":13840.487014233591,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.05185976991889907},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4671915270245128,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":13023.795419449594,\\\"ask\\\":13128.404217999387,\\\"price\\\":13076.099818724477,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.05662394323685849},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5075938116112563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12784.818887153333,\\\"ask\\\":12887.50819548388,\\\"price\\\":12836.163541318609,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.05810032064566867},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5192006441217797,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12691.262748413854,\\\"ask\\\":12793.20060181477,\\\"price\\\":12742.231675114315,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.059066870399652416},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4729023858652922,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12690.026013990897,\\\"ask\\\":12791.953933781992,\\\"price\\\":12740.989973886439,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.056761330497416274},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5108649150754195,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":13052.77840473942,\\\"ask\\\":13157.619998351789,\\\"price\\\":13105.199201545604,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.05618635710936187},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.445294545358078,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12723.036764060465,\\\"ask\\\":12825.22983043846,\\\"price\\\":12774.13329724946,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.056357190054243556},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.44240927642743655,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12127.505245950579,\\\"ask\\\":12224.914926640955,\\\"price\\\":12176.210086295763,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.059204427395582404},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48427058309849236,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11544.257210815002,\\\"ask\\\":11636.982168331591,\\\"price\\\":11590.61968957329,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.05982503404696082},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48818393890516104,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11538.65710996651,\\\"ask\\\":11631.337086753389,\\\"price\\\":11584.997098359952,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.056476243446774044},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.45800845912156096,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11204.984958544697,\\\"ask\\\":11294.984837729799,\\\"price\\\":11249.984898137252,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.05354878730186258},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5167233859322098,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":10695.694272122639,\\\"ask\\\":10781.603463063391,\\\"price\\\":10738.648867593025,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.05599923231418963},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5078437167477327,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":10294.37566933345,\\\"ask\\\":10377.061417681516,\\\"price\\\":10335.71854350748,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.05436482178681373},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4744667812315728,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":10863.119539287449,\\\"ask\\\":10950.373511490568,\\\"price\\\":10906.746525389004,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.052051591713406065},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5194723795075842,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":10932.088846568035,\\\"ask\\\":11019.896789110753,\\\"price\\\":10975.992817839391,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.05287060438665597},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.505493503807686,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":10839.554486431762,\\\"ask\\\":10926.619181101887,\\\"price\\\":10883.086833766827,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.053055956063495224},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.46852980844163616,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11071.21999388273,\\\"ask\\\":11160.145455680993,\\\"price\\\":11115.682724781864,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.05539632079874229},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4452526678133608,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11157.090573313297,\\\"ask\\\":11246.705758641108,\\\"price\\\":11201.898165977203,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.05617053843037845},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.501729487839393,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11012.595570924068,\\\"ask\\\":11101.050153823062,\\\"price\\\":11056.82286237357,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.05485454490024466},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4717520232193835,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11594.679363838008,\\\"ask\\\":11687.809318567619,\\\"price\\\":11641.244341202819,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.05515673994031345},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.44547441705660307,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11688.565393503262,\\\"ask\\\":11782.449452888826,\\\"price\\\":11735.507423196048,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.056394247747535986},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.44783683630991233,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":10902.488082488211,\\\"ask\\\":10990.058267889724,\\\"price\\\":10946.27317518897,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.05426747107640445},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4465199934213338,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":9960.250510551245,\\\"ask\\\":10040.252522684183,\\\"price\\\":10000.251516617713,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.05444215903981464},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5241967144767566,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":9259.23018649965,\\\"ask\\\":9333.601513298845,\\\"price\\\":9296.415849899247,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.05360203451131346},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4966757794732713,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8778.92040288573,\\\"ask\\\":8849.43381977638,\\\"price\\\":8814.177111331055,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.05176119218013342},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.47914891670377885,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8627.552863509238,\\\"ask\\\":8696.850476870755,\\\"price\\\":8662.201670189997,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.05312772793185411},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.467771301789319,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8143.5184693492865,\\\"ask\\\":8208.928256251693,\\\"price\\\":8176.223362800493,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.05316133975323928},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5497964017576259,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8433.638765423157,\\\"ask\\\":8501.378835828162,\\\"price\\\":8467.508800625665,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.05290047698351186},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48270609010092314,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8598.715657990957,\\\"ask\\\":8667.781647211772,\\\"price\\\":8633.248652601364,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.0526768120347636},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5262095708620028,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8858.549835835507,\\\"ask\\\":8929.702846565111,\\\"price\\\":8894.126341200312,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.05392720592137401},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.45300156546225046,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8468.323646999062,\\\"ask\\\":8536.342310830381,\\\"price\\\":8502.332978914717,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.052527529331023004},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4507364101823561,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7989.365936875507,\\\"ask\\\":8053.537550826317,\\\"price\\\":8021.45174385091,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.05281041298395961},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5408931346056673,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7872.77889130667,\\\"ask\\\":7936.014063124394,\\\"price\\\":7904.396477215532,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.05512365014810516},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5529331815078631,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7939.304178442394,\\\"ask\\\":8003.0736899158255,\\\"price\\\":7971.188934179114,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.054406777959436825},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48776452258612546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7862.96126454755,\\\"ask\\\":7926.117579925438,\\\"price\\\":7894.539422236495,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.05477958976747216},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4466194083779106,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7475.633184507658,\\\"ask\\\":7535.678430969566,\\\"price\\\":7505.655807738613,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.055045637812281056},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48317979652686716,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7452.299273115068,\\\"ask\\\":7512.157098601939,\\\"price\\\":7482.228185858508,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.053792854615356656},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5002575784777968,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7517.95294096634,\\\"ask\\\":7578.338105150805,\\\"price\\\":7548.145523058575,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.052761711267260036},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4758079077110178,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7703.622077090236,\\\"ask\\\":7765.498559637144,\\\"price\\\":7734.560318363688,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.03286893205329122},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4831709013039142,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7638.785172641198,\\\"ask\\\":7700.1408768391175,\\\"price\\\":7669.463024740161,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.021816945279897082},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4781519542889455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7383.779740764455,\\\"ask\\\":7443.087208561758,\\\"price\\\":7413.433474663104,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.0301894351662802},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5137452694887371,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7266.874398990698,\\\"ask\\\":7325.2428680588955,\\\"price\\\":7296.058633524797,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.0308916054976911},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.512986453578815,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7335.4389061437905,\\\"ask\\\":7394.3580941449445,\\\"price\\\":7364.898500144366,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.037557508075672374},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.46845279440123105,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":6767.693892223075,\\\"ask\\\":6822.0528793092,\\\"price\\\":6794.873385766138,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.041495951441862355},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.47913184756183747,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":6579.832087960286,\\\"ask\\\":6632.682144891694,\\\"price\\\":6606.257116425989,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.033643510092014994},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.52011826663886,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":6775.268585760964,\\\"ask\\\":6829.688413759038,\\\"price\\\":6802.478499760002,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.027452175784229427},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5003130946743177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":6960.850424443454,\\\"ask\\\":7016.760869619702,\\\"price\\\":6988.805647031576,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.022318904043823362},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4822312316558386,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7136.247652466987,\\\"ask\\\":7193.566910719731,\\\"price\\\":7164.907281593361,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.023925701230527396},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4878939101232958,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7414.251018912182,\\\"ask\\\":7473.803235931554,\\\"price\\\":7444.027127421872,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.02761850113105835},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5212250741140427,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7617.700487682691,\\\"ask\\\":7678.886836981343,\\\"price\\\":7648.293662332018,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.027839255316359557},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5213439773009086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":7876.009251222096,\\\"ask\\\":7939.270369705811,\\\"price\\\":7907.639810463958,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.024157861566286742},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.525806403820577,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8475.197314443321,\\\"ask\\\":8543.271188454919,\\\"price\\\":8509.234251449121,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.040018173074109153},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5204060229813134,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8643.482218064457,\\\"ask\\\":8712.907778048911,\\\"price\\\":8678.194998056682,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.02786664973195574},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5144753393184128,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8711.950645878556,\\\"ask\\\":8781.926153074366,\\\"price\\\":8746.938399476465,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.020146057768758996},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4853564184676685,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8878.69304534701,\\\"ask\\\":8950.00784892409,\\\"price\\\":8914.35044713555,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.022380335791855277},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4772062031001888,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":9182.046655143771,\\\"ask\\\":9255.798033899942,\\\"price\\\":9218.922344521854,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.026794805550152456},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4724659804806528,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8836.863946186306,\\\"ask\\\":8907.842773063305,\\\"price\\\":8872.353359624803,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.0394506291158756},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5163308397466839,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":8920.452464140437,\\\"ask\\\":8992.102684735946,\\\"price\\\":8956.277574438196,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.03891087986354025},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.48566123739985734,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":9161.030457684903,\\\"ask\\\":9234.613031642211,\\\"price\\\":9197.821744663557,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.018106348426888685},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.515047906535406,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":9627.340523553008,\\\"ask\\\":9704.668559886773,\\\"price\\\":9666.00454171989,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.02114435638197998},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5129804826759193,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":10480.571341624074,\\\"ask\\\":10564.75263754073,\\\"price\\\":10522.661989582402,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.01994348488884623},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5063740126000604,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":10694.112797553162,\\\"ask\\\":10780.009285886921,\\\"price\\\":10737.061041720042,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.021089664852073087},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4897150471573888,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11217.069983936322,\\\"ask\\\":11307.166931598458,\\\"price\\\":11262.11845776739,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.018662074632301184},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.49054037774036535,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11249.445517996302,\\\"ask\\\":11339.802510108722,\\\"price\\\":11294.62401405251,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.015662655882100085},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.513414687707822,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11942.262239029347,\\\"ask\\\":12038.184024081791,\\\"price\\\":11990.223131555575,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.021850387461702758},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5198560586359939,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":11935.417379083301,\\\"ask\\\":12031.284185341008,\\\"price\\\":11983.350782212152,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.024592107518729756},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.5135278442221936,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12495.123280152247,\\\"ask\\\":12595.485716137402,\\\"price\\\":12545.304498144827,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.017445163493759575},{\\\"volatility\\\":0.0074,\\\"forecast\\\":0.4813673843915701,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMN\\\",\\\"bid\\\":12657.043521286709,\\\"ask\\\":12758.706521457687,\\\"price\\\":12707.875021372192,\\\"maxShares\\\":8100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.022936686134106654}],\\\"recentTicksOfPrices\\\":[12467.490130517635,12459.412418528142,12474.646604531914,12408.009319247863,12482.811485557231,12509.44141693634,12561.353893282494,12496.335644668434,12488.067819465272,12541.7080320193,12576.52095265138,12627.770398517425,12663.091726881225,12743.816594666034,12695.033952260796,12654.266102258143,12672.596955878696,12580.668387186852,12591.51813505542,12620.859061505042]}],[\\\"SLRS\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55329.348871193826,\\\"ask\\\":56109.42025507772,\\\"price\\\":55719.384563135776,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5910998629175047,\\\"bias\\\":0.09109986291750471,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55341.22055515372,\\\"ask\\\":56121.459314239466,\\\"price\\\":55731.339934696596,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5911194096644556,\\\"bias\\\":0.09111940966445564,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55483.317062043316,\\\"ask\\\":56265.55919584855,\\\"price\\\":55874.438128945934,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5913533717941896,\\\"bias\\\":0.09135337179418956,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55735.23529871508,\\\"ask\\\":56521.02914985507,\\\"price\\\":56128.13222428508,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5909385880077285,\\\"bias\\\":0.09093858800772847,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55836.053009050345,\\\"ask\\\":56623.268257919124,\\\"price\\\":56229.66063348474,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5911030839531556,\\\"bias\\\":0.09110308395315558,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55818.54727088573,\\\"ask\\\":56605.515711764274,\\\"price\\\":56212.031491325004,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5910745123257728,\\\"bias\\\":0.0910745123257728,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56130.479290180076,\\\"ask\\\":56921.84556416045,\\\"price\\\":56526.16242717027,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5915834660324709,\\\"bias\\\":0.09158346603247092,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56278.986197643295,\\\"ask\\\":57072.446224598985,\\\"price\\\":56675.716211121144,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5918257724849945,\\\"bias\\\":0.09182577248499446,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56586.66640641226,\\\"ask\\\":57384.464321507694,\\\"price\\\":56985.56536395998,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.592327788863707,\\\"bias\\\":0.09232778886370696,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56217.9906136027,\\\"ask\\\":57010.59068267665,\\\"price\\\":56614.29064813968,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5917223061634868,\\\"bias\\\":0.09172230616348676,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56446.56377240709,\\\"ask\\\":57242.386423780394,\\\"price\\\":56844.475098093746,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5913493782622262,\\\"bias\\\":0.09134937826222622,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56755.79354691261,\\\"ask\\\":57555.97593327391,\\\"price\\\":57155.884740093265,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5908489412869102,\\\"bias\\\":0.09084894128691023,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56669.55518764785,\\\"ask\\\":57468.521726043684,\\\"price\\\":57069.03845684577,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5909871930097547,\\\"bias\\\":0.09098719300975466,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56541.73359328092,\\\"ask\\\":57338.89801453563,\\\"price\\\":56940.31580390828,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5911928840513689,\\\"bias\\\":0.09119288405136894,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56254.60004836571,\\\"ask\\\":57047.71626254206,\\\"price\\\":56651.158155453886,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5916583488497357,\\\"bias\\\":0.09165834884973567,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56437.30581654969,\\\"ask\\\":57232.99794286559,\\\"price\\\":56835.15187970764,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5919560402211553,\\\"bias\\\":0.09195604022115533,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56798.06116090828,\\\"ask\\\":57598.839465291676,\\\"price\\\":57198.45031309998,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5913682440378353,\\\"bias\\\":0.09136824403783528,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56465.41708243933,\\\"ask\\\":57261.50554080201,\\\"price\\\":56863.461311620675,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5919065045680801,\\\"bias\\\":0.09190650456808014,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56263.67639177432,\\\"ask\\\":57056.920570510316,\\\"price\\\":56660.29848114232,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5915769619057937,\\\"bias\\\":0.09157696190579367,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56495.22682180234,\\\"ask\\\":57291.7355584642,\\\"price\\\":56893.48119013327,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5912000813627895,\\\"bias\\\":0.09120008136278945,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56320.593642274165,\\\"ask\\\":57114.64027972817,\\\"price\\\":56717.61696100117,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5914828653171414,\\\"bias\\\":0.09148286531714145,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56625.20379099252,\\\"ask\\\":57423.545032758775,\\\"price\\\":57024.37441187565,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5919776507483183,\\\"bias\\\":0.09197765074831832,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56597.93068814004,\\\"ask\\\":57395.88741486104,\\\"price\\\":56996.909051500545,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5919333290584882,\\\"bias\\\":0.09193332905848817,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56456.996791585974,\\\"ask\\\":57252.966534871164,\\\"price\\\":56854.98166322857,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5917038354080337,\\\"bias\\\":0.09170383540803373,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56521.610817111454,\\\"ask\\\":57318.49153356619,\\\"price\\\":56920.05117533883,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5918087888114836,\\\"bias\\\":0.09180878881148358,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56875.18386361578,\\\"ask\\\":57677.04949714107,\\\"price\\\":57276.11668037843,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5923831021172559,\\\"bias\\\":0.09238310211725587,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56651.53230877445,\\\"ask\\\":57450.24474817307,\\\"price\\\":57050.88852847376,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5920183878087889,\\\"bias\\\":0.0920183878087889,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56970.56507498642,\\\"ask\\\":57773.775458722375,\\\"price\\\":57372.1702668544,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5915001868068284,\\\"bias\\\":0.09150018680682837,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56634.54405999918,\\\"ask\\\":57433.016987330484,\\\"price\\\":57033.780523664835,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5920430707684222,\\\"bias\\\":0.09204307076842222,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56875.009668949715,\\\"ask\\\":57676.87284655826,\\\"price\\\":57275.94125775399,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5916522634717561,\\\"bias\\\":0.09165226347175615,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56558.842215323144,\\\"ask\\\":57356.24784575065,\\\"price\\\":56957.5450305369,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.592164605337784,\\\"bias\\\":0.09216460533778403,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56895.84298960836,\\\"ask\\\":57697.99988976396,\\\"price\\\":57296.921439686164,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.591615450826412,\\\"bias\\\":0.09161545082641198,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56940.059380408515,\\\"ask\\\":57742.83967378788,\\\"price\\\":57341.4495270982,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5915442522227141,\\\"bias\\\":0.09154425222271412,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56681.30334054911,\\\"ask\\\":57480.43551252059,\\\"price\\\":57080.86942653485,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5911263431983799,\\\"bias\\\":0.09112634319837987,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":57061.802590262014,\\\"ask\\\":57866.29930351847,\\\"price\\\":57464.050946890246,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5917380705788838,\\\"bias\\\":0.09173807057888383,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":57282.01963088272,\\\"ask\\\":58089.62111611168,\\\"price\\\":57685.820373497205,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5920921127839681,\\\"bias\\\":0.09209211278396812,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":57318.15312011055,\\\"ask\\\":58126.26404023295,\\\"price\\\":57722.208580171755,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5921502044746363,\\\"bias\\\":0.09215020447463629,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":57386.34217282403,\\\"ask\\\":58195.414469319025,\\\"price\\\":57790.87832107153,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5920405771609768,\\\"bias\\\":0.0920405771609768,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":57088.03680367851,\\\"ask\\\":57892.90338499925,\\\"price\\\":57490.47009433888,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5925215220293525,\\\"bias\\\":0.09252152202935249,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56755.13358712961,\\\"ask\\\":57555.30666892197,\\\"price\\\":57155.220128025794,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.593064216766143,\\\"bias\\\":0.09306421676614296,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56637.57264863458,\\\"ask\\\":57436.08827510072,\\\"price\\\":57036.830461867656,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5928710461171957,\\\"bias\\\":0.09287104611719565,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56866.25846926737,\\\"ask\\\":57667.99826641716,\\\"price\\\":57267.12836784227,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5924960602129428,\\\"bias\\\":0.09249606021294277,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":57154.136164187956,\\\"ask\\\":57959.93465995697,\\\"price\\\":57557.035412072466,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5920278114953359,\\\"bias\\\":0.0920278114953359,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":57117.34319705613,\\\"ask\\\":57922.622960156616,\\\"price\\\":57519.983078606376,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5920870925482357,\\\"bias\\\":0.09208709254823566,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56879.6302791496,\\\"ask\\\":57681.55860131283,\\\"price\\\":57280.594440231216,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.592471945462429,\\\"bias\\\":0.09247194546242898,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56726.426324825356,\\\"ask\\\":57526.194671801735,\\\"price\\\":57126.31049831355,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5927216891643815,\\\"bias\\\":0.0927216891643815,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56502.40140113386,\\\"ask\\\":57299.0112899716,\\\"price\\\":56900.70634555273,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5930893190141667,\\\"bias\\\":0.09308931901416673,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56656.17367418437,\\\"ask\\\":57454.95155075897,\\\"price\\\":57055.56261247167,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5933426632230244,\\\"bias\\\":0.09334266322302442,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56306.92866778356,\\\"ask\\\":57100.782646986954,\\\"price\\\":56703.85565738526,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4060783767841986,\\\"bias\\\":0.09392162321580139,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56517.44901122207,\\\"ask\\\":57314.271051662254,\\\"price\\\":56915.860031442164,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4057272226217624,\\\"bias\\\":0.09427277737823758,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56340.84321026139,\\\"ask\\\":57135.17534011401,\\\"price\\\":56738.0092751877,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.40602272972476294,\\\"bias\\\":0.09397727027523706,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":56261.5459532538,\\\"ask\\\":57054.760095595746,\\\"price\\\":56658.15302442478,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.40589027442820785,\\\"bias\\\":0.09410972557179215,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55864.37043685123,\\\"ask\\\":56651.984924379845,\\\"price\\\":56258.17768061554,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.40655936061964243,\\\"bias\\\":0.09344063938035757,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55817.53362229701,\\\"ask\\\":56604.48777205748,\\\"price\\\":56211.01069717725,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.40648095403994466,\\\"bias\\\":0.09351904596005534,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55691.26843894627,\\\"ask\\\":56476.442414923345,\\\"price\\\":56083.85542693481,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0072,\\\"forecast\\\":0.40669298367790985,\\\"bias\\\":0.09330701632209015,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4238111168423165,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":29921.872266389342,\\\"ask\\\":30343.731492702977,\\\"price\\\":30132.801879546183,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.07802648242341725},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4254334451830816,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":28364.371378755368,\\\"ask\\\":28764.271881577708,\\\"price\\\":28564.32163016654,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.07699741852976033},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4265874153800758,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":27136.127765142537,\\\"ask\\\":27518.711640985435,\\\"price\\\":27327.419703063977,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.07465706730032834},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42885363938994175,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":24410.33674155041,\\\"ask\\\":24754.490532468553,\\\"price\\\":24582.413637009497,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.07308218434264302},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4572710613303474,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":22705.074608383813,\\\"ask\\\":23025.186435692347,\\\"price\\\":22865.13052203809,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.0741683455302975},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5104633625568966,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":23318.41277339625,\\\"ask\\\":23647.17186587112,\\\"price\\\":23482.792319633678,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.07638796943021486},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4243773947783658,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":22974.950760639276,\\\"ask\\\":23298.86748838242,\\\"price\\\":23136.909124510847,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.0773199329595905},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5605498812113899,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":23971.58518008275,\\\"ask\\\":24309.553148382016,\\\"price\\\":24140.569164232395,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.07801371327076811},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5725983546905801,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":26325.94746756186,\\\"ask\\\":26697.108861867866,\\\"price\\\":26511.52816471486,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.07509889785054846},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4784777714825817,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":28559.987137310804,\\\"ask\\\":28962.645566235635,\\\"price\\\":28761.3163517732,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.07623865346864689},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.44402417320791726,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":27014.77260759962,\\\"ask\\\":27395.645534594998,\\\"price\\\":27205.209071097317,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.07678063949777808},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5743916910402435,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":27638.83700793152,\\\"ask\\\":28028.508425968837,\\\"price\\\":27833.67271695018,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.07661811149045172},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5750422952888065,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":28474.26425205284,\\\"ask\\\":28875.714100520858,\\\"price\\\":28674.98917628686,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.07746071521853659},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5591587085427783,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":29404.076340043233,\\\"ask\\\":29818.63532167526,\\\"price\\\":29611.355830859262,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.07731534606272017},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4764011104362227,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":28278.453545860568,\\\"ask\\\":28677.142719719624,\\\"price\\\":28477.798132790114,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.07786386564874137},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5755925646612092,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":30067.943577521757,\\\"ask\\\":30491.862218091017,\\\"price\\\":30279.9028978064,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.07724247667458384},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4528868309997483,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":31466.120922672046,\\\"ask\\\":31909.752033364304,\\\"price\\\":31687.93647801818,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.07572706565497839},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4261280988936205,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":28847.687561374718,\\\"ask\\\":29254.402189631768,\\\"price\\\":29051.044875503252,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.07583470527294195},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5081599163351694,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":26562.574607529295,\\\"ask\\\":26937.072134725073,\\\"price\\\":26749.823371127193,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.07718439706388802},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.45639080752001043,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":27203.51905258772,\\\"ask\\\":27587.053057357338,\\\"price\\\":27395.28605497251,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.07845902445283215},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.46615976503033063,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":25223.941786853364,\\\"ask\\\":25579.566343767718,\\\"price\\\":25401.75406531054,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.0784971935613401},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5791033246900299,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":25432.996381135723,\\\"ask\\\":25791.568334142667,\\\"price\\\":25612.28235763918,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.0809163515230974},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5801279971471426,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":26844.94303052926,\\\"ask\\\":27223.42158282272,\\\"price\\\":27034.18230667599,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.08216582944261064},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5402016205293276,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":28519.282176146,\\\"ask\\\":28921.366718407866,\\\"price\\\":28720.32444727693,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.08321655564977454},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4985501612222853,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":27652.239147547236,\\\"ask\\\":28042.099518207513,\\\"price\\\":27847.16933287738,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.08304232819524826},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5814092621472202,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":30503.917358034258,\\\"ask\\\":30933.982658147528,\\\"price\\\":30718.950008090887,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.08306644766762838},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5798453594221186,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":33389.116780943834,\\\"ask\\\":33859.85961572048,\\\"price\\\":33624.488198332176,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.08197233350737176},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5795928538293418,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":33518.3503836055,\\\"ask\\\":33990.91524299169,\\\"price\\\":33754.63281329859,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.0818472754743037},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.580422461941688,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":34857.93779692115,\\\"ask\\\":35349.389085095245,\\\"price\\\":35103.66344100818,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.08348891014234827},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4255182954222498,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":36708.71235205972,\\\"ask\\\":37226.257138493595,\\\"price\\\":36967.48474527664,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.08685554797224881},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4888350499754239,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":36672.81381626928,\\\"ask\\\":37189.852480345566,\\\"price\\\":36931.333148307436,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.08809452158035036},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5896263877815595,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":38894.21953965526,\\\"ask\\\":39442.577116246575,\\\"price\\\":39168.39832795092,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.09181547065453},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.592081565554438,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":41893.82453641252,\\\"ask\\\":42484.47261648278,\\\"price\\\":42189.148576447646,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.0942092595080698},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5969273547607581,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":45070.09494552928,\\\"ask\\\":45705.524280108744,\\\"price\\\":45387.809612819015,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.09962800308184039},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.47689600918973646,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":47166.93175109505,\\\"ask\\\":47831.92373952939,\\\"price\\\":47499.42774531222,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.09769552593401276},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5659876133507222,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":49004.02649588959,\\\"ask\\\":49694.91911516698,\\\"price\\\":49349.47280552829,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.0896329314365516},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5218026590439269,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":48771.16569714342,\\\"ask\\\":49458.77528401151,\\\"price\\\":49114.970490577456,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.08625611203109085},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5174804872327483,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":45159.7366977322,\\\"ask\\\":45796.42986366195,\\\"price\\\":45478.08328069709,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.08331919989987285},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5805221489687709,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":46641.490758252054,\\\"ask\\\":47299.074716575866,\\\"price\\\":46970.282737413996,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.08254973086407524},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5256081425208747,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":48153.041380594186,\\\"ask\\\":48831.93622382508,\\\"price\\\":48492.48880220964,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.08254973086407524},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5131536573351279,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":48273.85167256938,\\\"ask\\\":48954.44978275665,\\\"price\\\":48614.150727662985,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.08082806134992737},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5679976294535085,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":46936.61262070995,\\\"ask\\\":47598.35741093139,\\\"price\\\":47267.485015820675,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.08200026370357516},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.47085952214696497,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":46594.97239538137,\\\"ask\\\":47251.900505688835,\\\"price\\\":46923.43645053509,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.07968864982329343},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.49311187425687075,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":49271.30199786208,\\\"ask\\\":49965.962851809796,\\\"price\\\":49618.632424835945,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.0783982016950121},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4224013161278864,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":46360.79394688489,\\\"ask\\\":47014.42044764661,\\\"price\\\":46687.607197265745,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.0789406309034476},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42186790799140633,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":42530.51477503252,\\\"ask\\\":43130.13935393528,\\\"price\\\":42830.327064483914,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.08071828965985789},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.425030132966326,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":39505.55275643009,\\\"ask\\\":40062.529331042366,\\\"price\\\":39784.041043736244,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.07666775862842384},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42703243162357735,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":37842.24877366217,\\\"ask\\\":38375.77493965537,\\\"price\\\":38109.01185665876,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.07666023960639018},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.571919923571419,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":39443.181385592055,\\\"ask\\\":39999.27860552991,\\\"price\\\":39721.22999556098,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.07385637843074766},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5705750888426766,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":45060.84913012845,\\\"ask\\\":45696.14811081503,\\\"price\\\":45378.49862047174,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.07213324966367307},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5727625298607217,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":48303.46766048291,\\\"ask\\\":48984.483317327555,\\\"price\\\":48643.975488905235,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.07634046286857743},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4621951549757886,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":49052.56610490223,\\\"ask\\\":49744.1430691204,\\\"price\\\":49398.35458701131,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.07804055261873},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5774162902914106,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":50819.803781387935,\\\"ask\\\":51536.296483240345,\\\"price\\\":51178.050132314165,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.07938250026438531},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5765714894916689,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":52275.95444831648,\\\"ask\\\":53012.9769682323,\\\"price\\\":52644.4657082744,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.07837622426896673},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4595416123283378,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":52798.67504525969,\\\"ask\\\":53543.067241265315,\\\"price\\\":53170.8711432625,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.08183664634780785},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5109358588086149,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":52266.869632145186,\\\"ask\\\":53003.76406804652,\\\"price\\\":52635.31685009586,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.07779591104125883},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5268286501887204,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":50977.45749722575,\\\"ask\\\":51696.17291007687,\\\"price\\\":51336.8152036513,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.07814283034312264},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4610448899014004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":51835.598160671994,\\\"ask\\\":52566.4122334307,\\\"price\\\":52201.005197051374,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.07854506324694405},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5140138149047091,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":51644.86714708825,\\\"ask\\\":52372.99216225364,\\\"price\\\":52008.929654670945,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.07654644145993322},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.42394748409288724,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":51641.57217972489,\\\"ask\\\":52369.65074016409,\\\"price\\\":52005.6114599445,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.07888679824898814},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.44166959252619004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":52237.48079755594,\\\"ask\\\":52973.9608893644,\\\"price\\\":52605.7208434602,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.0810818554449444},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5811343673432804,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55444.11108666039,\\\"ask\\\":56225.80046753978,\\\"price\\\":55834.95577710013,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.08461494321914786},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.48250584754043757,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":58218.396752605324,\\\"ask\\\":59039.199929379196,\\\"price\\\":58628.79834099226,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.08486579564433139},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5431078742877907,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":57343.40302385909,\\\"ask\\\":58151.86993456811,\\\"price\\\":57747.636479213594,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.08908706183292919},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4112946730487363,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":53847.938156591284,\\\"ask\\\":54607.123588809074,\\\"price\\\":54227.53087270018,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.09089367583630276},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.4106472986142349,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":51482.33068754065,\\\"ask\\\":52208.16415141329,\\\"price\\\":51845.247419476975,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.09428886653064156},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.545450385746989,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":49874.24479099088,\\\"ask\\\":50577.40634897062,\\\"price\\\":50225.825569980756,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09643754116234599},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.46381757271765717,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":51293.46389491347,\\\"ask\\\":52016.63458426775,\\\"price\\\":51655.049239590626,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.096918678114297},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.595171377238975,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":52950.74202314674,\\\"ask\\\":53697.27816445997,\\\"price\\\":53324.01009380335,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.09702115412007029},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.45306435291315245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":55957.508509237465,\\\"ask\\\":56746.4361216537,\\\"price\\\":56351.972315445586,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.09643419627500782},{\\\"volatility\\\":0.0072,\\\"forecast\\\":0.5915665191738584,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SLRS\\\",\\\"bid\\\":54585.71473152429,\\\"ask\\\":55355.30184757807,\\\"price\\\":54970.50828955116,\\\"maxShares\\\":5100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.09379737639068297}],\\\"recentTicksOfPrices\\\":[57685.820373497205,57722.208580171755,57790.87832107153,57490.47009433888,57155.220128025794,57036.830461867656,57267.12836784227,57557.035412072466,57519.983078606376,57280.594440231216,57126.31049831355,56900.70634555273,57055.56261247167,56703.85565738526,56915.860031442164,56738.0092751877,56658.15302442478,56258.17768061554,56211.01069717725,56083.85542693481]}],[\\\"GPH\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32231.21754760509,\\\"ask\\\":32816.64834059892,\\\"price\\\":32523.93294410201,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5863994359585061,\\\"bias\\\":0.08639943595850608,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32225.455529927916,\\\"ask\\\":32810.78166467938,\\\"price\\\":32518.118597303648,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5863839874545484,\\\"bias\\\":0.08638398745454845,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32156.64986131527,\\\"ask\\\":32740.72624628366,\\\"price\\\":32448.688053799466,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5865688235005878,\\\"bias\\\":0.08656882350058781,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32278.320767083147,\\\"ask\\\":32864.60711804934,\\\"price\\\":32571.463942566243,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5862412736092899,\\\"bias\\\":0.0862412736092899,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32326.97679792496,\\\"ask\\\":32914.14691130805,\\\"price\\\":32620.56185461651,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.586371272877184,\\\"bias\\\":0.08637127287718405,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32335.425417292936,\\\"ask\\\":32922.74898693095,\\\"price\\\":32629.087202111943,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5863486998412509,\\\"bias\\\":0.08634869984125093,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32185.539450415832,\\\"ask\\\":32770.14057060501,\\\"price\\\":32477.840010510427,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5867508201283514,\\\"bias\\\":0.08675082012835145,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32256.50171235238,\\\"ask\\\":32842.39175354546,\\\"price\\\":32549.44673294892,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5869420872168104,\\\"bias\\\":0.0869420872168104,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32110.211518163556,\\\"ask\\\":32693.44442162162,\\\"price\\\":32401.82796989259,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5865459897069907,\\\"bias\\\":0.08654598970699068,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32285.692972284232,\\\"ask\\\":32872.113228087575,\\\"price\\\":32578.903100185908,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5860730181691511,\\\"bias\\\":0.08607301816915114,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32176.67206554897,\\\"ask\\\":32761.112123248142,\\\"price\\\":32468.892094398558,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5863646505190451,\\\"bias\\\":0.08636465051904507,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32323.565935641844,\\\"ask\\\":32910.67409592595,\\\"price\\\":32617.120015783898,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.586758924909141,\\\"bias\\\":0.08675892490914106,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32282.626834658982,\\\"ask\\\":32868.99139875975,\\\"price\\\":32575.809116709366,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5868689479381285,\\\"bias\\\":0.0868689479381285,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32343.443517754826,\\\"ask\\\":32930.912723929985,\\\"price\\\":32637.178120842407,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5870325988487152,\\\"bias\\\":0.08703259884871517,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32481.01578716381,\\\"ask\\\":33070.98378329796,\\\"price\\\":32775.99978523089,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5874027904805866,\\\"bias\\\":0.08740279048058663,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32568.92665631477,\\\"ask\\\":33160.49141899253,\\\"price\\\":32864.70903765365,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5871662321374697,\\\"bias\\\":0.08716623213746966,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32396.35818727462,\\\"ask\\\":32984.78850752784,\\\"price\\\":32690.573347401234,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5876305480073277,\\\"bias\\\":0.08763054800732772,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32555.400324211023,\\\"ask\\\":33146.71940174462,\\\"price\\\":32851.059862977825,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5880607491285597,\\\"bias\\\":0.08806074912855966,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32652.6766572361,\\\"ask\\\":33245.76261064705,\\\"price\\\":32949.219633941575,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5883238768024127,\\\"bias\\\":0.08832387680241272,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32541.07564242814,\\\"ask\\\":33132.134534016135,\\\"price\\\":32836.60508822214,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5886267873266755,\\\"bias\\\":0.0886267873266755,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32625.159029119666,\\\"ask\\\":33217.745166883695,\\\"price\\\":32921.45209800168,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5883977832054872,\\\"bias\\\":0.08839778320548719,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32772.20344486426,\\\"ask\\\":33367.460419644834,\\\"price\\\":33069.83193225455,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5879993667449586,\\\"bias\\\":0.08799936674495856,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32785.36352074789,\\\"ask\\\":33380.85952818831,\\\"price\\\":33083.1115244681,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5880347039582778,\\\"bias\\\":0.08803470395827784,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32717.303208063127,\\\"ask\\\":33311.56300397144,\\\"price\\\":33014.433106017284,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.587851569381433,\\\"bias\\\":0.08785156938143301,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32748.506849547615,\\\"ask\\\":33343.33341190065,\\\"price\\\":33045.92013072413,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5879353565095284,\\\"bias\\\":0.08793535650952844,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32919.22310550513,\\\"ask\\\":33517.15046766365,\\\"price\\\":33218.18678658439,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5874769540883565,\\\"bias\\\":0.08747695408835654,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32811.278196721505,\\\"ask\\\":33407.2449046337,\\\"price\\\":33109.261550677606,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5871891660974979,\\\"bias\\\":0.08718916609749794,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32965.25862789791,\\\"ask\\\":33564.02215494348,\\\"price\\\":33264.6403914207,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.586779995040244,\\\"bias\\\":0.08677999504024403,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33128.248369808316,\\\"ask\\\":33729.97235634368,\\\"price\\\":33429.110363076,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5863509297277509,\\\"bias\\\":0.08635092972775094,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33245.46488124332,\\\"ask\\\":33849.317926513126,\\\"price\\\":33547.391403878224,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5866564621733202,\\\"bias\\\":0.08665646217332024,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33400.33506546841,\\\"ask\\\":34007.00109087551,\\\"price\\\":33703.66807817196,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5870601413611137,\\\"bias\\\":0.08706014136111373,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33235.31039238542,\\\"ask\\\":33838.97899688889,\\\"price\\\":33537.14469463716,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5874924247126774,\\\"bias\\\":0.08749242471267737,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33213.80040879574,\\\"ask\\\":33817.078317330874,\\\"price\\\":33515.439363063306,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5874357627048183,\\\"bias\\\":0.08743576270481834,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33340.15411739616,\\\"ask\\\":33945.72704788367,\\\"price\\\":33642.940582639916,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5877683904904402,\\\"bias\\\":0.08776839049044016,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33526.66334941403,\\\"ask\\\":34135.62393497352,\\\"price\\\":33831.143642193776,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5882593784759238,\\\"bias\\\":0.0882593784759238,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33634.48712190784,\\\"ask\\\":34245.40616145813,\\\"price\\\":33939.94664168299,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5885432259631029,\\\"bias\\\":0.08854322596310293,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33616.8158866386,\\\"ask\\\":34227.413955215285,\\\"price\\\":33922.11492092694,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.588589770174273,\\\"bias\\\":0.08858977017427305,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33583.52177282221,\\\"ask\\\":34193.51510472009,\\\"price\\\":33888.518438771156,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.588501943831607,\\\"bias\\\":0.08850194383160703,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33437.9175607448,\\\"ask\\\":34045.26621472401,\\\"price\\\":33741.59188773441,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5881165652931406,\\\"bias\\\":0.0881165652931406,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33601.36225151713,\\\"ask\\\":34211.67962843671,\\\"price\\\":33906.52093997692,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5876858511274007,\\\"bias\\\":0.08768585112740068,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33659.48338171789,\\\"ask\\\":34270.856440114374,\\\"price\\\":33965.169910916135,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5875341786823376,\\\"bias\\\":0.0875341786823376,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33546.607289947206,\\\"ask\\\":34155.930126697,\\\"price\\\":33851.2687083221,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5872396476765455,\\\"bias\\\":0.08723964767654546,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33405.68086212185,\\\"ask\\\":34012.44398575272,\\\"price\\\":33709.062423937285,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5876076800469241,\\\"bias\\\":0.0876076800469241,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33423.613158005784,\\\"ask\\\":34030.701994377225,\\\"price\\\":33727.15757619151,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5876547081810546,\\\"bias\\\":0.08765470818105459,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33540.017228786135,\\\"ask\\\":34149.22036714955,\\\"price\\\":33844.61879796784,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5879599823238322,\\\"bias\\\":0.08795998232383218,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33615.503258849814,\\\"ask\\\":34226.0774855494,\\\"price\\\":33920.79037219961,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5877620173131166,\\\"bias\\\":0.08776201731311661,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33726.570965201965,\\\"ask\\\":34339.162566991705,\\\"price\\\":34032.866766096835,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5874720461681736,\\\"bias\\\":0.08747204616817361,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33803.060508874914,\\\"ask\\\":34417.041426291406,\\\"price\\\":34110.05096758316,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5876704267536901,\\\"bias\\\":0.08767042675369008,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33629.2387433884,\\\"ask\\\":34240.06245416639,\\\"price\\\":33934.6505987774,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5872172785728595,\\\"bias\\\":0.08721727857285955,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33524.78668373745,\\\"ask\\\":34133.713182533895,\\\"price\\\":33829.249933135674,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5874890185385759,\\\"bias\\\":0.08748901853857594,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33437.44261268979,\\\"ask\\\":34044.78263996367,\\\"price\\\":33741.11262632673,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5877175541697136,\\\"bias\\\":0.08771755416971361,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33476.71599553666,\\\"ask\\\":34084.76936377042,\\\"price\\\":33780.742679653544,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5876145269996276,\\\"bias\\\":0.08761452699962757,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33675.055471709275,\\\"ask\\\":34286.71137331449,\\\"price\\\":33980.883422511884,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5881336167273218,\\\"bias\\\":0.08813361672732178,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33651.52448139556,\\\"ask\\\":34262.75297853493,\\\"price\\\":33957.13872996525,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5881952445826265,\\\"bias\\\":0.08819524458262651,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33715.10440496015,\\\"ask\\\":34327.4877342127,\\\"price\\\":34021.296069586424,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.006,\\\"forecast\\\":0.5883618773576862,\\\"bias\\\":0.08836187735768619,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5489145893474234,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24384.745091436947,\\\"ask\\\":24827.656707628543,\\\"price\\\":24606.20089953275,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.10952036573614665},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5570328271341086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":25655.43006819166,\\\"ask\\\":26121.421734415107,\\\"price\\\":25888.425901303384,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.1053263475082632},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.49106228507504335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":26119.652842316787,\\\"ask\\\":26594.076405547563,\\\"price\\\":26356.86462393218,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.1035079313970545},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6004122406477473,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":26986.147535785018,\\\"ask\\\":27476.30965046122,\\\"price\\\":27231.228593123116,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.1026288713696889},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5988935602734855,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":28657.979739917853,\\\"ask\\\":29178.508130753882,\\\"price\\\":28918.24393533587,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.1008898355501926},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5144641049397125,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":30611.33070895399,\\\"ask\\\":31167.338733940025,\\\"price\\\":30889.334721447005,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.09837260092531641},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.41026744765324497,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":29535.47767300164,\\\"ask\\\":30071.944472309446,\\\"price\\\":29803.711072655544,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.09103388268258483},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.40862916596694027,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":27564.169099241924,\\\"ask\\\":28064.83009196275,\\\"price\\\":27814.49959560235,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.09455086891063802},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.40482719074572565,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":26241.640061211856,\\\"ask\\\":26718.27933578481,\\\"price\\\":26479.95969849832,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.09760540421405134},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4013338739467996,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":24698.00017707056,\\\"ask\\\":25146.6015930012,\\\"price\\\":24922.300885035875,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.1007370897804053},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4002498303240323,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23595.19474511658,\\\"ask\\\":24023.76538629931,\\\"price\\\":23809.480065707947,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.10167120529760992},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.47313495723797305,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22876.76371043912,\\\"ask\\\":23292.28515018473,\\\"price\\\":23084.52443031192,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.10348832023549165},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.476608588166094,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23809.620395803322,\\\"ask\\\":24242.085751125684,\\\"price\\\":24025.853073464517,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.10459928765705762},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.3992509733174834,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22745.39188680835,\\\"ask\\\":23158.527158213543,\\\"price\\\":22951.95952251096,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.10438684631133022},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.3990491367465976,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21092.836834982656,\\\"ask\\\":21475.95597022957,\\\"price\\\":21284.396402606122,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.10263691372997813},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4025820920711704,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":20232.484473959255,\\\"ask\\\":20599.976623839437,\\\"price\\\":20416.23054889934,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.10109505871387259},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5498723660615562,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":19338.023016316896,\\\"ask\\\":19689.268641234856,\\\"price\\\":19513.645828775876,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.10061822914426366},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4066737592655618,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":18225.918813000364,\\\"ask\\\":18556.96476520419,\\\"price\\\":18391.441789102282,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.09732276886178548},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.40958744602352537,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":16849.60245670796,\\\"ask\\\":17155.64972635552,\\\"price\\\":17002.62609153174,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.09206517512770807},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5519044269227015,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":16335.127476945168,\\\"ask\\\":16631.83009509352,\\\"price\\\":16483.478786019346,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.0912598818003455},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5905477073041069,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":17163.699796421788,\\\"ask\\\":17475.452164066173,\\\"price\\\":17319.57598024399,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.09362957800475169},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5962045611181154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":18226.91766804924,\\\"ask\\\":18557.981762928026,\\\"price\\\":18392.449715488638,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.09861714375895603},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.44938900047837094,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":18904.648088885893,\\\"ask\\\":19248.02212077281,\\\"price\\\":19076.335104829355,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.09893323251460084},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.45135999667773974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":17843.04117843312,\\\"ask\\\":18167.132743732614,\\\"price\\\":18005.086961082867,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.0983571608132735},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5949627172853088,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":19049.868783172158,\\\"ask\\\":19395.880526963367,\\\"price\\\":19222.874655067764,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.09696383351194438},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4565240029059563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":20075.46099573661,\\\"ask\\\":20440.10105418593,\\\"price\\\":20257.781024961285,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.09789394660924416},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.547051291440048,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21270.693269620228,\\\"ask\\\":21657.042895102724,\\\"price\\\":21463.868082361478,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.09612100101879184},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.49281129453795286,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21465.319753170115,\\\"ask\\\":21855.204471189347,\\\"price\\\":21660.26211217972,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.09492482806547159},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5898308134966626,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22275.00049759206,\\\"ask\\\":22679.591828527125,\\\"price\\\":22477.29616305959,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.092449915798817},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.45410501147543614,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21145.86616221262,\\\"ask\\\":21529.948494119617,\\\"price\\\":21337.907328166133,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.0939307261531439},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5924441718243032,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":20313.693620044607,\\\"ask\\\":20682.66080991423,\\\"price\\\":20498.17721497942,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.0939307261531439},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5892978803064677,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":20367.559366710022,\\\"ask\\\":20737.504945520097,\\\"price\\\":20552.53215611507,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.09231754236647038},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5596072644740012,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21107.717925066976,\\\"ask\\\":21491.107352565672,\\\"price\\\":21299.412638816317,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.09057091260931477},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.48272281045492144,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":20825.94092417932,\\\"ask\\\":21204.21230322595,\\\"price\\\":21015.07661370263,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.09573992081100091},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5935261986068243,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21116.770152448993,\\\"ask\\\":21500.3239998194,\\\"price\\\":21308.5470761342,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.09498282258833346},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5949093478128342,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22301.391508961096,\\\"ask\\\":22706.4621922722,\\\"price\\\":22503.92685061665,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.09646475465310245},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5234524752475501,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23723.045277715624,\\\"ask\\\":24153.93812837039,\\\"price\\\":23938.491703043008,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.09985155327189355},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.39413215691056325,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23164.83175786082,\\\"ask\\\":23585.58551330128,\\\"price\\\":23375.208635581046,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.10965860414347167},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5538699784349741,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22374.65342802317,\\\"ask\\\":22781.054802094226,\\\"price\\\":22577.854115058704,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.11024826363145196},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.46532374017799627,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21415.14235131406,\\\"ask\\\":21804.11567353772,\\\"price\\\":21609.629012425892,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.11352876614089058},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.48319625945229844,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21480.369377931653,\\\"ask\\\":21870.527449377427,\\\"price\\\":21675.44841365455,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.11404125343731542},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5541307739296234,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21841.84490519622,\\\"ask\\\":22238.56862698584,\\\"price\\\":22040.206766091025,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.11098098075445395},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.3932531920605696,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22302.481711864275,\\\"ask\\\":22707.572197044447,\\\"price\\\":22505.026954454366,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.10874973427193352},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.39419062305009933,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":21647.150208061412,\\\"ask\\\":22040.33759831882,\\\"price\\\":21843.74390319012,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.10995991965907082},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.563259067923485,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":22403.133438226556,\\\"ask\\\":22810.05210814388,\\\"price\\\":22606.592773185217,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.11089703298957843},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6054365603431162,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":23688.096567735924,\\\"ask\\\":24118.354628502057,\\\"price\\\":23903.225598118996,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.10815661948530764},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6072666790885048,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":25681.067016054123,\\\"ask\\\":26147.524338242798,\\\"price\\\":25914.29567714846,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.11049746398112148},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.44312839533843423,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":28505.882649644478,\\\"ask\\\":29023.648429355464,\\\"price\\\":28764.765539499982,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.11150680334213159},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.44669933529144557,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":28857.448487657985,\\\"ask\\\":29381.59992335713,\\\"price\\\":29119.52420550755,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.10854386043790981},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6024339133781927,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":31024.07153767702,\\\"ask\\\":31587.57636883564,\\\"price\\\":31305.82395325634,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.10559756719807334},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4509478141620323,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":30614.443754061802,\\\"ask\\\":31170.508322753118,\\\"price\\\":30892.47603840746,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.10714028490954208},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5529691977538884,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":29322.768435383532,\\\"ask\\\":29855.37169657114,\\\"price\\\":29589.070065977357,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.10748328398957752},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.3982064544004546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":29533.104876192818,\\\"ask\\\":30069.528577274028,\\\"price\\\":29801.31672673343,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.105213497958285},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5434661385243043,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":28238.78525865511,\\\"ask\\\":28751.69962258627,\\\"price\\\":28495.2424406207,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.11008386573402507},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6111599308832867,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":29554.35856070682,\\\"ask\\\":30091.16830247546,\\\"price\\\":29822.763431591142,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.11459435266756868},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6124804367564449,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":31542.125930120474,\\\"ask\\\":32115.040427337568,\\\"price\\\":31828.583178729008,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.11384237296235722},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6112887458604689,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32656.494093143217,\\\"ask\\\":33249.649384441494,\\\"price\\\":32953.07173879236,\\\"maxShares\\\":6400000,\\\"investedShares\\\":634872.6,\\\"averagePrice\\\":20259.67432906486,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.1139524237349182},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.610782695444148,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33064.51500399751,\\\"ask\\\":33665.08137137588,\\\"price\\\":33364.798187686705,\\\"maxShares\\\":6400000,\\\"investedShares\\\":1058121,\\\"averagePrice\\\":33766.12388177484,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.1125044599312135},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.6072157048805238,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":35050.76612785343,\\\"ask\\\":35687.40971039768,\\\"price\\\":35369.087919125566,\\\"maxShares\\\":6400000,\\\"investedShares\\\":2874359.86,\\\"averagePrice\\\":34421.031297944624,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.11244632219742312},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4777516455762876,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":34554.199954934666,\\\"ask\\\":35181.82417207777,\\\"price\\\":34868.01206350624,\\\"maxShares\\\":6400000,\\\"investedShares\\\":2368000,\\\"averagePrice\\\":13206.159200912052,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.10067144525963201},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.43444225466725667,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32457.299691265453,\\\"ask\\\":33046.8369207738,\\\"price\\\":32752.068306019642,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.08961575360791196},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5859640414751646,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32295.263841110165,\\\"ask\\\":32881.85793711419,\\\"price\\\":32588.560889112177,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.08973432929074132},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5916948520307183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33687.307366258894,\\\"ask\\\":34299.185804798406,\\\"price\\\":33993.24658552867,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.09329963160984944},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4539535858033239,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33227.37045879144,\\\"ask\\\":33830.89484653939,\\\"price\\\":33529.13265266541,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.09476938064629437},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.5954294735769584,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33269.22238858078,\\\"ask\\\":33873.506952651886,\\\"price\\\":33571.36467061634,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.09733833566138828},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4840233164798643,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":35437.2497478136,\\\"ask\\\":36080.91321447419,\\\"price\\\":35759.08148114389,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.09853121047167174},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.406625102818641,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":34422.9680690616,\\\"ask\\\":35048.20865961974,\\\"price\\\":34735.58836434066,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09818818839051369},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.45940801719702,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33377.74523290954,\\\"ask\\\":33984.0009485426,\\\"price\\\":33680.87309072607,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":768000,\\\"averageShortPrice\\\":3951.3677711278997,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.10002944150671594},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4904880826394701,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":35255.75429524969,\\\"ask\\\":35896.12117447723,\\\"price\\\":35575.93773486347,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.08544837428042207},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4152836816703341,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":33685.80971257747,\\\"ask\\\":34297.66094852742,\\\"price\\\":33991.735330552445,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.08616202454889121},{\\\"volatility\\\":0.006,\\\"forecast\\\":0.4623180177697482,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"GPH\\\",\\\"bid\\\":32530.626409591692,\\\"ask\\\":33121.49550683958,\\\"price\\\":32826.060958215625,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.08646475938650883}],\\\"recentTicksOfPrices\\\":[33939.94664168299,33922.11492092694,33888.518438771156,33741.59188773441,33906.52093997692,33965.169910916135,33851.2687083221,33709.062423937285,33727.15757619151,33844.61879796784,33920.79037219961,34032.866766096835,34110.05096758316,33934.6505987774,33829.249933135674,33741.11262632673,33780.742679653544,33980.883422511884,33957.13872996525,34021.296069586424]}],[\\\"NVMD\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30451.070198342863,\\\"ask\\\":31128.44486402895,\\\"price\\\":30789.757531185907,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43930796201033623,\\\"bias\\\":0.06069203798966377,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30444.26577949504,\\\"ask\\\":31121.489082982287,\\\"price\\\":30782.877431238663,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.439294397089763,\\\"bias\\\":0.06070560291023702,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30525.692874334414,\\\"ask\\\":31204.727498434877,\\\"price\\\":30865.210186384647,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43913203216622515,\\\"bias\\\":0.06086796783377485,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30670.06770493829,\\\"ask\\\":31352.31390262144,\\\"price\\\":31011.190803779868,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43884415000147364,\\\"bias\\\":0.06115584999852636,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30612.386682692635,\\\"ask\\\":31293.34978382432,\\\"price\\\":30952.86823325848,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43895938217793806,\\\"bias\\\":0.06104061782206194,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30602.389307256642,\\\"ask\\\":31283.130019854867,\\\"price\\\":30942.759663555757,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4389394410561163,\\\"bias\\\":0.06106055894388368,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30425.278624091672,\\\"ask\\\":31102.079564162465,\\\"price\\\":30763.67909412707,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43929488487776874,\\\"bias\\\":0.06070511512223126,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30509.13020107632,\\\"ask\\\":31187.79639361796,\\\"price\\\":30848.46329734714,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4394621871955856,\\\"bias\\\":0.06053781280441439,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30336.36921889215,\\\"ask\\\":31011.192396663257,\\\"price\\\":30673.780807777704,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43911743361205985,\\\"bias\\\":0.06088256638794015,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30130.540960094735,\\\"ask\\\":30800.785551724744,\\\"price\\\":30465.66325590974,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4387015315993033,\\\"bias\\\":0.06129846840069669,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30003.46887757897,\\\"ask\\\":30670.88678992147,\\\"price\\\":30337.177833750222,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4389611457148072,\\\"bias\\\":0.06103885428519279,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30174.684752959907,\\\"ask\\\":30845.911309648596,\\\"price\\\":30510.298031304254,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4393094661344004,\\\"bias\\\":0.06069053386559958,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30222.517154910747,\\\"ask\\\":30894.807728629687,\\\"price\\\":30558.66244177022,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43940567174629785,\\\"bias\\\":0.060594328253702145,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30151.51475758171,\\\"ask\\\":30822.225904868665,\\\"price\\\":30486.87033122519,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43954836250678353,\\\"bias\\\":0.06045163749321647,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30311.825931198782,\\\"ask\\\":30986.10315110411,\\\"price\\\":30648.964541151447,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.439226950032766,\\\"bias\\\":0.06077304996723398,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30414.375793733303,\\\"ask\\\":31090.934203705125,\\\"price\\\":30752.654998719216,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4390213448694846,\\\"bias\\\":0.060978655130515425,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30616.889384813338,\\\"ask\\\":31297.9526471651,\\\"price\\\":30957.42101598922,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.439427370181773,\\\"bias\\\":0.060572629818226975,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30430.152481778365,\\\"ask\\\":31107.06183931034,\\\"price\\\":30768.607160544354,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4397990786478319,\\\"bias\\\":0.06020092135216809,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30316.917865967534,\\\"ask\\\":30991.308354391484,\\\"price\\\":30654.11311017951,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43957422636466426,\\\"bias\\\":0.060425773635335744,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30446.884328849304,\\\"ask\\\":31124.165881159395,\\\"price\\\":30785.52510500435,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43931518538625736,\\\"bias\\\":0.060684814613742644,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30348.86071788184,\\\"ask\\\":31023.961765195687,\\\"price\\\":30686.411241538764,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43951119092052204,\\\"bias\\\":0.060488809079477956,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30519.841895659083,\\\"ask\\\":31198.746366543306,\\\"price\\\":30859.294131101196,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43917040554755876,\\\"bias\\\":0.06082959445244124,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30504.530065500494,\\\"ask\\\":31183.09392944489,\\\"price\\\":30843.811997472694,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4392009391246004,\\\"bias\\\":0.0607990608753996,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30425.414314477337,\\\"ask\\\":31102.21827293891,\\\"price\\\":30763.816293708125,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43935903601402787,\\\"bias\\\":0.06064096398597213,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30389.18527245419,\\\"ask\\\":31065.18332704872,\\\"price\\\":30727.184299751454,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43943133028624587,\\\"bias\\\":0.06056866971375413,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30192.44571899048,\\\"ask\\\":30864.06736289117,\\\"price\\\":30528.256540940827,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43903665364612593,\\\"bias\\\":0.06096334635387407,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30068.792616512914,\\\"ask\\\":30737.66363528266,\\\"price\\\":30403.22812589779,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4387859516305774,\\\"bias\\\":0.061214048369422625,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29893.433561558002,\\\"ask\\\":30558.403772229663,\\\"price\\\":30225.918666893835,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4391450417849393,\\\"bias\\\":0.060854958215060706,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29709.816191529062,\\\"ask\\\":30370.701890430613,\\\"price\\\":30040.25904097984,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43952114735586023,\\\"bias\\\":0.06047885264413977,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29578.99330706389,\\\"ask\\\":30236.96889124529,\\\"price\\\":29907.981099154593,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4392536596198877,\\\"bias\\\":0.060746340380112285,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29407.752505332897,\\\"ask\\\":30061.918890689136,\\\"price\\\":29734.83569801102,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4396073844421784,\\\"bias\\\":0.060392615557821605,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29590.276930635468,\\\"ask\\\":30248.503515543434,\\\"price\\\":29919.390223089453,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43923254697558817,\\\"bias\\\":0.06076745302441183,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29566.34216831453,\\\"ask\\\":30224.036331815965,\\\"price\\\":29895.18925006525,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4391833540609994,\\\"bias\\\":0.0608166459390006,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29426.4102716759,\\\"ask\\\":30080.99169329053,\\\"price\\\":29753.700982483217,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43947255646573974,\\\"bias\\\":0.06052744353426026,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29222.070114912007,\\\"ask\\\":29872.106052756357,\\\"price\\\":29547.088083834184,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43904930830940886,\\\"bias\\\":0.06095069169059114,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29105.06555595039,\\\"ask\\\":29752.498763463947,\\\"price\\\":29428.78215970717,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43880428193123583,\\\"bias\\\":0.06119571806876417,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29085.953665193796,\\\"ask\\\":29732.961734591434,\\\"price\\\":29409.457699892617,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43884449260790687,\\\"bias\\\":0.061155507392093134,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29049.954147101373,\\\"ask\\\":29696.161418321015,\\\"price\\\":29373.057782711196,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43892027822821,\\\"bias\\\":0.061079721771789997,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29208.07537567331,\\\"ask\\\":29857.800004859168,\\\"price\\\":29532.93769026624,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43925274004892345,\\\"bias\\\":0.06074725995107655,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29030.697650528804,\\\"ask\\\":29676.476566920745,\\\"price\\\":29353.587108724776,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43888157395058863,\\\"bias\\\":0.06111842604941137,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29093.46656988598,\\\"ask\\\":29740.64176153157,\\\"price\\\":29417.054165708774,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43874942633215674,\\\"bias\\\":0.061250573667843256,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28971.61361732251,\\\"ask\\\":29616.078227616843,\\\"price\\\":29293.845922469678,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4384918099167849,\\\"bias\\\":0.06150819008321512,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29124.389504164825,\\\"ask\\\":29772.252566947052,\\\"price\\\":29448.32103555594,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43816745903967635,\\\"bias\\\":0.061832540960323645,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29143.932107269633,\\\"ask\\\":29792.22988923114,\\\"price\\\":29468.08099825039,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4381259691122471,\\\"bias\\\":0.061874030887752896,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29270.806194752146,\\\"ask\\\":29921.926251662706,\\\"price\\\":29596.366223207428,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43839532916904567,\\\"bias\\\":0.06160467083095433,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29188.690168671932,\\\"ask\\\":29837.983579906293,\\\"price\\\":29513.336874289114,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4382220178375887,\\\"bias\\\":0.061777982162411316,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29068.634456171698,\\\"ask\\\":29715.257265105745,\\\"price\\\":29391.945860638723,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43847716569038925,\\\"bias\\\":0.06152283430961075,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28986.460332769293,\\\"ask\\\":29631.255203670124,\\\"price\\\":29308.85776821971,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4383027537435497,\\\"bias\\\":0.06169724625645029,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28800.382180824006,\\\"ask\\\":29441.037800619888,\\\"price\\\":29120.70999072195,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5620958697709382,\\\"bias\\\":0.06209586977093817,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28912.54766847873,\\\"ask\\\":29555.69837495652,\\\"price\\\":29234.123021717627,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5623377073087343,\\\"bias\\\":0.062337707308734336,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29006.953049856726,\\\"ask\\\":29652.20377492937,\\\"price\\\":29329.57841239305,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5625412526725049,\\\"bias\\\":0.06254125267250488,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29049.540082660926,\\\"ask\\\":29695.738143144783,\\\"price\\\":29372.639112902856,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5626330736360718,\\\"bias\\\":0.06263307363607185,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28835.984411464928,\\\"ask\\\":29477.43199190196,\\\"price\\\":29156.708201683447,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5630969262962953,\\\"bias\\\":0.06309692629629526,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28861.189037419084,\\\"ask\\\":29503.197286987557,\\\"price\\\":29182.193162203323,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5631520773327039,\\\"bias\\\":0.0631520773327039,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28793.18808034724,\\\"ask\\\":29433.68366959662,\\\"price\\\":29113.435874971932,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5630029308857138,\\\"bias\\\":0.06300293088571385,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.44687693649766563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16104.437633094112,\\\"ask\\\":16462.675881757477,\\\"price\\\":16283.556757425797,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.054045880101727284},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5483492256259603,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":15521.823740922528,\\\"ask\\\":15867.101923228169,\\\"price\\\":15694.462832075353,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.0533873655812418},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.504809581557108,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":15178.341388031573,\\\"ask\\\":15515.978911324493,\\\"price\\\":15347.16014967803,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.053735194197408354},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.44693138942438115,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":14551.509396611224,\\\"ask\\\":14875.203235565163,\\\"price\\\":14713.356316088186,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.05447516786435075},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.527445467089026,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":14318.946960476533,\\\"ask\\\":14637.467519759119,\\\"price\\\":14478.207240117828,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.05513949305214694},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.44478149478261514,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":13915.265160409861,\\\"ask\\\":14224.805942542334,\\\"price\\\":14070.035551476103,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.05690037428929878},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4464674862296708,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":13593.978734607486,\\\"ask\\\":13896.372599280247,\\\"price\\\":13745.175666943867,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.05524028278488119},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.541931756726755,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":13907.72210789085,\\\"ask\\\":14217.095097146257,\\\"price\\\":14062.408602518552,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.053159718564496194},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5105596569224242,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":14959.162379057387,\\\"ask\\\":15291.924332888788,\\\"price\\\":15125.543355973095,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.053243942048266435},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4473737824608749,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":15253.97901392431,\\\"ask\\\":15593.299072879148,\\\"price\\\":15423.63904340173,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.053902629441185734},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5404348959004792,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":16149.233408013899,\\\"ask\\\":16508.468124875686,\\\"price\\\":16328.850766444797,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.05485444452008603},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5537582145760402,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17592.795247870126,\\\"ask\\\":17984.141552676127,\\\"price\\\":17788.468400273126,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.05503179558406035},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5546999385732893,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18493.787582697314,\\\"ask\\\":18905.17618413244,\\\"price\\\":18699.48188341488,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.056363849882049566},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5551651795553845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":19434.81298420975,\\\"ask\\\":19867.134405496512,\\\"price\\\":19650.97369485312,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.056645265452112126},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5549209890648126,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":20784.895621109274,\\\"ask\\\":21247.24921429876,\\\"price\\\":21016.07241770402,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.05624311581908037},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.49103118554150993,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":21971.34226882604,\\\"ask\\\":22460.08800180296,\\\"price\\\":22215.715135314502,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.05633327296819979},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5336413711543336,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":21927.940479136716,\\\"ask\\\":22415.720752686782,\\\"price\\\":22171.830615911746,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.05439996661645369},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5512134302761638,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":23246.43874282761,\\\"ask\\\":23763.54860363874,\\\"price\\\":23504.99367323318,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.05230269214267158},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.494579378863426,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":24358.88972087046,\\\"ask\\\":24900.745710616833,\\\"price\\\":24629.81771574364,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.05245840756011505},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4505682176187203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":24635.140786383967,\\\"ask\\\":25183.14189588897,\\\"price\\\":24909.141341136456,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.05510666233338751},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5535140726302258,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":23423.17670936542,\\\"ask\\\":23944.218051737556,\\\"price\\\":23683.6973805515,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.05502711633797086},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.552257938198924,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":23949.625369708407,\\\"ask\\\":24482.377400177153,\\\"price\\\":24216.001384942792,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.05358954957423412},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5530134454577762,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":25240.826959579495,\\\"ask\\\":25802.30137121829,\\\"price\\\":25521.564165398882,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.05523979402590662},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5552502716741909,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":27649.588114019945,\\\"ask\\\":28264.644674695825,\\\"price\\\":27957.116394357876,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.05775940546371938},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5015235754783292,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28273.46220264769,\\\"ask\\\":28902.396650027113,\\\"price\\\":28587.929426337403,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.05903396212062134},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5252700249336353,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":27788.865163992246,\\\"ask\\\":28407.019899692783,\\\"price\\\":28097.942531842516,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.05668928503313586},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.47181174523004876,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":26039.266786062453,\\\"ask\\\":26618.502245408632,\\\"price\\\":26328.88451573554,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.05798314756375794},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5540885941599553,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":25566.391806480722,\\\"ask\\\":26135.10830773713,\\\"price\\\":25850.750057108933,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.05651643004696649},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5526073073963318,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":27122.412289423053,\\\"ask\\\":27725.741986457742,\\\"price\\\":27424.077137940378,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.055186271098968454},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5528420160272598,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":28684.024809128616,\\\"ask\\\":29322.092095074844,\\\"price\\\":29003.058452101723,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.05449290781934191},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5066724292479834,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29021.226866521734,\\\"ask\\\":29666.795108244158,\\\"price\\\":29344.010987382935,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.054551636916435775},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5193369280419183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":27649.68296683601,\\\"ask\\\":28264.741637483527,\\\"price\\\":27957.212302159754,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.05727056145496978},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4742098061106072,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":27181.076880538785,\\\"ask\\\":27785.711553311154,\\\"price\\\":27483.394216924968,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.05541455879958346},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5112785491325019,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":25094.414983607247,\\\"ask\\\":25652.63250599283,\\\"price\\\":25373.523744800023,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.055829705542708274},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4469503406455647,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":23870.850754309515,\\\"ask\\\":24401.8504677522,\\\"price\\\":24136.35061103086,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.05427757512601772},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5258870175343228,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":23237.389327401597,\\\"ask\\\":23754.297886757326,\\\"price\\\":23495.84360707947,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.052837167942529906},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.44594562990320846,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":22597.167942468288,\\\"ask\\\":23099.834974555575,\\\"price\\\":22848.50145851194,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.055837101382898435},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.44328084393486217,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":20845.258803256984,\\\"ask\\\":21308.955156817814,\\\"price\\\":21077.1069800374,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.057830874436796076},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5293148356389801,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":20695.400406325953,\\\"ask\\\":21155.76320606222,\\\"price\\\":20925.581806194077,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.05988331531681068},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.44011445157007834,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":20192.97653473581,\\\"ask\\\":20642.163070392213,\\\"price\\\":20417.569802564016,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.06128131886331678},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.44545726958316245,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18649.343552062302,\\\"ask\\\":19064.19244806369,\\\"price\\\":18856.768000062995,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.05871274558660011},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5257097736188335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17314.371143802804,\\\"ask\\\":17699.5239902777,\\\"price\\\":17506.947567040257,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.053002508474804255},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.48102510947827315,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17078.804849803833,\\\"ask\\\":17458.717596715538,\\\"price\\\":17268.761223259684,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.054880516323926765},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.49462761161036356,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17706.181102084858,\\\"ask\\\":18100.049640250552,\\\"price\\\":17903.115371167707,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.05540497175404385},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4496548832326148,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17551.162502754934,\\\"ask\\\":17941.582699985072,\\\"price\\\":17746.372601370007,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.055595080514793116},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5531095859852448,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17553.6830411279,\\\"ask\\\":17944.159306956833,\\\"price\\\":17748.92117404237,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.05525259598865051},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.553285903840571,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":17962.787524833853,\\\"ask\\\":18362.36419373814,\\\"price\\\":18162.575859285997,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.054989665409415855},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.47232667171456477,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18403.825240259863,\\\"ask\\\":18813.212657131164,\\\"price\\\":18608.518948695517,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.05674371853081128},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5564067128393596,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":18835.564870877373,\\\"ask\\\":19254.556202686574,\\\"price\\\":19045.060536781963,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.05940913425849792},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5582253802193657,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":19562.217223876454,\\\"ask\\\":19997.372713184122,\\\"price\\\":19779.794968530292,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.05931251480498512},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5567942656733122,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":21257.43702121896,\\\"ask\\\":21730.30215212576,\\\"price\\\":21493.869586672354,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.05824969023372806},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.47147271863869533,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":21966.057330651074,\\\"ask\\\":22454.68550180813,\\\"price\\\":22210.371416229602,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.05898069291531871},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5050053458584379,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":23000.476927018175,\\\"ask\\\":23512.115443089348,\\\"price\\\":23256.296185053765,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.05857885386357742},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5213017375848875,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":21665.517048015477,\\\"ask\\\":22147.459793269612,\\\"price\\\":21906.488420642545,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.054445827753123566},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.45175334390452326,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":21066.295597885317,\\\"ask\\\":21534.9088467766,\\\"price\\\":21300.602222330963,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.05583573254372426},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4922094911960275,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":19583.19700920205,\\\"ask\\\":20018.819187364268,\\\"price\\\":19801.008098283164,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.05558632163021465},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5543641537560322,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":20075.38616700382,\\\"ask\\\":20521.956941193996,\\\"price\\\":20298.67155409891,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.05613108177034565},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5570991465814853,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":22483.884919070773,\\\"ask\\\":22984.032005238183,\\\"price\\\":22733.958462154482,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.05828254644093267},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5118083690057638,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":24790.536158844818,\\\"ask\\\":25341.993990487466,\\\"price\\\":25066.265074666157,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.05908331164269642},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4421714739304963,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":24184.329789112788,\\\"ask\\\":24722.302747010133,\\\"price\\\":24453.316268061466,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.06036864911996803},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.545330179364203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":23829.180608589453,\\\"ask\\\":24359.253382491366,\\\"price\\\":24094.216995540413,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.062273927339902335},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5615864310952093,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":25560.014136892445,\\\"ask\\\":26128.588768855672,\\\"price\\\":25844.301452874046,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.06361865208314188},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.48404589126434266,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":26776.64222955035,\\\"ask\\\":27372.280378236006,\\\"price\\\":27074.46130389317,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.07015499645413953},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4307807089355506,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":26365.49642521381,\\\"ask\\\":26951.988762276196,\\\"price\\\":26658.742593745017,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.07144056346046485},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.432087410689377,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":24769.828905249276,\\\"ask\\\":25320.82611042166,\\\"price\\\":25045.32750783545,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.06950427194482406},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.508883026228178,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":23874.693983231908,\\\"ask\\\":24405.77918811676,\\\"price\\\":24140.236585674327,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.06608862145033001},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.5606903326333924,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":26412.124392118156,\\\"ask\\\":26999.653953924604,\\\"price\\\":26705.88917302139,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.061964337944459214},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.56114210055675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":29593.73489070177,\\\"ask\\\":30252.038396865,\\\"price\\\":29922.886643783408,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.06327289335408293},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.495418410808198,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":31733.085359885496,\\\"ask\\\":32438.978057476474,\\\"price\\\":32086.031708680977,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.0604188981621957},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.4422734311968185,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30739.63620810916,\\\"ask\\\":31423.429935690932,\\\"price\\\":31081.533071900038,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.06173281865305619},{\\\"volatility\\\":0.0075,\\\"forecast\\\":0.43656759521562394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NVMD\\\",\\\"bid\\\":30344.575539177713,\\\"ask\\\":31019.58126401281,\\\"price\\\":30682.078401595256,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.0660151727191311}],\\\"recentTicksOfPrices\\\":[29428.78215970717,29409.457699892617,29373.057782711196,29532.93769026624,29353.587108724776,29417.054165708774,29293.845922469678,29448.32103555594,29468.08099825039,29596.366223207428,29513.336874289114,29391.945860638723,29308.85776821971,29120.70999072195,29234.123021717627,29329.57841239305,29372.639112902856,29156.708201683447,29182.193162203323,29113.435874971932]}],[\\\"WDS\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":67179.02036160242,\\\"ask\\\":67990.03469192359,\\\"price\\\":67584.527526763,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5937753240888665,\\\"bias\\\":0.09377532408886646,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":67129.60803135032,\\\"ask\\\":67940.02583454568,\\\"price\\\":67534.816932948,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5937062985512646,\\\"bias\\\":0.09370629855126456,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":67720.91532616224,\\\"ask\\\":68538.47164800725,\\\"price\\\":68129.69348708475,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5928808920052094,\\\"bias\\\":0.09288089200520944,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":68775.75016864264,\\\"ask\\\":69606.04091514536,\\\"price\\\":69190.895541894,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5914341602146557,\\\"bias\\\":0.09143416021465567,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":69202.53284642598,\\\"ask\\\":70037.97589889792,\\\"price\\\":69620.25437266195,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5908667724996313,\\\"bias\\\":0.09086677249963127,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":69276.98689974632,\\\"ask\\\":70113.32879390824,\\\"price\\\":69695.15784682728,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5909645348104378,\\\"bias\\\":0.09096453481043776,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":67973.85674085966,\\\"ask\\\":68794.46668139318,\\\"price\\\":68384.16171112642,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5892206492287724,\\\"bias\\\":0.08922064922877238,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":68590.81285489105,\\\"ask\\\":69418.870957767,\\\"price\\\":69004.84190632902,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5900304491677312,\\\"bias\\\":0.09003044916773117,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":69877.23557726474,\\\"ask\\\":70720.82393433433,\\\"price\\\":70299.02975579954,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5917189729028253,\\\"bias\\\":0.09171897290282527,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":71449.29687663134,\\\"ask\\\":72311.86384093676,\\\"price\\\":71880.58035878405,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5896555276831191,\\\"bias\\\":0.08965552768311913,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":72445.87724467932,\\\"ask\\\":73320.47536030924,\\\"price\\\":72883.17630249428,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5884050053871439,\\\"bias\\\":0.08840500538714391,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":71109.47944798981,\\\"ask\\\":71967.94398860942,\\\"price\\\":71538.71171829962,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5900664470870809,\\\"bias\\\":0.09006644708708089,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":70740.17776646823,\\\"ask\\\":71594.18393668716,\\\"price\\\":71167.1808515777,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5895962519107593,\\\"bias\\\":0.08959625191075926,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":71288.79028586042,\\\"ask\\\":72149.41954484466,\\\"price\\\":71719.10491535254,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5902910992668279,\\\"bias\\\":0.09029109926682788,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":72537.06908175859,\\\"ask\\\":73412.7681048784,\\\"price\\\":72974.91859331849,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5918721117124195,\\\"bias\\\":0.09187211171241949,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":73345.26876836685,\\\"ask\\\":74230.72472935317,\\\"price\\\":73787.99674886001,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5928957402217314,\\\"bias\\\":0.09289574022173142,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":74953.6280194146,\\\"ask\\\":75858.5007922848,\\\"price\\\":75406.0644058497,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5949328139918256,\\\"bias\\\":0.09493281399182563,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":76468.42479600546,\\\"ask\\\":77391.58485390492,\\\"price\\\":76930.00482495519,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5930142421437722,\\\"bias\\\":0.09301424214377219,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":75539.23921848607,\\\"ask\\\":76451.18174426255,\\\"price\\\":75995.2104813743,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5941583825031147,\\\"bias\\\":0.0941583825031147,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":74487.60202978611,\\\"ask\\\":75386.84873437106,\\\"price\\\":74937.22538207858,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5954877373751981,\\\"bias\\\":0.09548773737519811,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":75279.93547360657,\\\"ask\\\":76188.7475718795,\\\"price\\\":75734.34152274304,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5944720230048138,\\\"bias\\\":0.09447202300481383,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":73908.6221126542,\\\"ask\\\":74800.87912005042,\\\"price\\\":74354.7506163523,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5962248732634108,\\\"bias\\\":0.09622487326341078,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":74030.80026689498,\\\"ask\\\":74924.53226206877,\\\"price\\\":74477.66626448187,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.596065804171452,\\\"bias\\\":0.09606580417145205,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":74664.77885179398,\\\"ask\\\":75566.1645119766,\\\"price\\\":75115.47168188529,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5952431241198217,\\\"bias\\\":0.09524312411982172,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":74372.77574378924,\\\"ask\\\":75270.63621554524,\\\"price\\\":74821.70597966724,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5948691796491343,\\\"bias\\\":0.09486917964913433,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":75968.81315702874,\\\"ask\\\":76885.94168608745,\\\"price\\\":76427.37742155809,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5969050692413821,\\\"bias\\\":0.09690506924138209,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":76997.68210248453,\\\"ask\\\":77927.23158460709,\\\"price\\\":77462.4568435458,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5982174843266832,\\\"bias\\\":0.0982174843266832,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":75538.3452424777,\\\"ask\\\":76450.27697578729,\\\"price\\\":75994.3111091325,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.6001149629478387,\\\"bias\\\":0.10011496294783873,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":77075.85172113802,\\\"ask\\\":78006.34490087008,\\\"price\\\":77541.09831100405,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.6021527015777893,\\\"bias\\\":0.10215270157778933,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":78198.52750193192,\\\"ask\\\":79142.5741116132,\\\"price\\\":78670.55080677256,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5724123060931064,\\\"bias\\\":0.07241230609310645,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":79698.1421810534,\\\"ask\\\":80660.29279088504,\\\"price\\\":80179.21748596922,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.571023653894207,\\\"bias\\\":0.07102365389420695,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":81327.2245469456,\\\"ask\\\":82309.04214710993,\\\"price\\\":81818.13334702776,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5695718837656457,\\\"bias\\\":0.06957188376564571,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":81110.9791585503,\\\"ask\\\":82090.18615040401,\\\"price\\\":81600.58265447716,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5693864021060435,\\\"bias\\\":0.06938640210604352,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":82381.24543641882,\\\"ask\\\":83375.78763484642,\\\"price\\\":82878.51653563262,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5704730516281217,\\\"bias\\\":0.07047305162812167,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":80526.77990097673,\\\"ask\\\":81498.93418549556,\\\"price\\\":81012.85704323614,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5720959880671856,\\\"bias\\\":0.07209598806718565,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":81592.91004988096,\\\"ask\\\":82577.93512090568,\\\"price\\\":82085.42258539332,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5730504991824691,\\\"bias\\\":0.07305049918246909,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":81416.72475252223,\\\"ask\\\":82399.62283806577,\\\"price\\\":81908.173795294,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5728924183463782,\\\"bias\\\":0.07289241834637816,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":81085.798118819,\\\"ask\\\":82064.70111421721,\\\"price\\\":81575.24961651811,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5731899062318708,\\\"bias\\\":0.07318990623187083,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":79657.86107748872,\\\"ask\\\":80619.52539633165,\\\"price\\\":80138.69323691019,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5718779129552963,\\\"bias\\\":0.07187791295529633,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":78086.5806392909,\\\"ask\\\":79029.27577779342,\\\"price\\\":78557.92820854216,\\\"maxShares\\\":17600000,\\\"investedShares\\\":13849056,\\\"averagePrice\\\":78006.34490087008,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.570431565098334,\\\"bias\\\":0.07043156509833404,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":78642.61198444653,\\\"ask\\\":79592.01977500322,\\\"price\\\":79117.31587972488,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5503560351475268,\\\"bias\\\":0.050356035147526845,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":79731.9357824527,\\\"ask\\\":80694.49436332737,\\\"price\\\":80213.21507289003,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5496585249037129,\\\"bias\\\":0.04965852490371292,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":81116.61803860853,\\\"ask\\\":82095.89310547303,\\\"price\\\":81606.25557204078,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5582825822060038,\\\"bias\\\":0.0582825822060038,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":80937.7583611359,\\\"ask\\\":81914.87415624017,\\\"price\\\":81426.31625868804,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5581537868938193,\\\"bias\\\":0.05815378689381934,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":79793.7496047471,\\\"ask\\\":80757.05442894928,\\\"price\\\":80275.4020168482,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5589875419404644,\\\"bias\\\":0.058987541940464405,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":80533.0447950747,\\\"ask\\\":81505.27471211785,\\\"price\\\":81019.15975359628,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.558441017854783,\\\"bias\\\":0.05844101785478295,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":81628.43286845397,\\\"ask\\\":82613.886786383,\\\"price\\\":82121.15982741848,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5576461193864937,\\\"bias\\\":0.057646119386493666,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":80873.37342465675,\\\"ask\\\":81849.71193682565,\\\"price\\\":81361.5426807412,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5581843218256634,\\\"bias\\\":0.058184321825663354,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":79188.3949256818,\\\"ask\\\":80144.39164510653,\\\"price\\\":79666.39328539417,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.44305372992858283,\\\"bias\\\":0.05694627007141717,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":80204.0780300627,\\\"ask\\\":81172.33651734717,\\\"price\\\":80688.20727370493,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.44378413195811417,\\\"bias\\\":0.05621586804188583,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":81066.54511544749,\\\"ask\\\":82045.2156802215,\\\"price\\\":81555.8803978345,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.443179619855322,\\\"bias\\\":0.056820380144677995,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":81458.51493120147,\\\"ask\\\":82441.91752594436,\\\"price\\\":81950.21622857291,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4434543555543044,\\\"bias\\\":0.0565456444456956,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":79519.0444695522,\\\"ask\\\":80479.03293397336,\\\"price\\\":79999.03870176278,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4448335045099906,\\\"bias\\\":0.055166495490009404,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":79747.9479084599,\\\"ask\\\":80710.69979467875,\\\"price\\\":80229.32385156932,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4446747022933093,\\\"bias\\\":0.0553252977066907,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":79132.46548107994,\\\"ask\\\":80087.78699594206,\\\"price\\\":79610.126238511,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4442443890417125,\\\"bias\\\":0.055755610958287516,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4756325402159801,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7011.701660316354,\\\"ask\\\":7096.349970098842,\\\"price\\\":7054.025815207601,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.059061049586311754},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.527326984978391,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7227.779321442775,\\\"ask\\\":7315.036214659387,\\\"price\\\":7271.407768051085,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.060331832021024656},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4518386529149207,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6936.2293711251195,\\\"ask\\\":7019.966546631664,\\\"price\\\":6978.097958878388,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.05504198788376263},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5114379745836738,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6847.570597594052,\\\"ask\\\":6930.237445854749,\\\"price\\\":6888.904021724405,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.04487999741425175},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5485717190586894,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7162.305628389988,\\\"ask\\\":7248.772094728701,\\\"price\\\":7205.538861559347,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.05530627743055949},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5056180252839416,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":8336.195936467595,\\\"ask\\\":8436.834116787117,\\\"price\\\":8386.515026627356,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.060773052812675754},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4391230734531834,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7896.362045728704,\\\"ask\\\":7991.690360164062,\\\"price\\\":7944.026202946385,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.06555600202878892},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.45497818349158237,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6741.164247877623,\\\"ask\\\":6822.546512439524,\\\"price\\\":6781.855380158575,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.07772837423916018},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5144483248803876,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":6891.014353841851,\\\"ask\\\":6974.20567400895,\\\"price\\\":6932.610013925396,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.07544341943893357},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.514361561586687,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7432.500052344252,\\\"ask\\\":7522.228423197499,\\\"price\\\":7477.364237770872,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.06612167300527716},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5267500794677157,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7515.940508668731,\\\"ask\\\":7606.676208974593,\\\"price\\\":7561.308358821665,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.0551085947765535},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.48645145929392053,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":7996.53270364183,\\\"ask\\\":8093.070321794445,\\\"price\\\":8044.801512718139,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.05928354731077912},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.48633424080524995,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":8897.575143311487,\\\"ask\\\":9004.990537395732,\\\"price\\\":8951.282840353606,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.06084156409934943},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5370689988587339,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":11455.593291443063,\\\"ask\\\":11593.8901923458,\\\"price\\\":11524.74174189443,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.05868632305550031},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5552806595798313,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":15179.362949455295,\\\"ask\\\":15362.614816048314,\\\"price\\\":15270.988882751804,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.06504589563672847},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5619555003304131,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":19404.027317027296,\\\"ask\\\":19638.28116793709,\\\"price\\\":19521.15424248219,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.06657847980979792},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4719626020835457,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":20619.422136120927,\\\"ask\\\":20868.3487615067,\\\"price\\\":20743.885448813802,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.06359105229843676},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5633275432767151,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":23664.196985588795,\\\"ask\\\":23949.881456239767,\\\"price\\\":23807.03922091429,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.06947639619772172},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.567737658522803,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":27984.050557051658,\\\"ask\\\":28321.886177458717,\\\"price\\\":28152.96836725519,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.07382579389167243},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5498937075106465,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":30626.005093444142,\\\"ask\\\":30995.735537228185,\\\"price\\\":30810.870315336153,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.06721522200939334},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4435114172046523,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":34835.466847841184,\\\"ask\\\":35256.01574338857,\\\"price\\\":35045.74129561487,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.06221258961279419},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5023074729490911,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":28923.986544242765,\\\"ask\\\":29273.169480390578,\\\"price\\\":29098.578012316688,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.0633885312506891},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.470052828809601,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":32138.111272273985,\\\"ask\\\":32526.096519021765,\\\"price\\\":32332.103895647884,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.06567535203291519},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.46726319082755974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":33775.47550301136,\\\"ask\\\":34183.22772236363,\\\"price\\\":33979.35161268749,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.07058622926575253},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5012211190404016,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":38956.29984631042,\\\"ask\\\":39426.59722876086,\\\"price\\\":39191.448537535645,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.06509503521640614},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.44348948338212707,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":36047.842713350554,\\\"ask\\\":36483.02793725418,\\\"price\\\":36265.43532530237,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.06407130549978468},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5272972161821619,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":41114.353610195765,\\\"ask\\\":41610.703955590485,\\\"price\\\":41362.52878289313,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.0632815034860228},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.44519723523155996,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":37277.317237157135,\\\"ask\\\":37727.34521185119,\\\"price\\\":37502.331224504174,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.06169379842406825},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4418460353019276,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":25880.421023797033,\\\"ask\\\":26192.86071422516,\\\"price\\\":26036.640869011087,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.06652630283757965},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5106416930804584,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":25087.003042227527,\\\"ask\\\":25389.864245956614,\\\"price\\\":25238.433644092074,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.0442891530060574},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.48648075956834924,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":30088.594368578382,\\\"ask\\\":30451.836956529034,\\\"price\\\":30270.21566255372,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.033158110359172766},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.511670867943767,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":25668.13218375174,\\\"ask\\\":25978.009031040507,\\\"price\\\":25823.070607396126,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.027426318074529665},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5136012965772568,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":30556.804896215443,\\\"ask\\\":30925.699925143617,\\\"price\\\":30741.252410679528,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.044519176240278124},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.45358035411461983,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":30237.671737356795,\\\"ask\\\":30602.71405209352,\\\"price\\\":30420.192894725173,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.06312242690285891},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4464859512920099,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":24117.00729181669,\\\"ask\\\":24408.15828527928,\\\"price\\\":24262.58278854797,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.061800533235316535},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.45977334875108483,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":26259.011565998386,\\\"ask\\\":26576.021765990332,\\\"price\\\":26417.51666599436,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.061824768449732226},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5606515925105504,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":37079.65416709032,\\\"ask\\\":37527.29586729664,\\\"price\\\":37303.47501719348,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.07109957687403434},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4909366528087862,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":55450.13349942266,\\\"ask\\\":56119.55161007964,\\\"price\\\":55784.84255475116,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.06765619653521371},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5202297806217582,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":56590.37286881068,\\\"ask\\\":57273.55644469169,\\\"price\\\":56931.96465675114,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.0583375605424748},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.48368669599565384,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":68886.21387167281,\\\"ask\\\":69717.83818400689,\\\"price\\\":69302.02602783988,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.06172945537501773},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5615087379845755,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":68259.18925839942,\\\"ask\\\":69083.24385709237,\\\"price\\\":68671.2165577459,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.07028836526347693},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.45213735357469814,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":66976.71609652822,\\\"ask\\\":67785.28812183841,\\\"price\\\":67381.0021091833,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.07599348659327482},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4728933382522735,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":61884.016979066066,\\\"ask\\\":62631.107727304334,\\\"price\\\":62257.56235318519,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.07725862219280377},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.49411155894352476,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":66709.29247664931,\\\"ask\\\":67514.63604779597,\\\"price\\\":67111.96426222262,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.06691895182396512},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5274331875911858,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":69022.01808318691,\\\"ask\\\":69855.28188298395,\\\"price\\\":69438.6499830854,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.06596519339875234},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.47709291982296415,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":63114.66269368192,\\\"ask\\\":63876.61033183503,\\\"price\\\":63495.63651275847,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.0650019966405323},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5641211463906448,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":60890.59050958584,\\\"ask\\\":61625.688181733705,\\\"price\\\":61258.13934565979,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.0696339553408607},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5668722974758004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":61860.647772353754,\\\"ask\\\":62607.45639737216,\\\"price\\\":62234.05208486293,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.07164270482671464},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5296275199831109,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":61068.811344826034,\\\"ask\\\":61806.06057635315,\\\"price\\\":61437.43596058962,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.06670762641618333},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4375402807730592,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":53649.51030587985,\\\"ask\\\":54297.19051077982,\\\"price\\\":53973.350408329854,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.06814328999154301},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5261063614859145,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":49141.42042856598,\\\"ask\\\":49734.67701321668,\\\"price\\\":49438.0487208913,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.0692974762601033},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5292350343730257,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":58346.700044006386,\\\"ask\\\":59051.086764859625,\\\"price\\\":58698.89340443301,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.05790244856533955},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4400382238160659,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":56208.05186921552,\\\"ask\\\":56886.619899829755,\\\"price\\\":56547.335884522676,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.07222504614049724},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4286167953978972,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":49025.53495718343,\\\"ask\\\":49617.39252205889,\\\"price\\\":49321.46373962113,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.07593091491481929},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4243967418376672,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":47927.10479860283,\\\"ask\\\":48505.70163721775,\\\"price\\\":48216.403217910265,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.08335211262653724},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.49316481307383897,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":44662.408154998164,\\\"ask\\\":45201.592156869396,\\\"price\\\":44932.00015593377,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.10349790642618617},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.601835589982383,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":59226.020217527795,\\\"ask\\\":59941.02247367499,\\\"price\\\":59583.52134560139,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.12780467915261795},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4007799490927743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":60364.46817709852,\\\"ask\\\":61093.21427179187,\\\"price\\\":60728.841224445205,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":1640999.75,\\\"averageShortPrice\\\":7266.507200535594,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.13772522240642332},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.47306443714608165,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":55382.25885475488,\\\"ask\\\":56050.85755320266,\\\"price\\\":55716.55820397876,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7700075.75,\\\"averageShortPrice\\\":34096.68763328238,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.10193275230947263},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.588778594697516,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":70373.04657026494,\\\"ask\\\":71222.6205731253,\\\"price\\\":70797.83357169513,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.09658529516595504},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5852718797929477,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":99416.42987277164,\\\"ask\\\":100616.62822133636,\\\"price\\\":100016.52904705399,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.0920793472049034},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5223001744314331,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":112804.83434120353,\\\"ask\\\":114166.66332721392,\\\"price\\\":113485.74883420864,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":135021.5,\\\"averageShortPrice\\\":25008.253940791983,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.10014568556529568},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5164660837699565,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":119658.1610390429,\\\"ask\\\":121102.72636345794,\\\"price\\\":120380.44370125046,\\\"maxShares\\\":17600000,\\\"investedShares\\\":4067483.14,\\\"averagePrice\\\":60366.29709059918,\\\"sharesShort\\\":234820,\\\"averageShortPrice\\\":43492.615549203416,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.10625324266512404},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.46184280098673014,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":112030.48353005818,\\\"ask\\\":113382.9642165377,\\\"price\\\":112706.72387329789,\\\"maxShares\\\":17600000,\\\"investedShares\\\":1328157.76,\\\"averagePrice\\\":19711.443947950756,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.09430987778274558},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5242557412825462,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":85437.29962273373,\\\"ask\\\":86468.735835483,\\\"price\\\":85953.01772910835,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.09051379899534773},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4245213431007563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":67370.19407244628,\\\"ask\\\":68183.5163348903,\\\"price\\\":67776.85520366827,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.08374580502561679},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5568392859018961,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":54526.82672899849,\\\"ask\\\":55185.09827904675,\\\"price\\\":54855.96250402262,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09480571400792348},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.537059784663404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":66580.03047310948,\\\"ask\\\":67383.81353717117,\\\"price\\\":66981.92200514035,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.0931339507680885},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.41941251963497306,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":57182.965629270664,\\\"ask\\\":57873.30324250134,\\\"price\\\":57528.13443588601,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.09144792387576339},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.5391452514379804,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":50400.020311314416,\\\"ask\\\":51008.471260746795,\\\"price\\\":50704.24578603062,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.08365688035195351},{\\\"volatility\\\":0.024700000000000003,\\\"forecast\\\":0.4643973614807372,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"WDS\\\",\\\"bid\\\":60152.42168209525,\\\"ask\\\":60878.60785934386,\\\"price\\\":60515.514770719594,\\\"maxShares\\\":17600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.09729777887696756}],\\\"recentTicksOfPrices\\\":[82085.42258539332,81908.173795294,81575.24961651811,80138.69323691019,78557.92820854216,79117.31587972488,80213.21507289003,81606.25557204078,81426.31625868804,80275.4020168482,81019.15975359628,82121.15982741848,81361.5426807412,79666.39328539417,80688.20727370493,81555.8803978345,81950.21622857291,79999.03870176278,80229.32385156932,79610.126238511]}],[\\\"LXO\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15600.970530510454,\\\"ask\\\":15916.141652338949,\\\"price\\\":15758.556091424702,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42658605931678556,\\\"bias\\\":0.07341394068321444,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15595.207683123666,\\\"ask\\\":15910.262383792833,\\\"price\\\":15752.73503345825,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4265589308972854,\\\"bias\\\":0.07344106910271458,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15526.548476464819,\\\"ask\\\":15840.216122454009,\\\"price\\\":15683.382299459414,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42623417066171776,\\\"bias\\\":0.07376582933828224,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15406.078593580496,\\\"ask\\\":15717.31250456192,\\\"price\\\":15561.695549071208,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4256573489372751,\\\"bias\\\":0.07434265106272492,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15358.233495876795,\\\"ask\\\":15668.500839227841,\\\"price\\\":15513.367167552318,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4254257512470458,\\\"bias\\\":0.07457424875295421,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15349.942669021386,\\\"ask\\\":15660.04252092081,\\\"price\\\":15504.992594971098,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42546603036714503,\\\"bias\\\":0.07453396963285497,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15203.617995091785,\\\"ask\\\":15510.761792972427,\\\"price\\\":15357.189894032106,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4261833700692296,\\\"bias\\\":0.07381662993077043,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15134.656026967861,\\\"ask\\\":15440.406653775293,\\\"price\\\":15287.531340371577,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42651971997181276,\\\"bias\\\":0.07348028002818724,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15277.15608452811,\\\"ask\\\":15585.785500377162,\\\"price\\\":15431.470792452636,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4258278678335876,\\\"bias\\\":0.07417213216641239,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15106.53862994379,\\\"ask\\\":15411.721228528515,\\\"price\\\":15259.129929236153,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42499014711533917,\\\"bias\\\":0.07500985288466083,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15001.49405827432,\\\"ask\\\":15304.554544300065,\\\"price\\\":15153.024301287192,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4244649075734208,\\\"bias\\\":0.07553509242657919,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14861.280754582265,\\\"ask\\\":15161.508648614232,\\\"price\\\":15011.394701598249,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4237522486156422,\\\"bias\\\":0.0762477513843578,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14822.433584839988,\\\"ask\\\":15121.876687564027,\\\"price\\\":14972.155136202007,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4235524157526011,\\\"bias\\\":0.07644758424739889,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14880.142619837492,\\\"ask\\\":15180.75156165239,\\\"price\\\":15030.447090744941,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4232547779666359,\\\"bias\\\":0.07674522203336409,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15010.946965875899,\\\"ask\\\":15314.198419731978,\\\"price\\\":15162.572692803938,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42392940917388416,\\\"bias\\\":0.07607059082611584,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14927.450317971276,\\\"ask\\\":15229.014970859584,\\\"price\\\":15078.23264441543,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4243549097920613,\\\"bias\\\":0.07564509020793869,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14764.908005419096,\\\"ask\\\":15063.188975225545,\\\"price\\\":14914.04849032232,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4235221563545794,\\\"bias\\\":0.0764778436454206,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14914.709860153464,\\\"ask\\\":15216.017130055556,\\\"price\\\":15065.36349510451,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42274622718387517,\\\"bias\\\":0.07725377281612483,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15006.811930952335,\\\"ask\\\":15309.979848749354,\\\"price\\\":15158.395889850844,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42322328858970243,\\\"bias\\\":0.07677671141029757,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14901.196393659478,\\\"ask\\\":15202.23066423846,\\\"price\\\":15051.713528948969,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42267911660424845,\\\"bias\\\":0.07732088339575155,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14980.770150924236,\\\"ask\\\":15283.41197215503,\\\"price\\\":15132.091061539633,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4222662159857821,\\\"bias\\\":0.07773378401421788,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14842.517362544982,\\\"ask\\\":15142.36619815195,\\\"price\\\":14992.441780348467,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42154215334002393,\\\"bias\\\":0.07845784665997607,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14830.209844468365,\\\"ask\\\":15129.810043346515,\\\"price\\\":14980.00994390744,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42147704155966836,\\\"bias\\\":0.07852295844033164,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14766.724853993983,\\\"ask\\\":15065.042527812042,\\\"price\\\":14915.883690903012,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42181462686161547,\\\"bias\\\":0.07818537313838453,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14795.830845492786,\\\"ask\\\":15094.736519139107,\\\"price\\\":14945.283682315947,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4219687343450552,\\\"bias\\\":0.07803126565494478,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14955.23262540122,\\\"ask\\\":15257.35853702549,\\\"price\\\":15106.295581213355,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4211280703253192,\\\"bias\\\":0.07887192967468082,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14854.237638581268,\\\"ask\\\":15154.323247441494,\\\"price\\\":15004.280443011381,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42166432601825826,\\\"bias\\\":0.07833567398174174,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14998.304198018212,\\\"ask\\\":15301.30024242262,\\\"price\\\":15149.802220220416,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4224240789794208,\\\"bias\\\":0.0775759210205792,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14846.59874536349,\\\"ask\\\":15146.530033148612,\\\"price\\\":14996.564389256051,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.423216764928262,\\\"bias\\\":0.07678323507173801,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14738.82237879933,\\\"ask\\\":15036.576366249821,\\\"price\\\":14887.699372524576,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42377823570770345,\\\"bias\\\":0.07622176429229655,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14598.2799266677,\\\"ask\\\":14893.194672660986,\\\"price\\\":14745.737299664343,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4245120477535918,\\\"bias\\\":0.0754879522464082,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14748.083186443588,\\\"ask\\\":15046.024260917196,\\\"price\\\":14897.053723680392,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42373741256525976,\\\"bias\\\":0.07626258743474024,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14728.370462426137,\\\"ask\\\":15025.913300050906,\\\"price\\\":14877.141881238522,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42383948382581044,\\\"bias\\\":0.07616051617418956,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14613.477498860968,\\\"ask\\\":14908.699266514726,\\\"price\\\":14761.088382687847,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42443826720304473,\\\"bias\\\":0.07556173279695527,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14446.459000414543,\\\"ask\\\":14738.306656988574,\\\"price\\\":14592.382828701559,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4253118520137859,\\\"bias\\\":0.07468814798621409,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14351.07423088477,\\\"ask\\\":14640.994922417794,\\\"price\\\":14496.034576651282,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4248154353924476,\\\"bias\\\":0.0751845646075524,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14335.50046551931,\\\"ask\\\":14625.1065355298,\\\"price\\\":14480.303500524555,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.424897114212878,\\\"bias\\\":0.07510288578712199,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14306.189129117813,\\\"ask\\\":14595.203050918173,\\\"price\\\":14450.696090017993,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4247432391361429,\\\"bias\\\":0.07525676086385708,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14178.592770732243,\\\"ask\\\":14465.028988322794,\\\"price\\\":14321.810879527518,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4254204917228695,\\\"bias\\\":0.0745795082771305,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14036.794811217622,\\\"ask\\\":14320.366423565452,\\\"price\\\":14178.580617391537,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42617388466175116,\\\"bias\\\":0.07382611533824884,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14086.973066004315,\\\"ask\\\":14371.558380469049,\\\"price\\\":14229.265723236682,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42590997358552785,\\\"bias\\\":0.07409002641447215,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13989.691193347959,\\\"ask\\\":14272.311217456,\\\"price\\\":14131.001205401979,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42642518270738367,\\\"bias\\\":0.07357481729261633,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13868.776052518666,\\\"ask\\\":14148.953346508943,\\\"price\\\":14008.864699513804,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4257837195125972,\\\"bias\\\":0.07421628048740281,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13853.407158999758,\\\"ask\\\":14133.273970292685,\\\"price\\\":13993.340564646222,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4257013843802294,\\\"bias\\\":0.07429861561977058,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13754.408994820067,\\\"ask\\\":14032.27584320027,\\\"price\\\":13893.342419010169,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4262361530169786,\\\"bias\\\":0.07376384698302141,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13690.729394989046,\\\"ask\\\":13967.309786807005,\\\"price\\\":13829.019590898026,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.425893055719358,\\\"bias\\\":0.07410694428064202,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13597.877717970394,\\\"ask\\\":13872.582318333432,\\\"price\\\":13735.230018151913,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4263990871897022,\\\"bias\\\":0.07360091281029779,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13661.61175789968,\\\"ask\\\":13937.603914624926,\\\"price\\\":13799.607836262303,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42605411545123123,\\\"bias\\\":0.07394588454876877,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13807.546768583612,\\\"ask\\\":14086.487107342877,\\\"price\\\":13947.016937963244,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4252642164522777,\\\"bias\\\":0.07473578354772231,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13719.208177997478,\\\"ask\\\":13996.363898765105,\\\"price\\\":13857.786038381291,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42478298942377146,\\\"bias\\\":0.07521701057622854,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13645.543102786565,\\\"ask\\\":13921.210640216597,\\\"price\\\":13783.376871501581,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42437693253768777,\\\"bias\\\":0.07562306746231223,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13678.665862769014,\\\"ask\\\":13955.002546865357,\\\"price\\\":13816.834204817185,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4241933674942283,\\\"bias\\\":0.07580663250577169,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13846.152625990808,\\\"ask\\\":14125.87288106133,\\\"price\\\":13986.012753526069,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4232651623873477,\\\"bias\\\":0.07673483761265232,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13866.162069522636,\\\"ask\\\":14146.286555775618,\\\"price\\\":14006.224312649127,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42315427083201035,\\\"bias\\\":0.07684572916798965,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13920.305025760383,\\\"ask\\\":14201.523309109078,\\\"price\\\":14060.91416743473,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42345432898296365,\\\"bias\\\":0.07654567101703635,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.47593750884258484,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":7395.54185494929,\\\"ask\\\":7544.946740907862,\\\"price\\\":7470.244297928572,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.05416117267578985},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.540154499852499,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":7250.0237712434455,\\\"ask\\\":7396.488897935229,\\\"price\\\":7323.256334589336,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.054023846073753545},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.509961688141932,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":7324.002738790927,\\\"ask\\\":7471.962390079629,\\\"price\\\":7397.982564435275,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.054245148476639304},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4672957991109833,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6927.816382830027,\\\"ask\\\":7067.772269351844,\\\"price\\\":6997.7943260909315,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.0458859502681877},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.527155206014744,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6507.026935422002,\\\"ask\\\":6638.482025026488,\\\"price\\\":6572.754480224247,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.052462845203118835},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5062189059136709,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6556.406166335608,\\\"ask\\\":6688.858816160569,\\\"price\\\":6622.632491248087,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.05490528163901798},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5189130415094987,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6531.530707133808,\\\"ask\\\":6663.480822429442,\\\"price\\\":6597.505764781626,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.0566031818124364},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5523563078219054,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":6735.6313806242515,\\\"ask\\\":6871.7047418489865,\\\"price\\\":6803.668061236619,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.055125305382478396},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5541733457618997,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":7487.128610297057,\\\"ask\\\":7638.383733737399,\\\"price\\\":7562.756172017226,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.056852224270765195},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4842501991241937,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":9161.633556162933,\\\"ask\\\":9346.717062348049,\\\"price\\\":9254.175309255492,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.054381626135327266},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5265501485438555,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":9489.165649503802,\\\"ask\\\":9680.865965655388,\\\"price\\\":9585.015807579599,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.054902962018899604},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4439148425069259,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":9045.129080483151,\\\"ask\\\":9227.858960896952,\\\"price\\\":9136.494020690054,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.059146208167354},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.44766369583129717,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":9255.63171489375,\\\"ask\\\":9442.614173780492,\\\"price\\\":9349.122944337123,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.05922123023164827},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.46407292153826324,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":9458.396842818353,\\\"ask\\\":9649.475566915693,\\\"price\\\":9553.93620486702,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.051834868666651546},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5222653000189301,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":8563.53787018669,\\\"ask\\\":8736.538635240968,\\\"price\\\":8650.038252713828,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.033878346705948026},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5053842483675307,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":8792.815514302167,\\\"ask\\\":8970.448150954744,\\\"price\\\":8881.631832628455,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.030214928943787744},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5100050897914044,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":8924.101323112747,\\\"ask\\\":9104.386198327147,\\\"price\\\":9014.243760719952,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.02272464665089946},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5240915533592799,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":9209.992226536653,\\\"ask\\\":9396.052675557592,\\\"price\\\":9303.022451047125,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.045572180395764494},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5147700419881476,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":9939.52367246925,\\\"ask\\\":10140.322130498937,\\\"price\\\":10039.922901484097,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.020202650296356484},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5119432126629717,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":10169.210551454427,\\\"ask\\\":10374.649148453507,\\\"price\\\":10271.929849953967,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.034746508649711294},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4742201696203049,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":10983.518908132448,\\\"ask\\\":11205.408179003805,\\\"price\\\":11094.463543568132,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.03820525242324707},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4728343456000546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":11328.902144728398,\\\"ask\\\":11557.768854722923,\\\"price\\\":11443.335499725661,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.03821740803090434},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5174057001293666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":10669.98200570791,\\\"ask\\\":10885.537197742411,\\\"price\\\":10777.759601725164,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.052975664037624215},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5260202392595087,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":10657.608663098435,\\\"ask\\\":10872.913888615578,\\\"price\\\":10765.261275857005,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.05458397434952411},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4984383742068119,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":10944.091918742099,\\\"ask\\\":11165.184684777283,\\\"price\\\":11054.638301759689,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.056475317118907686},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5522986961047786,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":11430.034183094585,\\\"ask\\\":11660.94396457125,\\\"price\\\":11545.489073832925,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.054930107762292235},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4476887449459835,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":12065.767209337359,\\\"ask\\\":12309.520082253259,\\\"price\\\":12187.643645795306,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.05723776600123365},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.44265341843103523,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":11365.29995267124,\\\"ask\\\":11594.901971917125,\\\"price\\\":11480.100962294176,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.06019525665191788},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.44096435522830574,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":10608.933226824018,\\\"ask\\\":10823.255110194199,\\\"price\\\":10716.09416850911,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.061117518325733255},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5548051254902048,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":11159.0351866934,\\\"ask\\\":11384.470240970033,\\\"price\\\":11271.752713831718,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.06490026812979699},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.562834262934728,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":13422.876858732816,\\\"ask\\\":13694.046088202163,\\\"price\\\":13558.461473467494,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.06644626395507047},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5624989849138938,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14107.388057484939,\\\"ask\\\":14392.385796019991,\\\"price\\\":14249.886926752468,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.06518733366019858},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5456418242397,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15985.747037008206,\\\"ask\\\":16308.691421594238,\\\"price\\\":16147.219229301214,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.07438896633149772},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.485051156472841,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":14885.704621006991,\\\"ask\\\":15186.42592648187,\\\"price\\\":15036.065273744429,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.0729497849278623},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5619745364263233,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15755.279698061131,\\\"ask\\\":16073.56817680985,\\\"price\\\":15914.4239374355,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.0651809151237649},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5470211230951331,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":17250.70943227793,\\\"ask\\\":17599.208612727994,\\\"price\\\":17424.95902250296,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.06558845534391933},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4346332603684315,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":16236.810029599561,\\\"ask\\\":16564.826393833893,\\\"price\\\":16400.818211716727,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.06781114226675455},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4290321810714076,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15022.578763971562,\\\"ask\\\":15326.065203647753,\\\"price\\\":15174.32198380966,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.07533355408351738},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.44075758193637193,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":16069.380234253587,\\\"ask\\\":16394.01417837992,\\\"price\\\":16231.69720631675,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.07754338001606426},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5214804323513857,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":18478.042450914156,\\\"ask\\\":18851.336237801308,\\\"price\\\":18664.689344357736,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.07265277766042133},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42853467309189336,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":19205.740391658157,\\\"ask\\\":19593.73514704519,\\\"price\\\":19399.737769351676,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.07535404094559195},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.544241077161327,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":18827.32216197485,\\\"ask\\\":19207.672104641028,\\\"price\\\":19017.497133307937,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.07353263069524618},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5694967797487178,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":20282.794786086743,\\\"ask\\\":20692.548216108695,\\\"price\\\":20487.671501097713,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.07382592072285865},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.49296123387761637,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":20274.217017364317,\\\"ask\\\":20683.79715912925,\\\"price\\\":20479.007088246788,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.07125896668440912},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5350515674212437,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":21153.978106093044,\\\"ask\\\":21581.33119914542,\\\"price\\\":21367.65465261924,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.07100364964222028},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4263713109552987,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":21039.871218323904,\\\"ask\\\":21464.919121724382,\\\"price\\\":21252.39517002416,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.07657958907575207},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42391573929796456,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":20808.336654266863,\\\"ask\\\":21228.707091726807,\\\"price\\\":21018.521872996836,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.08031437927161617},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5376450397363528,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":20895.027704872537,\\\"ask\\\":21317.149476688144,\\\"price\\\":21106.088590780342,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.08061545408757181},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5376604211883261,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":23844.880832307328,\\\"ask\\\":24326.595596596355,\\\"price\\\":24085.738214451852,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.07744011979250753},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42394502361891656,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":23521.502174821817,\\\"ask\\\":23996.684036939423,\\\"price\\\":23759.093105880616,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.07859031496640739},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4229494233033339,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":20611.547798629297,\\\"ask\\\":21027.942703652123,\\\"price\\\":20819.74525114071,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.08238207835861183},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5352679277387847,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":20204.26137825451,\\\"ask\\\":20612.428274784907,\\\"price\\\":20408.344826519708,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.07589305248632888},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4270954872579268,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":20338.594900092456,\\\"ask\\\":20749.475605144835,\\\"price\\\":20544.035252618647,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.07655432674095763},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4239404364633176,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":19723.758013523984,\\\"ask\\\":20122.217771372958,\\\"price\\\":19922.98789244848,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.08018824855321965},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5679318703374234,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":21525.958612072736,\\\"ask\\\":21960.826462821668,\\\"price\\\":21743.392537447206,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.08052177331136823},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.57817292679465,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":24362.06295472674,\\\"ask\\\":24854.225842701017,\\\"price\\\":24608.14439871389,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.08318752761283943},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.47307416565915894,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":26255.03369117874,\\\"ask\\\":26785.438412212647,\\\"price\\\":26520.23605169569,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.08509001985000464},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.41790037785801004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":23920.239714581774,\\\"ask\\\":24403.47688053291,\\\"price\\\":24161.85829755735,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.0848294814271583},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.41763882103388306,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":21588.615880814177,\\\"ask\\\":22024.749534972034,\\\"price\\\":21806.682707893095,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.08713931476151848},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4182204876767188,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":20248.747954429004,\\\"ask\\\":20657.813569669983,\\\"price\\\":20453.28076204949,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.08404954599051484},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5406970930559141,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":21373.504472181423,\\\"ask\\\":21805.292441316404,\\\"price\\\":21589.39845674892,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.08300031057884494},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.47906347767390883,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":21746.481360797483,\\\"ask\\\":22185.804216571167,\\\"price\\\":21966.142788684327,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.08352094913307823},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.48598006705815683,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":20474.52725976455,\\\"ask\\\":20888.154073093123,\\\"price\\\":20681.340666428827,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.08368997242940124},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4425233045202739,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":17980.68441478239,\\\"ask\\\":18343.93056457598,\\\"price\\\":18162.30748967918,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.0748714813449658},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5728334414945482,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":17409.281539240896,\\\"ask\\\":17760.984196599282,\\\"price\\\":17585.132867920092,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.0771156514054554},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.4899790957299958,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":16808.094611355336,\\\"ask\\\":17147.652078251424,\\\"price\\\":16977.873344803367,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.07672847878258188},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5337553905762707,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":16378.754035587404,\\\"ask\\\":16709.637955498263,\\\"price\\\":16544.195995542843,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.07218811079821952},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.47372722253677396,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15886.021171167642,\\\"ask\\\":16206.950891797298,\\\"price\\\":16046.48603148247,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.0754203671047784},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5734897858080198,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15468.608392965387,\\\"ask\\\":15781.105532217212,\\\"price\\\":15624.856962591293,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.07642516930813248},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.5675481355515545,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":15956.86039785759,\\\"ask\\\":16279.221213975921,\\\"price\\\":16118.040805916753,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.07574015107137311},{\\\"volatility\\\":0.0124,\\\"forecast\\\":0.42590392612625794,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"LXO\\\",\\\"bid\\\":16567.538903787554,\\\"ask\\\":16902.236659419625,\\\"price\\\":16734.887781603586,\\\"maxShares\\\":9400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.07688113267661173}],\\\"recentTicksOfPrices\\\":[14496.034576651282,14480.303500524555,14450.696090017993,14321.810879527518,14178.580617391537,14229.265723236682,14131.001205401979,14008.864699513804,13993.340564646222,13893.342419010169,13829.019590898026,13735.230018151913,13799.607836262303,13947.016937963244,13857.786038381291,13783.376871501581,13816.834204817185,13986.012753526069,14006.224312649127,14060.91416743473]}],[\\\"RHOC\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4453.7957790869905,\\\"ask\\\":4516.588468822356,\\\"price\\\":4485.192123954674,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4724832267922929,\\\"bias\\\":0.027516773207707124,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4454.525769673272,\\\"ask\\\":4517.328751320227,\\\"price\\\":4485.92726049675,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4724381259695278,\\\"bias\\\":0.027561874030472222,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4445.805792480061,\\\"ask\\\":4508.485833864473,\\\"price\\\":4477.1458131722675,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47297872293702103,\\\"bias\\\":0.027021277062978966,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4430.439320223606,\\\"ask\\\":4492.902714466436,\\\"price\\\":4461.671017345021,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47391592503891394,\\\"bias\\\":0.026084074961086057,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4424.325899370022,\\\"ask\\\":4486.703102382287,\\\"price\\\":4455.514500876155,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47355550193392465,\\\"bias\\\":0.02644449806607535,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4423.266218313678,\\\"ask\\\":4485.628481210346,\\\"price\\\":4454.447349762012,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47361885496822564,\\\"bias\\\":0.026381145031774356,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4442.148509857446,\\\"ask\\\":4504.776988344862,\\\"price\\\":4473.462749101154,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47474502835947663,\\\"bias\\\":0.02525497164052337,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4451.1263355790325,\\\"ask\\\":4513.881389655675,\\\"price\\\":4482.503862617354,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47423461153417434,\\\"bias\\\":0.025765388465825656,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4469.715223550718,\\\"ask\\\":4532.732356611856,\\\"price\\\":4501.223790081287,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4753106311382683,\\\"bias\\\":0.024689368861731675,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4447.435532780211,\\\"ask\\\":4510.138551369258,\\\"price\\\":4478.787042074735,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.474073802634507,\\\"bias\\\":0.02592619736549301,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4461.248588575904,\\\"ask\\\":4524.146353168112,\\\"price\\\":4492.697470872008,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4732685745246442,\\\"bias\\\":0.026731425475355786,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4479.917990749628,\\\"ask\\\":4543.078969471173,\\\"price\\\":4511.498480110401,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4721499196840368,\\\"bias\\\":0.0278500803159632,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4474.716277850058,\\\"ask\\\":4537.803919229615,\\\"price\\\":4506.260098539837,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47247366785719075,\\\"bias\\\":0.02752633214280925,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4482.443631831307,\\\"ask\\\":4545.640218785626,\\\"price\\\":4514.0419253084665,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4729490180225763,\\\"bias\\\":0.027050981977423727,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4465.034348689651,\\\"ask\\\":4527.985487543281,\\\"price\\\":4496.509918116466,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47400374272954976,\\\"bias\\\":0.02599625727045024,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4476.112038866421,\\\"ask\\\":4539.219358649029,\\\"price\\\":4507.665698757725,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4746487063766541,\\\"bias\\\":0.025351293623345927,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4497.968389125183,\\\"ask\\\":4561.3838548328895,\\\"price\\\":4529.676121979037,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47341083130084416,\\\"bias\\\":0.02658916869915584,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4477.817517307234,\\\"ask\\\":4540.948882103106,\\\"price\\\":4509.38319970517,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47460738504188343,\\\"bias\\\":0.025392614958116566,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4490.082359956772,\\\"ask\\\":4553.386642977311,\\\"price\\\":4521.734501467042,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47391187562079184,\\\"bias\\\":0.026088124379208155,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4504.198045846446,\\\"ask\\\":4567.701341558279,\\\"price\\\":4535.949693702362,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47309173082239836,\\\"bias\\\":0.02690826917760164,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4514.866640343349,\\\"ask\\\":4578.520349270647,\\\"price\\\":4546.693494806998,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4737290771591877,\\\"bias\\\":0.026270922840812283,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4496.290235166191,\\\"ask\\\":4559.682041100054,\\\"price\\\":4527.986138133123,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4748144592887751,\\\"bias\\\":0.02518554071122492,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4494.635765939107,\\\"ask\\\":4558.004246022841,\\\"price\\\":4526.320005980974,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47472175166073993,\\\"bias\\\":0.025278248339260068,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4486.081258345332,\\\"ask\\\":4549.3291310712475,\\\"price\\\":4517.70519470829,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47520378253562273,\\\"bias\\\":0.024796217464377268,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4490.003247203491,\\\"ask\\\":4553.306414837779,\\\"price\\\":4521.654831020635,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4754205652531423,\\\"bias\\\":0.024579434746857698,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4511.458886942866,\\\"ask\\\":4575.064551008526,\\\"price\\\":4543.261718975697,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4742460282475075,\\\"bias\\\":0.0257539717524925,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4497.894514068258,\\\"ask\\\":4561.308938234376,\\\"price\\\":4529.601726151317,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4750226949184584,\\\"bias\\\":0.024977305081541612,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4478.628191336413,\\\"ask\\\":4541.770985574791,\\\"price\\\":4510.199588455602,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4739482122864694,\\\"bias\\\":0.026051787713530616,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4498.926517810557,\\\"ask\\\":4562.355491878379,\\\"price\\\":4530.641004844469,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4727674764234939,\\\"bias\\\":0.027232523576506074,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4513.518377913019,\\\"ask\\\":4577.153078105146,\\\"price\\\":4545.335728009083,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47365073862547086,\\\"bias\\\":0.026349261374529143,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4494.326764407645,\\\"ask\\\":4557.690887974319,\\\"price\\\":4526.008826190982,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47477590122926006,\\\"bias\\\":0.025224098770739944,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4473.963237805312,\\\"ask\\\":4537.040262306092,\\\"price\\\":4505.501750055702,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4759239920360808,\\\"bias\\\":0.024076007963919177,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4476.619221214462,\\\"ask\\\":4539.733691604192,\\\"price\\\":4508.176456409327,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47578106400044035,\\\"bias\\\":0.024218935999559654,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4492.230231722984,\\\"ask\\\":4555.56479692351,\\\"price\\\":4523.897514323247,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4766256345250064,\\\"bias\\\":0.023374365474993608,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4515.266184315804,\\\"ask\\\":4578.925526290044,\\\"price\\\":4547.095855302924,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4754270076800002,\\\"bias\\\":0.02457299231999982,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4501.99405680346,\\\"ask\\\":4565.46627915517,\\\"price\\\":4533.730167979315,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47615143308642205,\\\"bias\\\":0.02384856691357795,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4504.163392136246,\\\"ask\\\":4567.666199276133,\\\"price\\\":4535.91479570619,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4760365161447531,\\\"bias\\\":0.02396348385524688,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4500.073872431344,\\\"ask\\\":4563.519022697244,\\\"price\\\":4531.796447564294,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4758187438543369,\\\"bias\\\":0.024181256145663077,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4482.182826847268,\\\"ask\\\":4545.375736792748,\\\"price\\\":4513.779281820009,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47485352674317644,\\\"bias\\\":0.025146473256823565,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4502.266012432093,\\\"ask\\\":4565.742069002132,\\\"price\\\":4534.004040717113,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.473726796065892,\\\"bias\\\":0.02627320393410798,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4509.404722708757,\\\"ask\\\":4572.981425747953,\\\"price\\\":4541.193074228355,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47414337916073224,\\\"bias\\\":0.025856620839267763,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4495.53887086229,\\\"ask\\\":4558.920083543128,\\\"price\\\":4527.22947720271,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47494088994666117,\\\"bias\\\":0.02505911005333883,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4512.923495264926,\\\"ask\\\":4576.549808390513,\\\"price\\\":4544.7366518277195,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47590994666857084,\\\"bias\\\":0.024090053331429162,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4510.703912581445,\\\"ask\\\":4574.298932496994,\\\"price\\\":4542.50142253922,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4757914067106068,\\\"bias\\\":0.024208593289393177,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4525.104179156702,\\\"ask\\\":4588.902223978649,\\\"price\\\":4557.003201567676,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47501855572429647,\\\"bias\\\":0.024981444275703535,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4515.787776145321,\\\"ask\\\":4579.454471881509,\\\"price\\\":4547.621124013415,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4755339413318936,\\\"bias\\\":0.024466058668106416,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4529.46484863298,\\\"ask\\\":4593.32437318571,\\\"price\\\":4561.394610909345,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4762749505964535,\\\"bias\\\":0.023725049403546528,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4520.067912372168,\\\"ask\\\":4583.794952425754,\\\"price\\\":4551.931432398961,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4757817217747814,\\\"bias\\\":0.024218278225218604,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4498.752650387429,\\\"ask\\\":4562.179173152205,\\\"price\\\":4530.4659117698175,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4769291930525041,\\\"bias\\\":0.023070806947495914,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4511.601212832898,\\\"ask\\\":4575.208883507279,\\\"price\\\":4543.405048170089,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4762702844021102,\\\"bias\\\":0.023729715597889778,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4500.824064702448,\\\"ask\\\":4564.279791697245,\\\"price\\\":4532.551928199847,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4768384884829973,\\\"bias\\\":0.023161511517002686,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4495.983440150209,\\\"ask\\\":4559.370920675992,\\\"price\\\":4527.677180413101,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4765891188338236,\\\"bias\\\":0.0234108811661764,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4520.401010971945,\\\"ask\\\":4584.132747279706,\\\"price\\\":4552.266879125826,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47786055778924647,\\\"bias\\\":0.022139442210753535,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4523.298513770773,\\\"ask\\\":4587.071101074691,\\\"price\\\":4555.184807422732,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4780024679773348,\\\"bias\\\":0.02199753202266519,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4531.132484544686,\\\"ask\\\":4595.015520580562,\\\"price\\\":4563.074002562625,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47838344664243765,\\\"bias\\\":0.02161655335756235,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5202013915233157,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5912.104741928528,\\\"ask\\\":5995.457678874145,\\\"price\\\":5953.7812104013365,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.028622728545148135},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5180372711112986,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5818.043273918836,\\\"ask\\\":5900.070067307418,\\\"price\\\":5859.05667061313,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.021593584273488897},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5016815357130263,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5724.270598132955,\\\"ask\\\":5804.975319556783,\\\"price\\\":5764.622958844871,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.01979329301453925},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48459302865990417,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5708.899305957055,\\\"ask\\\":5789.387312284747,\\\"price\\\":5749.143309120898,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.018827326815329837},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5087972752274748,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5784.177787650722,\\\"ask\\\":5865.727122018409,\\\"price\\\":5824.952454834568,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.01889376174497781},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4979411793506276,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5863.346441830139,\\\"ask\\\":5946.0119505769935,\\\"price\\\":5904.679196203567,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.01801306885886267},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5177649835320329,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6029.601611859838,\\\"ask\\\":6114.611100848798,\\\"price\\\":6072.106356354317,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.022361302615540923},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5153532202786554,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6239.212551869125,\\\"ask\\\":6327.17728069709,\\\"price\\\":6283.194916283108,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.026801628870584904},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.477720528134709,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":6204.865108403195,\\\"ask\\\":6292.3455832447335,\\\"price\\\":6248.605345823961,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.029198889721741283},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5030969489107789,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5894.065061454695,\\\"ask\\\":5977.163662522536,\\\"price\\\":5935.614361988614,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.02029753095045722},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48967054292101475,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5779.3243515616505,\\\"ask\\\":5860.8052588344235,\\\"price\\\":5820.064805198038,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.016425955442973927},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5083617159583331,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5785.752270160027,\\\"ask\\\":5867.323802669841,\\\"price\\\":5826.538036414938,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.02332283617929165},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.496310185616601,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5876.345105422354,\\\"ask\\\":5959.193878308474,\\\"price\\\":5917.769491865413,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.019215757902749875},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48241776466548103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5820.747691693533,\\\"ask\\\":5902.812613832215,\\\"price\\\":5861.7801527628735,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.021102405844310834},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4944122158917269,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5582.848308993747,\\\"ask\\\":5661.559161285702,\\\"price\\\":5622.203735139728,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.028151283422999662},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.49203513356677786,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5523.706827290726,\\\"ask\\\":5601.583862116577,\\\"price\\\":5562.645344703653,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.03833717068819331},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47291036637759987,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5449.740224658935,\\\"ask\\\":5526.574427222102,\\\"price\\\":5488.157325940518,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.037671769991210635},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5085729387993112,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5424.345887850342,\\\"ask\\\":5500.822063509864,\\\"price\\\":5462.583975680103,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.03251516537148602},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4669264007873934,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5431.610841119663,\\\"ask\\\":5508.189443109262,\\\"price\\\":5469.900142114464,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.04258282659632684},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5200213779695512,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5340.681750685778,\\\"ask\\\":5415.97837154137,\\\"price\\\":5378.330061113573,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.04342871395118364},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48589476015202365,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5572.7077524397255,\\\"ask\\\":5651.275636159922,\\\"price\\\":5611.991694299828,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.03702689234359696},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5249617971273797,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5370.430673695586,\\\"ask\\\":5446.146715419387,\\\"price\\\":5408.2886945574855,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.031842058527290384},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5163818097594651,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5348.009602310858,\\\"ask\\\":5423.4095362809985,\\\"price\\\":5385.7095692959265,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.01981416472726183},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48496877413717954,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5406.588486486938,\\\"ask\\\":5482.814306034587,\\\"price\\\":5444.7013962607625,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.01774354124561195},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.49885710052343035,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5439.503816345769,\\\"ask\\\":5516.193698952859,\\\"price\\\":5477.848757649314,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.022016822001324432},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5134854240942859,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5373.124421410842,\\\"ask\\\":5448.878441450876,\\\"price\\\":5411.00143143086,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.015843460131318876},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48314063820474074,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5227.666282149863,\\\"ask\\\":5301.369532854896,\\\"price\\\":5264.51790750238,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.022871272432446965},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4788762308566297,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5190.708462351527,\\\"ask\\\":5263.890656181258,\\\"price\\\":5227.299559266395,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.030436598087510147},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4846427011310162,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5147.824466470053,\\\"ask\\\":5220.402052100044,\\\"price\\\":5184.113259285047,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.020415989490472408},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5026310497956511,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5012.376107202072,\\\"ask\\\":5083.0440482905215,\\\"price\\\":5047.710077746298,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.02062147566773531},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5011288510094775,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5175.789326358426,\\\"ask\\\":5248.761179902247,\\\"price\\\":5212.27525313034,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.020303821983726822},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.503065614636161,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5200.780029194621,\\\"ask\\\":5274.104218931506,\\\"price\\\":5237.442124063065,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.02002637574621885},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5062520476739235,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5119.766299339926,\\\"ask\\\":5191.9483015461265,\\\"price\\\":5155.857300443027,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.02825824540386479},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4672395765021842,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":5034.005483525785,\\\"ask\\\":5104.978370503995,\\\"price\\\":5069.491927014889,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.03932088880968365},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5083646378777236,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4866.695249654216,\\\"ask\\\":4935.309281371397,\\\"price\\\":4901.00226551281,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.04254715517740537},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.47335864995656557,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4619.633894359621,\\\"ask\\\":4684.764684411013,\\\"price\\\":4652.199289385319,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.0469774804136186},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4711882507891293,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4522.92461964021,\\\"ask\\\":4586.691935526374,\\\"price\\\":4554.808277583292,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.03624927927961502},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4789917652471307,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4303.519546829102,\\\"ask\\\":4364.193538425886,\\\"price\\\":4333.856542627495,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.03041482248638644},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4795272324821449,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4018.8359842307964,\\\"ask\\\":4075.4963102924557,\\\"price\\\":4047.1661472616256,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.03157688843836143},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5081765292323702,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3891.600454617498,\\\"ask\\\":3946.466926283805,\\\"price\\\":3919.0336904506526,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.039890223607043473},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4989076584382702,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3889.0446192914455,\\\"ask\\\":3943.8750570256675,\\\"price\\\":3916.459838158555,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.04210166781922864},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5136140389685602,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3967.1368130699157,\\\"ask\\\":4023.06824850091,\\\"price\\\":3995.1025307854125,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.021681319512405928},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5037711683745228,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3820.332416634881,\\\"ask\\\":3874.1941022671963,\\\"price\\\":3847.2632594510383,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.02202968341919831},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5170808156704605,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3848.739815431231,\\\"ask\\\":3903.002008196625,\\\"price\\\":3875.8709118139286,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.02447429204076068},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48663149550892887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3854.204898778129,\\\"ask\\\":3908.5441420640236,\\\"price\\\":3881.3745204210777,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.022954771270788765},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48348783630932723,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3764.663156588162,\\\"ask\\\":3817.739978534017,\\\"price\\\":3791.2015675610896,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.021652252469489874},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5020347627104287,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3705.837719582659,\\\"ask\\\":3758.085179878889,\\\"price\\\":3731.9614497307753,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.018145675642237014},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4913487086808434,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3701.2172190933047,\\\"ask\\\":3753.399536381631,\\\"price\\\":3727.3083777374686,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.019288257131272968},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5198847940947839,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3652.93468150364,\\\"ask\\\":3704.4362782217177,\\\"price\\\":3678.6854798626778,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.02652310977809913},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.521301207118314,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3722.959637489821,\\\"ask\\\":3775.4484944131405,\\\"price\\\":3749.2040659514805,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.027532210126194112},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5247429910981817,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":3875.6434081410403,\\\"ask\\\":3930.284906342424,\\\"price\\\":3902.964157241731,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.03064679301454598},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5088168886073526,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4122.183227305471,\\\"ask\\\":4180.3006141959795,\\\"price\\\":4151.241920750724,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.01994215923257503},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4789333028863261,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4193.861391347335,\\\"ask\\\":4252.989346512353,\\\"price\\\":4223.425368929844,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.024867424783185044},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48226460287831685,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4235.533772066922,\\\"ask\\\":4295.249253244099,\\\"price\\\":4265.39151265551,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.023515273790942703},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5100315499858513,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4183.255312418482,\\\"ask\\\":4242.233735755701,\\\"price\\\":4212.744524087089,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.014041697312898727},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5196585047846639,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4143.146574630191,\\\"ask\\\":4201.55951727352,\\\"price\\\":4172.353045951855,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.024037975083954555},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5139126866753734,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4204.583615611135,\\\"ask\\\":4263.862740101124,\\\"price\\\":4234.223177856127,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.02066249041365853},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48217809413661583,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4296.93032033867,\\\"ask\\\":4357.511412468321,\\\"price\\\":4327.220866403499,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.02434187362489426},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4794848507973852,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4132.542419671962,\\\"ask\\\":4190.805857612958,\\\"price\\\":4161.67413864246,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.023589396783558647},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5034968816367976,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4144.47528785872,\\\"ask\\\":4202.906963619065,\\\"price\\\":4173.691125738893,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.024235958404708546},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5152424204039484,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4376.880809156129,\\\"ask\\\":4438.5890985097885,\\\"price\\\":4407.734953832957,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.017146957710223676},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5063729615708451,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4503.316877285673,\\\"ask\\\":4566.807749674393,\\\"price\\\":4535.062313480033,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.02169121075016167},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5067860585053983,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4547.878698446039,\\\"ask\\\":4611.997834174385,\\\"price\\\":4579.9382663102115,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.023459796098678543},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.49353482009176275,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4641.838357839696,\\\"ask\\\":4707.282201756873,\\\"price\\\":4674.560279798282,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.016925298426822333},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5010117402373796,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4544.671205094265,\\\"ask\\\":4608.7451193654815,\\\"price\\\":4576.708162229874,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.020272545289562793},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48195746253058125,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4361.814642669046,\\\"ask\\\":4423.3105187993215,\\\"price\\\":4392.562580734185,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.02266430785607343},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4829461512365025,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4291.043520088388,\\\"ask\\\":4351.541616041294,\\\"price\\\":4321.292568064841,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.019858965663178185},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.48470571475570395,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4386.368332678743,\\\"ask\\\":4448.21038369335,\\\"price\\\":4417.289358186048,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.023922834854642194},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4796742329098684,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4262.273059601911,\\\"ask\\\":4322.365529727214,\\\"price\\\":4292.319294664562,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.02439351077888058},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.4778149094907884,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4268.382257886077,\\\"ask\\\":4328.560859709246,\\\"price\\\":4298.471558797661,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.02909875056453426},{\\\"volatility\\\":0.0055000000000000005,\\\"forecast\\\":0.5117875230212983,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"RHOC\\\",\\\"bid\\\":4269.627334057311,\\\"ask\\\":4329.823489824483,\\\"price\\\":4299.725411940898,\\\"maxShares\\\":5600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.031902766372924884}],\\\"recentTicksOfPrices\\\":[4533.730167979315,4535.91479570619,4531.796447564294,4513.779281820009,4534.004040717113,4541.193074228355,4527.22947720271,4544.7366518277195,4542.50142253922,4557.003201567676,4547.621124013415,4561.394610909345,4551.931432398961,4530.4659117698175,4543.405048170089,4532.551928199847,4527.677180413101,4552.266879125826,4555.184807422732,4563.074002562625]}],[\\\"APHE\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1506.1332286915922,\\\"ask\\\":1533.489836276303,\\\"price\\\":1519.8115324839478,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3950649564943714,\\\"bias\\\":0.1049350435056286,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1506.9949937672009,\\\"ask\\\":1534.3672539970792,\\\"price\\\":1520.6811238821401,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.39512499723577327,\\\"bias\\\":0.10487500276422673,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1496.7466966194502,\\\"ask\\\":1523.9328121988144,\\\"price\\\":1510.3397544091324,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.39584308146079716,\\\"bias\\\":0.10415691853920284,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1514.869034817557,\\\"ask\\\":1542.3843149656052,\\\"price\\\":1528.6266748915812,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3945819683361092,\\\"bias\\\":0.1054180316638908,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1507.5969160405527,\\\"ask\\\":1534.9801092683324,\\\"price\\\":1521.2885126544427,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3950904679485329,\\\"bias\\\":0.10490953205146708,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1508.8577441182128,\\\"ask\\\":1536.2638383605213,\\\"price\\\":1522.560791239367,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3950027303827305,\\\"bias\\\":0.10499726961726952,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1486.7026160334476,\\\"ask\\\":1513.706296243944,\\\"price\\\":1500.2044561386958,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.39343804089349843,\\\"bias\\\":0.10656195910650157,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1476.2869411779968,\\\"ask\\\":1503.1014365777987,\\\"price\\\":1489.694188877898,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3926862123112261,\\\"bias\\\":0.10731378768877392,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1497.8094456367355,\\\"ask\\\":1525.0148644273117,\\\"price\\\":1511.4121550320237,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.39112170516184164,\\\"bias\\\":0.10887829483815836,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1524.0030100726322,\\\"ask\\\":1551.6841949175434,\\\"price\\\":1537.843602495088,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38921765078441617,\\\"bias\\\":0.11078234921558383,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1540.5266022886992,\\\"ask\\\":1568.507912925628,\\\"price\\\":1554.5172576071636,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3904187785716172,\\\"bias\\\":0.10958122142838278,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1518.3454995457414,\\\"ask\\\":1545.923924360901,\\\"price\\\":1532.1347119533214,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38881793585701174,\\\"bias\\\":0.11118206414298826,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1512.2088518721994,\\\"ask\\\":1539.6758138638236,\\\"price\\\":1525.9423328680116,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3883667513831093,\\\"bias\\\":0.11163324861689072,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1521.325089109281,\\\"ask\\\":1548.9576336137884,\\\"price\\\":1535.1413613615348,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3876937787466393,\\\"bias\\\":0.1123062212533607,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1542.0320637296124,\\\"ask\\\":1570.040718772128,\\\"price\\\":1556.0363912508703,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3861651626146591,\\\"bias\\\":0.11383483738534089,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1528.7913569418795,\\\"ask\\\":1556.5595147874433,\\\"price\\\":1542.6754358646615,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38517925064099146,\\\"bias\\\":0.11482074935900854,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1503.168769925356,\\\"ask\\\":1530.4715326485207,\\\"price\\\":1516.8201512869384,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38322204882798433,\\\"bias\\\":0.11677795117201567,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1479.9197760898717,\\\"ask\\\":1506.8002563821194,\\\"price\\\":1493.3600162359955,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3850565873690477,\\\"bias\\\":0.11494341263095231,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1465.9032804647693,\\\"ask\\\":1492.5291725418285,\\\"price\\\":1479.216226503299,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38615563930633867,\\\"bias\\\":0.11384436069366133,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1481.9908906478217,\\\"ask\\\":1508.90898956978,\\\"price\\\":1495.449940108801,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38490625012713053,\\\"bias\\\":0.11509374987286947,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1469.837496243444,\\\"ask\\\":1496.534847335656,\\\"price\\\":1483.1861717895501,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38585790617023646,\\\"bias\\\":0.11414209382976354,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1448.9399040315266,\\\"ask\\\":1475.2576823085876,\\\"price\\\":1462.0987931700572,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38421167162011327,\\\"bias\\\":0.11578832837988673,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1450.801790101648,\\\"ask\\\":1477.153386692798,\\\"price\\\":1463.9775883972231,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3843604594857062,\\\"bias\\\":0.11563954051429381,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1441.2079369934754,\\\"ask\\\":1467.385275909603,\\\"price\\\":1454.2966064515392,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3851302503928428,\\\"bias\\\":0.11486974960715718,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1436.8228221023132,\\\"ask\\\":1462.920512110226,\\\"price\\\":1449.8716671062696,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3854808274033119,\\\"bias\\\":0.11451917259668809,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1460.7910855755051,\\\"ask\\\":1487.324122447714,\\\"price\\\":1474.0576040116096,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38357048351170164,\\\"bias\\\":0.11642951648829836,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1445.5726879496383,\\\"ask\\\":1471.829305894233,\\\"price\\\":1458.7009969219357,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3823447612134895,\\\"bias\\\":0.11765523878651052,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1424.18524603941,\\\"ask\\\":1450.0533937979462,\\\"price\\\":1437.1193199186782,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3841116272809329,\\\"bias\\\":0.1158883727190671,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1446.7183097891966,\\\"ask\\\":1472.9957362031275,\\\"price\\\":1459.8570229961622,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38594518095493674,\\\"bias\\\":0.11405481904506326,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1430.52130808643,\\\"ask\\\":1456.5045407257394,\\\"price\\\":1443.5129244060847,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3846538013104401,\\\"bias\\\":0.11534619868955992,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1409.5099783741643,\\\"ask\\\":1435.1115723305063,\\\"price\\\":1422.3107753523354,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38637324781944477,\\\"bias\\\":0.11362675218055523,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1387.4644263944854,\\\"ask\\\":1412.6655966014487,\\\"price\\\":1400.0650114979671,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3881786739073684,\\\"bias\\\":0.11182132609263162,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1384.5950055651667,\\\"ask\\\":1409.7440571294178,\\\"price\\\":1397.1695313472924,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38794693651053935,\\\"bias\\\":0.11205306348946065,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1367.9422099916512,\\\"ask\\\":1392.7887889824178,\\\"price\\\":1380.3654994870346,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38931102685444896,\\\"bias\\\":0.11068897314555104,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1392.4300489027266,\\\"ask\\\":1417.7214120513129,\\\"price\\\":1405.0757304770198,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3873295588334884,\\\"bias\\\":0.11267044116651159,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1406.7600939052209,\\\"ask\\\":1432.3117404140946,\\\"price\\\":1419.5359171596579,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38617002303229014,\\\"bias\\\":0.11382997696770986,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1409.1264513778015,\\\"ask\\\":1434.7210791525747,\\\"price\\\":1421.9237652651882,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3863615001844842,\\\"bias\\\":0.11363849981551583,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1404.6702420518372,\\\"ask\\\":1430.1839295966736,\\\"price\\\":1417.4270858242555,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3860009907015419,\\\"bias\\\":0.11399900929845808,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1385.3661549889334,\\\"ask\\\":1410.5292133035657,\\\"price\\\":1397.9476841462497,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3844124959973388,\\\"bias\\\":0.11558750400266121,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1407.035518090606,\\\"ask\\\":1432.5921672587501,\\\"price\\\":1419.8138426746782,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":1587.8202235701356,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38260452083840346,\\\"bias\\\":0.11739547916159654,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1399.2902766448558,\\\"ask\\\":1424.706245342744,\\\"price\\\":1411.9982609938,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.39136915246821613,\\\"bias\\\":0.10863084753178387,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1384.384314717596,\\\"ask\\\":1409.5295394046966,\\\"price\\\":1396.9569270611464,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3925388040311675,\\\"bias\\\":0.10746119596883252,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1365.9445588610022,\\\"ask\\\":1390.7548535729072,\\\"price\\\":1378.3497062169547,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3939894911801211,\\\"bias\\\":0.10601050881987889,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1363.6022010338677,\\\"ask\\\":1388.3699503967432,\\\"price\\\":1375.9860757153056,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3941715930753106,\\\"bias\\\":0.10582840692468942,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1348.5728864723535,\\\"ask\\\":1373.0676513124163,\\\"price\\\":1360.820268892385,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.39535100905880677,\\\"bias\\\":0.10464899094119323,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1358.28531210476,\\\"ask\\\":1382.956488308479,\\\"price\\\":1370.6209002066196,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3961046913789974,\\\"bias\\\":0.1038953086210026,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1344.0744155335776,\\\"ask\\\":1368.4874725261147,\\\"price\\\":1356.2809440298463,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.39500620645287965,\\\"bias\\\":0.10499379354712035,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1334.3902385766567,\\\"ask\\\":1358.6273972995423,\\\"price\\\":1346.5088179380996,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3942442266011885,\\\"bias\\\":0.10575577339881148,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1356.4611340982362,\\\"ask\\\":1381.0991768971949,\\\"price\\\":1368.7801554977157,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6040065664891605,\\\"bias\\\":0.10400656648916051,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1343.0705418134435,\\\"ask\\\":1367.465364974535,\\\"price\\\":1355.2679533939893,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6029696071609356,\\\"bias\\\":0.10296960716093562,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1331.936982370708,\\\"ask\\\":1356.1295814450496,\\\"price\\\":1344.0332819078787,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6021088920841,\\\"bias\\\":0.10210889208410001,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1336.9430753681859,\\\"ask\\\":1361.2266024687178,\\\"price\\\":1349.0848389184519,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.601725115211464,\\\"bias\\\":0.10172511521146399,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1312.0675373404868,\\\"ask\\\":1335.899238321444,\\\"price\\\":1323.9833878309655,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6036537255152781,\\\"bias\\\":0.10365372551527807,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1315.0034398519267,\\\"ask\\\":1338.8884670137174,\\\"price\\\":1326.945953432822,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6038856626864981,\\\"bias\\\":0.10388566268649813,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":true,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1307.1007615355884,\\\"ask\\\":1330.842248627052,\\\"price\\\":1318.9715050813202,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6045137511996795,\\\"bias\\\":0.10451375119967954,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5807352130920103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":12362.352199903358,\\\"ask\\\":12586.895428559525,\\\"price\\\":12474.623814231441,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.08532329055290722},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4249690340098959,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":10285.244146664543,\\\"ask\\\":10472.059882930898,\\\"price\\\":10378.65201479772,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.0841907250190117},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4191943009089355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":8388.160602808792,\\\"ask\\\":8540.51871668423,\\\"price\\\":8464.33965974651,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.08799589377369338},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4238070724131669,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":7427.291934519766,\\\"ask\\\":7562.19733797219,\\\"price\\\":7494.744636245977,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.0817625923448812},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.41817501393508977,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":6484.185276837914,\\\"ask\\\":6601.960589636183,\\\"price\\\":6543.072933237045,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.08689936786776398},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.49001013493255546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":6099.883568835072,\\\"ask\\\":6210.678628612095,\\\"price\\\":6155.281098723585,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.08695588534247878},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.47328744054021654,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":6265.786467908399,\\\"ask\\\":6379.594900221568,\\\"price\\\":6322.690684064986,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.08113519685765802},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.449806363945004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5420.4545760385445,\\\"ask\\\":5518.908846844493,\\\"price\\\":5469.68171144152,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.08153564008168657},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5783333054342159,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4739.338068631053,\\\"ask\\\":4825.420899342818,\\\"price\\\":4782.379483986936,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.08529856460795249},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4760345562070998,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4008.6818100233445,\\\"ask\\\":4081.493386794707,\\\"price\\\":4045.0875984090258,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.08268923125556527},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5389848610641486,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3950.3332436329943,\\\"ask\\\":4022.0850078967615,\\\"price\\\":3986.2091257648785,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.08256477997617123},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.41509067057366084,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3615.675210428711,\\\"ask\\\":3681.348423130746,\\\"price\\\":3648.511816779731,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.0967325377710162},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5139221087999281,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3240.880282246473,\\\"ask\\\":3299.7459180491355,\\\"price\\\":3270.313100147803,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.10089912808124674},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4382773872666101,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3891.3169600853435,\\\"ask\\\":3961.9967837801337,\\\"price\\\":3926.656871932739,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.09201029125615923},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4105687361835675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3371.765377186382,\\\"ask\\\":3433.008340646882,\\\"price\\\":3402.3868589166323,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.09509785843427315},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.41043472133324777,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2694.641990612629,\\\"ask\\\":2743.5860429143736,\\\"price\\\":2719.1140167635017,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.09369014214740612},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4116737259386667,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2215.4294231160306,\\\"ask\\\":2255.6693117296413,\\\"price\\\":2235.5493674228355,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.09313624966269951},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.46523487576621675,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1795.528925120232,\\\"ask\\\":1828.1419631143424,\\\"price\\\":1811.835444117287,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.09960401283431664},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.597504105318488,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1960.3166092352853,\\\"ask\\\":1995.92276359072,\\\"price\\\":1978.1196864130025,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.10611076806309672},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5900597559706666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2196.1465016285892,\\\"ask\\\":2236.036145452318,\\\"price\\\":2216.0913235404537,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.0992606726157148},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5439881557949454,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2325.8588794917964,\\\"ask\\\":2368.1045503604664,\\\"price\\\":2346.981714926131,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.10766906753749117},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.503368476605382,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2021.7773878177045,\\\"ask\\\":2058.499883257382,\\\"price\\\":2040.1386355375437,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.09791830892801184},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.592079008219914,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2357.916638932766,\\\"ask\\\":2400.7445899931004,\\\"price\\\":2379.3306144629328,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.10571514090022793},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4448315832686404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2327.6391815750317,\\\"ask\\\":2369.91718890939,\\\"price\\\":2348.778185242212,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":1927601.25,\\\"averageShortPrice\\\":1990.9736339404628,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.11215916515653102},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5862523888385093,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2355.263880975153,\\\"ask\\\":2398.043648742612,\\\"price\\\":2376.6537648588824,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.09197665346098982},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5922411417857806,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2716.1287598122303,\\\"ask\\\":2765.4630864283954,\\\"price\\\":2740.795923120313,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.09651252662644627},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5581659932133656,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3472.5194045047947,\\\"ask\\\":3535.5924108429235,\\\"price\\\":3504.0559076738577,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":557158.98,\\\"averageShortPrice\\\":789.2764805970804,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.11562431574672516},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.49080809033949563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3044.8936480487214,\\\"ask\\\":3100.199486257477,\\\"price\\\":3072.5465671531,\\\"maxShares\\\":9800000,\\\"investedShares\\\":1826513.15,\\\"averagePrice\\\":1246.4695982766652,\\\"sharesShort\\\":1459225.9,\\\"averageShortPrice\\\":2067.1526872780673,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.1264943630183445},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6102865300295458,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3417.9598703097267,\\\"ask\\\":3480.0418861175713,\\\"price\\\":3449.0008782136483,\\\"maxShares\\\":9800000,\\\"investedShares\\\":4247705,\\\"averagePrice\\\":2898.7665076201465,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.11658389105899492},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6109869434367966,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3838.8517986478105,\\\"ask\\\":3908.578672891662,\\\"price\\\":3873.715235769734,\\\"maxShares\\\":9800000,\\\"investedShares\\\":4247705,\\\"averagePrice\\\":2898.7665076201465,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.12158657412181417},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5138102720241541,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4269.3889052010645,\\\"ask\\\":4346.9358277980555,\\\"price\\\":4308.162366499562,\\\"maxShares\\\":9800000,\\\"investedShares\\\":2463668.9,\\\"averagePrice\\\":1681.2845744196861,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.1047524353276485},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.40067952756180736,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3447.771079718834,\\\"ask\\\":3510.394570571446,\\\"price\\\":3479.0828251451403,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.10661993412194415},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5499825230575798,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3060.1876638418225,\\\"ask\\\":3115.7712944665986,\\\"price\\\":3087.979479154212,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.10705709976706157},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3993828839443829,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3520.5377200933563,\\\"ask\\\":3584.4829057257266,\\\"price\\\":3552.510312909541,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.10742617855828945},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38655844096539055,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2917.5136284810633,\\\"ask\\\":2970.5058033677033,\\\"price\\\":2944.009715924385,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":6174000,\\\"averageShortPrice\\\":1882.946954243228,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.133778331773107},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.36406377999835676,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2443.173289197981,\\\"ask\\\":2487.5497969735243,\\\"price\\\":2465.361543085752,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":2988.8046892749653,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.14827846244478493},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3688348845040028,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2119.9854887871306,\\\"ask\\\":2158.4917842444124,\\\"price\\\":2139.238636515772,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":2988.8046892749653,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.14261640647430746},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5192368333032585,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1619.7938063328686,\\\"ask\\\":1649.2148845508218,\\\"price\\\":1634.5043454418453,\\\"maxShares\\\":9800000,\\\"investedShares\\\":5782000,\\\"averagePrice\\\":948.805156548704,\\\"sharesShort\\\":3332000,\\\"averageShortPrice\\\":742.2137424201991,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.13088147083254426},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6151123034905872,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1742.4345953636316,\\\"ask\\\":1774.0832560261395,\\\"price\\\":1758.258925694885,\\\"maxShares\\\":9800000,\\\"investedShares\\\":9800000,\\\"averagePrice\\\":1608.1443331333958,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.12104278659457857},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6198065371719905,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2330.8009228142837,\\\"ask\\\":2373.136358344713,\\\"price\\\":2351.9686405794987,\\\"maxShares\\\":9800000,\\\"investedShares\\\":9800000,\\\"averagePrice\\\":1608.1443331333958,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.13467957463792135},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6436734978047527,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2744.6083172349595,\\\"ask\\\":2794.4599314733323,\\\"price\\\":2769.5341243541443,\\\"maxShares\\\":9800000,\\\"investedShares\\\":9800000,\\\"averagePrice\\\":1608.1443331333958,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.15932567988924606},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.648703967417009,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3585.2535445980425,\\\"ask\\\":3650.374194247654,\\\"price\\\":3617.8138694228505,\\\"maxShares\\\":9800000,\\\"investedShares\\\":9800000,\\\"averagePrice\\\":1608.1443331333958,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.16163699560931444},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5514363882851131,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5122.664814713227,\\\"ask\\\":5215.710189753427,\\\"price\\\":5169.187502233329,\\\"maxShares\\\":9800000,\\\"investedShares\\\":5782000,\\\"averagePrice\\\":1614.4017293881066,\\\"sharesShort\\\":2842000,\\\"averageShortPrice\\\":1563.510983144799,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.1310899846143777},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5101500961834575,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5059.687370163732,\\\"ask\\\":5151.588856201019,\\\"price\\\":5105.638113182375,\\\"maxShares\\\":9800000,\\\"investedShares\\\":5292000,\\\"averagePrice\\\":2762.5074441899615,\\\"sharesShort\\\":4508000,\\\"averageShortPrice\\\":2480.051904298647,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.11645571210020345},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4561733803417024,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5036.890403558898,\\\"ask\\\":5128.377817548867,\\\"price\\\":5082.634110553883,\\\"maxShares\\\":9800000,\\\"investedShares\\\":2156000,\\\"averagePrice\\\":1125.4659957810939,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.10549322129235705},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5884668561736944,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5207.135713162441,\\\"ask\\\":5301.71537293734,\\\"price\\\":5254.4255430498915,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.0932421504499098},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5864035622057735,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":5236.732807236404,\\\"ask\\\":5331.850052978338,\\\"price\\\":5284.2914301073715,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.096304817345787},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.45094453156452047,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4941.5412471971495,\\\"ask\\\":5031.296789527672,\\\"price\\\":4986.419018362413,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7350000,\\\"averageShortPrice\\\":4020.4556888344673,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.10300368934509796},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4454437280840142,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3715.9178477479186,\\\"ask\\\":3783.4118147100385,\\\"price\\\":3749.664831228979,\\\"maxShares\\\":9800000,\\\"investedShares\\\":2352000,\\\"averagePrice\\\":787.1441248057687,\\\"sharesShort\\\":7448000,\\\"averageShortPrice\\\":4074.0617646855935,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.11046601131061279},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6000916024134826,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3651.039617527407,\\\"ask\\\":3717.355170620739,\\\"price\\\":3684.1973940740736,\\\"maxShares\\\":9800000,\\\"investedShares\\\":9800000,\\\"averagePrice\\\":3279.7671866907035,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.10487236248939025},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6080591285484409,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4343.581451922095,\\\"ask\\\":4422.475968707764,\\\"price\\\":4383.0287103149285,\\\"maxShares\\\":9800000,\\\"investedShares\\\":9800000,\\\"averagePrice\\\":3279.7671866907035,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.12139395350821647},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3956699013619162,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":4533.090281052765,\\\"ask\\\":4615.426936006299,\\\"price\\\":4574.2586085295325,\\\"maxShares\\\":9800000,\\\"investedShares\\\":392000,\\\"averagePrice\\\":131.19068746762807,\\\"sharesShort\\\":9310000,\\\"averageShortPrice\\\":4664.821592257024,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.1200998249292124},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3776136706714681,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":3280.0517431991257,\\\"ask\\\":3339.6288687062765,\\\"price\\\":3309.840305952701,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":4910.338518165288,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.12930349990215256},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5399779979240333,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2848.091178604296,\\\"ask\\\":2899.8224008191064,\\\"price\\\":2873.956789711701,\\\"maxShares\\\":9800000,\\\"investedShares\\\":6762000,\\\"averagePrice\\\":1898.688144299765,\\\"sharesShort\\\":3038000,\\\"averageShortPrice\\\":1522.2049406312417,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.12537084921486796},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.4210524667910449,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2812.796709661196,\\\"ask\\\":2863.886861804388,\\\"price\\\":2838.3417857327922,\\\"maxShares\\\":9800000,\\\"investedShares\\\":686000,\\\"averagePrice\\\":192.6205363782371,\\\"sharesShort\\\":9016000,\\\"averageShortPrice\\\":2819.137785856542,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.1104380497086822},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.40515919109565074,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2538.684465161151,\\\"ask\\\":2584.7957874345107,\\\"price\\\":2561.7401262978315,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":3064.2802020179806,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.10291334253977541},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.40387782127480554,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2263.7679457018353,\\\"ask\\\":2304.8858296802737,\\\"price\\\":2284.3268876910543,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":3064.2802020179806,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.10304771083679087},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.39192806307712913,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2082.3039413042357,\\\"ask\\\":2120.1258090574897,\\\"price\\\":2101.214875180862,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":3064.2802020179806,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.11470200779532291},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.3781681937704191,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1564.1407190305094,\\\"ask\\\":1592.5509439977632,\\\"price\\\":1578.345831514137,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":3064.2802020179806,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.1419121710847926},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5234612562788774,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1388.6523363807394,\\\"ask\\\":1413.8750831565744,\\\"price\\\":1401.263709768657,\\\"maxShares\\\":9800000,\\\"investedShares\\\":6076000,\\\"averagePrice\\\":794.0031660045726,\\\"sharesShort\\\":3626000,\\\"averageShortPrice\\\":1133.7836747466529,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.14540976154073815},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6159867291921692,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1877.0542273507538,\\\"ask\\\":1911.148047827358,\\\"price\\\":1894.1011375890562,\\\"maxShares\\\":9800000,\\\"investedShares\\\":9800000,\\\"averagePrice\\\":1280.650267749311,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.12420416184494942},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5344992542694099,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2157.0533363451946,\\\"ask\\\":2196.232912585571,\\\"price\\\":2176.6431244653827,\\\"maxShares\\\":9800000,\\\"investedShares\\\":6272000,\\\"averagePrice\\\":819.6161713595588,\\\"sharesShort\\\":3528000,\\\"averageShortPrice\\\":808.4886581275653,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.12634149272110384},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5257805736869426,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1881.617642185072,\\\"ask\\\":1915.7943501157808,\\\"price\\\":1898.7059961504274,\\\"maxShares\\\":9800000,\\\"investedShares\\\":5880000,\\\"averagePrice\\\":1002.7974723935595,\\\"sharesShort\\\":3920000,\\\"averageShortPrice\\\":898.3207312528504,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.13273391110032828},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.6340888435626529,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2265.7368051088506,\\\"ask\\\":2306.890450408507,\\\"price\\\":2286.313627758679,\\\"maxShares\\\":9800000,\\\"investedShares\\\":9800000,\\\"averagePrice\\\":1671.329120655931,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.14496852960406925},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5485911243869296,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2869.121759409713,\\\"ask\\\":2921.234969974167,\\\"price\\\":2895.1783646919394,\\\"maxShares\\\":9800000,\\\"investedShares\\\":6566000,\\\"averagePrice\\\":1119.790510839475,\\\"sharesShort\\\":3136000,\\\"averageShortPrice\\\":1005.2404907832653,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.16580775094166222},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.35211339308934064,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2274.0370303805,\\\"ask\\\":2315.3414365831723,\\\"price\\\":2294.689233481838,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":3141.3765336977067,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.16362554372975052},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5853197626913126,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1945.8008286550682,\\\"ask\\\":1981.1433260473905,\\\"price\\\":1963.4720773512297,\\\"maxShares\\\":9800000,\\\"investedShares\\\":7938000,\\\"averagePrice\\\":1389.0572749500225,\\\"sharesShort\\\":1862000,\\\"averageShortPrice\\\":596.8615414025633,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.14242971398885151},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5572795894394479,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2426.487422894058,\\\"ask\\\":2470.5608574168564,\\\"price\\\":2448.5241401554567,\\\"maxShares\\\":9800000,\\\"investedShares\\\":6860000,\\\"averagePrice\\\":1200.4198672407606,\\\"sharesShort\\\":2842000,\\\"averageShortPrice\\\":761.1102699523893,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.1623461178597831},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.36092900912413306,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":2077.8590727904566,\\\"ask\\\":2115.6002063022906,\\\"price\\\":2096.729639546373,\\\"maxShares\\\":9800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":9800000,\\\"averageShortPrice\\\":2624.5181722496122,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.15393158272880497},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.38483864637787685,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1366.2289984937775,\\\"ask\\\":1391.0444596167717,\\\"price\\\":1378.6367290552744,\\\"maxShares\\\":9800000,\\\"investedShares\\\":294000,\\\"averagePrice\\\":37.694718460646634,\\\"sharesShort\\\":9506000,\\\"averageShortPrice\\\":2545.782627082124,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.13699649576680129},{\\\"volatility\\\":0.0192,\\\"forecast\\\":0.5569054852374475,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"APHE\\\",\\\"bid\\\":1455.8568715956758,\\\"ask\\\":1482.3002860141648,\\\"price\\\":1469.0785788049207,\\\"maxShares\\\":9800000,\\\"investedShares\\\":7154000,\\\"averagePrice\\\":917.2381492090692,\\\"sharesShort\\\":2548000,\\\"averageShortPrice\\\":412.833258128235,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.12857812797166923}],\\\"recentTicksOfPrices\\\":[1419.5359171596579,1421.9237652651882,1417.4270858242555,1397.9476841462497,1419.8138426746782,1411.9982609938,1396.9569270611464,1378.3497062169547,1375.9860757153056,1360.820268892385,1370.6209002066196,1356.2809440298463,1346.5088179380996,1368.7801554977157,1355.2679533939893,1344.0332819078787,1349.0848389184519,1323.9833878309655,1326.945953432822,1318.9715050813202]}],[\\\"SYSC\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15804.788247418179,\\\"ask\\\":16059.704186892664,\\\"price\\\":15932.246217155422,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5515994015800753,\\\"bias\\\":0.051599401580075255,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15812.13571283634,\\\"ask\\\":16067.17015981757,\\\"price\\\":15939.652936326955,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5515754136080271,\\\"bias\\\":0.05157541360802709,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15724.65588477722,\\\"ask\\\":15978.279366789755,\\\"price\\\":15851.467625783487,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5518623393345783,\\\"bias\\\":0.05186233933457829,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15879.34880661034,\\\"ask\\\":16135.467335749216,\\\"price\\\":16007.408071179778,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.551352138229794,\\\"bias\\\":0.05135213822979401,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15941.58338926505,\\\"ask\\\":16198.70570199513,\\\"price\\\":16070.14454563009,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5515533983022365,\\\"bias\\\":0.051553398302236486,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15930.758325824485,\\\"ask\\\":16187.706040757137,\\\"price\\\":16059.232183290811,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5515183674019,\\\"bias\\\":0.05151836740189997,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16123.64844369616,\\\"ask\\\":16383.707289562228,\\\"price\\\":16253.677866629194,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5508945814051844,\\\"bias\\\":0.050894581405184436,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16031.74731090029,\\\"ask\\\":16290.32388043094,\\\"price\\\":16161.035595665615,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.550602830943204,\\\"bias\\\":0.05060283094320395,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16221.647875944056,\\\"ask\\\":16483.287357814123,\\\"price\\\":16352.467616879088,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5512022357368658,\\\"bias\\\":0.051202235736865775,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15994.384765989886,\\\"ask\\\":16252.358713828431,\\\"price\\\":16123.371739909158,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5504747067008687,\\\"bias\\\":0.05047470670086873,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16135.284298682473,\\\"ask\\\":16395.530819628962,\\\"price\\\":16265.407559155718,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5509193541625248,\\\"bias\\\":0.0509193541625248,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15946.011600910533,\\\"ask\\\":16203.20533640909,\\\"price\\\":16074.608468659811,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.55152374626836,\\\"bias\\\":0.05152374626835998,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15998.5884867576,\\\"ask\\\":16256.630236544015,\\\"price\\\":16127.609361650808,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5513538631531482,\\\"bias\\\":0.05135386315314816,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15920.607835659317,\\\"ask\\\":16177.39183300866,\\\"price\\\":16048.999834333988,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5511023270480929,\\\"bias\\\":0.05110232704809292,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16096.67470336038,\\\"ask\\\":16356.298488898452,\\\"price\\\":16226.486596129416,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5505371836346963,\\\"bias\\\":0.05053718363469628,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16209.946681967867,\\\"ask\\\":16471.397434902832,\\\"price\\\":16340.67205843535,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5508928127872416,\\\"bias\\\":0.05089281278724156,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16434.448668626155,\\\"ask\\\":16699.520421345933,\\\"price\\\":16566.984544986044,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5515976601134868,\\\"bias\\\":0.051597660113486765,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16227.321909511935,\\\"ask\\\":16489.05290805245,\\\"price\\\":16358.187408782193,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5522562565335726,\\\"bias\\\":0.052256256533572576,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16102.225912099959,\\\"ask\\\":16361.939233262863,\\\"price\\\":16232.082572681411,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5518502848022251,\\\"bias\\\":0.05185028480222509,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16245.806425778414,\\\"ask\\\":16507.835561678065,\\\"price\\\":16376.820993728239,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5523126240196052,\\\"bias\\\":0.052312624019605236,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16137.392517205431,\\\"ask\\\":16397.673041676488,\\\"price\\\":16267.532779440959,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5519611783922136,\\\"bias\\\":0.05196117839221359,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15950.478035778264,\\\"ask\\\":16207.743810548882,\\\"price\\\":16079.110923163573,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5513522752175413,\\\"bias\\\":0.051352275217541266,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15967.131316488503,\\\"ask\\\":16224.665692560899,\\\"price\\\":16095.898504524701,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5514058901532435,\\\"bias\\\":0.05140589015324348,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16053.49212233599,\\\"ask\\\":16312.419414631733,\\\"price\\\":16182.955768483862,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5516839272039163,\\\"bias\\\":0.05168392720391635,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16093.300148837803,\\\"ask\\\":16352.869506077124,\\\"price\\\":16223.084827457464,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5518120884244265,\\\"bias\\\":0.05181208842442653,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15878.093797085397,\\\"ask\\\":16134.192084135162,\\\"price\\\":16006.14294061028,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5525143320733803,\\\"bias\\\":0.0525143320733803,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15743.429734359388,\\\"ask\\\":15997.356020397443,\\\"price\\\":15870.392877378416,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5520651419396123,\\\"bias\\\":0.052065141939612314,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15553.650769411617,\\\"ask\\\":15804.516104402128,\\\"price\\\":15679.083436906873,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5527004184347352,\\\"bias\\\":0.05270041843473516,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15356.243957118897,\\\"ask\\\":15603.925311265977,\\\"price\\\":15480.084634192437,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5520229466754466,\\\"bias\\\":0.0520229466754466,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15497.513542090404,\\\"ask\\\":15747.473437930574,\\\"price\\\":15622.493490010489,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5515443621917436,\\\"bias\\\":0.05154436219174363,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15312.056944338057,\\\"ask\\\":15559.025604730608,\\\"price\\\":15435.541274534333,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5521686572867883,\\\"bias\\\":0.05216865728678832,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15509.733891544209,\\\"ask\\\":15759.890889794922,\\\"price\\\":15634.812390669566,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5514951657402388,\\\"bias\\\":0.051495165740238824,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15483.66223990746,\\\"ask\\\":15733.398727647904,\\\"price\\\":15608.530483777682,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5515818741688622,\\\"bias\\\":0.051581874168862174,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15332.012408478491,\\\"ask\\\":15579.302931195885,\\\"price\\\":15455.657669837188,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5510716748346787,\\\"bias\\\":0.05107167483467867,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15112.209195950007,\\\"ask\\\":15355.954505562102,\\\"price\\\":15234.081850756054,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5518144992657276,\\\"bias\\\":0.051814499265727565,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":14986.892444691133,\\\"ask\\\":15228.616516379701,\\\"price\\\":15107.754480535417,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5513812390191454,\\\"bias\\\":0.051381239019145375,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15007.375525195219,\\\"ask\\\":15249.429969149982,\\\"price\\\":15128.4027471726,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.551451463454205,\\\"bias\\\":0.05145146345420504,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15046.058451534,\\\"ask\\\":15288.736813655518,\\\"price\\\":15167.397632594759,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5513188424527862,\\\"bias\\\":0.05131884245278617,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15216.404007667657,\\\"ask\\\":15461.829878759072,\\\"price\\\":15339.116943213365,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5507378307023723,\\\"bias\\\":0.050737830702372255,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15025.44841392598,\\\"ask\\\":15267.794356086077,\\\"price\\\":15146.621385006029,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5513826482359346,\\\"bias\\\":0.051382648235934636,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":14958.177211858307,\\\"ask\\\":15199.438134630214,\\\"price\\\":15078.80767324426,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5516137307042925,\\\"bias\\\":0.05161373070429254,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15089.036749445704,\\\"ask\\\":15332.408309920635,\\\"price\\\":15210.72252968317,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5520652662649068,\\\"bias\\\":0.05206526626490682,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15254.540172313327,\\\"ask\\\":15500.58114283451,\\\"price\\\":15377.560657573918,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5514941907269225,\\\"bias\\\":0.05149419072692252,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15233.279239285344,\\\"ask\\\":15478.977291531883,\\\"price\\\":15356.128265408614,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5514223208082282,\\\"bias\\\":0.05142232080822817,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15371.216476550815,\\\"ask\\\":15619.139322946796,\\\"price\\\":15495.177899748805,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5509566920519605,\\\"bias\\\":0.05095669205196052,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15281.793119782835,\\\"ask\\\":15528.273653972881,\\\"price\\\":15405.033386877858,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.551254871618806,\\\"bias\\\":0.05125487161880604,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15413.072298142908,\\\"ask\\\":15661.670238435536,\\\"price\\\":15537.371268289222,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5516951797279609,\\\"bias\\\":0.051695179727960894,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15503.957347101448,\\\"ask\\\":15754.021175280504,\\\"price\\\":15628.989261190976,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5520000066209784,\\\"bias\\\":0.05200000662097837,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15298.365681014064,\\\"ask\\\":15545.113514578807,\\\"price\\\":15421.739597796435,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4486988110318792,\\\"bias\\\":0.0513011889681208,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15422.293660969603,\\\"ask\\\":15671.040332920724,\\\"price\\\":15546.666996945163,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.44911438828050165,\\\"bias\\\":0.05088561171949835,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15318.257792189042,\\\"ask\\\":15565.326466256609,\\\"price\\\":15441.792129222826,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.44945998429380074,\\\"bias\\\":0.05054001570619926,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15365.036473963515,\\\"ask\\\":15612.85964289841,\\\"price\\\":15488.948058430962,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4496143226881319,\\\"bias\\\":0.050385677311868104,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15131.940756652737,\\\"ask\\\":15376.004317243911,\\\"price\\\":15253.972536948324,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4488381707203127,\\\"bias\\\":0.05116182927968732,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15104.479868182802,\\\"ask\\\":15348.100511218008,\\\"price\\\":15226.290189700405,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4487451553169338,\\\"bias\\\":0.05125484468306618,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15030.644201511417,\\\"ask\\\":15273.073946697086,\\\"price\\\":15151.859074104252,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.44899693664956175,\\\"bias\\\":0.05100306335043825,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4767752754299165,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4832.98643901463,\\\"ask\\\":4910.937833192285,\\\"price\\\":4871.96213610346,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.03868421582265713},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5106297203943906,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4463.698612388898,\\\"ask\\\":4535.693751298395,\\\"price\\\":4499.696181843647,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.046898560249142296},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.46049569412506086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4421.087978809108,\\\"ask\\\":4492.395849435061,\\\"price\\\":4456.741914122086,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.054188199162645445},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4473045519364661,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4074.399818633884,\\\"ask\\\":4140.115944740883,\\\"price\\\":4107.257881687383,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.055510128630890554},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5260273703262155,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":3833.5588501702437,\\\"ask\\\":3895.39044452783,\\\"price\\\":3864.4746473490372,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.05484605269431497},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4455518828159666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":3666.5298778263245,\\\"ask\\\":3725.667456500943,\\\"price\\\":3696.098667163633,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.05836253976132638},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5204342520793488,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":3684.679834054118,\\\"ask\\\":3744.110153958216,\\\"price\\\":3714.394994006168,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.06271019967469871},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5574044325275039,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4172.595616970979,\\\"ask\\\":4239.895546276964,\\\"price\\\":4206.245581623972,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.060760791103468215},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5123919384267583,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4641.674714226285,\\\"ask\\\":4716.540435423484,\\\"price\\\":4679.107574824885,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.058327768328063634},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4483506975476333,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4151.751466032019,\\\"ask\\\":4218.71519935512,\\\"price\\\":4185.233332693565,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.05538745085927277},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5289532540374551,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4269.681875789733,\\\"ask\\\":4338.547712496019,\\\"price\\\":4304.114794142875,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.060702728390462424},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4885707242692214,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4367.034387068845,\\\"ask\\\":4437.470425569953,\\\"price\\\":4402.252406319396,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.058312620051046204},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4895939864422064,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4611.238828379111,\\\"ask\\\":4685.61364819168,\\\"price\\\":4648.426238285396,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.057977994025122825},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4472758312104224,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5443.1482668473545,\\\"ask\\\":5530.940980828763,\\\"price\\\":5487.044623838059,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.05659906554609073},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4808829076231716,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5692.064727783272,\\\"ask\\\":5783.872223392683,\\\"price\\\":5737.968475587979,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.04892415116654597},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.48819429910864387,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":6221.817698534404,\\\"ask\\\":6322.169596897864,\\\"price\\\":6271.99364771613,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.024514718999499918},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5060930514836255,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":6359.757671433406,\\\"ask\\\":6462.334408069433,\\\"price\\\":6411.046039751419,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.028362999522460464},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.49594063110613235,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5594.238027844186,\\\"ask\\\":5684.467673454574,\\\"price\\\":5639.352850649376,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.024321948991327558},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5035090120902977,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4553.900258803689,\\\"ask\\\":4627.3502629779405,\\\"price\\\":4590.625260890811,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.025994837285361116},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5082264959478278,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4468.947676735438,\\\"ask\\\":4541.027477973106,\\\"price\\\":4504.987577354276,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.026201982598044404},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4952622695386377,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4961.257336250862,\\\"ask\\\":5041.277615867813,\\\"price\\\":5001.267476059339,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.024820617068580852},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5263124456072787,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5123.250200627687,\\\"ask\\\":5205.883268379743,\\\"price\\\":5164.5667345037145,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.042789902679822966},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5179139158409108,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5167.56299832369,\\\"ask\\\":5250.910788619237,\\\"price\\\":5209.236893471461,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.02927029194507258},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4772023610718137,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5324.5596064194715,\\\"ask\\\":5410.439600071397,\\\"price\\\":5367.499603245434,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.03970803495018749},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4499285734287261,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4788.8548832007455,\\\"ask\\\":4866.09447809108,\\\"price\\\":4827.474680645912,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.053736331337681575},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5264995866448816,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4948.109642820618,\\\"ask\\\":5027.917862866114,\\\"price\\\":4988.013752843367,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.0586326273814074},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5313248861288313,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5163.300713942025,\\\"ask\\\":5246.579757715282,\\\"price\\\":5204.940235828655,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.058736953284498794},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4465395662965859,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4386.149504308562,\\\"ask\\\":4456.893851152248,\\\"price\\\":4421.521677730409,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.05677910560902172},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4425309678620004,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":3655.8091544235963,\\\"ask\\\":3714.773818204623,\\\"price\\\":3685.2914863141095,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.06023338649538973},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4465517391805547,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":3016.9775350872997,\\\"ask\\\":3065.6384630725793,\\\"price\\\":3041.3079990799397,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.05709665045515494},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4962739359689045,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":3036.9186040276168,\\\"ask\\\":3085.9011621570935,\\\"price\\\":3061.4098830923554,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.07005346757097675},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4759278312949638,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":3111.2696065549476,\\\"ask\\\":3161.451374402611,\\\"price\\\":3136.3604904787794,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.07144965266612163},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.556345659630452,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":3087.522505572251,\\\"ask\\\":3137.321255662125,\\\"price\\\":3112.421880617187,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.07319579252484043},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5650062185116631,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":3835.540380997135,\\\"ask\\\":3897.403935529347,\\\"price\\\":3866.4721582632405,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.06945947727486879},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.556223694537674,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4753.326985930851,\\\"ask\\\":4829.993550220057,\\\"price\\\":4791.660268075453,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.060943170464032526},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5460376174303103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5063.7969978909805,\\\"ask\\\":5145.471143018258,\\\"price\\\":5104.634070454616,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.06998793089982458},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.48099147440843604,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4877.1156301042965,\\\"ask\\\":4955.778785428559,\\\"price\\\":4916.4472077664295,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.07069097368264293},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.48897585238115937,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4740.687852830296,\\\"ask\\\":4817.1505601340095,\\\"price\\\":4778.919206482153,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.05617564023309474},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5268533532042311,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4173.654339226351,\\\"ask\\\":4240.971344697746,\\\"price\\\":4207.312841962051,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.05151809842707927},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5237208486069287,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4544.094907666618,\\\"ask\\\":4617.3867610160805,\\\"price\\\":4580.740834341349,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.03734921408931147},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.48825708454496164,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4412.808015150208,\\\"ask\\\":4483.982337975211,\\\"price\\\":4448.395176562708,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.05440169452544169},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5354744945789058,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":4719.341977253768,\\\"ask\\\":4795.460396241731,\\\"price\\\":4757.401186747751,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.058070852448493415},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5538834425051177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":5572.763109350638,\\\"ask\\\":5662.646385307906,\\\"price\\\":5617.704747329274,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.05639165532239965},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5547118747761595,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":6670.405645646802,\\\"ask\\\":6777.992833479819,\\\"price\\\":6724.199239563309,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.05695315951093827},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5529254136727918,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":7595.638802263982,\\\"ask\\\":7718.149105526304,\\\"price\\\":7656.893953895143,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.05721767882882234},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5595570082452337,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":8387.707320658297,\\\"ask\\\":8522.992922604402,\\\"price\\\":8455.350121631354,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.06546831427931632},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5575147592340794,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":9407.361370750219,\\\"ask\\\":9559.093005762323,\\\"price\\\":9483.227188256269,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.06120448771142584},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.46964470624388777,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":9461.171159862544,\\\"ask\\\":9613.770694699038,\\\"price\\\":9537.470927280785,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.0600872919438436},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4716865424872884,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":9513.2900864921,\\\"ask\\\":9666.730249177455,\\\"price\\\":9590.010167834776,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.06128843919292848},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5619173748769165,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":10688.472936848944,\\\"ask\\\":10860.867661636828,\\\"price\\\":10774.670299242884,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.06491753723117921},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5621862358420621,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":10308.05865168748,\\\"ask\\\":10474.31766219857,\\\"price\\\":10391.188156943019,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.06738269865701485},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5599763962040157,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":11476.215874483267,\\\"ask\\\":11661.316130523319,\\\"price\\\":11568.766002503296,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.06419679177592941},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5528612700106219,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":12238.056639745822,\\\"ask\\\":12435.444650064313,\\\"price\\\":12336.750644905062,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.05674658223779261},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.48061827479644664,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":12837.115289129557,\\\"ask\\\":13044.165535728423,\\\"price\\\":12940.640412428991,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.058488577875902115},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.47543507990259976,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":11913.755059046332,\\\"ask\\\":12105.912398708377,\\\"price\\\":12009.833728877355,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.053185519090378774},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5054915561389478,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":11930.393306183685,\\\"ask\\\":12122.819004670508,\\\"price\\\":12026.606155427093,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.020943343684497573},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4864824836917338,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":12914.139816602481,\\\"ask\\\":13122.432394289617,\\\"price\\\":13018.286105446052,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.02603941021131506},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4978871496577083,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":12615.483807346565,\\\"ask\\\":12818.95935262634,\\\"price\\\":12717.221579986459,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.022536569085470526},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.49724165358729655,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":13222.417734548799,\\\"ask\\\":13435.682536718941,\\\"price\\\":13329.050135633868,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.03823034319744467},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4828426810727078,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":14289.776445397858,\\\"ask\\\":14520.256710646208,\\\"price\\\":14405.016578022034,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.05536112467148596},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5266537634086894,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":17201.952469563133,\\\"ask\\\":17479.403315846408,\\\"price\\\":17340.67789270477,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.05660835362208738},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.49285265988524957,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":17695.393176102698,\\\"ask\\\":17980.8027434592,\\\"price\\\":17838.097959780946,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.05627416579437172},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.48693786350948964,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":17703.056846377145,\\\"ask\\\":17988.590021318712,\\\"price\\\":17845.823433847916,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.058171465887550844},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.44687453304805463,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15846.535376844362,\\\"ask\\\":16102.12465711605,\\\"price\\\":15974.330016980213,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.0557505118271196},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.4471880846668427,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":14049.903234253497,\\\"ask\\\":14276.514576741447,\\\"price\\\":14163.208905497475,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.05716429247946414},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5082139345880556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15225.642430005679,\\\"ask\\\":15471.217307908995,\\\"price\\\":15348.429868957337,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.056744958712506566},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5421052563819653,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16478.378498494214,\\\"ask\\\":16744.158796857024,\\\"price\\\":16611.26864767562,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.0559225683943092},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5030267980179868,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":17497.852053946677,\\\"ask\\\":17780.07547417162,\\\"price\\\":17638.96376405914,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.05491840367432188},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5052755410350902,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":16433.984229080666,\\\"ask\\\":16699.04849084003,\\\"price\\\":16566.516359960347,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.054736167465468166},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5527102087773332,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":14695.497493395022,\\\"ask\\\":14932.5216465143,\\\"price\\\":14814.00956995466,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.056074109806918404},{\\\"volatility\\\":0.015600000000000001,\\\"forecast\\\":0.5535885583349183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SYSC\\\",\\\"bid\\\":15381.934476064604,\\\"ask\\\":15630.030193420487,\\\"price\\\":15505.98233474254,\\\"maxShares\\\":6800000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.056411241464413564}],\\\"recentTicksOfPrices\\\":[15107.754480535417,15128.4027471726,15167.397632594759,15339.116943213365,15146.621385006029,15078.80767324426,15210.72252968317,15377.560657573918,15356.128265408614,15495.177899748805,15405.033386877858,15537.371268289222,15628.989261190976,15421.739597796435,15546.666996945163,15441.792129222826,15488.948058430962,15253.972536948324,15226.290189700405,15151.859074104252]}],[\\\"CTK\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1111.1042519435646,\\\"ask\\\":1129.0252882652348,\\\"price\\\":1120.0647701043997,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5525316096921508,\\\"bias\\\":0.05253160969215076,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1110.8129469858557,\\\"ask\\\":1128.729284840466,\\\"price\\\":1119.7711159131609,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5525453858354531,\\\"bias\\\":0.052545385835453096,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1114.2989340993815,\\\"ask\\\":1132.2714975525976,\\\"price\\\":1123.2852158259896,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5523804863009323,\\\"bias\\\":0.05238048630093228,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1120.4826436301544,\\\"ask\\\":1138.5549443338666,\\\"price\\\":1129.5187939820105,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5520898051358935,\\\"bias\\\":0.05208980513589345,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1122.9598506408306,\\\"ask\\\":1141.072106296328,\\\"price\\\":1132.0159784685793,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5519746429500256,\\\"bias\\\":0.05197464295002563,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1122.529571923216,\\\"ask\\\":1140.634887599397,\\\"price\\\":1131.5822297613065,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.55199456543873,\\\"bias\\\":0.051994565438730045,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1130.1966413139924,\\\"ask\\\":1148.4256193997019,\\\"price\\\":1139.3111303568471,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.552349697233146,\\\"bias\\\":0.052349697233145975,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1126.5537183717795,\\\"ask\\\":1144.7239396358407,\\\"price\\\":1135.63882900381,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5521804146592585,\\\"bias\\\":0.05218041465925849,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1134.0812983274448,\\\"ask\\\":1152.3729321714357,\\\"price\\\":1143.2271152494402,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5518317475366333,\\\"bias\\\":0.05183174753663333,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1143.1712938357746,\\\"ask\\\":1161.6095405105452,\\\"price\\\":1152.39041717316,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5522471942537177,\\\"bias\\\":0.05224719425371771,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1137.5185594580885,\\\"ask\\\":1155.8656329977352,\\\"price\\\":1146.6920962279119,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5519875593592889,\\\"bias\\\":0.05198755935928889,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1145.1350071121306,\\\"ask\\\":1163.604926581681,\\\"price\\\":1154.3699668469058,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5516394678743377,\\\"bias\\\":0.05163946787433771,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1147.2648989464728,\\\"ask\\\":1165.7691715101255,\\\"price\\\":1156.5170352282992,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.551735514611423,\\\"bias\\\":0.051735514611423006,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1150.4348239862545,\\\"ask\\\":1168.9902243731296,\\\"price\\\":1159.712524179692,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5518784612869148,\\\"bias\\\":0.05187846128691476,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1157.6117436774282,\\\"ask\\\":1176.282900833516,\\\"price\\\":1166.947322255472,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5515548205707308,\\\"bias\\\":0.0515548205707308,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1162.2069743484626,\\\"ask\\\":1180.9522481282766,\\\"price\\\":1171.5796112383696,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5517594714772374,\\\"bias\\\":0.05175947147723736,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1171.2868552751138,\\\"ask\\\":1190.1785787472932,\\\"price\\\":1180.7327170112035,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5521638485358962,\\\"bias\\\":0.05216384853589617,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1179.720410663728,\\\"ask\\\":1198.7481592228203,\\\"price\\\":1189.2342849432741,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5517882559097778,\\\"bias\\\":0.05178825590977776,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1184.8904597427947,\\\"ask\\\":1204.0015961902593,\\\"price\\\":1194.446027966527,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5515612971979063,\\\"bias\\\":0.05156129719790625,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1190.8504543095087,\\\"ask\\\":1210.0577197015978,\\\"price\\\":1200.4540870055532,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5513019440664624,\\\"bias\\\":0.05130194406646238,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1186.354476217065,\\\"ask\\\":1205.4892258334694,\\\"price\\\":1195.9218510252672,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5514963652291472,\\\"bias\\\":0.051496365229147245,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1178.5637062129504,\\\"ask\\\":1197.5727982486433,\\\"price\\\":1188.0682522307968,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5518367764733025,\\\"bias\\\":0.05183677647330254,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1179.2578304928713,\\\"ask\\\":1198.2781180814661,\\\"price\\\":1188.7679742871687,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5518062467998082,\\\"bias\\\":0.051806246799808164,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1182.8557929853084,\\\"ask\\\":1201.9341122270068,\\\"price\\\":1192.3949526061576,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5519643097170429,\\\"bias\\\":0.05196430971704291,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1184.5103853027408,\\\"ask\\\":1203.6153915173013,\\\"price\\\":1194.062888410021,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5518916214416434,\\\"bias\\\":0.05189162144164339,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1193.566745111989,\\\"ask\\\":1212.8178216460533,\\\"price\\\":1203.192283379021,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5514948759164948,\\\"bias\\\":0.05149487591649482,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1199.325878619738,\\\"ask\\\":1218.6698444039275,\\\"price\\\":1208.9978615118328,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5512464056348096,\\\"bias\\\":0.051246405634809644,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1191.1274234235436,\\\"ask\\\":1210.339156059407,\\\"price\\\":1200.7332897414753,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5508936798455273,\\\"bias\\\":0.050893679845527284,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1182.552002346982,\\\"ask\\\":1201.6254217396752,\\\"price\\\":1192.0887120433285,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5505246180757742,\\\"bias\\\":0.05052461807577424,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1176.4468843243326,\\\"ask\\\":1195.4218340714992,\\\"price\\\":1185.934359197916,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5502624228500381,\\\"bias\\\":0.050262422850038124,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1184.4847205021051,\\\"ask\\\":1203.589312768268,\\\"price\\\":1194.0370166351865,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5499190149782934,\\\"bias\\\":0.04991901497829343,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1175.921073892545,\\\"ask\\\":1194.8875428262957,\\\"price\\\":1185.4043083594204,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5462836621228815,\\\"bias\\\":0.046283662122881486,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1174.805190572351,\\\"ask\\\":1193.7536613880343,\\\"price\\\":1184.2794259801926,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5458440388817273,\\\"bias\\\":0.04584403888172728,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1181.3601000767665,\\\"ask\\\":1200.4142952392951,\\\"price\\\":1190.8871976580308,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.543286137975278,\\\"bias\\\":0.04328613797527803,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1171.7462416656065,\\\"ask\\\":1190.6453745956971,\\\"price\\\":1181.1958081306518,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5397346283833316,\\\"bias\\\":0.03973462838333164,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1177.273238044642,\\\"ask\\\":1196.2615160776202,\\\"price\\\":1186.7673770611311,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5378603902642931,\\\"bias\\\":0.03786039026429311,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1176.3662859993688,\\\"ask\\\":1195.339935773552,\\\"price\\\":1185.8531108864604,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5375684951395031,\\\"bias\\\":0.03756849513950311,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1174.6583004320833,\\\"ask\\\":1193.6044020519557,\\\"price\\\":1184.1313512420195,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5381147514206641,\\\"bias\\\":0.03811475142066412,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1167.2038974531902,\\\"ask\\\":1186.0297667669515,\\\"price\\\":1176.6168321100708,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5356805347670879,\\\"bias\\\":0.03568053476708788,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1158.8956893849384,\\\"ask\\\":1177.5875553427597,\\\"price\\\":1168.241622363849,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5382384984349724,\\\"bias\\\":0.0382384984349724,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1161.8357273283377,\\\"ask\\\":1180.5750132529884,\\\"price\\\":1171.205370290663,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5392085826049905,\\\"bias\\\":0.039208582604990494,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1156.1302557302345,\\\"ask\\\":1174.7775179194316,\\\"price\\\":1165.453886824833,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5411435155707691,\\\"bias\\\":0.04114351557076912,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1163.2836193945236,\\\"ask\\\":1182.046258417016,\\\"price\\\":1172.6649389057698,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5436892021648734,\\\"bias\\\":0.043689202164873375,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1162.3684724965217,\\\"ask\\\":1181.1163510851754,\\\"price\\\":1171.7424117908486,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5440331725906323,\\\"bias\\\":0.04403317259063233,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1168.305786472174,\\\"ask\\\":1187.149428189467,\\\"price\\\":1177.7276073308205,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5417839824482574,\\\"bias\\\":0.04178398244825743,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1164.4619930058516,\\\"ask\\\":1183.2436380543331,\\\"price\\\":1173.8528155300924,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5404047274816187,\\\"bias\\\":0.04040472748161872,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1158.8462731304812,\\\"ask\\\":1177.5373420519404,\\\"price\\\":1168.1918075912108,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5384467315296232,\\\"bias\\\":0.03844673152962319,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1162.7009424941443,\\\"ask\\\":1181.4541835021146,\\\"price\\\":1172.0775629981295,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5371678782287459,\\\"bias\\\":0.0371678782287459,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1171.5152168942388,\\\"ask\\\":1190.4106236183395,\\\"price\\\":1180.9629202562892,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5399855234684127,\\\"bias\\\":0.039985523468412665,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1166.1861608203328,\\\"ask\\\":1184.9956150271125,\\\"price\\\":1175.5908879237227,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5381583272293683,\\\"bias\\\":0.038158327229368294,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1170.6540221087246,\\\"ask\\\":1189.5355385943492,\\\"price\\\":1180.0947803515369,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5366964155827924,\\\"bias\\\":0.03669641558279235,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1172.6706475441265,\\\"ask\\\":1191.584690246451,\\\"price\\\":1182.1276688952887,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5360642653176011,\\\"bias\\\":0.036064265317601096,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1162.5684405021443,\\\"ask\\\":1181.319544381211,\\\"price\\\":1171.9439924416777,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.539198090926165,\\\"bias\\\":0.039198090926165,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1161.3773624009284,\\\"ask\\\":1180.1092553428787,\\\"price\\\":1170.7433088719035,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5396000962452209,\\\"bias\\\":0.03960009624522087,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1164.5956143157503,\\\"ask\\\":1183.3794145466493,\\\"price\\\":1173.9875144311998,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0088,\\\"forecast\\\":0.540697440568386,\\\"bias\\\":0.04069744056838598,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5254990595822779,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":3243.545894718411,\\\"ask\\\":3295.861151084837,\\\"price\\\":3269.703522901624,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.053535603187750413},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4487605280280947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":3306.6162545695347,\\\"ask\\\":3359.948774804534,\\\"price\\\":3333.2825146870355,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.05607470969039596},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.44494472705532817,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":3318.4210095364583,\\\"ask\\\":3371.943929045109,\\\"price\\\":3345.1824692907853,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.05711673595610833},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4484802495055306,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":3110.1185054830544,\\\"ask\\\":3160.281707184393,\\\"price\\\":3135.2001063337248,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.054055844897119176},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4485422582608421,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2976.7550452079204,\\\"ask\\\":3024.7672233564335,\\\"price\\\":3000.761134282178,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.052611742692880326},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.44858220262910153,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2769.4755563457225,\\\"ask\\\":2814.1445169319445,\\\"price\\\":2791.810036638835,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.05431596421248808},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.44761284912892463,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2501.325192680553,\\\"ask\\\":2541.669147401208,\\\"price\\\":2521.4971700408805,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.05350429334493256},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5263437625718247,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2420.573408648255,\\\"ask\\\":2459.614915239356,\\\"price\\\":2440.094161943805,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.05424991409973151},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4457637040550301,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2263.6191740112645,\\\"ask\\\":2300.1291606888653,\\\"price\\\":2281.874167350065,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.05589859603383346},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4484399669824152,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2122.6635782853664,\\\"ask\\\":2156.9000876125506,\\\"price\\\":2139.7818329489583,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.053195014508524985},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5254745398835223,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":2031.7606559430833,\\\"ask\\\":2064.530989103455,\\\"price\\\":2048.1458225232695,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.05213359185780564},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.48680044785336807,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1939.29999669848,\\\"ask\\\":1970.5790289032948,\\\"price\\\":1954.9395128008875,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.05339359696721735},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.553227285189904,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1916.853399211908,\\\"ask\\\":1947.770389521778,\\\"price\\\":1932.311894366844,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.0543573410614403},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.46314189462575556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1842.3701543604395,\\\"ask\\\":1872.0858020114154,\\\"price\\\":1857.2279781859281,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.05563596294088924},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.483075273773151,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1748.2662310807466,\\\"ask\\\":1776.4640735175312,\\\"price\\\":1762.3651522991395,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.057329242005528136},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.49177603245372425,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1747.9868183880876,\\\"ask\\\":1776.1801541685415,\\\"price\\\":1762.0834862783145,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.05840430075889813},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4456626129001666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1716.029863374397,\\\"ask\\\":1743.7077643965645,\\\"price\\\":1729.8688138854823,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.05647358013874715},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4492975999825314,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1580.701468796358,\\\"ask\\\":1606.1966537769438,\\\"price\\\":1593.4490612866512,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.05238090525915129},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5044580291264174,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1477.5715009497756,\\\"ask\\\":1501.4032993521912,\\\"price\\\":1489.487400150983,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.05229325249194955},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5475822436993654,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1506.83643424473,\\\"ask\\\":1531.14024770029,\\\"price\\\":1518.9883409725098,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.053164013030425505},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4479355278783921,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1479.276736696461,\\\"ask\\\":1503.136038901242,\\\"price\\\":1491.2063877988514,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.053407992542469473},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.44653577380301707,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1408.974704087583,\\\"ask\\\":1431.7001025406082,\\\"price\\\":1420.3374033140956,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.05472239631113701},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.44926612453343573,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1448.7115129816564,\\\"ask\\\":1472.0778277071677,\\\"price\\\":1460.3946703444128,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.053324341135368436},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5258502074843816,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1420.8305915450762,\\\"ask\\\":1443.747213989353,\\\"price\\\":1432.288902767215,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.05492424776506544},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.44234746650934986,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1391.8806375693239,\\\"ask\\\":1414.3303252720548,\\\"price\\\":1403.10548142069,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.06016201212133643},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5293906435231187,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1306.0526657303888,\\\"ask\\\":1327.1180313066864,\\\"price\\\":1316.585348518538,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.06312629855030272},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.44476545568591247,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1247.4936976825861,\\\"ask\\\":1267.6145637742409,\\\"price\\\":1257.5541307284138,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.06249614967180761},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.44370955965161746,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1215.157499756602,\\\"ask\\\":1234.7568142688049,\\\"price\\\":1224.9571570127032,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.05999665521561792},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5216473930559874,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1301.7704209926562,\\\"ask\\\":1322.7667181054414,\\\"price\\\":1312.268569549049,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.055483559348176836},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5525898031885536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1382.7294237433387,\\\"ask\\\":1405.0315112230685,\\\"price\\\":1393.8804674832033,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.05371012334804437},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5067723796365107,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1425.82931453041,\\\"ask\\\":1448.8265615389653,\\\"price\\\":1437.3279380346878,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.05344710347919823},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5173065579610115,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1409.2940810811394,\\\"ask\\\":1432.0246307759967,\\\"price\\\":1420.6593559285686,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.052442486026901325},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.46844574777127546,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1407.0420625197048,\\\"ask\\\":1429.7362893345396,\\\"price\\\":1418.389175927122,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.05232547078012273},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.49623198106464356,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1425.5276700341906,\\\"ask\\\":1448.520051808936,\\\"price\\\":1437.0238609215626,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.02736248991085788},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5168865604998397,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1472.4490552474556,\\\"ask\\\":1496.1982335578984,\\\"price\\\":1484.3236444026772,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.022332652860459823},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.48135640929289714,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1485.3941487106872,\\\"ask\\\":1509.3521188511836,\\\"price\\\":1497.3731337809356,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.030925441226081096},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4920886104746177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1423.3204229513049,\\\"ask\\\":1446.2772039666484,\\\"price\\\":1434.7988134589768,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.03959973739145295},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5221682742117085,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1442.5688127810845,\\\"ask\\\":1465.8360516969085,\\\"price\\\":1454.2024322389966,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.03094643209105219},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.512289399601581,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1461.3009461911267,\\\"ask\\\":1484.8703162909833,\\\"price\\\":1473.0856312410551,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.02263405422573811},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4802671876408835,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1470.4167225258425,\\\"ask\\\":1494.1331212762605,\\\"price\\\":1482.2749219010502,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.025521927788463905},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5009559454950957,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1371.0254041788803,\\\"ask\\\":1393.138717149508,\\\"price\\\":1382.0820606641935,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.02407673688343942},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4927215547852514,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1336.2479436105484,\\\"ask\\\":1357.8003297978141,\\\"price\\\":1347.0241367041815,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.018141718303766097},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5059425122224508,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1442.5190906704595,\\\"ask\\\":1465.7855276167581,\\\"price\\\":1454.15230914361,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.01980791093435319},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5028008482350291,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1478.0125633961468,\\\"ask\\\":1501.8514757089863,\\\"price\\\":1489.932019552566,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.02515309676324118},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.48847790050156414,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1406.7980915938474,\\\"ask\\\":1429.488383393748,\\\"price\\\":1418.143237493797,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.023101579572292807},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4992505603910494,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1364.3491017266933,\\\"ask\\\":1386.3547323997036,\\\"price\\\":1375.351917063199,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.02369145859981131},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4997537409244807,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1448.195824022168,\\\"ask\\\":1471.5538211838157,\\\"price\\\":1459.8748226029918,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.0192513990041554},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4863476370556848,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1500.1646724855118,\\\"ask\\\":1524.3608768804393,\\\"price\\\":1512.2627746829749,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.022979212673134575},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4824350740570552,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1435.6945173297995,\\\"ask\\\":1458.8508805125384,\\\"price\\\":1447.272698921169,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.026576904812266378},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.49811870047494466,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1328.6878396536442,\\\"ask\\\":1350.1182886803147,\\\"price\\\":1339.4030641669797,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.02614504904992354},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.512836555657326,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1361.047929990937,\\\"ask\\\":1383.0003159585328,\\\"price\\\":1372.0241229747342,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.03057182874095221},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5188873324393701,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1319.1006609790588,\\\"ask\\\":1340.3764780916251,\\\"price\\\":1329.7385695353414,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.02476974880893712},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5149636480419031,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1280.5750235106136,\\\"ask\\\":1301.2294593736874,\\\"price\\\":1290.9022414421506,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.020234373373498538},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.49439386340078806,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1220.2896888827597,\\\"ask\\\":1239.9717806389335,\\\"price\\\":1230.1307347608456,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.016458828624111188},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.47858968657900847,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1252.6491343396988,\\\"ask\\\":1272.8531526355011,\\\"price\\\":1262.7511434875998,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.03690658075165082},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4960200317257899,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1290.8332952017327,\\\"ask\\\":1311.6531870598253,\\\"price\\\":1301.243241130779,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.05398837986682459},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.48209990777994277,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1280.9452331906512,\\\"ask\\\":1301.6056401775977,\\\"price\\\":1291.2754366841248,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.05529406275837412},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5444556728923232,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1257.1436999054695,\\\"ask\\\":1277.4202111942673,\\\"price\\\":1267.2819555498684,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.05657642355487724},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5548971481409641,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1345.9629912512814,\\\"ask\\\":1367.6720717553337,\\\"price\\\":1356.8175315033084,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.05702816801146193},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.48551702872832,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1338.8987931206723,\\\"ask\\\":1360.4939349451993,\\\"price\\\":1349.696364032936,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.05498862497863094},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4462511887412559,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1205.7982574080795,\\\"ask\\\":1225.2466163985328,\\\"price\\\":1215.5224369033056,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.05524392405733364},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4484046846838771,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1071.5464499215298,\\\"ask\\\":1088.829457178328,\\\"price\\\":1080.187953549928,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.053168807187071454},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5119447863747689,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1052.2441246333788,\\\"ask\\\":1069.2158040629486,\\\"price\\\":1060.7299643481638,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.054464077902501074},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5425461350486408,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1076.399396941553,\\\"ask\\\":1093.7606775373843,\\\"price\\\":1085.0800372394688,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.0547231445703007},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4835019200165131,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1055.1273818157572,\\\"ask\\\":1072.1455653934308,\\\"price\\\":1063.636473604594,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.0572967669991995},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5565118698580452,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1100.9152121266713,\\\"ask\\\":1118.6719090964561,\\\"price\\\":1109.7935606115632,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.057955018921387325},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.4716333556758997,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1156.2092544107707,\\\"ask\\\":1174.8577907722345,\\\"price\\\":1165.5335225915023,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.06026700274941715},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5560772737185747,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1158.8686827947372,\\\"ask\\\":1177.560113162394,\\\"price\\\":1168.2143979785653,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.05920991659361652},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.5570373351121934,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1216.8847682570868,\\\"ask\\\":1236.5119419386529,\\\"price\\\":1226.69835509787,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.058472225916425535},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.46864132915313633,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1190.900531679256,\\\"ask\\\":1210.1086047708575,\\\"price\\\":1200.5045682250563,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.05590984995121151},{\\\"volatility\\\":0.0088,\\\"forecast\\\":0.47662679455924284,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTK\\\",\\\"bid\\\":1123.5107736446898,\\\"ask\\\":1141.631915155088,\\\"price\\\":1132.5713443998893,\\\"maxShares\\\":11000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.054563634463103416}],\\\"recentTicksOfPrices\\\":[1186.7673770611311,1185.8531108864604,1184.1313512420195,1176.6168321100708,1168.241622363849,1171.205370290663,1165.453886824833,1172.6649389057698,1171.7424117908486,1177.7276073308205,1173.8528155300924,1168.1918075912108,1172.0775629981295,1180.9629202562892,1175.5908879237227,1180.0947803515369,1182.1276688952887,1171.9439924416777,1170.7433088719035,1173.9875144311998]}],[\\\"NTLK\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":165.07178522113085,\\\"ask\\\":169.08162615767654,\\\"price\\\":167.0767056894037,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4017884800957273,\\\"bias\\\":0.09821151990427268,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":165.2537967270755,\\\"ask\\\":169.2680589957494,\\\"price\\\":167.26092786141245,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40168019007744865,\\\"bias\\\":0.09831980992255135,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":167.43429296903497,\\\"ask\\\":171.50152275775645,\\\"price\\\":169.4679078633957,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.402977503544929,\\\"bias\\\":0.097022496455071,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":171.34099987771594,\\\"ask\\\":175.50312942940138,\\\"price\\\":173.42206465355866,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40524130775419337,\\\"bias\\\":0.09475869224580663,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":172.93371284381155,\\\"ask\\\":177.13453177928878,\\\"price\\\":175.03412231155016,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40612214420255,\\\"bias\\\":0.09387785579745,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":173.21242171503872,\\\"ask\\\":177.42001090649717,\\\"price\\\":175.31621631076794,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40627344258614606,\\\"bias\\\":0.09372655741385394,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":168.37701011156034,\\\"ask\\\":172.46713991184114,\\\"price\\\":170.42207501170074,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40358182522714464,\\\"bias\\\":0.09641817477285536,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":170.66629543910815,\\\"ask\\\":174.81203540928894,\\\"price\\\":172.73916542419855,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40489274476818055,\\\"bias\\\":0.09510725523181945,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":166.00252445354965,\\\"ask\\\":170.03497444027556,\\\"price\\\":168.0187494469126,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4022207465023325,\\\"bias\\\":0.09777925349766747,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":160.5905164933848,\\\"ask\\\":164.49150069970185,\\\"price\\\":162.54100859654332,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3989255201725128,\\\"bias\\\":0.10107447982748718,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":163.9458758065155,\\\"ask\\\":167.92836671679524,\\\"price\\\":165.93712126165536,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4010373584342882,\\\"bias\\\":0.09896264156571177,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":159.45680877316687,\\\"ask\\\":163.3302535206932,\\\"price\\\":161.39353114693003,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4038233788946481,\\\"bias\\\":0.09617662110535191,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":160.7037987920686,\\\"ask\\\":164.60753479511482,\\\"price\\\":162.6556667935917,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40307125493397933,\\\"bias\\\":0.09692874506602067,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":158.85829796935843,\\\"ask\\\":162.71720399290558,\\\"price\\\":160.787750981132,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.401945206870704,\\\"bias\\\":0.09805479312929599,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":154.79797669256192,\\\"ask\\\":158.55825143003307,\\\"price\\\":156.6781140612975,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40451716531190174,\\\"bias\\\":0.09548283468809826,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":152.25676961521438,\\\"ask\\\":155.95531462611027,\\\"price\\\":154.10604212066232,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.406110799906198,\\\"bias\\\":0.09388920009380203,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":147.41442481653493,\\\"ask\\\":150.99534201855604,\\\"price\\\":149.2048834175455,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40302667920164537,\\\"bias\\\":0.09697332079835463,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":151.87721497077638,\\\"ask\\\":155.56654003079524,\\\"price\\\":153.7218775007858,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4000909313477864,\\\"bias\\\":0.0999090686522136,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":154.6757274583394,\\\"ask\\\":158.4330325787849,\\\"price\\\":156.55438001856214,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3982499917684176,\\\"bias\\\":0.10175000823158242,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":151.47226360035276,\\\"ask\\\":155.1517517849767,\\\"price\\\":153.31200769266474,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40040188721232356,\\\"bias\\\":0.09959811278767644,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":153.8858446129173,\\\"ask\\\":157.6239622958222,\\\"price\\\":155.75490345436975,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3988148764408608,\\\"bias\\\":0.10118512355913922,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":149.72444815140224,\\\"ask\\\":153.3614792805861,\\\"price\\\":151.54296371599418,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3960025674269636,\\\"bias\\\":0.1039974325730364,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":149.35460137984242,\\\"ask\\\":152.9826483769236,\\\"price\\\":151.168624878383,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3957450386040663,\\\"bias\\\":0.10425496139593371,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":147.46291245161004,\\\"ask\\\":151.04500749092043,\\\"price\\\":149.25395997126523,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.39708244577246665,\\\"bias\\\":0.10291755422753335,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":148.33019590636195,\\\"ask\\\":151.9333585599578,\\\"price\\\":150.13177723315988,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3964771499017889,\\\"bias\\\":0.1035228500982111,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":143.71040766432154,\\\"ask\\\":147.20134874118767,\\\"price\\\":145.4558782027546,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.39980504837093345,\\\"bias\\\":0.10019495162906655,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":140.8528491997093,\\\"ask\\\":144.27437590091685,\\\"price\\\":142.56361255031308,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4018377579239585,\\\"bias\\\":0.09816224207604152,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":144.9290774299334,\\\"ask\\\":148.4496218209439,\\\"price\\\":146.68934962543864,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3989969797319241,\\\"bias\\\":0.1010030202680759,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":140.6409656473117,\\\"ask\\\":144.05734537963508,\\\"price\\\":142.3491555134734,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.39591742009367453,\\\"bias\\\":0.10408257990632547,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":true,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":143.70965291705053,\\\"ask\\\":147.20057565997482,\\\"price\\\":145.45511428851268,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3981884290169285,\\\"bias\\\":0.10181157098307148,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":139.69662849057133,\\\"ask\\\":143.09006885876337,\\\"price\\\":141.39334867466735,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40111314041238544,\\\"bias\\\":0.09888685958761456,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":143.974084387554,\\\"ask\\\":147.47143056700878,\\\"price\\\":145.7227574772814,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4041410172140485,\\\"bias\\\":0.09585898278595151,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":144.54906911133756,\\\"ask\\\":148.06038253104614,\\\"price\\\":146.30472582119185,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40452384618617787,\\\"bias\\\":0.09547615381382213,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":141.23574052916058,\\\"ask\\\":144.66656823432237,\\\"price\\\":142.95115438174147,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40228401745612385,\\\"bias\\\":0.09771598254387615,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":136.52598334016088,\\\"ask\\\":139.84240398810002,\\\"price\\\":138.18419366413045,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4056549402651508,\\\"bias\\\":0.09434505973484919,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":139.23361744672516,\\\"ask\\\":142.6158105830829,\\\"price\\\":140.92471401490403,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4075260265981271,\\\"bias\\\":0.09247397340187291,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":138.7837346594206,\\\"ask\\\":142.1549994689612,\\\"price\\\":140.4693670641909,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40782579118516077,\\\"bias\\\":0.09217420881483923,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":137.94043236972502,\\\"ask\\\":141.29121210340256,\\\"price\\\":139.6158222365638,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4072622818499421,\\\"bias\\\":0.09273771815005788,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":134.33324505092415,\\\"ask\\\":137.59640080114903,\\\"price\\\":135.9648229260366,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40477203961125724,\\\"bias\\\":0.09522796038874276,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":130.40256053524084,\\\"ask\\\":133.57023407050983,\\\"price\\\":131.98639730287533,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":205.65405765059248,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40764246690826555,\\\"bias\\\":0.09235753309173445,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":131.7935177097249,\\\"ask\\\":134.99497967838218,\\\"price\\\":133.39424869405354,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4125453715748301,\\\"bias\\\":0.08745462842516988,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":134.52814335872444,\\\"ask\\\":137.7960334807987,\\\"price\\\":136.16208841976157,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.41435999549694086,\\\"bias\\\":0.08564000450305914,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":138.02788301009062,\\\"ask\\\":141.38078705082157,\\\"price\\\":139.7043350304561,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4121320771445458,\\\"bias\\\":0.0878679228554542,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":138.48479533087055,\\\"ask\\\":141.84879845631679,\\\"price\\\":140.16679689359367,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.41184120883824094,\\\"bias\\\":0.08815879116175906,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":135.57314697756797,\\\"ask\\\":138.866421802934,\\\"price\\\":137.219784390251,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4099478589762823,\\\"bias\\\":0.09005214102371772,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":133.71730331750044,\\\"ask\\\":136.9654969203547,\\\"price\\\":135.34140011892757,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4111976799855914,\\\"bias\\\":0.08880232001440858,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":136.44179991060597,\\\"ask\\\":139.75617561693647,\\\"price\\\":138.09898776377122,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4130070315978106,\\\"bias\\\":0.0869929684021894,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":134.55990218063107,\\\"ask\\\":137.82856377206343,\\\"price\\\":136.19423297634725,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.41422367836335366,\\\"bias\\\":0.08577632163664634,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":130.40341394825327,\\\"ask\\\":133.57110821420275,\\\"price\\\":131.987261081228,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4169577192960615,\\\"bias\\\":0.08304228070393849,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":127.94516791390127,\\\"ask\\\":131.05314770128348,\\\"price\\\":129.49915780759238,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.41536220490069664,\\\"bias\\\":0.08463779509930336,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":125.91685609377896,\\\"ask\\\":128.97556514868856,\\\"price\\\":127.44621062123376,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.41399883032516605,\\\"bias\\\":0.08600116967483395,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":125.01140423532291,\\\"ask\\\":128.04811850824575,\\\"price\\\":126.52976137178433,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.41462173284664233,\\\"bias\\\":0.08537826715335767,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":129.57877661484426,\\\"ask\\\":132.72643920467854,\\\"price\\\":131.1526079097614,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.41774108296988055,\\\"bias\\\":0.08225891703011945,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":129.02242272612887,\\\"ask\\\":132.1565706466016,\\\"price\\\":130.58949668636524,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4180957892868466,\\\"bias\\\":0.0819042107131534,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":127.53648646770652,\\\"ask\\\":130.6345387705658,\\\"price\\\":129.08551261913615,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4171415177698329,\\\"bias\\\":0.08285848223016712,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4447927401855159,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1135.9293313401054,\\\"ask\\\":1163.5227563929004,\\\"price\\\":1149.726043866502,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.06297035535412243},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.44213351726464295,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1137.5917212606726,\\\"ask\\\":1165.225528254859,\\\"price\\\":1151.4086247577654,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.06418239456032654},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4882927779860782,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1133.7184666462738,\\\"ask\\\":1161.2581864838355,\\\"price\\\":1147.4883265650546,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.0664804930707919},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5034672955851449,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1530.2473358913994,\\\"ask\\\":1567.4193359535388,\\\"price\\\":1548.8333359224696,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.03598259987804786},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4834540762059394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1303.6941046830245,\\\"ask\\\":1335.3627873878754,\\\"price\\\":1319.528446035449,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.05554463209923549},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5590447290826775,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1005.5212888007699,\\\"ask\\\":1029.9469071522053,\\\"price\\\":1017.7340979764875,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.06789897603655559},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4817890306326323,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1005.7031094437397,\\\"ask\\\":1030.1331444909558,\\\"price\\\":1017.9181269673477,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.06307017667263459},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.43654719857158125,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":914.6299496552132,\\\"ask\\\":936.8476812257845,\\\"price\\\":925.738815440499,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.0738400528058124},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4362839605522126,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":870.9916616688465,\\\"ask\\\":892.149353855134,\\\"price\\\":881.5705077619901,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.08048190894084761},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5147994408684432,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1041.7321176653807,\\\"ask\\\":1067.03735129288,\\\"price\\\":1054.3847344791295,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.06510396948081798},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4579451890579412,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1004.8639610401126,\\\"ask\\\":1029.273611915581,\\\"price\\\":1017.0687864778469,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.06389029519309153},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4417777495459412,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":624.2503145647795,\\\"ask\\\":639.4142898173654,\\\"price\\\":631.8323021910725,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.06555565665383078},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4629000191871807,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":445.27081095099345,\\\"ask\\\":456.08710595385185,\\\"price\\\":450.67895845242253,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.06561950571920178},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5188395943270162,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":581.6253534365792,\\\"ask\\\":595.7539045322047,\\\"price\\\":588.6896289843921,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.03235198148897522},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.48884478324473657,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":574.0382605212756,\\\"ask\\\":587.9825097647074,\\\"price\\\":581.0103851429913,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.06390862784427226},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.49380063787247563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":552.7154975768973,\\\"ask\\\":566.1417849674291,\\\"price\\\":559.428641272163,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.057785710012049796},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5417155721768769,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":458.11235041505637,\\\"ask\\\":469.24058564781103,\\\"price\\\":463.67646803143384,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.06525527869549452},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4767728921228563,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":417.59219321427236,\\\"ask\\\":427.7361331304086,\\\"price\\\":422.6641631723406,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.06579324162894445},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.49517319223261436,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":371.1524231880332,\\\"ask\\\":380.1682715245848,\\\"price\\\":375.66034735630893,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.06214509679038194},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.538662365974621,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":338.5834069852137,\\\"ask\\\":346.8081051306032,\\\"price\\\":342.69575605790834,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.07891171325556223},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5142174724313223,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":416.4657624247663,\\\"ask\\\":426.5823396496596,\\\"price\\\":421.5240510372129,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.06010940730511838},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.502107332713431,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":424.897552308764,\\\"ask\\\":435.2189503405559,\\\"price\\\":430.05825132465986,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.06660135862108318},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.46599274582776495,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":516.8731310441713,\\\"ask\\\":529.4287536606289,\\\"price\\\":523.1509423524001,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.06993945002911528},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.47033801599461067,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":573.982302752008,\\\"ask\\\":587.9251926974013,\\\"price\\\":580.9537477247046,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.06321641221869351},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5619450173097005,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":599.592953952861,\\\"ask\\\":614.1579649800558,\\\"price\\\":606.8754594664581,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.06879249254425035},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.47163500439591516,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":807.6622696198933,\\\"ask\\\":827.2815960074211,\\\"price\\\":817.4719328136573,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.07077072598750084},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.46569894056947464,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":754.8698902076258,\\\"ask\\\":773.2068106175278,\\\"price\\\":764.038350412577,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.07567752594407307},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5799510398657887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":875.6451775098107,\\\"ask\\\":896.9159105667286,\\\"price\\\":886.28054403827,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.09105881512705216},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4557107333830048,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":883.9362399026163,\\\"ask\\\":905.4083752848659,\\\"price\\\":894.6723075937418,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.10771991298056244},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5587690801793626,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":596.6203592233156,\\\"ask\\\":611.1131614716552,\\\"price\\\":603.8667603474855,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.12429098228952928},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4765840798485476,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":479.70979923735945,\\\"ask\\\":491.36266885446145,\\\"price\\\":485.5362340459105,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.1071014112525529},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.46331283114118504,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":482.61605597695643,\\\"ask\\\":494.33952292376483,\\\"price\\\":488.4777894503606,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.12044866874893456},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.36430851575351036,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":383.78479283687886,\\\"ask\\\":393.1075003551837,\\\"price\\\":388.44614659603127,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":435000,\\\"averageShortPrice\\\":45.809773309022965,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.15105809646646734},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.39311561827446545,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":296.44415926713367,\\\"ask\\\":303.64523196188196,\\\"price\\\":300.0446956145077,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":305.3984887268198,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.14039916338450964},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.521157516457843,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":354.5395750620987,\\\"ask\\\":363.1518724320281,\\\"price\\\":358.8457237470634,\\\"maxShares\\\":2900000,\\\"investedShares\\\":1711000,\\\"averagePrice\\\":222.8468899659918,\\\"sharesShort\\\":1073000,\\\"averageShortPrice\\\":112.99744082892332,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.10050227025253189},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.46106284629546457,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":418.1090145298087,\\\"ask\\\":428.26550880988515,\\\"price\\\":423.1872616698469,\\\"maxShares\\\":2900000,\\\"investedShares\\\":377000,\\\"averagePrice\\\":49.101857111150764,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.09780647183762137},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.51531546277999,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":357.8707545647129,\\\"ask\\\":366.5639712747868,\\\"price\\\":362.21736291974986,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":1044000,\\\"averageShortPrice\\\":137.29460008042236,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.1394265721092109},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5188125973713855,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":302.64245183655936,\\\"ask\\\":309.9940903427106,\\\"price\\\":306.31827108963495,\\\"maxShares\\\":2900000,\\\"investedShares\\\":1740000,\\\"averagePrice\\\":170.98085432437955,\\\"sharesShort\\\":1015000,\\\"averageShortPrice\\\":119.24063517301349,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.1296749087271843},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5936920727256939,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":315.70358012800983,\\\"ask\\\":323.37249300561336,\\\"price\\\":319.5380365668115,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2900000,\\\"averagePrice\\\":284.96809054063203,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.10632209516036895},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5912847066778709,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":433.4883718265962,\\\"ask\\\":444.0184537333149,\\\"price\\\":438.75341277995557,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2900000,\\\"averagePrice\\\":284.96809054063203,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.10242392912476783},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5922383208745533,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":562.5585579965928,\\\"ask\\\":576.2239480693844,\\\"price\\\":569.3912530329889,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2900000,\\\"averagePrice\\\":284.96809054063203,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.10099369895030852},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.44077616542663045,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":601.2060283836723,\\\"ask\\\":615.810223405138,\\\"price\\\":608.5081258944053,\\\"maxShares\\\":2900000,\\\"investedShares\\\":551000,\\\"averagePrice\\\":54.14393720272012,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.14029018436638763},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5372507355200493,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":659.8211588504587,\\\"ask\\\":675.8492031950041,\\\"price\\\":667.8351810227317,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.11780523218552152},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.41168210318705734,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":691.863245408113,\\\"ask\\\":708.6696400334112,\\\"price\\\":700.2664427207621,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.1023806994413694},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.40883171057507744,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":552.2198288581893,\\\"ask\\\":565.634075713044,\\\"price\\\":558.926952285617,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":1943000,\\\"averageShortPrice\\\":372.2886607196955,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.1193724525227966},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5329589489469658,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":773.2111898676906,\\\"ask\\\":791.9936479211569,\\\"price\\\":782.6024188944242,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.09245380411837911},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5069382395155252,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":739.1937495155893,\\\"ask\\\":757.1498729856036,\\\"price\\\":748.1718112505965,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.10555331866441775},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5781960699314611,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":868.0665384960231,\\\"ask\\\":889.1531750586795,\\\"price\\\":878.6098567773508,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.09345586954202734},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4658222277304359,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":829.2065881512951,\\\"ask\\\":849.349258308816,\\\"price\\\":839.2779232300556,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.07300165912149947},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5746257572806142,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":827.8401773318474,\\\"ask\\\":847.9496553237138,\\\"price\\\":837.8949163277805,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.08041425986288442},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4576103904112403,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":734.2999056233477,\\\"ask\\\":752.1371502943601,\\\"price\\\":743.2185279588537,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.09365719374556092},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5503497005387032,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":718.8759301769445,\\\"ask\\\":736.3385033796235,\\\"price\\\":727.607216778284,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":609000,\\\"averageShortPrice\\\":155.3707457175014,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.11541714131567038},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.39150833323886725,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":546.735872378338,\\\"ask\\\":560.0169057154636,\\\"price\\\":553.3763890469008,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":739.8606938928632,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.11470823067403446},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3799117735491962,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":441.8643342672614,\\\"ask\\\":452.59788084865244,\\\"price\\\":447.2311075579574,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":739.8606938928632,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.13449133293699572},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5941743392128572,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":496.01709349376836,\\\"ask\\\":508.06609171628895,\\\"price\\\":502.04159260502865,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2697000,\\\"averagePrice\\\":418.15089299901314,\\\"sharesShort\\\":203000,\\\"averageShortPrice\\\":51.79024857250044,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.1322101736144624},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.6225822302253753,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":677.743400701986,\\\"ask\\\":694.2068031481882,\\\"price\\\":685.9751019250874,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2900000,\\\"averagePrice\\\":449.6246161279711,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.15079974570490362},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.6372988225367243,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1090.1174102637497,\\\"ask\\\":1116.5979951284564,\\\"price\\\":1103.3577026961027,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2900000,\\\"averagePrice\\\":449.6246161279711,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.15652963604952164},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5944403027452699,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":2075.879774191357,\\\"ask\\\":2126.3060035239405,\\\"price\\\":2101.0928888576486,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2465000,\\\"averagePrice\\\":382.18092370877554,\\\"sharesShort\\\":435000,\\\"averageShortPrice\\\":395.871983530922,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.16565576587341535},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4671625881111712,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":2380.3273906034215,\\\"ask\\\":2438.149108593787,\\\"price\\\":2409.238249598605,\\\"maxShares\\\":2900000,\\\"investedShares\\\":1131000,\\\"averagePrice\\\":884.2546060130777,\\\"sharesShort\\\":1769000,\\\"averageShortPrice\\\":1609.8793996924173,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.16985669736744824},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4479729485902777,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":2885.357325769577,\\\"ask\\\":2955.446977407703,\\\"price\\\":2920.40215158864,\\\"maxShares\\\":2900000,\\\"investedShares\\\":1073000,\\\"averagePrice\\\":838.908215961125,\\\"sharesShort\\\":1827000,\\\"averageShortPrice\\\":2185.4756334070184,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.18461081134915952},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.35810561926737705,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1669.8327015662132,\\\"ask\\\":1710.3954392560813,\\\"price\\\":1690.1140704111465,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":3469.0089419158962,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.17483307462796327},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3485738108737148,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":1170.0023660586996,\\\"ask\\\":1198.4234761653893,\\\"price\\\":1184.212921112045,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":3469.0089419158962,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.179782698818931},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.31929647427287505,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":702.2744409614513,\\\"ask\\\":719.3337391224579,\\\"price\\\":710.8040900419543,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":3469.0089419158962,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.21264597670370855},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3124861860550764,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":352.1406430780418,\\\"ask\\\":360.6946667965367,\\\"price\\\":356.4176549372894,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":3469.0089419158962,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.21385235639896594},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4479619187336343,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":231.38074605546552,\\\"ask\\\":237.00133097988976,\\\"price\\\":234.1910385176777,\\\"maxShares\\\":2900000,\\\"investedShares\\\":957000,\\\"averagePrice\\\":61.37336358796083,\\\"sharesShort\\\":1943000,\\\"averageShortPrice\\\":2324.235991083655,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.17539733793107287},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.4820772211911421,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":273.67808761885493,\\\"ask\\\":280.3261383302441,\\\"price\\\":277.00211297454956,\\\"maxShares\\\":2900000,\\\"investedShares\\\":1247000,\\\"averagePrice\\\":79.97135255400954,\\\"sharesShort\\\":1653000,\\\"averageShortPrice\\\":184.9035826716745,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.1569616282569466},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.3926705866111703,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":196.8995509753461,\\\"ask\\\":201.68253601928146,\\\"price\\\":199.29104349731378,\\\"maxShares\\\":2900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":2900000,\\\"averageShortPrice\\\":324.3922503011827,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.13272698438293162},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.44234455740267076,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":134.61324377167577,\\\"ask\\\":137.88320111025908,\\\"price\\\":136.24822244096742,\\\"maxShares\\\":2900000,\\\"investedShares\\\":870000,\\\"averagePrice\\\":39.043838944372474,\\\"sharesShort\\\":2030000,\\\"averageShortPrice\\\":227.07457521082816,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.16363261891095432},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.6276348108746077,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":135.5876150554802,\\\"ask\\\":138.88124133213165,\\\"price\\\":137.2344281938059,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2900000,\\\"averagePrice\\\":130.146129814575,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.15031889722133196},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5969776095274021,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":120.74384411551866,\\\"ask\\\":123.67689296043001,\\\"price\\\":122.21036853797428,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2900000,\\\"averagePrice\\\":130.146129814575,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.11320544223450013},{\\\"volatility\\\":0.037000000000000005,\\\"forecast\\\":0.5537341242688756,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"NTLK\\\",\\\"bid\\\":168.1355234111631,\\\"ask\\\":172.21978713775007,\\\"price\\\":170.17765527445655,\\\"maxShares\\\":2900000,\\\"investedShares\\\":2117000,\\\"averagePrice\\\":95.00667476463974,\\\"sharesShort\\\":783000,\\\"averageShortPrice\\\":55.526595565659974,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.12480068325784943}],\\\"recentTicksOfPrices\\\":[140.92471401490403,140.4693670641909,139.6158222365638,135.9648229260366,131.98639730287533,133.39424869405354,136.16208841976157,139.7043350304561,140.16679689359367,137.219784390251,135.34140011892757,138.09898776377122,136.19423297634725,131.987261081228,129.49915780759238,127.44621062123376,126.52976137178433,131.1526079097614,130.58949668636524,129.08551261913615]}],[\\\"OMGA\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6081.505002308892,\\\"ask\\\":6191.966243521363,\\\"price\\\":6136.735622915127,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5775902970211458,\\\"bias\\\":0.07759029702114584,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6083.317324211503,\\\"ask\\\":6193.811483480732,\\\"price\\\":6138.564403846118,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5775671746863508,\\\"bias\\\":0.07756717468635077,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6105.011474445873,\\\"ask\\\":6215.899674788986,\\\"price\\\":6160.45557461743,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5778437925004839,\\\"bias\\\":0.0778437925004839,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6143.510627758518,\\\"ask\\\":6255.098106365635,\\\"price\\\":6199.304367062077,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5773528974195395,\\\"bias\\\":0.07735289741953955,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6158.9450759927895,\\\"ask\\\":6270.812897756533,\\\"price\\\":6214.878986874662,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5775472324444678,\\\"bias\\\":0.07754723244446782,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6161.6277983818245,\\\"ask\\\":6273.544347696529,\\\"price\\\":6217.586073039177,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5775810105824638,\\\"bias\\\":0.0775810105824638,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6114.172292926736,\\\"ask\\\":6225.226885532872,\\\"price\\\":6169.699589229805,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5781831601285546,\\\"bias\\\":0.07818316012855464,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6091.787136846906,\\\"ask\\\":6202.435137314357,\\\"price\\\":6147.111137080632,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5778958647580869,\\\"bias\\\":0.07789586475808685,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6138.042864701694,\\\"ask\\\":6249.531029751774,\\\"price\\\":6193.786947226735,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5784873381369693,\\\"bias\\\":0.07848733813696929,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6193.949933742314,\\\"ask\\\":6306.453565233092,\\\"price\\\":6250.201749487704,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.579202223504954,\\\"bias\\\":0.07920222350495398,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6159.169135481689,\\\"ask\\\":6271.041026943516,\\\"price\\\":6215.105081212603,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5787549689326368,\\\"bias\\\":0.07875496893263678,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6206.032496046366,\\\"ask\\\":6318.755588810073,\\\"price\\\":6262.39404242822,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5781557448450747,\\\"bias\\\":0.0781557448450747,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6219.149426935119,\\\"ask\\\":6332.110768695796,\\\"price\\\":6275.630097815458,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5783209330719079,\\\"bias\\\":0.0783209330719079,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6238.676340578215,\\\"ask\\\":6351.992358873277,\\\"price\\\":6295.3343497257465,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.578566845493616,\\\"bias\\\":0.07856684549361603,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6194.760829781768,\\\"ask\\\":6307.279189959439,\\\"price\\\":6251.020009870604,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5780098743293816,\\\"bias\\\":0.07800987432938156,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6222.704681266018,\\\"ask\\\":6335.73059878649,\\\"price\\\":6279.217640026254,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.578361767873372,\\\"bias\\\":0.07836176787337201,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6277.949708805194,\\\"ask\\\":6391.979067794592,\\\"price\\\":6334.9643882998935,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5776660739193883,\\\"bias\\\":0.07766607391938829,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6226.9997766423085,\\\"ask\\\":6340.103708004126,\\\"price\\\":6283.551742323218,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5770306023697676,\\\"bias\\\":0.07703060236976755,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6258.010489559744,\\\"ask\\\":6371.677683113805,\\\"price\\\":6314.844086336775,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5774142179120239,\\\"bias\\\":0.07741421791202385,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6293.780681925642,\\\"ask\\\":6408.097586340033,\\\"price\\\":6350.939134132837,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5778567102138805,\\\"bias\\\":0.07785671021388052,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6320.885010039289,\\\"ask\\\":6435.6942231378835,\\\"price\\\":6378.289616588587,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5781920021355623,\\\"bias\\\":0.07819200213556232,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6368.366303155256,\\\"ask\\\":6484.037941355855,\\\"price\\\":6426.202122255556,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5776046385991546,\\\"bias\\\":0.07760463859915456,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6372.628461071351,\\\"ask\\\":6488.377514854685,\\\"price\\\":6430.502987963018,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5776565770726948,\\\"bias\\\":0.0776565770726948,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6350.610319715071,\\\"ask\\\":6465.959447621095,\\\"price\\\":6408.284883668083,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5773873346841447,\\\"bias\\\":0.07738733468414472,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6360.704986664639,\\\"ask\\\":6476.237468763492,\\\"price\\\":6418.471227714066,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5772643229844147,\\\"bias\\\":0.07726432298441466,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6415.968358190879,\\\"ask\\\":6532.504614949139,\\\"price\\\":6474.236486570009,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5779356144522256,\\\"bias\\\":0.07793561445222563,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6451.147883710083,\\\"ask\\\":6568.323122768388,\\\"price\\\":6509.735503239236,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5783629447918426,\\\"bias\\\":0.07836294479184258,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6401.0816984382855,\\\"ask\\\":6517.347561780251,\\\"price\\\":6459.214630109269,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5777500274917322,\\\"bias\\\":0.07775002749173221,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6453.829687149293,\\\"ask\\\":6571.053637067241,\\\"price\\\":6512.441662108267,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.578390725074676,\\\"bias\\\":0.07839072507467604,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6491.888616640454,\\\"ask\\\":6609.803848829684,\\\"price\\\":6550.846232735069,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.578853003632215,\\\"bias\\\":0.07885300363221504,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6542.291480590936,\\\"ask\\\":6661.122203750004,\\\"price\\\":6601.70684217047,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5782407908465591,\\\"bias\\\":0.0782407908465591,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6596.432668585052,\\\"ask\\\":6716.246783655214,\\\"price\\\":6656.3397261201335,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5788882779508251,\\\"bias\\\":0.07888827795082509,\\\"countOfNegative\\\":4,\\\"countOfPositive\\\":16,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6589.320355281306,\\\"ask\\\":6709.005286053316,\\\"price\\\":6649.162820667311,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5788031283271117,\\\"bias\\\":0.07880312832711167,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6631.099427725017,\\\"ask\\\":6751.543211477842,\\\"price\\\":6691.32131960143,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5793027734239736,\\\"bias\\\":0.07930277342397363,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6569.845123374654,\\\"ask\\\":6689.176316332013,\\\"price\\\":6629.510719853333,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5800421570970922,\\\"bias\\\":0.08004215709709217,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6534.817842500975,\\\"ask\\\":6653.512818449528,\\\"price\\\":6594.165330475252,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.580471191109355,\\\"bias\\\":0.08047119110935497,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6540.543067634625,\\\"ask\\\":6659.342033545243,\\\"price\\\":6599.942550589934,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5804006894217827,\\\"bias\\\":0.08040068942178269,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6529.753928645373,\\\"ask\\\":6648.356926340242,\\\"price\\\":6589.055427492808,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5805335358081063,\\\"bias\\\":0.0805335358081063,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6482.706077018102,\\\"ask\\\":6600.4545224129815,\\\"price\\\":6541.580299715542,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5799490684886405,\\\"bias\\\":0.07994906848864047,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6430.320352554203,\\\"ask\\\":6547.117291349335,\\\"price\\\":6488.718821951769,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5806003874966161,\\\"bias\\\":0.08060038749661613,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6411.835826930242,\\\"ask\\\":6528.297022575795,\\\"price\\\":6470.0664247530185,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5803680265990203,\\\"bias\\\":0.08036802659902031,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6376.0792598823355,\\\"ask\\\":6491.890992150632,\\\"price\\\":6433.985126016484,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.580818724373384,\\\"bias\\\":0.080818724373384,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6331.5616636340255,\\\"ask\\\":6446.5648018231395,\\\"price\\\":6389.063232728583,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5802504829928061,\\\"bias\\\":0.08025048299280613,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6337.226340730328,\\\"ask\\\":6452.332369118971,\\\"price\\\":6394.77935492465,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5803222809309969,\\\"bias\\\":0.08032228093099691,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6300.654301782888,\\\"ask\\\":6415.096054993878,\\\"price\\\":6357.875178388384,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5807885102217746,\\\"bias\\\":0.08078851022177458,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6277.1085969100495,\\\"ask\\\":6391.122678387729,\\\"price\\\":6334.11563764889,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5810915514053754,\\\"bias\\\":0.08109155140537538,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6311.675190038902,\\\"ask\\\":6426.317120836782,\\\"price\\\":6368.996155437842,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5815381039255909,\\\"bias\\\":0.08153810392559091,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6335.532598865316,\\\"ask\\\":6450.607863022304,\\\"price\\\":6393.07023094381,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.5812298992379743,\\\"bias\\\":0.0812298992379743,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6281.4205793025585,\\\"ask\\\":6395.512981348416,\\\"price\\\":6338.466780325488,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.4194698650655225,\\\"bias\\\":0.08053013493447753,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6248.971061466354,\\\"ask\\\":6362.474067628204,\\\"price\\\":6305.722564547279,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.41905168997330255,\\\"bias\\\":0.08094831002669745,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6276.176619553321,\\\"ask\\\":6390.173773087085,\\\"price\\\":6333.175196320203,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.4186992729227495,\\\"bias\\\":0.0813007270772505,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6288.462581433907,\\\"ask\\\":6402.682890682959,\\\"price\\\":6345.572736058433,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.4185401222655447,\\\"bias\\\":0.08145987773445529,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6226.9743305638085,\\\"ask\\\":6340.077799736511,\\\"price\\\":6283.52606515016,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.41934449773460664,\\\"bias\\\":0.08065550226539336,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6234.231400137643,\\\"ask\\\":6347.466682884844,\\\"price\\\":6290.849041511244,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.4194384956476187,\\\"bias\\\":0.0805615043523813,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":6253.862603677115,\\\"ask\\\":6367.454457225235,\\\"price\\\":6310.6585304511755,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.01,\\\"forecast\\\":0.41969217877034537,\\\"bias\\\":0.08030782122965463,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4854580173667692,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4079.415312675543,\\\"ask\\\":4153.511655388111,\\\"price\\\":4116.463484031826,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.01934955637979152},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5168409894048576,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4195.620411230323,\\\"ask\\\":4271.827441908572,\\\"price\\\":4233.723926569448,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.024025458393311494},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5191752857576507,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4308.925201260321,\\\"ask\\\":4387.190240233767,\\\"price\\\":4348.057720747045,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.028846537902923353},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5183914042673162,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4486.076999798144,\\\"ask\\\":4567.559730369654,\\\"price\\\":4526.818365083902,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.025446584636493408},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5350941350282021,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4515.13958786746,\\\"ask\\\":4597.150195921559,\\\"price\\\":4556.144891894509,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.05236511853703574},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5043250513021174,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4574.977657316643,\\\"ask\\\":4658.075132424313,\\\"price\\\":4616.526394870478,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.05489393486367333},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4458438699150761,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4182.660498670978,\\\"ask\\\":4258.632132350167,\\\"price\\\":4220.646315510574,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.05603624844477395},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5264921528316954,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3996.32612878938,\\\"ask\\\":4068.9132834999828,\\\"price\\\":4032.6197061446805,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.05394996723324086},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.44735495779091755,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4185.144707944341,\\\"ask\\\":4261.161463487225,\\\"price\\\":4223.153085715781,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.056230542124843574},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.44747623914370727,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3806.7497689541556,\\\"ask\\\":3875.8935589048856,\\\"price\\\":3841.321663929519,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.05558582350195784},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4559346865766203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3617.584954548505,\\\"ask\\\":3683.29285483294,\\\"price\\\":3650.4389046907227,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.05260226117904354},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4813204005816267,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3629.520747152325,\\\"ask\\\":3695.4454428624576,\\\"price\\\":3662.483095007393,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.027517836286763797},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5075659314974864,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3406.354050181433,\\\"ask\\\":3468.2252640091465,\\\"price\\\":3437.28965709529,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.026428497617391966},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5089361389654212,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3249.095677996769,\\\"ask\\\":3308.110533903874,\\\"price\\\":3278.6031059503202,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.020776317377423692},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5105282782438688,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3240.4909852758574,\\\"ask\\\":3299.349550094188,\\\"price\\\":3269.920267685024,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.02022236405664879},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4971396680258446,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3044.577641621893,\\\"ask\\\":3099.877740057002,\\\"price\\\":3072.2276908394474,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.021836759109293225},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5110284248531192,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2876.8372332841827,\\\"ask\\\":2929.0905836364673,\\\"price\\\":2902.9639084603245,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.026769039316367205},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5095933048409809,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2960.8808715466153,\\\"ask\\\":3014.6607461054846,\\\"price\\\":2987.770808826051,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.054381126217820375},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4482948133087097,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2844.5587236190954,\\\"ask\\\":2896.2257841893734,\\\"price\\\":2870.3922539042337,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.054975990739135394},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5310799762982035,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2699.3245078438936,\\\"ask\\\":2748.353610912702,\\\"price\\\":2723.8390593782983,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.054579566191640505},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5233433983060932,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2633.4724810635894,\\\"ask\\\":2681.3054827378014,\\\"price\\\":2657.3889819006963,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.05447156044570722},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5025714454328213,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2567.8032410745764,\\\"ask\\\":2614.443461396821,\\\"price\\\":2591.123351235698,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.055665970524229724},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4728927838040524,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2639.9452620091406,\\\"ask\\\":2687.8958318539076,\\\"price\\\":2663.920546931524,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.05592714956411837},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5266958964596326,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2617.5651183682853,\\\"ask\\\":2665.10918711766,\\\"price\\\":2641.3371527429736,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.05418009187471895},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.501204464703188,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2552.30793043276,\\\"ask\\\":2598.6667021257863,\\\"price\\\":2575.4873162792746,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.056012694522765694},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.47860327706484435,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2702.0036708851967,\\\"ask\\\":2751.0814368548577,\\\"price\\\":2726.542553870028,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.055976157368264556},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4696628596527402,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2562.8162770186427,\\\"ask\\\":2609.365916762674,\\\"price\\\":2586.0910968906596,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.0409018284189388},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.49619438934425375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2422.1558345083367,\\\"ask\\\":2466.1505923500617,\\\"price\\\":2444.1532134291983,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.036642360499824445},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.522191482215666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2273.1529372095847,\\\"ask\\\":2314.441285211371,\\\"price\\\":2293.7971112104788,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.03465482092048755},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5130806042224181,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2345.743714213302,\\\"ask\\\":2388.350562705574,\\\"price\\\":2367.047138459438,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.02636859405800318},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4892454873991096,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2346.6381238088056,\\\"ask\\\":2389.261217884041,\\\"price\\\":2367.9496708464235,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.01758637431187432},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5178639885323834,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2468.01818504672,\\\"ask\\\":2512.8459623735007,\\\"price\\\":2490.43207371011,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.024367790245531595},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5234238711156727,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2440.8577659065418,\\\"ask\\\":2485.1922157413746,\\\"price\\\":2463.0249908239584,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.03519573018039812},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5052667497860844,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2238.7090896421823,\\\"ask\\\":2279.3718178092445,\\\"price\\\":2259.040453725714,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.029492418602442894},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4803874430279,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2180.0581603106393,\\\"ask\\\":2219.6555840095207,\\\"price\\\":2199.85687216008,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.032556579569988586},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.48160887090602045,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2005.1765176502447,\\\"ask\\\":2041.5974836620567,\\\"price\\\":2023.3870006561497,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.05213170230994224},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5533760591612762,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1949.5253895962294,\\\"ask\\\":1984.9355379440922,\\\"price\\\":1967.230463770161,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.055181448405673406},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5549266110233511,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1940.5978068822787,\\\"ask\\\":1975.8457993382629,\\\"price\\\":1958.2218031102718,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.05633579005806877},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4624430912803393,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1981.3357085562093,\\\"ask\\\":2017.3236427176746,\\\"price\\\":1999.3296756369423,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.055451423227878105},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.447615412175911,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1865.0497963258554,\\\"ask\\\":1898.9255746647707,\\\"price\\\":1881.9876854953138,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.05428207952957487},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4440272283153596,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1793.336221013971,\\\"ask\\\":1825.909431890107,\\\"price\\\":1809.622826452039,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.059859526012174036},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4403286323322703,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1772.5896291330648,\\\"ask\\\":1804.7860098842204,\\\"price\\\":1788.6878195086426,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.061125678250579796},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4373620698419111,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1757.578516191075,\\\"ask\\\":1789.502243024011,\\\"price\\\":1773.5403796075434,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.06491512607770372},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5074443307831181,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1717.9646496469838,\\\"ask\\\":1749.168851154195,\\\"price\\\":1733.5667504005894,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.06912658727893006},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5675924619533061,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1761.924209226706,\\\"ask\\\":1793.9268689301161,\\\"price\\\":1777.9255390784112,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.07009108675379727},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5677589057511159,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":1989.1029586455625,\\\"ask\\\":2025.231973030648,\\\"price\\\":2007.1674658381055,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.07362166364766909},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4968711321177153,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2274.4880460838417,\\\"ask\\\":2315.800644297273,\\\"price\\\":2295.1443451905575,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.07539839266015336},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4323075040851112,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2366.2905035684325,\\\"ask\\\":2409.2705530782537,\\\"price\\\":2387.780528323343,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.071630755960636},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5364179598441761,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2531.7940434829184,\\\"ask\\\":2577.7802117802853,\\\"price\\\":2554.787127631601,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.07501247358776841},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4276084585567739,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2661.7696191852856,\\\"ask\\\":2710.1165951139806,\\\"price\\\":2685.9431071496338,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.07465582408317645},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4301941148766913,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2466.270258478997,\\\"ask\\\":2511.066287391835,\\\"price\\\":2488.6682729354156,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.07239597916732371},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.45977378096091714,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2534.2823137561863,\\\"ask\\\":2580.3136776791043,\\\"price\\\":2557.2979957176467,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.07470427777091937},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5747328182950269,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":2568.555916677777,\\\"ask\\\":2615.2098082016923,\\\"price\\\":2591.8828624397343,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.07641353014683505},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5759319018550635,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3099.0854252914623,\\\"ask\\\":3155.3755742876756,\\\"price\\\":3127.2304997895694,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.08156711586818799},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5830763989354096,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3383.315402632767,\\\"ask\\\":3444.768154648295,\\\"price\\\":3414.0417786405324,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.08507445843302919},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5843596377831417,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":3723.138234975551,\\\"ask\\\":3790.76334923343,\\\"price\\\":3756.9507921044915,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.08671622108824262},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4705855365570904,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4226.73848552199,\\\"ask\\\":4303.510728447715,\\\"price\\\":4265.124606984851,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.08906366784090985},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5671892556293759,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4637.765914961403,\\\"ask\\\":4722.003842781083,\\\"price\\\":4679.884878871246,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.08738463010507252},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5800392515802845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4944.231258035521,\\\"ask\\\":5034.035660300545,\\\"price\\\":4989.1334591680325,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.08197398603859218},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4796413172783138,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5214.422967309143,\\\"ask\\\":5309.134988915159,\\\"price\\\":5261.77897811215,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.08072747936189062},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5558097042350673,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5359.380587016256,\\\"ask\\\":5456.725542179012,\\\"price\\\":5408.053064597633,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.07829076302079713},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5188511338269639,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5606.470169532263,\\\"ask\\\":5708.303129221045,\\\"price\\\":5657.3866493766545,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.07599020935659906},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.42500355524358846,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5546.674354047606,\\\"ask\\\":5647.42121416149,\\\"price\\\":5597.047784104548,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.07662513098462431},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4209049883252042,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5169.830824991562,\\\"ask\\\":5263.7328985030135,\\\"price\\\":5216.7818617472885,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.08242679908732631},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4158980709746358,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4884.330873223268,\\\"ask\\\":4973.047276571421,\\\"price\\\":4928.689074897344,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.09012725633193497},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4113883560991978,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4628.611246505191,\\\"ask\\\":4712.6828937676455,\\\"price\\\":4670.647070136418,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.09121552247239656},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.42241849640392665,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4421.320523109925,\\\"ask\\\":4501.627051279428,\\\"price\\\":4461.473787194677,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09335472587338778},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5923096231522794,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4701.221807990027,\\\"ask\\\":4786.6123150978165,\\\"price\\\":4743.917061543921,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.09504860911347746},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5895057120591667,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":4937.623489479163,\\\"ask\\\":5027.307871730044,\\\"price\\\":4982.465680604606,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.09493351425716545},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.4589609458891561,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5197.673149948392,\\\"ask\\\":5292.080936728485,\\\"price\\\":5244.877043338438,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.08778346599118825},{\\\"volatility\\\":0.01,\\\"forecast\\\":0.5787884906773937,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"OMGA\\\",\\\"bid\\\":5576.7793347280995,\\\"ask\\\":5678.0730057927885,\\\"price\\\":5627.426170260444,\\\"maxShares\\\":3000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.0812671900011821}],\\\"recentTicksOfPrices\\\":[6594.165330475252,6599.942550589934,6589.055427492808,6541.580299715542,6488.718821951769,6470.0664247530185,6433.985126016484,6389.063232728583,6394.77935492465,6357.875178388384,6334.11563764889,6368.996155437842,6393.07023094381,6338.466780325488,6305.722564547279,6333.175196320203,6345.572736058433,6283.52606515016,6290.849041511244,6310.6585304511755]}],[\\\"FNS\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3595.3376104837,\\\"ask\\\":3653.326926781824,\\\"price\\\":3624.332268632762,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5553899336231178,\\\"bias\\\":0.05538993362311784,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3596.09832603986,\\\"ask\\\":3654.0999119437283,\\\"price\\\":3625.099118991794,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5554016532413364,\\\"bias\\\":0.05540165324133639,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3587.0160678674324,\\\"ask\\\":3644.8711657362624,\\\"price\\\":3615.9436168018474,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5555419292000711,\\\"bias\\\":0.05554192920007106,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3603.076468130061,\\\"ask\\\":3661.1906047128045,\\\"price\\\":3632.133536421433,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5552932473995343,\\\"bias\\\":0.05529324739953434,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3596.660941058176,\\\"ask\\\":3654.671601397824,\\\"price\\\":3625.666271228,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5553918764700521,\\\"bias\\\":0.05539187647005206,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3597.7732546648786,\\\"ask\\\":3655.8018555465706,\\\"price\\\":3626.7875551057246,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5553747458205669,\\\"bias\\\":0.055374745820566895,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3617.599527052134,\\\"ask\\\":3675.9479065207165,\\\"price\\\":3646.773716786425,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5550695918499574,\\\"bias\\\":0.05506959184995741,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3608.185777362009,\\\"ask\\\":3666.38232215817,\\\"price\\\":3637.2840497600896,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5549259153917037,\\\"bias\\\":0.05492591539170366,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3588.8379148408767,\\\"ask\\\":3646.7223973383107,\\\"price\\\":3617.7801560895937,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5546298030887625,\\\"bias\\\":0.05462980308876253,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3612.0465179065955,\\\"ask\\\":3670.305332711541,\\\"price\\\":3641.175925309068,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5549830877579315,\\\"bias\\\":0.05498308775793148,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3626.5285364262263,\\\"ask\\\":3685.0209321750363,\\\"price\\\":3655.7747343006313,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5547626404045463,\\\"bias\\\":0.05476264040454626,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3607.042616193587,\\\"ask\\\":3665.2207229063865,\\\"price\\\":3636.131669549987,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5544668023576484,\\\"bias\\\":0.05446680235764845,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3601.6378541748195,\\\"ask\\\":3659.728787306671,\\\"price\\\":3630.6833207407453,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5545485374228009,\\\"bias\\\":0.05454853742280086,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3609.666845799266,\\\"ask\\\":3667.8872787960286,\\\"price\\\":3638.7770622976473,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.554670140362304,\\\"bias\\\":0.054670140362304,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3627.835337055472,\\\"ask\\\":3686.3488102337856,\\\"price\\\":3657.0920736446287,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5543949698245288,\\\"bias\\\":0.05439496982452885,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3616.253460497454,\\\"ask\\\":3674.580129215155,\\\"price\\\":3645.4167948563045,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5542207575264234,\\\"bias\\\":0.05422075752642341,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3593.6016828200986,\\\"ask\\\":3651.563000284939,\\\"price\\\":3622.5823415525188,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5538789843825443,\\\"bias\\\":0.05387898438254435,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3614.4779596234644,\\\"ask\\\":3672.775991230294,\\\"price\\\":3643.626975426879,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5535659857001274,\\\"bias\\\":0.05356598570012738,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3601.7428130628246,\\\"ask\\\":3659.8354390799673,\\\"price\\\":3630.789126071396,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5533765855363838,\\\"bias\\\":0.0533765855363838,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3587.1849674739756,\\\"ask\\\":3645.0427895300077,\\\"price\\\":3616.1138785019916,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5531599677435061,\\\"bias\\\":0.053159967743506065,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3598.1532634357027,\\\"ask\\\":3656.1879934911176,\\\"price\\\":3627.17062846341,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.552997424059583,\\\"bias\\\":0.052997424059582965,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3617.3436028184433,\\\"ask\\\":3675.687854476805,\\\"price\\\":3646.515728647624,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5532800797664561,\\\"bias\\\":0.0532800797664561,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3619.0624988658783,\\\"ask\\\":3677.4344746540373,\\\"price\\\":3648.248486759958,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.553254762039258,\\\"bias\\\":0.05325476203925805,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3627.9713073460975,\\\"ask\\\":3686.486973593615,\\\"price\\\":3657.2291404698562,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5533858557895915,\\\"bias\\\":0.05338585578959154,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3623.8814434086303,\\\"ask\\\":3682.3311441087694,\\\"price\\\":3653.1062937587,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5533256052295844,\\\"bias\\\":0.053325605229584405,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3646.235917317693,\\\"ask\\\":3705.0461740486235,\\\"price\\\":3675.641045683158,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5536545524839043,\\\"bias\\\":0.05365455248390427,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3660.4307696084425,\\\"ask\\\":3719.4699755698693,\\\"price\\\":3689.950372589156,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5534456744890334,\\\"bias\\\":0.05344567448903337,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3680.7581623431215,\\\"ask\\\":3740.1252294776878,\\\"price\\\":3710.4416959104046,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5537424732222123,\\\"bias\\\":0.05374247322221226,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3659.3482629433943,\\\"ask\\\":3718.3700091199003,\\\"price\\\":3688.8591360316473,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5534280399235749,\\\"bias\\\":0.05342803992357492,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3644.0906501701334,\\\"ask\\\":3702.8663058180387,\\\"price\\\":3673.478477994086,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5532043395761782,\\\"bias\\\":0.053204339576178206,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3624.1130077892653,\\\"ask\\\":3682.56644339877,\\\"price\\\":3653.3397255940176,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5534976243790743,\\\"bias\\\":0.05349762437907435,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3645.407043192092,\\\"ask\\\":3704.2039309855127,\\\"price\\\":3674.8054870888022,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5538119579291173,\\\"bias\\\":0.053811957929117304,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3648.2007101691365,\\\"ask\\\":3707.042657107348,\\\"price\\\":3677.6216836382423,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5537707189980307,\\\"bias\\\":0.05377071899803065,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3631.851206698878,\\\"ask\\\":3690.4294519682144,\\\"price\\\":3661.140329333546,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5535286593687059,\\\"bias\\\":0.05352865936870588,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3655.8930563383756,\\\"ask\\\":3714.859073376091,\\\"price\\\":3685.3760648572334,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5531743144611907,\\\"bias\\\":0.0531743144611907,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3669.8061840139335,\\\"ask\\\":3728.996606336739,\\\"price\\\":3699.4013951753363,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5533766784293808,\\\"bias\\\":0.053376678429380764,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3672.0889456219506,\\\"ask\\\":3731.316186680369,\\\"price\\\":3701.7025661511598,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5534098807910784,\\\"bias\\\":0.053409880791078446,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3676.396804952973,\\\"ask\\\":3735.6935276135046,\\\"price\\\":3706.045166283239,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5534725378390807,\\\"bias\\\":0.05347253783908068,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3657.550243933924,\\\"ask\\\":3716.542989803826,\\\"price\\\":3687.046616868875,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5531970054799836,\\\"bias\\\":0.05319700547998363,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3678.7060215994934,\\\"ask\\\":3738.039989689808,\\\"price\\\":3708.3730056446507,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5535047043345037,\\\"bias\\\":0.05350470433450372,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3686.2357506293465,\\\"ask\\\":3745.6911659620782,\\\"price\\\":3715.9634582957124,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5536142199965588,\\\"bias\\\":0.0536142199965588,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3700.9129625308306,\\\"ask\\\":3760.6051070877793,\\\"price\\\":3730.759034809305,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5534007482272375,\\\"bias\\\":0.053400748227237504,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3719.38811732136,\\\"ask\\\":3779.378248245898,\\\"price\\\":3749.383182783629,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5536673276089784,\\\"bias\\\":0.05366732760897841,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3717.026995570868,\\\"ask\\\":3776.9790438865275,\\\"price\\\":3747.003019728698,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5536332371666277,\\\"bias\\\":0.05363323716662771,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3701.7713195638453,\\\"ask\\\":3761.4773085890683,\\\"price\\\":3731.624314076457,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5534122047962331,\\\"bias\\\":0.0534122047962331,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3711.6300272303765,\\\"ask\\\":3771.495027669576,\\\"price\\\":3741.562527449976,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5535544543485293,\\\"bias\\\":0.053554454348529346,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3726.1417831034664,\\\"ask\\\":3786.240844121264,\\\"price\\\":3756.1913136123653,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5537638419118697,\\\"bias\\\":0.05376384191186967,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3716.168632129251,\\\"ask\\\":3776.106835873271,\\\"price\\\":3746.137734001261,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5536195548879426,\\\"bias\\\":0.053619554887942567,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3693.577322199847,\\\"ask\\\":3753.151149977264,\\\"price\\\":3723.3642360885556,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5539475122791334,\\\"bias\\\":0.053947512279133414,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3707.195069734956,\\\"ask\\\":3766.988538601649,\\\"price\\\":3737.0918041683026,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5537486146960372,\\\"bias\\\":0.0537486146960372,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3695.7712181170236,\\\"ask\\\":3755.380431312459,\\\"price\\\":3725.5758247147414,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5535824744880213,\\\"bias\\\":0.05358247448802134,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3700.9078380706783,\\\"ask\\\":3760.599899975044,\\\"price\\\":3730.753869022861,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5535080021272129,\\\"bias\\\":0.05350800212721285,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3726.854511307951,\\\"ask\\\":3786.96506794195,\\\"price\\\":3756.9097896249505,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5531328631863043,\\\"bias\\\":0.05313286318630428,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3723.773269442502,\\\"ask\\\":3783.834128627059,\\\"price\\\":3753.8036990347805,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.553088898317706,\\\"bias\\\":0.053088898317706024,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3732.098678601972,\\\"ask\\\":3792.2938185794237,\\\"price\\\":3762.196248590698,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.553207591580786,\\\"bias\\\":0.05320759158078603,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5133899432368958,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2226.276861631423,\\\"ask\\\":2262.1845529480584,\\\"price\\\":2244.230707289741,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.01711439869298914},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5094461429421568,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2225.6453472024546,\\\"ask\\\":2261.5428528024936,\\\"price\\\":2243.594100002473,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.019619679722859718},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4986816661572571,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2192.2824181856317,\\\"ask\\\":2227.641812027335,\\\"price\\\":2209.9621151064825,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.02032840647168027},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5162662617446948,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2168.283675145589,\\\"ask\\\":2203.2559924866455,\\\"price\\\":2185.7698338161167,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.021699457617053164},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4794391826561069,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2091.6323778173264,\\\"ask\\\":2125.368383911155,\\\"price\\\":2108.5003808642405,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.0512359363526525},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4623291681442045,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":1867.5045370051798,\\\"ask\\\":1897.6255779246176,\\\"price\\\":1882.565057464898,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.05130019373535122},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5210064305343234,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":1858.3011637195675,\\\"ask\\\":1888.2737631343991,\\\"price\\\":1873.287463426983,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.0519608061045278},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5350932725754608,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":1913.7900163855159,\\\"ask\\\":1944.6575972949609,\\\"price\\\":1929.2238068402385,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.05319533444699792},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.48949913045871335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":1839.3249017804092,\\\"ask\\\":1868.9914324542876,\\\"price\\\":1854.158167117349,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.05331178149169402},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5511566598623855,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":1852.1407476576126,\\\"ask\\\":1882.0139855230602,\\\"price\\\":1867.077366590336,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.05225064998079676},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4740907520810215,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":1839.712992434707,\\\"ask\\\":1869.3857826352657,\\\"price\\\":1854.5493875349864,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.052454641095821875},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5506583672401846,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":1807.0648260336427,\\\"ask\\\":1836.2110329051536,\\\"price\\\":1821.6379294693988,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.05161996501968502},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5517799434757739,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":1944.0735307950226,\\\"ask\\\":1975.4295554852642,\\\"price\\\":1959.7515431401428,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.05292754079949058},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.47514487534065536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2022.6971567985945,\\\"ask\\\":2055.3213044888935,\\\"price\\\":2039.0092306437427,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.053094297667140966},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5516921961033845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":1991.011983597677,\\\"ask\\\":2023.125080107316,\\\"price\\\":2007.068531852497,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.05309277383807531},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5513056230851973,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2027.8185658539878,\\\"ask\\\":2060.525316916151,\\\"price\\\":2044.171941385069,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.052511374084165285},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4739937568001892,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2041.2978411556237,\\\"ask\\\":2074.22199988394,\\\"price\\\":2057.7599205197826,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.05319515283727222},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5526623136999375,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2134.2421600768153,\\\"ask\\\":2168.6654207232145,\\\"price\\\":2151.4537904000144,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.05438926836392832},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4943667032881931,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2219.086557644968,\\\"ask\\\":2254.878276316661,\\\"price\\\":2236.982416980814,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.05464821934329295},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5275058564422047,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2114.843556023652,\\\"ask\\\":2148.9539359595174,\\\"price\\\":2131.8987459915834,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.05540864431864467},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4470411355084192,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2108.307842222487,\\\"ask\\\":2142.3128074196243,\\\"price\\\":2125.310324821055,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.05379002720266013},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4479397186584849,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2082.7052175601084,\\\"ask\\\":2116.2972371981755,\\\"price\\\":2099.501227379142,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.05315865379160045},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4484835754521108,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2060.7928017767904,\\\"ask\\\":2094.0313953538366,\\\"price\\\":2077.4120985653126,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.05360765334510226},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4459669666165283,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2118.9789427393243,\\\"ask\\\":2153.156022460925,\\\"price\\\":2136.0674826001255,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.055092520660700306},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4985262708276154,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2109.5031054553947,\\\"ask\\\":2143.5273490917725,\\\"price\\\":2126.5152272735836,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.05284556691285153},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.47565513828785866,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2185.692061333298,\\\"ask\\\":2220.945159096739,\\\"price\\\":2203.3186102150185,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.05389880705476935},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5495821012208106,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2109.197687935972,\\\"ask\\\":2143.2170054833255,\\\"price\\\":2126.207346709649,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.05451187772817323},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5044884417015254,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2118.6150037941234,\\\"ask\\\":2152.7862135327387,\\\"price\\\":2135.700608663432,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.053979446094988615},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5153466541691346,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2158.080710983351,\\\"ask\\\":2192.888464386308,\\\"price\\\":2175.4845876848285,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.052142646620103095},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5485842517712626,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2339.713680676135,\\\"ask\\\":2377.4509981063957,\\\"price\\\":2358.5823393912665,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.053310014749720525},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5516662329400718,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2435.4382702813805,\\\"ask\\\":2474.719532705274,\\\"price\\\":2455.078901493327,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.0528190683998232},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5513467970995116,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2439.6095661116688,\\\"ask\\\":2478.9581075005663,\\\"price\\\":2459.2838368061166,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.0525366065122963},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4767652200203344,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2354.8684410998294,\\\"ask\\\":2392.850190149828,\\\"price\\\":2373.859315624829,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.05269243640606858},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5107823649294214,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2327.030763957746,\\\"ask\\\":2364.56351821513,\\\"price\\\":2345.7971410864375,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.053246748431607815},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4482206999568185,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2458.749892848586,\\\"ask\\\":2498.407149184854,\\\"price\\\":2478.5785210167196,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.05260262163031998},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.46330598799544265,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2397.677728833625,\\\"ask\\\":2436.349950266426,\\\"price\\\":2417.0138395500253,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.0525616401955441},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5527390326975931,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2320.6665122615423,\\\"ask\\\":2358.0966172980184,\\\"price\\\":2339.381564779779,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.054245562197760666},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5528066154158813,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2344.314546169969,\\\"ask\\\":2382.126071108195,\\\"price\\\":2363.2203086390828,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.05436178929524371},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.47347397350527404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2215.3219532653047,\\\"ask\\\":2251.052952511521,\\\"price\\\":2233.187452888413,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.053992002716736764},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5147918162089818,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2174.737930747914,\\\"ask\\\":2209.814348985785,\\\"price\\\":2192.276139866849,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.0562880335732322},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4436980532482667,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2097.938670128414,\\\"ask\\\":2131.7763906143573,\\\"price\\\":2114.8575303713856,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.05889701897056221},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5281747767334223,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2141.8212078870456,\\\"ask\\\":2176.366711240064,\\\"price\\\":2159.0939595635555,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.05823986823226479},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.44789639527110814,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2306.5054758382867,\\\"ask\\\":2343.707177061484,\\\"price\\\":2325.1063264498844,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.05353718161483639},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5055020718212295,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2289.4713431504065,\\\"ask\\\":2326.398300297994,\\\"price\\\":2307.9348217242,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.0530897533528919},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5536506737742788,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2333.55795228958,\\\"ask\\\":2371.1959837781237,\\\"price\\\":2352.376968033853,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.05509135515195751},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5262884124093666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2478.4368220819924,\\\"ask\\\":2518.4116095349286,\\\"price\\\":2498.4242158084594,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.05390231888765529},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.46708582015707145,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2482.18156279983,\\\"ask\\\":2522.2167492966037,\\\"price\\\":2502.199156048218,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.040338053413573105},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4773303356963907,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2656.143385730366,\\\"ask\\\":2698.9844080808566,\\\"price\\\":2677.5638969056104,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.030183238542311197},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5174883379650252,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2722.7855440898343,\\\"ask\\\":2766.7014399622503,\\\"price\\\":2744.7434920260416,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.02179561143356612},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5178118266292145,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2884.656970342198,\\\"ask\\\":2931.183695670298,\\\"price\\\":2907.9203330062487,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.021583501834523955},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4936007097406987,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2971.845250347808,\\\"ask\\\":3019.7782382566434,\\\"price\\\":2995.811744302228,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.01975897564112683},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4970922162812825,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2949.614659386253,\\\"ask\\\":2997.1890893763552,\\\"price\\\":2973.401874381303,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.013082389601856537},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5158195297479935,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2988.301489974756,\\\"ask\\\":3036.4999011033797,\\\"price\\\":3012.4006955390673,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.022377956583006897},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5150278449064495,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3058.4909686137107,\\\"ask\\\":3107.821468107481,\\\"price\\\":3083.1562183605947,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.020813689683889303},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.49384593171750946,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2945.809463844534,\\\"ask\\\":2993.322519712994,\\\"price\\\":2969.5659917787643,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.020901610433168516},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5196499064286177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":2871.509567129754,\\\"ask\\\":2917.8242375673303,\\\"price\\\":2894.6669023485433,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.025933202821210144},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.490095368548828,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3032.1927079741977,\\\"ask\\\":3081.099041973782,\\\"price\\\":3056.645874973992,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.0265730765221332},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.47936522204764836,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3140.197845846637,\\\"ask\\\":3190.8461981990044,\\\"price\\\":3165.5220220228225,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.040178849334560285},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5233692177300255,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3224.912513072078,\\\"ask\\\":3276.9272310248534,\\\"price\\\":3250.9198720484655,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.03414953439921897},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5263914109593205,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3232.498149828615,\\\"ask\\\":3284.6352167613354,\\\"price\\\":3258.5666832949732,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.03102013411427762},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.48254931614359586,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3178.4639927850994,\\\"ask\\\":3229.729541055825,\\\"price\\\":3204.096766920464,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.04739521743616715},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5386291041724267,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3277.5871062527603,\\\"ask\\\":3330.451414418128,\\\"price\\\":3304.019260335445,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.04712635994063907},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5455471927744426,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3396.2009945543955,\\\"ask\\\":3450.9784299504345,\\\"price\\\":3423.5897122524143,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.05151293346474217},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5519322152924109,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3550.964401257923,\\\"ask\\\":3608.2380206330504,\\\"price\\\":3579.6012109454837,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.053537134785287654},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5519879143168936,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3577.623744588251,\\\"ask\\\":3635.3273533719316,\\\"price\\\":3606.4755489800905,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.05323066744032301},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.4908945695728197,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3589.9496524478373,\\\"ask\\\":3647.8520661969974,\\\"price\\\":3618.9008593224153,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.05471088704682553},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5348352736273698,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3561.375919639135,\\\"ask\\\":3618.817466730088,\\\"price\\\":3590.096693184613,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.055175679792858645},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.520532265094335,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3615.022105551503,\\\"ask\\\":3673.32891370556,\\\"price\\\":3644.1755096285297,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.05562586844387957},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.5063093129135706,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3522.8583816031373,\\\"ask\\\":3579.678678080606,\\\"price\\\":3551.268529841872,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.058189839885640304},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.47134023081012566,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3618.330488977205,\\\"ask\\\":3676.6906581542557,\\\"price\\\":3647.5105735657316,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.05830287300626208},{\\\"volatility\\\":0.0070999999999999995,\\\"forecast\\\":0.556896460233914,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"FNS\\\",\\\"bid\\\":3538.337785420076,\\\"ask\\\":3595.4077497010467,\\\"price\\\":3566.872767560562,\\\"maxShares\\\":4000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.058395958398957504}],\\\"recentTicksOfPrices\\\":[3699.4013951753363,3701.7025661511598,3706.045166283239,3687.046616868875,3708.3730056446507,3715.9634582957124,3730.759034809305,3749.383182783629,3747.003019728698,3731.624314076457,3741.562527449976,3756.1913136123653,3746.137734001261,3723.3642360885556,3737.0918041683026,3725.5758247147414,3730.753869022861,3756.9097896249505,3753.8036990347805,3762.196248590698]}],[\\\"JGN\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":416.98341632374127,\\\"ask\\\":426.25908382538154,\\\"price\\\":421.62125007456143,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5578536616739984,\\\"bias\\\":0.05785366167399841,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":416.7164211903686,\\\"ask\\\":425.98614946760625,\\\"price\\\":421.35128532898744,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5578165941495878,\\\"bias\\\":0.05781659414958784,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":419.9114975860176,\\\"ask\\\":429.25229935233955,\\\"price\\\":424.5818984691786,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5573732988392747,\\\"bias\\\":0.05737329883927467,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":414.2943968370026,\\\"ask\\\":423.5102479294334,\\\"price\\\":418.902322383218,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5581511795017794,\\\"bias\\\":0.05815117950177939,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":416.53220067420926,\\\"ask\\\":425.7978310228772,\\\"price\\\":421.16501584854325,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5578370769369831,\\\"bias\\\":0.057837076936983145,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":416.142483166241,\\\"ask\\\":425.39944436913004,\\\"price\\\":420.77096376768554,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5578912413696087,\\\"bias\\\":0.05789124136960866,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":423.086798685628,\\\"ask\\\":432.4982340456723,\\\"price\\\":427.79251636565016,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5569251899277544,\\\"bias\\\":0.056925189927754416,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":426.4293904725612,\\\"ask\\\":435.91518075607615,\\\"price\\\":431.1722856143187,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5564754532001769,\\\"bias\\\":0.056475453200176884,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":433.3909475645185,\\\"ask\\\":443.0315955386534,\\\"price\\\":438.211271551586,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5573974278588925,\\\"bias\\\":0.05739742785889246,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":425.0669375552189,\\\"ask\\\":434.52242049375764,\\\"price\\\":429.7946790244883,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5585214314493702,\\\"bias\\\":0.058521431449370165,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":430.2276920686778,\\\"ask\\\":439.7979743998314,\\\"price\\\":435.01283323425463,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.557810920433803,\\\"bias\\\":0.05781092043380298,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":423.30298997756915,\\\"ask\\\":432.7192344462309,\\\"price\\\":428.01111221190007,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5568652068170905,\\\"bias\\\":0.05686520681709051,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":425.22655991478155,\\\"ask\\\":434.6855936034824,\\\"price\\\":429.956076759132,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5566068004157738,\\\"bias\\\":0.05660680041577382,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":428.0970857294896,\\\"ask\\\":437.6199733796906,\\\"price\\\":432.8585295545901,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.556224671693819,\\\"bias\\\":0.05622467169381895,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":421.6701389745721,\\\"ask\\\":431.0500611762309,\\\"price\\\":426.36010007540153,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.557081628205294,\\\"bias\\\":0.057081628205294055,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":417.61989337419203,\\\"ask\\\":426.90971911153497,\\\"price\\\":422.26480624286353,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5576352287812462,\\\"bias\\\":0.05763522878124616,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":425.591275745369,\\\"ask\\\":435.05842242524574,\\\"price\\\":430.3248490853074,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5565351077047488,\\\"bias\\\":0.05653510770474879,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":418.23390806933253,\\\"ask\\\":427.5373923742115,\\\"price\\\":422.88565022177204,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5555405695624248,\\\"bias\\\":0.05554056956242481,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":422.7119752059122,\\\"ask\\\":432.11507273324287,\\\"price\\\":427.41352396957757,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5549458918127116,\\\"bias\\\":0.05494589181271159,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":427.9067652580344,\\\"ask\\\":437.42541928804116,\\\"price\\\":432.6660922730378,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5542706510129812,\\\"bias\\\":0.05427065101298123,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":431.8687669229412,\\\"ask\\\":441.475554458133,\\\"price\\\":436.6721606905371,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5537681574159489,\\\"bias\\\":0.05376815741594887,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":438.8436174504007,\\\"ask\\\":448.6055583845855,\\\"price\\\":443.7245879174931,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5528997805157502,\\\"bias\\\":0.05289978051575017,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":439.4750831237559,\\\"ask\\\":449.25107081710536,\\\"price\\\":444.36307697043065,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5528236613831129,\\\"bias\\\":0.052823661383112896,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":442.75103797433087,\\\"ask\\\":452.599898273052,\\\"price\\\":447.6754681236915,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5524299008802349,\\\"bias\\\":0.052429900880234914,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":441.24306733744396,\\\"ask\\\":451.05838329439416,\\\"price\\\":446.1507253159191,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5526090827345798,\\\"bias\\\":0.05260908273457976,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":449.4853684930164,\\\"ask\\\":459.48403189730993,\\\"price\\\":454.48470019516316,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5516263592981904,\\\"bias\\\":0.05162635929819037,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":444.2482553679574,\\\"ask\\\":454.1304208058695,\\\"price\\\":449.1893380869135,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5522349673920041,\\\"bias\\\":0.05223496739200406,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":451.71885260318805,\\\"ask\\\":461.76719917272305,\\\"price\\\":456.7430258879556,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5513565702384624,\\\"bias\\\":0.05135657023846241,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":443.85505789239744,\\\"ask\\\":453.7284767737247,\\\"price\\\":448.7917673330611,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5522664562884789,\\\"bias\\\":0.052266456288478924,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":438.29797352082494,\\\"ask\\\":448.0477767740687,\\\"price\\\":443.17287514744686,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5516037812935092,\\\"bias\\\":0.05160378129350918,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":431.10178657758865,\\\"ask\\\":440.6915128715289,\\\"price\\\":435.8966497245588,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5524651798511769,\\\"bias\\\":0.052465179851176935,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":438.7721541121172,\\\"ask\\\":448.53250536638063,\\\"price\\\":443.65232973924896,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5515316944777611,\\\"bias\\\":0.05153169447776107,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":437.7562771785146,\\\"ask\\\":447.49403056367873,\\\"price\\\":442.6251538710967,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5514121077065403,\\\"bias\\\":0.051412107706540255,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":443.72373026870866,\\\"ask\\\":453.59422780754744,\\\"price\\\":448.65897903812805,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.552112952804603,\\\"bias\\\":0.05211295280460304,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":435.0038004119497,\\\"ask\\\":444.68032580028427,\\\"price\\\":439.842063106117,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.551068315280392,\\\"bias\\\":0.05106831528039202,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":430.04783615635495,\\\"ask\\\":439.6141176482051,\\\"price\\\":434.83097690228004,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5504797929723039,\\\"bias\\\":0.05047979297230387,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":430.8578907883412,\\\"ask\\\":440.4421916956652,\\\"price\\\":435.6500412420032,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.550384707294198,\\\"bias\\\":0.05038470729419797,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":432.3884935179582,\\\"ask\\\":442.00684221097646,\\\"price\\\":437.19766786446735,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5505636966365408,\\\"bias\\\":0.05056369663654081,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":425.7453770555766,\\\"ask\\\":435.2159516715752,\\\"price\\\":430.48066436357595,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5497747261776056,\\\"bias\\\":0.04977472617760559,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":418.4166630166175,\\\"ask\\\":427.7242126489386,\\\"price\\\":423.07043783277805,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5410565089848864,\\\"bias\\\":0.04105650898488644,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":415.839215572108,\\\"ask\\\":425.0894306808909,\\\"price\\\":420.4643231264995,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5436012664344212,\\\"bias\\\":0.04360126643442119,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":420.8530040934583,\\\"ask\\\":430.21474938168484,\\\"price\\\":425.5338767375716,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.538344245908724,\\\"bias\\\":0.038344245908723984,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":427.2149468478055,\\\"ask\\\":436.71821159062824,\\\"price\\\":431.9665792192169,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5325478301755066,\\\"bias\\\":0.032547830175506554,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":426.3947565392703,\\\"ask\\\":435.87977640162006,\\\"price\\\":431.1372664704452,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5319217573998826,\\\"bias\\\":0.03192175739988257,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":421.1390931830509,\\\"ask\\\":430.5072024348477,\\\"price\\\":425.82314780894933,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5279380376894979,\\\"bias\\\":0.027938037689497874,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":424.5354715932118,\\\"ask\\\":433.9791322353257,\\\"price\\\":429.2573019142688,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5256849068458687,\\\"bias\\\":0.02568490684586866,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":419.56797331292546,\\\"ask\\\":428.9011334877327,\\\"price\\\":424.2345534003291,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5226439280605073,\\\"bias\\\":0.0226439280605073,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":416.18573440391253,\\\"ask\\\":425.44365771724523,\\\"price\\\":420.8146960605789,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.524484144295906,\\\"bias\\\":0.024484144295905952,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":423.89408607095794,\\\"ask\\\":433.3234792899276,\\\"price\\\":428.6087826804428,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.48005066742150776,\\\"bias\\\":0.01994933257849224,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":419.21378544079266,\\\"ask\\\":428.5390668156131,\\\"price\\\":423.8764261282029,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.48227790510025714,\\\"bias\\\":0.017722094899742857,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":415.32622689533656,\\\"ask\\\":424.56503072920646,\\\"price\\\":419.94562881227154,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4806190721874914,\\\"bias\\\":0.019380927812508608,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":417.0742284856448,\\\"ask\\\":426.3519160758209,\\\"price\\\":421.7130722807329,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4798033786327849,\\\"bias\\\":0.020196621367215117,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":408.403746486304,\\\"ask\\\":417.4885618783147,\\\"price\\\":412.9461541823094,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4840911561940471,\\\"bias\\\":0.01590884380595292,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":409.427068669282,\\\"ask\\\":418.5346475476684,\\\"price\\\":413.9808581084752,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4836925341708108,\\\"bias\\\":0.016307465829189183,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":412.19897799507197,\\\"ask\\\":421.3682171415751,\\\"price\\\":416.78359756832356,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0215,\\\"forecast\\\":0.48479658468605513,\\\"bias\\\":0.015203415313944868,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5300349529304311,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1267.2995771892206,\\\"ask\\\":1295.4902654583432,\\\"price\\\":1281.3949213237815,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.06537234876063713},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4481940145991486,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1303.8612892259137,\\\"ask\\\":1332.865281503942,\\\"price\\\":1318.363285364928,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.06034414408072808},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.49527077998136015,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1294.284851019903,\\\"ask\\\":1323.0758183833395,\\\"price\\\":1308.6803347016216,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.060486017319843155},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.48234778494005714,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1434.6998130069492,\\\"ask\\\":1466.614267896891,\\\"price\\\":1450.6570404519205,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.05929832345961339},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.46532103461402025,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1201.5636409009094,\\\"ask\\\":1228.2920535397577,\\\"price\\\":1214.9278472203343,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.0619531612507519},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5125114937585343,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1278.2096202357293,\\\"ask\\\":1306.6429990478484,\\\"price\\\":1292.4263096417887,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.05898586844752929},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5022474951992438,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1390.159313573555,\\\"ask\\\":1421.082978789549,\\\"price\\\":1405.621146181552,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.053015943492784046},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5393495045697345,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1280.1011049475028,\\\"ask\\\":1308.576559253716,\\\"price\\\":1294.3388321006091,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.06246314828326449},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4418114911760383,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1295.3052672071585,\\\"ask\\\":1324.1189334139906,\\\"price\\\":1309.712100310574,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.06464327355465804},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5172026058523433,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1222.2802709871073,\\\"ask\\\":1249.4695186733727,\\\"price\\\":1235.8748948302402,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.05975004456498467},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4538845639792203,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1164.5717277260774,\\\"ask\\\":1190.4772666643719,\\\"price\\\":1177.5244971952247,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.0687269096517879},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.433113834420912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":946.1604400094177,\\\"ask\\\":967.2074872088183,\\\"price\\\":956.6839636091177,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.07084745074512638},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.42784526222270164,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":855.4234271157329,\\\"ask\\\":874.4520574459109,\\\"price\\\":864.9377422808222,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.08014908937486159},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5452300284914394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":954.6366028813628,\\\"ask\\\":975.8721997098664,\\\"price\\\":965.2544012956147,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.07431653200692834},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.560748545638177,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1046.5480382704864,\\\"ask\\\":1069.8281766344405,\\\"price\\\":1058.1881074524636,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.06494761846617725},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.558172816083336,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1174.927085602065,\\\"ask\\\":1201.0629762827991,\\\"price\\\":1187.995030942432,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.06571756380544203},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5512639408374038,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1260.48814818788,\\\"ask\\\":1288.5273183194608,\\\"price\\\":1274.5077332536707,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.06626472789809718},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4740851293521448,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1154.9758237037381,\\\"ask\\\":1180.6679047163595,\\\"price\\\":1167.8218642100492,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.06979047973997993},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5722029328891572,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1216.3684364380374,\\\"ask\\\":1243.4261771879226,\\\"price\\\":1229.8973068129806,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.07992189756266832},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.45343286131571714,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1272.2687649331033,\\\"ask\\\":1300.5699912511297,\\\"price\\\":1286.419378092117,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.08737754973933015},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.42697178240069766,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1217.447879149923,\\\"ask\\\":1244.5296317700422,\\\"price\\\":1230.9887554599832,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.07808743796164946},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.42796358273697604,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1072.1484585267604,\\\"ask\\\":1095.9980703443425,\\\"price\\\":1084.0732644355512,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.0786906677143338},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.42152826361805085,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":1008.7724751015965,\\\"ask\\\":1031.212307712552,\\\"price\\\":1019.992391407074,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.08208314964382074},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4178557073641431,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":928.7614942469686,\\\"ask\\\":949.4215072635849,\\\"price\\\":939.0915007552767,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.08778679021738467},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4109197171993613,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":710.2851913878054,\\\"ask\\\":726.0852664237324,\\\"price\\\":718.1852289057693,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.09540177729152449},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.40790197926955196,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":493.72575795852526,\\\"ask\\\":504.7085351830829,\\\"price\\\":499.21714657080423,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.09822301318423854},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.44987215586335255,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":391.5340218815412,\\\"ask\\\":400.24357545221244,\\\"price\\\":395.88879866687677,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.09725195235058748},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5102918569927276,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":368.3160662381869,\\\"ask\\\":376.509143545811,\\\"price\\\":372.41260489199885,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.10208926579257505},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5282736611982967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":339.82620165675166,\\\"ask\\\":347.38553071281683,\\\"price\\\":343.6058661847843,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.0887220064675801},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4649674205495938,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":321.26947088098933,\\\"ask\\\":328.41601118370085,\\\"price\\\":324.842741032345,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.0839685910689022},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5916552693789577,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":348.6715279648733,\\\"ask\\\":356.42761857683195,\\\"price\\\":352.54957327085276,\\\"maxShares\\\":6700000,\\\"investedShares\\\":2814000,\\\"averagePrice\\\":151.75079826088418,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.10476443858503837},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.575710271300621,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":431.56595244411443,\\\"ask\\\":441.1660039646103,\\\"price\\\":436.3659782043625,\\\"maxShares\\\":6700000,\\\"investedShares\\\":6700000,\\\"averagePrice\\\":361.31142443067733,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.08601624375963057},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5588669223402507,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":564.895494792964,\\\"ask\\\":577.4614208652033,\\\"price\\\":571.1784578290836,\\\"maxShares\\\":6700000,\\\"investedShares\\\":5695000,\\\"averagePrice\\\":307.11471076607563,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.0999130135335704},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4865193977299662,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":599.4088952464207,\\\"ask\\\":612.74256126808,\\\"price\\\":606.0757282572499,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.08670587047416578},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.47757153597328394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":685.3958870024513,\\\"ask\\\":700.6423071379962,\\\"price\\\":693.0190970702241,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.09059727973998621},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5652668654487893,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":661.3634711366939,\\\"ask\\\":676.0752975927172,\\\"price\\\":668.7193843647057,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.09002449400556711},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5209961285256844,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":732.5196122851016,\\\"ask\\\":748.8142851569642,\\\"price\\\":740.6669487210334,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.09800124639714342},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.40486994809712057,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":660.4476428838341,\\\"ask\\\":675.1390970228069,\\\"price\\\":667.7933699533205,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.09975180271654971},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5632316536654529,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":590.8384508752362,\\\"ask\\\":603.9814700049175,\\\"price\\\":597.4099604400769,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.09600538139540649},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5961844319108445,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":657.7564541099349,\\\"ask\\\":672.3880435845745,\\\"price\\\":665.072248847255,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.102663571480069},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5967821883380631,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":741.1015714857924,\\\"ask\\\":757.5871473934644,\\\"price\\\":749.3443594396284,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.10167373035556582},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4373146287901239,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":869.2516611684772,\\\"ask\\\":888.5878963006377,\\\"price\\\":878.9197787345578,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.10871862397630616},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4042526093467902,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":782.3469462390091,\\\"ask\\\":799.7500127883094,\\\"price\\\":791.0484795136591,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.10312164276643565},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.40839548080431565,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":652.6466863749295,\\\"ask\\\":667.1646106421169,\\\"price\\\":659.9056485085235,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.09964773163982021},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5305714617803993,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":662.5151178565578,\\\"ask\\\":677.252562338706,\\\"price\\\":669.8838400976317,\\\"maxShares\\\":6700000,\\\"investedShares\\\":2345000,\\\"averagePrice\\\":220.47282467938567,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.1003028310744003},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4416593137277707,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":641.6689258853779,\\\"ask\\\":655.9426532559321,\\\"price\\\":648.8057895706548,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.06216317990436321},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5024226118086474,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":552.1020547703706,\\\"ask\\\":564.3833947147064,\\\"price\\\":558.2427247425383,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.06263665209402575},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.564489039829854,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":551.9574061973586,\\\"ask\\\":564.2355284787963,\\\"price\\\":558.0964673380772,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.07017063883348318},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5681449986449689,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":572.522643094624,\\\"ask\\\":585.2582327286799,\\\"price\\\":578.890437911652,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.07220043849982805},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5663237812465105,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":673.1218643157209,\\\"ask\\\":688.095252601814,\\\"price\\\":680.6085584587677,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.07064401573053525},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5673133629855173,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":741.0115053858697,\\\"ask\\\":757.4950778009246,\\\"price\\\":749.253291593397,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.0723059964084315},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.464504216820391,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":723.8631631243239,\\\"ask\\\":739.9652759541873,\\\"price\\\":731.9142195392554,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.09121188764462718},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5095789883597912,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":669.705173231852,\\\"ask\\\":684.6025582784648,\\\"price\\\":677.1538657551588,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.09028051197255982},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4141677418127231,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":655.8752798081567,\\\"ask\\\":670.465023140593,\\\"price\\\":663.1701514743748,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.09251722597451251},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.545899986046511,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":743.8551343407842,\\\"ask\\\":760.4019624049873,\\\"price\\\":752.1285483728858,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.09989084597020648},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4010176506539683,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":729.3778949392035,\\\"ask\\\":745.6026812775876,\\\"price\\\":737.4902881083956,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.10946589307823346},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.40802744863373314,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":523.5877612871138,\\\"ask\\\":535.2348095665038,\\\"price\\\":529.4112854268087,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.09857496051928932},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.42035736817104935,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":451.61344352082546,\\\"ask\\\":461.65944529783053,\\\"price\\\":456.6364444093281,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.0844689681989923},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.42797659765477086,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":419.29456201324183,\\\"ask\\\":428.62164023800574,\\\"price\\\":423.95810112562395,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.07621432658744964},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5201720562961977,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":402.8731035173158,\\\"ask\\\":411.8348914620895,\\\"price\\\":407.3539974897026,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.07853157098722263},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.46051027599596844,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":411.57342048351524,\\\"ask\\\":420.72874429609095,\\\"price\\\":416.151082389803,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.08186659148660624},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5174558645104977,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":472.91692257921056,\\\"ask\\\":483.4368136780403,\\\"price\\\":478.17686812862553,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.0700626407640137},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5170219859903338,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":418.27103328991853,\\\"ask\\\":427.57534343388033,\\\"price\\\":422.9231883618997,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.07314313528956107},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4494508212190885,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":376.4200430993524,\\\"ask\\\":384.793390873049,\\\"price\\\":380.6067169862006,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.07805454236305842},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.4776360888485106,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":372.81047524491413,\\\"ask\\\":381.10352929485157,\\\"price\\\":376.9570022698826,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.07032320893043204},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5548056843034186,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":407.6149416802224,\\\"ask\\\":416.68221035258335,\\\"price\\\":412.14857601640296,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.06344266928759423},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5492751129954062,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":404.64978091769336,\\\"ask\\\":413.65109050332467,\\\"price\\\":409.1504357105091,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.06994727789959676},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.47765307372729,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":345.2091101833451,\\\"ask\\\":352.88818037953706,\\\"price\\\":349.0486452814411,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.06995518845014914},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5649088365403752,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":387.3674063192484,\\\"ask\\\":395.98427481168875,\\\"price\\\":391.67584056546866,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.07071328114332998},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.5620137553774213,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":464.7195639661423,\\\"ask\\\":475.05710735062655,\\\"price\\\":469.88833565838445,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.07382886534209476},{\\\"volatility\\\":0.0215,\\\"forecast\\\":0.472730316667478,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"JGN\\\",\\\"bid\\\":437.054670014598,\\\"ask\\\":446.77681636477087,\\\"price\\\":441.91574318968424,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.0656736487228683}],\\\"recentTicksOfPrices\\\":[434.83097690228004,435.6500412420032,437.19766786446735,430.48066436357595,423.07043783277805,420.4643231264995,425.5338767375716,431.9665792192169,431.1372664704452,425.82314780894933,429.2573019142688,424.2345534003291,420.8146960605789,428.6087826804428,423.8764261282029,419.94562881227154,421.7130722807329,412.9461541823094,413.9808581084752,416.78359756832356]}],[\\\"SGC\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1112.504074121089,\\\"ask\\\":1144.0964819054605,\\\"price\\\":1128.3002780132747,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5511603204007804,\\\"bias\\\":0.051160320400780446,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1111.74538284971,\\\"ask\\\":1143.3162456486875,\\\"price\\\":1127.5308142491988,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5511952338702922,\\\"bias\\\":0.051195233870292234,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1120.8244868099446,\\\"ask\\\":1152.653174062154,\\\"price\\\":1136.7388304360493,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5507771463677514,\\\"bias\\\":0.050777146367751436,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1137.0104216129964,\\\"ask\\\":1169.2987500157994,\\\"price\\\":1153.154585814398,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5515104240488384,\\\"bias\\\":0.05151042404883843,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1143.551877579584,\\\"ask\\\":1176.0259674094305,\\\"price\\\":1159.7889224945072,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5512140739324888,\\\"bias\\\":0.05121407393248878,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1142.4123423103722,\\\"ask\\\":1174.8540721122893,\\\"price\\\":1158.6332072113307,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5511629888370598,\\\"bias\\\":0.05116298883705983,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1122.461742337585,\\\"ask\\\":1154.3369236615733,\\\"price\\\":1138.3993329995792,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.550253619470426,\\\"bias\\\":0.05025361947042595,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1113.0951166088619,\\\"ask\\\":1144.7043085612434,\\\"price\\\":1128.8997125850526,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5498307384083588,\\\"bias\\\":0.04983073840835883,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1132.4499108787966,\\\"ask\\\":1164.6087318773832,\\\"price\\\":1148.52932137809,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5411660369302763,\\\"bias\\\":0.04116603693027632,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1109.311903078767,\\\"ask\\\":1140.813660975527,\\\"price\\\":1125.062782027147,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5325796323226498,\\\"bias\\\":0.03257963232264982,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1095.1498426720673,\\\"ask\\\":1126.249432524824,\\\"price\\\":1110.6996375984456,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5283665584308099,\\\"bias\\\":0.02836655843080993,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1076.3947866281164,\\\"ask\\\":1106.9617785404766,\\\"price\\\":1091.6782825842965,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5234239816016298,\\\"bias\\\":0.02342398160162984,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1071.2100309231032,\\\"ask\\\":1101.6297883935363,\\\"price\\\":1086.4199096583197,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5245577239932924,\\\"bias\\\":0.02455772399329237,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1063.5628519197649,\\\"ask\\\":1093.7654481203263,\\\"price\\\":1078.6641500200456,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5263234617769345,\\\"bias\\\":0.026323461776934454,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1046.5726608483574,\\\"ask\\\":1076.2927769779253,\\\"price\\\":1061.4327189131413,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5305968453840361,\\\"bias\\\":0.030596845384036064,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1035.872178080645,\\\"ask\\\":1065.28842654541,\\\"price\\\":1050.5803023130275,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5337574768181661,\\\"bias\\\":0.0337574768181661,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1056.9320465709955,\\\"ask\\\":1086.9463440395432,\\\"price\\\":1071.9391953052693,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5406205631853847,\\\"bias\\\":0.04062056318538465,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1037.492540535368,\\\"ask\\\":1066.9548033497601,\\\"price\\\":1052.2236719425641,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5482316413605145,\\\"bias\\\":0.0482316413605145,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1025.794083814745,\\\"ask\\\":1054.9241389332162,\\\"price\\\":1040.3591113739806,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5427311634583382,\\\"bias\\\":0.04273116345833816,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1012.5405136840848,\\\"ask\\\":1041.2941996710567,\\\"price\\\":1026.9173566775708,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5371379011245756,\\\"bias\\\":0.0371379011245756,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1002.6524119456536,\\\"ask\\\":1031.125299911656,\\\"price\\\":1016.8888559286548,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5334753821868413,\\\"bias\\\":0.03347538218684132,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":985.6964158397012,\\\"ask\\\":1013.687794788496,\\\"price\\\":999.6921053140986,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5277169311984423,\\\"bias\\\":0.02771693119844232,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":987.2071225581863,\\\"ask\\\":1015.2414019006094,\\\"price\\\":1001.2242622293978,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5272921335274311,\\\"bias\\\":0.027292133527431095,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":979.4307970939626,\\\"ask\\\":1007.2442477213774,\\\"price\\\":993.33752240767,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5294590299896627,\\\"bias\\\":0.029459029989662655,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":975.8785123717736,\\\"ask\\\":1003.591086759613,\\\"price\\\":989.7347995656933,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5283866950541546,\\\"bias\\\":0.028386695054154587,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":956.8411210406805,\\\"ask\\\":984.0130798531948,\\\"price\\\":970.4271004469376,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5227388543577328,\\\"bias\\\":0.02273885435773282,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":968.855548449261,\\\"ask\\\":996.3686877561368,\\\"price\\\":982.6121181026989,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5198836853121326,\\\"bias\\\":0.019883685312132582,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":951.8074588935655,\\\"ask\\\":978.8364739534233,\\\"price\\\":965.3219664234944,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5163222628339714,\\\"bias\\\":0.016322262833971424,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":934.1788498181483,\\\"ask\\\":960.7072552896576,\\\"price\\\":947.4430525539029,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5132421375369546,\\\"bias\\\":0.013242137536954579,\\\"countOfNegative\\\":17,\\\"countOfPositive\\\":3,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":946.7943530968107,\\\"ask\\\":973.6810081543267,\\\"price\\\":960.2376806255687,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5150304056993784,\\\"bias\\\":0.015030405699378413,\\\"countOfNegative\\\":16,\\\"countOfPositive\\\":4,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":963.6278869127045,\\\"ask\\\":990.992573356473,\\\"price\\\":977.3102301345888,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.512358074144173,\\\"bias\\\":0.012358074144173004,\\\"countOfNegative\\\":15,\\\"countOfPositive\\\":5,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":981.8896512358883,\\\"ask\\\":1009.7729273358932,\\\"price\\\":995.8312892858908,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5147000594745514,\\\"bias\\\":0.014700059474551441,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":984.3166436686167,\\\"ask\\\":1012.2688404462244,\\\"price\\\":998.2927420574206,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5150634091957802,\\\"bias\\\":0.015063409195780197,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":970.2293342113429,\\\"ask\\\":997.7814856899612,\\\"price\\\":984.005409950652,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5128762674619655,\\\"bias\\\":0.012876267461965463,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":990.944640728936,\\\"ask\\\":1019.0850564900012,\\\"price\\\":1005.0148486094686,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5156254713653285,\\\"bias\\\":0.015625471365328547,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":978.9286534024382,\\\"ask\\\":1006.7278443712701,\\\"price\\\":992.8282488868541,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5175434402105938,\\\"bias\\\":0.01754344021059384,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":980.8926720453752,\\\"ask\\\":1008.7476363630939,\\\"price\\\":994.8201542042345,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5171914672295692,\\\"bias\\\":0.017191467229569213,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":977.1951840487391,\\\"ask\\\":1004.945148707324,\\\"price\\\":991.0701663780316,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5165409805636144,\\\"bias\\\":0.016540980563614416,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":993.4357165791213,\\\"ask\\\":1021.6468728308611,\\\"price\\\":1007.5412947049912,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5137919460072345,\\\"bias\\\":0.013791946007234546,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1011.9691378284157,\\\"ask\\\":1040.7065981318597,\\\"price\\\":1026.3378679801376,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5112189365921936,\\\"bias\\\":0.01121893659219364,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1005.3321507869789,\\\"ask\\\":1033.881136813384,\\\"price\\\":1019.6066438001815,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5119595867019389,\\\"bias\\\":0.011959586701938862,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1018.2427726953297,\\\"ask\\\":1047.158388958483,\\\"price\\\":1032.7005808269064,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5134954542454966,\\\"bias\\\":0.013495454245496585,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1034.6376316218946,\\\"ask\\\":1064.018821972212,\\\"price\\\":1049.3282267970533,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5113225336568323,\\\"bias\\\":0.011322533656832334,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1032.5221989967658,\\\"ask\\\":1061.8433162096558,\\\"price\\\":1047.1827576032108,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5115545098518242,\\\"bias\\\":0.011554509851824157,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1018.9776772711042,\\\"ask\\\":1047.9141630353952,\\\"price\\\":1033.4459201532497,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5100186537363445,\\\"bias\\\":0.010018653736344474,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1010.2993185783102,\\\"ask\\\":1038.9893600795199,\\\"price\\\":1024.644339328915,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5091580625318958,\\\"bias\\\":0.009158062531895772,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1023.0397014031245,\\\"ask\\\":1052.091538765485,\\\"price\\\":1037.5656200843048,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4991580625318958,\\\"bias\\\":0.0008419374681041814,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1031.8950691585585,\\\"ask\\\":1061.1983774105258,\\\"price\\\":1046.5467232845422,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4891580625318958,\\\"bias\\\":0.01084193746810419,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1052.2517463325703,\\\"ask\\\":1082.133134666558,\\\"price\\\":1067.192440499564,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4870192227644087,\\\"bias\\\":0.012980777235591323,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1064.7645569661302,\\\"ask\\\":1095.0012786649656,\\\"price\\\":1079.882917815548,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.48856282683056,\\\"bias\\\":0.011437173169439985,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1075.3800017194335,\\\"ask\\\":1105.9181762104517,\\\"price\\\":1090.6490889649426,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.48970308529539935,\\\"bias\\\":0.010296914704600646,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1080.2007165886864,\\\"ask\\\":1110.8757876480001,\\\"price\\\":1095.5382521183433,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.48924149506920456,\\\"bias\\\":0.010758504930795443,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1104.6268658704903,\\\"ask\\\":1135.995580114277,\\\"price\\\":1120.3112229923836,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.49167427300994254,\\\"bias\\\":0.008325726990057458,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1107.5749189261821,\\\"ask\\\":1139.0273507009622,\\\"price\\\":1123.3011348135722,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5016742730099426,\\\"bias\\\":0.0016742730099426062,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1115.5617151253284,\\\"ask\\\":1147.2409524716866,\\\"price\\\":1131.4013337985075,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0229,\\\"forecast\\\":0.49167427300994254,\\\"bias\\\":0.008325726990057458,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5279251248665845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2279.423151893937,\\\"ask\\\":2344.153221116077,\\\"price\\\":2311.788186505007,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.07445158336253926},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5356744933908129,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2486.703234841091,\\\"ask\\\":2557.3195538832315,\\\"price\\\":2522.0113943621623,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.06860794507898083},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.44342211643377716,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2501.531940871568,\\\"ask\\\":2572.569359070761,\\\"price\\\":2537.0506499711646,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.06111752048945135},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.44623123089848304,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2673.195254096874,\\\"ask\\\":2749.107492549931,\\\"price\\\":2711.1513733234024,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.05755107582496899},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.46791754435674204,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2370.861937565027,\\\"ask\\\":2438.188645731174,\\\"price\\\":2404.5252916481013,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.05723052396447714},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5089057506397835,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2269.7957525158263,\\\"ask\\\":2334.252427029461,\\\"price\\\":2302.024089772644,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.058371379464219886},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.521883294261572,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2103.677629024887,\\\"ask\\\":2163.416953175695,\\\"price\\\":2133.5472911002907,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.06171560485198557},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5607826513902431,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2188.9296430344602,\\\"ask\\\":2251.0899168731676,\\\"price\\\":2220.009779953814,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.06835222039521038},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5619792098984749,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2238.5694704460666,\\\"ask\\\":2302.1393945560967,\\\"price\\\":2270.3544325010816,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.0691258816878515},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4859044319888681,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2546.8568590684786,\\\"ask\\\":2619.181394620118,\\\"price\\\":2583.019126844297,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.059291175836796106},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4594742284241875,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2277.032652506383,\\\"ask\\\":2341.694837364575,\\\"price\\\":2309.363744935478,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.05766393342100662},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5542490644869835,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2648.7736506265182,\\\"ask\\\":2723.9923749850805,\\\"price\\\":2686.383012805797,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.058669962804198894},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5552208074555847,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3218.7919124323043,\\\"ask\\\":3310.1977679577662,\\\"price\\\":3264.494840195036,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.062344435107200225},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.545004456773574,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3521.1494757833343,\\\"ask\\\":3621.1415501463503,\\\"price\\\":3571.1455129648425,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.06235169109735628},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4823663964643316,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":4523.235099755922,\\\"ask\\\":4651.683966686113,\\\"price\\\":4587.45953322102,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.059609038777356904},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5252373840331158,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":4821.109015539535,\\\"ask\\\":4958.016776629909,\\\"price\\\":4889.562896084719,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.05140126953507018},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5266058639460935,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5053.746315044534,\\\"ask\\\":5197.26040918373,\\\"price\\\":5125.50336211413,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.05716711784317341},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5198388080124239,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5889.088383983984,\\\"ask\\\":6056.324159594081,\\\"price\\\":5972.706271789034,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.060274286533618215},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.45829516758117994,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":6504.189196165506,\\\"ask\\\":6688.89233763876,\\\"price\\\":6596.5407669021315,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.05722244272494181},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5255320384177109,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":6527.691152165722,\\\"ask\\\":6713.061691983818,\\\"price\\\":6620.37642207477,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.0595634287338247},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4845346398982999,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5829.115947319988,\\\"ask\\\":5994.648651706359,\\\"price\\\":5911.882299513174,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.051107537319351026},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.555252263273387,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5191.143875118963,\\\"ask\\\":5338.5597255280245,\\\"price\\\":5264.851800323496,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.06883662022496784},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5545266761126447,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5701.206111332881,\\\"ask\\\":5863.106487719617,\\\"price\\\":5782.1562995262475,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.06686474876345627},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4442962336972063,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":6480.115024168493,\\\"ask\\\":6664.134517755425,\\\"price\\\":6572.124770961958,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.06105262474468398},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.447200793266192,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5346.4325560451325,\\\"ask\\\":5498.258227007872,\\\"price\\\":5422.345391526504,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.05952803420684405},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.44558332453027305,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5537.991255410047,\\\"ask\\\":5695.256727166113,\\\"price\\\":5616.623991288079,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.06053459209427048},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.47434653524570564,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5542.214179937837,\\\"ask\\\":5699.599572471567,\\\"price\\\":5620.906876204702,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.057498294225840685},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5610659898072677,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5898.190928536749,\\\"ask\\\":6065.685194255846,\\\"price\\\":5981.938061396296,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.07294571002055794},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4755377776786462,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5752.651725407631,\\\"ask\\\":5916.013032011496,\\\"price\\\":5834.332378709569,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.07425316111276437},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4316871542526554,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":5029.3851042139895,\\\"ask\\\":5172.207399262665,\\\"price\\\":5100.796251738328,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.07765646748753169},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4312664633638406,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3969.3396854969737,\\\"ask\\\":4082.059270886341,\\\"price\\\":4025.699478191658,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.07728862300799116},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5201544365944484,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3293.9718020852783,\\\"ask\\\":3387.5125834832356,\\\"price\\\":3340.7421927842556,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.06923333739856452},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.561685028122895,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3880.9303130980566,\\\"ask\\\":3991.1392875065194,\\\"price\\\":3936.0348003022846,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.06876020123382487},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5133822102165745,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":4715.2833172076425,\\\"ask\\\":4849.185886053298,\\\"price\\\":4782.234601630472,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.06664683959828477},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4420468916544552,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3897.5792495429896,\\\"ask\\\":4008.2610132216946,\\\"price\\\":3952.9201313823437,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.0642583326170359},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5295735990259179,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3356.2487211877906,\\\"ask\\\":3451.5580155014386,\\\"price\\\":3403.903368344615,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.06339135677325336},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.48800650136651336,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3451.429955808541,\\\"ask\\\":3549.442165506958,\\\"price\\\":3500.43606065775,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.06510591312172731},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5607537690585961,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3279.7639401092615,\\\"ask\\\":3372.901252810134,\\\"price\\\":3326.332596459699,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.06629748756086906},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.45425866183222396,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3545.3036961468424,\\\"ask\\\":3645.9816915749443,\\\"price\\\":3595.6426938608906,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.07031100244571897},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.47978229293999564,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2876.5541242826216,\\\"ask\\\":2958.2412596577865,\\\"price\\\":2917.3976919702045,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.07060443868381033},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4905668304976518,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2638.471296494009,\\\"ask\\\":2713.3974590719313,\\\"price\\\":2675.93437778297,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.06957514817910992},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5293174079165529,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2242.5101296521198,\\\"ask\\\":2306.191958891734,\\\"price\\\":2274.3510442719257,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.06429476398237988},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.44438489114896945,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2624.4263920789926,\\\"ask\\\":2698.953713557911,\\\"price\\\":2661.690052818453,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.06126038877984519},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4459748256812166,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2255.370285448038,\\\"ask\\\":2319.4173118096455,\\\"price\\\":2287.393798628843,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.05861031693454899},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5286028192675674,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2237.7040786173416,\\\"ask\\\":2301.249427705867,\\\"price\\\":2269.4767531616044,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.05511936213354118},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5233737371089615,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2150.5380727115025,\\\"ask\\\":2211.608119401077,\\\"price\\\":2181.0730960562905,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.054719796589736136},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5077080665777666,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2891.844683898551,\\\"ask\\\":2973.9660339484094,\\\"price\\\":2932.90535892348,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.040507102914862925},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4617039075567824,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":3228.7058944671758,\\\"ask\\\":3320.3932829510304,\\\"price\\\":3274.549588709103,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.0618407603664175},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4684561160569707,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2826.1329443421373,\\\"ask\\\":2906.3882409360335,\\\"price\\\":2866.2605926390843,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.06665858079910802},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5024806716491599,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2755.9352313069703,\\\"ask\\\":2834.197083717311,\\\"price\\\":2795.0661575121417,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.05814728470995656},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.446179938029458,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2696.1951205162377,\\\"ask\\\":2772.760499192154,\\\"price\\\":2734.477809854195,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.05757141284495032},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5262285619467151,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2986.667129881476,\\\"ask\\\":3071.481206592104,\\\"price\\\":3029.07416823679,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.06297484197022202},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.44242401687119787,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2649.4605230775737,\\\"ask\\\":2724.6987529418448,\\\"price\\\":2687.0796380097086,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.06777824699366192},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4681315292539945,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2532.956625743059,\\\"ask\\\":2604.886428502497,\\\"price\\\":2568.9215271227777,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.0566591765768783},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.48954167350703853,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2744.491302640713,\\\"ask\\\":2822.428175332336,\\\"price\\\":2783.4597389865253,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.047262443406337507},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.49636659338750766,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2647.575238697721,\\\"ask\\\":2722.7599310745322,\\\"price\\\":2685.1675848861264,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.054724982684118406},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.49665502716048265,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2635.938619300185,\\\"ask\\\":2710.7928600105347,\\\"price\\\":2673.3657396553594,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.05514378563501032},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.498723949630049,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2834.968669981066,\\\"ask\\\":2915.4748796762688,\\\"price\\\":2875.221774828668,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.03005863875898218},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4611052359023527,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2399.493518625091,\\\"ask\\\":2467.6332940018674,\\\"price\\\":2433.5634063134794,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.05894389945529516},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4435721589440825,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1876.3014762675086,\\\"ask\\\":1929.5838711310873,\\\"price\\\":1902.9426736992984,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.06423434787424315},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.44085357362587224,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1525.4900697611333,\\\"ask\\\":1568.8102745819363,\\\"price\\\":1547.1501721715356,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.06508903072980893},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4807946741122023,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1391.2477741309883,\\\"ask\\\":1430.7558245119892,\\\"price\\\":1411.0017993214892,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.060449121713663845},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5113544086971962,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1360.0252522937328,\\\"ask\\\":1398.6466590525818,\\\"price\\\":1379.335955673157,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.0303990343191074},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.49423260484456427,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1462.2823560199824,\\\"ask\\\":1503.807615622984,\\\"price\\\":1483.0449858214831,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.029208413475299844},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5169839128928395,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1777.918610245723,\\\"ask\\\":1828.4071711857648,\\\"price\\\":1803.1628907157442,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.029883596039843474},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5136280467931926,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1940.225746113421,\\\"ask\\\":1995.323434644025,\\\"price\\\":1967.7745903787238,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.025127364429810894},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.5415197708341735,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":2237.1967274595936,\\\"ask\\\":2300.72766901017,\\\"price\\\":2268.9621982348813,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.0644307342434719},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4472160148014332,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1952.0954526934618,\\\"ask\\\":2007.5302119991602,\\\"price\\\":1979.8128323463106,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.057002232443190914},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.4456340412662613,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1706.234857810522,\\\"ask\\\":1754.6877746651817,\\\"price\\\":1730.4613162378516,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.058989092980370195},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.45371168808060913,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1353.3658403129753,\\\"ask\\\":1391.7981359810924,\\\"price\\\":1372.5819881470338,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.0580271711010279},{\\\"volatility\\\":0.0229,\\\"forecast\\\":0.49560997556332914,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"SGC\\\",\\\"bid\\\":1148.0836138865482,\\\"ask\\\":1180.686393996916,\\\"price\\\":1164.3850039417323,\\\"maxShares\\\":2500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.05468190136729634}],\\\"recentTicksOfPrices\\\":[992.8282488868541,994.8201542042345,991.0701663780316,1007.5412947049912,1026.3378679801376,1019.6066438001815,1032.7005808269064,1049.3282267970533,1047.1827576032108,1033.4459201532497,1024.644339328915,1037.5656200843048,1046.5467232845422,1067.192440499564,1079.882917815548,1090.6490889649426,1095.5382521183433,1120.3112229923836,1123.3011348135722,1131.4013337985075]}],[\\\"CTYS\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":656.5890868226638,\\\"ask\\\":663.1879721173639,\\\"price\\\":659.8885294700139,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5837521033684763,\\\"bias\\\":0.08375210336847627,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":656.3250423901932,\\\"ask\\\":662.9212739720041,\\\"price\\\":659.6231581810987,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5837857974608448,\\\"bias\\\":0.0837857974608448,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":653.1804157049676,\\\"ask\\\":659.7450429984848,\\\"price\\\":656.4627293517262,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5841891700179567,\\\"bias\\\":0.08418917001795667,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":647.6666287336757,\\\"ask\\\":654.1758410827578,\\\"price\\\":650.9212349082168,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5849058985449096,\\\"bias\\\":0.0849058985449096,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":649.8632732649422,\\\"ask\\\":656.3945624434843,\\\"price\\\":653.1289178542133,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5846179292881399,\\\"bias\\\":0.08461792928813994,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":650.2454156103454,\\\"ask\\\":656.7805454154744,\\\"price\\\":653.51298051291,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5845681709846758,\\\"bias\\\":0.08456817098467584,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":657.0587546161025,\\\"ask\\\":663.6623601901337,\\\"price\\\":660.3605574031182,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5854542850643493,\\\"bias\\\":0.08545428506434927,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":653.8153265326681,\\\"ask\\\":660.386334839529,\\\"price\\\":657.1008306860986,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5850303659288077,\\\"bias\\\":0.08503036592880775,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":660.5174074209541,\\\"ask\\\":667.1557733246823,\\\"price\\\":663.8365903728183,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5859019887973593,\\\"bias\\\":0.08590198879735933,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":668.6392551666953,\\\"ask\\\":675.3592476809333,\\\"price\\\":671.9992514238144,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5869582559997525,\\\"bias\\\":0.08695825599975249,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":663.5804868454787,\\\"ask\\\":670.2496374670412,\\\"price\\\":666.91506215626,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5876211773475621,\\\"bias\\\":0.08762117734756214,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":656.833646115669,\\\"ask\\\":663.4349892927108,\\\"price\\\":660.1343177041899,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.586721153221791,\\\"bias\\\":0.08672115322179097,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":654.9648155697573,\\\"ask\\\":661.5473765302573,\\\"price\\\":658.2560960500074,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5864737091816457,\\\"bias\\\":0.08647370918164565,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":657.7410386020636,\\\"ask\\\":664.3515013015817,\\\"price\\\":661.0462699518226,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5868402484176659,\\\"bias\\\":0.08684024841766591,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":651.5059084681225,\\\"ask\\\":658.0537065431789,\\\"price\\\":654.7798075056508,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.587671338731215,\\\"bias\\\":0.08767133873121502,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":655.47338026312,\\\"ask\\\":662.0610524265684,\\\"price\\\":658.7672163448442,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5871374470824599,\\\"bias\\\":0.08713744708245985,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":663.3294048019911,\\\"ask\\\":669.9960319859307,\\\"price\\\":666.662718393961,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5860930813718958,\\\"bias\\\":0.08609308137189575,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":670.6564315684219,\\\"ask\\\":677.3966972123255,\\\"price\\\":674.0265643903738,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5851421114509939,\\\"bias\\\":0.08514211145099393,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":666.1776823217041,\\\"ask\\\":672.8729354103643,\\\"price\\\":669.5253088660343,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5857145265553187,\\\"bias\\\":0.08571452655531875,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":661.0765043058614,\\\"ask\\\":667.7204892737594,\\\"price\\\":664.3984967898105,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5863759402580512,\\\"bias\\\":0.08637594025805118,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":664.9198772754219,\\\"ask\\\":671.6024891073356,\\\"price\\\":668.2611831913788,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5868781135342845,\\\"bias\\\":0.08687811353428454,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":671.6627930191657,\\\"ask\\\":678.413172848504,\\\"price\\\":675.0379829338349,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5877591396842885,\\\"bias\\\":0.0877591396842885,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":671.0564835567429,\\\"ask\\\":677.8007698236448,\\\"price\\\":674.4286266901939,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.587838431365553,\\\"bias\\\":0.08783843136555303,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":674.1974119539126,\\\"ask\\\":680.9732653403839,\\\"price\\\":677.5853386471483,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5874272972357155,\\\"bias\\\":0.08742729723571552,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":675.6441749082683,\\\"ask\\\":682.4345686259393,\\\"price\\\":679.0393717671038,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5872396866448153,\\\"bias\\\":0.0872396866448153,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":667.8113273668471,\\\"ask\\\":674.5229989986746,\\\"price\\\":671.1671631827609,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5862164408011958,\\\"bias\\\":0.08621644080119584,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":662.90436854243,\\\"ask\\\":669.566724005168,\\\"price\\\":666.2355462737991,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5868546331937567,\\\"bias\\\":0.08685463319375675,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":669.9040097859382,\\\"ask\\\":676.6367134018773,\\\"price\\\":673.2703615939078,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5859375306650323,\\\"bias\\\":0.08593753066503229,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":677.3564565119754,\\\"ask\\\":684.1640590899851,\\\"price\\\":680.7602578009803,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5868935554979826,\\\"bias\\\":0.08689355549798261,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":682.748955984752,\\\"ask\\\":689.6107545373625,\\\"price\\\":686.1798552610572,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.586201787599846,\\\"bias\\\":0.08620178759984598,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":689.9050982791598,\\\"ask\\\":696.8388178598548,\\\"price\\\":693.3719580695073,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5871053001613659,\\\"bias\\\":0.08710530016136586,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":697.6127310469814,\\\"ask\\\":704.6239142735841,\\\"price\\\":701.1183226602827,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.588078442217352,\\\"bias\\\":0.08807844221735195,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":698.629256887963,\\\"ask\\\":705.6506564546761,\\\"price\\\":702.1399566713196,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5879500987847243,\\\"bias\\\":0.08795009878472426,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":704.6092228066672,\\\"ask\\\":711.6907225333673,\\\"price\\\":708.1499726700173,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5887029137979719,\\\"bias\\\":0.0887029137979719,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":695.850690994875,\\\"ask\\\":702.8441652762305,\\\"price\\\":699.3474281355527,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5898193994210407,\\\"bias\\\":0.08981939942104067,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":700.8859610747055,\\\"ask\\\":707.9300410855064,\\\"price\\\":704.408001080106,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5891694540515153,\\\"bias\\\":0.08916945405151533,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":700.0579677140188,\\\"ask\\\":707.0937261835064,\\\"price\\\":703.5758469487627,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.58927491919774,\\\"bias\\\":0.08927491919774,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":698.4998865371566,\\\"ask\\\":705.519985899339,\\\"price\\\":702.0099362182478,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.58907578162614,\\\"bias\\\":0.08907578162614005,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":705.3434700892409,\\\"ask\\\":712.4323491856151,\\\"price\\\":708.887909637428,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5899485055388779,\\\"bias\\\":0.0899485055388779,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":713.1008446799901,\\\"ask\\\":720.2676873400904,\\\"price\\\":716.6842660100403,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5889592509686827,\\\"bias\\\":0.08895925096868273,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":710.3362994945752,\\\"ask\\\":717.4753577809528,\\\"price\\\":713.905828637764,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5886130320451409,\\\"bias\\\":0.08861303204514093,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":715.714040541018,\\\"ask\\\":722.9071464761035,\\\"price\\\":719.3105935085608,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5892838944803255,\\\"bias\\\":0.08928389448032548,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":722.5075497905956,\\\"ask\\\":729.7689322005513,\\\"price\\\":726.1382409955735,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5901313711660308,\\\"bias\\\":0.09013137116603076,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":721.6359517445538,\\\"ask\\\":728.8885743751523,\\\"price\\\":725.2622630598531,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5900225097286182,\\\"bias\\\":0.09002250972861825,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":727.2907283396717,\\\"ask\\\":734.6001828958491,\\\"price\\\":730.9454556177604,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5907279307651071,\\\"bias\\\":0.0907279307651071,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":730.9736618090401,\\\"ask\\\":738.320130771945,\\\"price\\\":734.6468962904926,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.59026849285424,\\\"bias\\\":0.09026849285423999,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":736.4078219535585,\\\"ask\\\":743.8089055912826,\\\"price\\\":740.1083637724206,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5909395614190912,\\\"bias\\\":0.09093956141909121,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":740.1655971276847,\\\"ask\\\":747.6044473500734,\\\"price\\\":743.8850222388791,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5904755109078677,\\\"bias\\\":0.09047551090786765,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":748.773523302,\\\"ask\\\":756.298885345236,\\\"price\\\":752.536204323618,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.410576694870813,\\\"bias\\\":0.089423305129187,\\\"countOfNegative\\\":5,\\\"countOfPositive\\\":15,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":743.5609750131778,\\\"ask\\\":751.0339496364257,\\\"price\\\":747.2974623248018,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.40994981515039236,\\\"bias\\\":0.09005018484960764,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":739.2163285162211,\\\"ask\\\":746.6456383505549,\\\"price\\\":742.9309834333881,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4094205570630576,\\\"bias\\\":0.09057944293694242,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":741.1698551055206,\\\"ask\\\":748.6187983729127,\\\"price\\\":744.8943267392167,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.40918118281847554,\\\"bias\\\":0.09081881718152446,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":731.4196122429452,\\\"ask\\\":738.7705631197587,\\\"price\\\":735.095087681352,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4103918497314071,\\\"bias\\\":0.08960815026859292,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":732.5703717752821,\\\"ask\\\":739.9328880745311,\\\"price\\\":736.2516299249066,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4102508671389654,\\\"bias\\\":0.08974913286103459,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":735.6845762626607,\\\"ask\\\":743.0783910994712,\\\"price\\\":739.381483681066,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.41063239656339035,\\\"bias\\\":0.08936760343660965,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.630294724445291,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":387.0044360391199,\\\"ask\\\":390.89392785860866,\\\"price\\\":388.94918194886407,\\\"maxShares\\\":55200000,\\\"investedShares\\\":1036097,\\\"averagePrice\\\":318.5597384838665,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.13542369622363215},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.43481221295545913,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":397.85368437456725,\\\"ask\\\":401.8522138657685,\\\"price\\\":399.852949120168,\\\"maxShares\\\":55200000,\\\"investedShares\\\":297230.81,\\\"averagePrice\\\":94.31838966325087,\\\"sharesShort\\\":775124.1,\\\"averageShortPrice\\\":310.9336391747366,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.13397082321645304},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5110322274324575,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":415.5682099423217,\\\"ask\\\":419.744774866365,\\\"price\\\":417.6564924043434,\\\"maxShares\\\":55200000,\\\"investedShares\\\":669918.15,\\\"averagePrice\\\":213.6514288959188,\\\"sharesShort\\\":547907.4,\\\"averageShortPrice\\\":195.103983576932,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.12813835975663768},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5416470587122695,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":379.6722405309587,\\\"ask\\\":383.4880419433301,\\\"price\\\":381.5801412371445,\\\"maxShares\\\":55200000,\\\"investedShares\\\":1138011.48,\\\"averagePrice\\\":254.06096754919886,\\\"sharesShort\\\":377447.32,\\\"averageShortPrice\\\":134.4049664641086,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.12285631004564429},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.40926663379928724,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":403.2077834159741,\\\"ask\\\":407.26012294779304,\\\"price\\\":405.2339531818836,\\\"maxShares\\\":55200000,\\\"investedShares\\\":115450.44,\\\"averagePrice\\\":25.77430105571586,\\\"sharesShort\\\":1482359.4,\\\"averageShortPrice\\\":368.18399517940145,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.11015873993741188},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.39945078208550355,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":353.23302711593976,\\\"ask\\\":356.78310779047206,\\\"price\\\":355.00806745320597,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":1647066,\\\"averageShortPrice\\\":409.0933279771127,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.10570803324026423},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5304449849754286,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":344.2317180689458,\\\"ask\\\":347.69133332591997,\\\"price\\\":345.9615256974328,\\\"maxShares\\\":55200000,\\\"investedShares\\\":1622549.28,\\\"averagePrice\\\":216.61052749749516,\\\"sharesShort\\\":560002.44,\\\"averageShortPrice\\\":139.09173151221842,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.10598669633399682},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4536157863632964,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":348.6132483078548,\\\"ask\\\":352.11689904461707,\\\"price\\\":350.3650736762361,\\\"maxShares\\\":55200000,\\\"investedShares\\\":245840.8,\\\"averagePrice\\\":32.81977689355984,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.09890353424825993},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5195298606781237,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":376.3800192409888,\\\"ask\\\":380.1627330022046,\\\"price\\\":378.2713761215971,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.0997754627413413},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.39975918677660116,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":365.98764875584885,\\\"ask\\\":369.6659165825406,\\\"price\\\":367.8267826691947,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.10740259312709183},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4225778653422282,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":307.70529972194805,\\\"ask\\\":310.7978152970429,\\\"price\\\":309.25155750949557,\\\"maxShares\\\":55200000,\\\"investedShares\\\":609121.08,\\\"averagePrice\\\":36.06659722140605,\\\"sharesShort\\\":3479204.82,\\\"averageShortPrice\\\":226.5553196784335,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.10983304145368977},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5822835591531469,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":311.0670874344785,\\\"ask\\\":314.1933898207548,\\\"price\\\":312.6302386276167,\\\"maxShares\\\":55200000,\\\"investedShares\\\":5076009,\\\"averagePrice\\\":300.55497684505076,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.08771189070514174},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4868279357181743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":349.51718921773704,\\\"ask\\\":353.0299247877646,\\\"price\\\":351.273557002751,\\\"maxShares\\\":55200000,\\\"investedShares\\\":2030403.6,\\\"averagePrice\\\":120.2219907380202,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.08549314451752688},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.43165623063133896,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":318.7717926751583,\\\"ask\\\":321.97552928495895,\\\"price\\\":320.3736609800588,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.09298872819901588},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.594372973567571,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":342.596585515238,\\\"ask\\\":346.0397672792103,\\\"price\\\":344.318176397224,\\\"maxShares\\\":55200000,\\\"investedShares\\\":2236261.5,\\\"averagePrice\\\":115.21094597816001,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.10447898119614651},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.48806357770555947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":387.2494870964664,\\\"ask\\\":391.14144174065194,\\\"price\\\":389.1954644185592,\\\"maxShares\\\":55200000,\\\"investedShares\\\":2913916.5,\\\"averagePrice\\\":150.12335385032978,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.09627688785046062},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.41574312255111096,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":349.95120261038625,\\\"ask\\\":353.4683001240582,\\\"price\\\":351.7097513672221,\\\"maxShares\\\":55200000,\\\"investedShares\\\":302193.9,\\\"averagePrice\\\":10.189404107142959,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.10612725065169487},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5881237388467506,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":367.76156749609834,\\\"ask\\\":371.4576636518379,\\\"price\\\":369.60961557396826,\\\"maxShares\\\":55200000,\\\"investedShares\\\":10073130,\\\"averagePrice\\\":339.64680357143175,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.09620531693730183},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5978118787050457,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":435.74805947866463,\\\"ask\\\":440.12743696086227,\\\"price\\\":437.93774821976376,\\\"maxShares\\\":55200000,\\\"investedShares\\\":10073130,\\\"averagePrice\\\":339.64680357143175,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.10417519439360456},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.6002366524637509,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":530.1400915604147,\\\"ask\\\":535.468132681625,\\\"price\\\":532.8041121210199,\\\"maxShares\\\":55200000,\\\"investedShares\\\":9770936.1,\\\"averagePrice\\\":329.4573994642887,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.11449671880559453},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4610264575093158,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":518.9050405486543,\\\"ask\\\":524.1201665843187,\\\"price\\\":521.5126035664865,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.09114138885077172},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5875839103266172,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":532.7319854747512,\\\"ask\\\":538.0860757810301,\\\"price\\\":535.4090306278905,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.09118511837388477},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5896738636657561,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":588.8747719839473,\\\"ask\\\":594.7931114008713,\\\"price\\\":591.8339416924096,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.09550559595258612},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5939937930870215,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":655.8728660568929,\\\"ask\\\":662.4645531529422,\\\"price\\\":659.1687096049178,\\\"maxShares\\\":55200000,\\\"investedShares\\\":2820596.88,\\\"averagePrice\\\":163.86058880144407,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.104379027302689},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5769539941303714,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":675.1317109760749,\\\"ask\\\":681.9169543024674,\\\"price\\\":678.5243326392715,\\\"maxShares\\\":55200000,\\\"investedShares\\\":11752487,\\\"averagePrice\\\":682.752453339351,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.07933133994650543},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5791340108827812,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":722.8454816974564,\\\"ask\\\":730.1102604079834,\\\"price\\\":726.4778710527196,\\\"maxShares\\\":55200000,\\\"investedShares\\\":11752487,\\\"averagePrice\\\":682.752453339351,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.084290557644771},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5502227986628165,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":803.6107847763673,\\\"ask\\\":811.6872750756269,\\\"price\\\":807.6490299259967,\\\"maxShares\\\":55200000,\\\"investedShares\\\":9284464.73,\\\"averagePrice\\\":539.3744381380874,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.08599648854545072},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.49650518085622136,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":786.4486177718824,\\\"ask\\\":794.3526239806453,\\\"price\\\":790.4006208762638,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.06330753854231763},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5683932430231876,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":729.8686961045813,\\\"ask\\\":737.2040598845266,\\\"price\\\":733.5363779945542,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.07270602767138112},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.43322037269210817,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":735.588415837011,\\\"ask\\\":742.981264237383,\\\"price\\\":739.2848400371967,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.0787234079631689},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.49124386508418394,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":713.0274424348526,\\\"ask\\\":720.1935473839467,\\\"price\\\":716.6104949094,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.09061885165548034},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5992716115223116,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":721.1249309081218,\\\"ask\\\":728.3724176509171,\\\"price\\\":724.7486742795192,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.10888905157180251},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.41465774074750766,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":675.8061801579922,\\\"ask\\\":682.5982020691279,\\\"price\\\":679.2021911135599,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.10960940392343838},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4026845586564562,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":596.3694159884024,\\\"ask\\\":602.3630784606476,\\\"price\\\":599.3662472245248,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.10048604799189109},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5272675155653713,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":585.4425033757948,\\\"ask\\\":591.3263476308281,\\\"price\\\":588.3844255033116,\\\"maxShares\\\":55200000,\\\"investedShares\\\":1168015.6,\\\"averagePrice\\\":329.05918460040283,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.10136345663087443},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.6020368707800318,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":671.6940951622721,\\\"ask\\\":678.4447895860135,\\\"price\\\":675.0694423741431,\\\"maxShares\\\":55200000,\\\"investedShares\\\":2013820,\\\"averagePrice\\\":567.3434217248339,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.11281759693641236},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5286698020382496,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":747.2165476858454,\\\"ask\\\":754.7262617329392,\\\"price\\\":750.9714047093921,\\\"maxShares\\\":55200000,\\\"investedShares\\\":1288844.8,\\\"averagePrice\\\":363.09978990389294,\\\"sharesShort\\\":207716.6,\\\"averageShortPrice\\\":277.26283884785585,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.13507956211477068},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4959051475424665,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":742.902324432954,\\\"ask\\\":750.3686794523798,\\\"price\\\":746.6355019426668,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":7030417.15,\\\"averageShortPrice\\\":244.99669614858794,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.1337089909989264},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.47119670072896275,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":730.2153984047904,\\\"ask\\\":737.554246629964,\\\"price\\\":733.8848225173772,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.05862243384064547},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5595235919249713,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":722.8269935098982,\\\"ask\\\":730.0915864094952,\\\"price\\\":726.4592899596969,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.06769927234305695},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4865559241831196,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":735.6941210646717,\\\"ask\\\":743.0880318291406,\\\"price\\\":739.3910764469064,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.0781626758953135},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5374231253629664,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":730.9395623423874,\\\"ask\\\":738.2856885970847,\\\"price\\\":734.6126254697364,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.08187265618749195},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4156803860660918,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":693.3225010396819,\\\"ask\\\":700.2905663767642,\\\"price\\\":696.8065337082235,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.08775492706967059},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4148739468054052,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":594.9178505145886,\\\"ask\\\":600.8969243891069,\\\"price\\\":597.9073874518475,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.08828497218313802},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4101293353106796,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":522.1242456592042,\\\"ask\\\":527.3717255150754,\\\"price\\\":524.7479855871401,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.09276773711414582},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4056242143067208,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":435.1336645022815,\\\"ask\\\":439.506867160596,\\\"price\\\":437.320265831439,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.09975273297748932},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.3970213160813808,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":382.0467338520671,\\\"ask\\\":385.88639951892213,\\\"price\\\":383.9665666854947,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.10995960014086337},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.43497330327400247,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":364.63438674987543,\\\"ask\\\":368.299053953392,\\\"price\\\":366.46672035163357,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":40848000,\\\"averageShortPrice\\\":258.9947834653218,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.10967743531673496},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4391792465459474,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":347.24285039170127,\\\"ask\\\":350.73272828508505,\\\"price\\\":348.9877893383931,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":55200000,\\\"averageShortPrice\\\":349.9929506288131,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.06559574842310412},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4393455448039476,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":318.3022620288534,\\\"ask\\\":321.5012797376862,\\\"price\\\":319.90177088326976,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":55200000,\\\"averageShortPrice\\\":349.9929506288131,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.06354351085791038},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5238117528913101,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":310.623193702067,\\\"ask\\\":313.74503484480124,\\\"price\\\":312.18411427343415,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":15456000,\\\"averageShortPrice\\\":97.9980261760676,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.06120480630067304},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5604246559600351,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":329.44014938859846,\\\"ask\\\":332.75110566386064,\\\"price\\\":331.09562752622946,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.06728971214059054},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.50202822603312,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":358.87617830489603,\\\"ask\\\":362.4829740667545,\\\"price\\\":360.6795761858252,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.07577453486383073},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4190080719796089,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":357.2912327789301,\\\"ask\\\":360.88209944002483,\\\"price\\\":359.0866661094775,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.08613963719919843},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4090187951613244,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":336.30163584841,\\\"ask\\\":339.68155178658503,\\\"price\\\":337.9915938174976,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.09802469813734449},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.41883618491434693,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":310.3746913141393,\\\"ask\\\":313.494034945437,\\\"price\\\":311.9343631297881,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":23184000,\\\"averageShortPrice\\\":127.88467438471363,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.10428559926492914},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5177050334985777,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":321.1721164620231,\\\"ask\\\":324.39997692897816,\\\"price\\\":322.7860466955006,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":18768000,\\\"averageShortPrice\\\":103.52568878762531,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.06451030912027433},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.544147201279383,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":340.34342828660175,\\\"ask\\\":343.76396525430624,\\\"price\\\":342.0536967704543,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.07570640632942272},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4885290973733772,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":340.47977420093565,\\\"ask\\\":343.90168147933696,\\\"price\\\":342.1907278401364,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.09081261514923678},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5714660428591629,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":393.1832930288247,\\\"ask\\\":397.13488391353627,\\\"price\\\":395.15908847118067,\\\"maxShares\\\":55200000,\\\"investedShares\\\":29808000,\\\"averagePrice\\\":222.3431066110412,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.10107505558828378},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5576528370912028,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":387.5183304774688,\\\"ask\\\":391.41298706518194,\\\"price\\\":389.4656587713254,\\\"maxShares\\\":55200000,\\\"investedShares\\\":55200000,\\\"averagePrice\\\":411.74649372415064,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.06364544090950408},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5225150817243762,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":426.5539400267504,\\\"ask\\\":430.840914298376,\\\"price\\\":428.69742716256326,\\\"maxShares\\\":55200000,\\\"investedShares\\\":35328000,\\\"averagePrice\\\":263.51775598345614,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.0684963118437042},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5149667380974383,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":439.90375801641443,\\\"ask\\\":444.3249013130618,\\\"price\\\":442.114329664738,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.061565952098478594},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4675562048694535,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":473.4256491917427,\\\"ask\\\":478.18369591728776,\\\"price\\\":475.80467255451526,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.0682040462191349},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5751902541872187,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":486.8865197763953,\\\"ask\\\":491.7798516334444,\\\"price\\\":489.3331857049197,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.08339227143226025},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5824389629334895,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":516.3322362192374,\\\"ask\\\":521.5215049249578,\\\"price\\\":518.9268705720979,\\\"maxShares\\\":55200000,\\\"investedShares\\\":8280000,\\\"averagePrice\\\":74.58289638700276,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.10018556866599304},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4641523671684199,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":520.1131968204706,\\\"ask\\\":525.3404651302241,\\\"price\\\":522.7268309753473,\\\"maxShares\\\":55200000,\\\"investedShares\\\":10488000,\\\"averagePrice\\\":94.47166875687019,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.05886799735315301},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4364418251887184,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":523.3945191250654,\\\"ask\\\":528.6547655484326,\\\"price\\\":526.0246423367493,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.06892217366960074},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.4297013469784367,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":550.4933446601293,\\\"ask\\\":556.0259410888742,\\\"price\\\":553.259642874502,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.07553857532598579},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.42852290606441507,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":561.9827570077099,\\\"ask\\\":567.6308249173346,\\\"price\\\":564.8067909625223,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.08007982140434627},{\\\"volatility\\\":0.013500000000000002,\\\"forecast\\\":0.5795949008259387,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"CTYS\\\",\\\"bid\\\":622.8374276828553,\\\"ask\\\":629.0971003228842,\\\"price\\\":625.9672640028697,\\\"maxShares\\\":55200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.08665693338227842}],\\\"recentTicksOfPrices\\\":[704.408001080106,703.5758469487627,702.0099362182478,708.887909637428,716.6842660100403,713.905828637764,719.3105935085608,726.1382409955735,725.2622630598531,730.9454556177604,734.6468962904926,740.1083637724206,743.8850222388791,752.536204323618,747.2974623248018,742.9309834333881,744.8943267392167,735.095087681352,736.2516299249066,739.381483681066]}],[\\\"MDYN\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18124.81951723513,\\\"ask\\\":18233.895662775158,\\\"price\\\":18179.357590005144,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4110090124767875,\\\"bias\\\":0.0889909875232125,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18120.553497882425,\\\"ask\\\":18229.60397028693,\\\"price\\\":18175.07873408468,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41098806183225917,\\\"bias\\\":0.08901193816774083,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18171.604082831407,\\\"ask\\\":18280.961780421163,\\\"price\\\":18226.282931626287,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4112388329530992,\\\"bias\\\":0.08876116704690079,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18081.524404416752,\\\"ask\\\":18190.33999762287,\\\"price\\\":18135.932201019812,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4107966369742391,\\\"bias\\\":0.08920336302576087,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18117.411360876635,\\\"ask\\\":18226.442923730454,\\\"price\\\":18171.927142303546,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41097368162674625,\\\"bias\\\":0.08902631837325375,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18111.179134501243,\\\"ask\\\":18220.17319147918,\\\"price\\\":18165.676162990214,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41094304683674454,\\\"bias\\\":0.08905695316325546,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18222.230204709987,\\\"ask\\\":18331.892573043246,\\\"price\\\":18277.061388876617,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4114891112252011,\\\"bias\\\":0.0885108887747989,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18275.128786340047,\\\"ask\\\":18385.109501202674,\\\"price\\\":18330.11914377136,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4117460556509055,\\\"bias\\\":0.0882539443490945,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18166.157777203953,\\\"ask\\\":18275.48269863146,\\\"price\\\":18220.820237917706,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41121665799324403,\\\"bias\\\":0.08878334200675597,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18036.376159505777,\\\"ask\\\":18144.92004812868,\\\"price\\\":18090.648103817228,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41185550282817024,\\\"bias\\\":0.08814449717182976,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18116.838709232605,\\\"ask\\\":18225.866825837813,\\\"price\\\":18171.35276753521,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4122487265513901,\\\"bias\\\":0.08775127344860989,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18008.591146217113,\\\"ask\\\":18116.96782312514,\\\"price\\\":18062.779484671126,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4127761893287497,\\\"bias\\\":0.08722381067125029,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18038.66056368136,\\\"ask\\\":18147.218199972318,\\\"price\\\":18092.93938182684,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4129218292155461,\\\"bias\\\":0.0870781707844539,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17994.02735785078,\\\"ask\\\":18102.316389091604,\\\"price\\\":18048.171873471194,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.413137821880372,\\\"bias\\\":0.08686217811962799,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18094.801442644486,\\\"ask\\\":18203.696937785775,\\\"price\\\":18149.24919021513,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4136242864349218,\\\"bias\\\":0.08637571356507823,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18159.284056558856,\\\"ask\\\":18268.56761156322,\\\"price\\\":18213.92583406104,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4133164780399499,\\\"bias\\\":0.08668352196005008,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18032.809116967543,\\\"ask\\\":18141.33153893525,\\\"price\\\":18087.0703279514,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4139244417317046,\\\"bias\\\":0.08607555826829538,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17916.996186076285,\\\"ask\\\":18024.82163955317,\\\"price\\\":17970.908912814728,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4133680614893011,\\\"bias\\\":0.08663193851069889,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17987.4858098998,\\\"ask\\\":18095.735473750752,\\\"price\\\":18041.61064182528,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4137088916537606,\\\"bias\\\":0.08629110834623938,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17906.627273853843,\\\"ask\\\":18014.390326655368,\\\"price\\\":17960.508800254607,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41409854474632524,\\\"bias\\\":0.08590145525367476,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17967.548400470503,\\\"ask\\\":18075.678079911646,\\\"price\\\":18021.613240191076,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41439079483630764,\\\"bias\\\":0.08560920516369236,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18074.173773396957,\\\"ask\\\":18182.94513010747,\\\"price\\\":18128.559451752215,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4148988281652328,\\\"bias\\\":0.08510117183476718,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18083.73001333902,\\\"ask\\\":18192.558880019093,\\\"price\\\":18138.144446679056,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41494382315242284,\\\"bias\\\":0.08505617684757716,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18133.261378337542,\\\"ask\\\":18242.38832745492,\\\"price\\\":18187.824852896232,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4147108541500263,\\\"bias\\\":0.08528914584997371,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18156.032244102506,\\\"ask\\\":18265.29622952338,\\\"price\\\":18210.664236812943,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41481795610211514,\\\"bias\\\":0.08518204389788486,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18280.65006718767,\\\"ask\\\":18390.664009417484,\\\"price\\\":18335.65703830258,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41540262133809736,\\\"bias\\\":0.08459737866190264,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18359.83571806965,\\\"ask\\\":18470.326203835364,\\\"price\\\":18415.08096095251,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41503617383936886,\\\"bias\\\":0.08496382616063114,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18473.281150285817,\\\"ask\\\":18584.454356807095,\\\"price\\\":18528.867753546456,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4155611653550633,\\\"bias\\\":0.08443883464493668,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18353.798298334736,\\\"ask\\\":18464.252450581484,\\\"price\\\":18409.02537445811,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4161108604435028,\\\"bias\\\":0.08388913955649718,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18439.303416979335,\\\"ask\\\":18550.272143661256,\\\"price\\\":18494.787780320297,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41572004483606406,\\\"bias\\\":0.08427995516393594,\\\"countOfNegative\\\":6,\\\"countOfPositive\\\":14,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18326.894664146,\\\"ask\\\":18437.18690886503,\\\"price\\\":18382.040786505517,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41520311030774154,\\\"bias\\\":0.08479688969225846,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18207.857157789575,\\\"ask\\\":18317.433028347987,\\\"price\\\":18262.645093068782,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41464873368844624,\\\"bias\\\":0.08535126631155376,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18192.34450685746,\\\"ask\\\":18301.827021442357,\\\"price\\\":18247.08576414991,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4147215128951288,\\\"bias\\\":0.08527848710487118,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18283.46875004081,\\\"ask\\\":18393.499655256703,\\\"price\\\":18338.484202648757,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4151486671629211,\\\"bias\\\":0.08485133283707891,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":13,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18149.784560970016,\\\"ask\\\":18259.01094749541,\\\"price\\\":18204.397754232716,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4145236855503958,\\\"bias\\\":0.08547631444960418,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18226.63945078937,\\\"ask\\\":18336.32835420435,\\\"price\\\":18281.48390249686,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4148856332477429,\\\"bias\\\":0.08511436675225709,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18214.03301564848,\\\"ask\\\":18323.646052853986,\\\"price\\\":18268.839534251234,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41494454325098595,\\\"bias\\\":0.08505545674901405,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18190.28886387924,\\\"ask\\\":18299.759007493354,\\\"price\\\":18245.0239356863,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4148335186439023,\\\"bias\\\":0.08516648135609772,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18294.58066132808,\\\"ask\\\":18404.678438627947,\\\"price\\\":18349.629549978014,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41532181025320475,\\\"bias\\\":0.08467818974679525,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18177.591995746403,\\\"ask\\\":18286.9857289204,\\\"price\\\":18232.288862333404,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4158667882912567,\\\"bias\\\":0.08413321170874333,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18218.99094879768,\\\"ask\\\":18328.63382311341,\\\"price\\\":18273.812385955545,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41567517727466,\\\"bias\\\":0.08432482272533998,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18299.705812969572,\\\"ask\\\":18409.83443370961,\\\"price\\\":18354.770123339593,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4160487581514343,\\\"bias\\\":0.08395124184856573,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18198.62087837244,\\\"ask\\\":18308.14116450106,\\\"price\\\":18253.38102143675,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4165150685300244,\\\"bias\\\":0.0834849314699756,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18185.76732990136,\\\"ask\\\":18295.2102626791,\\\"price\\\":18240.48879629023,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41657407498236637,\\\"bias\\\":0.08342592501763363,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18102.75639210144,\\\"ask\\\":18211.699760559422,\\\"price\\\":18157.228076330433,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41695662801034394,\\\"bias\\\":0.08304337198965606,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18049.27055463984,\\\"ask\\\":18157.89204243105,\\\"price\\\":18103.581298535446,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4167105435892004,\\\"bias\\\":0.0832894564107996,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18127.791167706044,\\\"ask\\\":18236.885196799558,\\\"price\\\":18182.338182252803,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.417072881732425,\\\"bias\\\":0.08292711826757498,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18073.82076061329,\\\"ask\\\":18182.58999287375,\\\"price\\\":18128.20537674352,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4173205111845043,\\\"bias\\\":0.0826794888154957,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18196.822975618248,\\\"ask\\\":18306.332441870713,\\\"price\\\":18251.57770874448,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5832421678635222,\\\"bias\\\":0.08324216786352223,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18271.47170089833,\\\"ask\\\":18381.43040722269,\\\"price\\\":18326.45105406051,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5835836517439165,\\\"bias\\\":0.08358365174391647,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18334.313664486406,\\\"ask\\\":18444.65055715132,\\\"price\\\":18389.482110818863,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5838711250731279,\\\"bias\\\":0.08387112507312788,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18306.00400463998,\\\"ask\\\":18416.170528238614,\\\"price\\\":18361.0872664393,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5837414210142217,\\\"bias\\\":0.08374142101422166,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18164.306896855247,\\\"ask\\\":18273.620679584565,\\\"price\\\":18218.963788219906,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5830881664074328,\\\"bias\\\":0.08308816640743277,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18181.03051079862,\\\"ask\\\":18290.44493714244,\\\"price\\\":18235.73772397053,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5831646644773096,\\\"bias\\\":0.08316466447730964,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18135.914513811742,\\\"ask\\\":18245.0574296421,\\\"price\\\":18190.48597172692,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5833715499227122,\\\"bias\\\":0.08337154992271223,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5310569466476317,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17801.063933351612,\\\"ask\\\":17908.191700252417,\\\"price\\\":17854.627816802007,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.07391681189997373},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.467067959650526,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17195.56756478606,\\\"ask\\\":17299.051421745648,\\\"price\\\":17247.30949326585,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.06826669136352059},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5054831401392951,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17314.825751891094,\\\"ask\\\":17419.02731108,\\\"price\\\":17366.926531485547,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.06763871241936126},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.43218849376932006,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17477.544815767076,\\\"ask\\\":17582.725627095664,\\\"price\\\":17530.135221431374,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.0692465599505393},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.457754205444471,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":16951.628633054155,\\\"ask\\\":17053.644452310247,\\\"price\\\":17002.6365426822,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.06948999201741218},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5096882687773142,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":16644.833565796795,\\\"ask\\\":16745.00307572134,\\\"price\\\":16694.918320759072,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.06707065963106684},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.43562441596327395,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":16965.821413172445,\\\"ask\\\":17067.922645347997,\\\"price\\\":17016.872029260227,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.06575852062402537},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.43310674181052883,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":14866.099047457516,\\\"ask\\\":14955.564036710008,\\\"price\\\":14910.831542083759,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.07085913642709818},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4867117026583423,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":13972.94818061656,\\\"ask\\\":14057.03813957714,\\\"price\\\":14014.993160096845,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.07295883432759098},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5711449617590587,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":15105.130471459119,\\\"ask\\\":15196.033964767797,\\\"price\\\":15150.582218113454,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.07341855043983547},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.44625021170345525,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":15073.333160560587,\\\"ask\\\":15164.045295930051,\\\"price\\\":15118.689228245312,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.0722742516947052},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.42455604235455796,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":15139.638287571173,\\\"ask\\\":15230.749450786254,\\\"price\\\":15185.193869178722,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.07857542451822402},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4198774490626556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":14542.35857336902,\\\"ask\\\":14629.875274913866,\\\"price\\\":14586.116924141443,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.0819676628724973},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4216409540879512,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":14099.572017931705,\\\"ask\\\":14184.424006003512,\\\"price\\\":14141.99801196761,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.080215314225831},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.41824000530915706,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":13794.438735803016,\\\"ask\\\":13877.454415256194,\\\"price\\\":13835.946575529599,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.08743834335751616},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4104833096199228,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":13162.55031199171,\\\"ask\\\":13241.763252685741,\\\"price\\\":13202.156782338723,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.09266096215444214},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.560868324241054,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":13055.118886120697,\\\"ask\\\":13133.685298675084,\\\"price\\\":13094.40209239789,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.09864657112075303},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5364924635887743,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":13742.537289602988,\\\"ask\\\":13825.24062334182,\\\"price\\\":13783.888956472401,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.09789341343237379},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5102437806791063,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":13159.963632368352,\\\"ask\\\":13239.161006284305,\\\"price\\\":13199.562319326329,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.10142274816608998},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5881560995389508,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":13620.35292182699,\\\"ask\\\":13702.320943422726,\\\"price\\\":13661.33693262486,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.0992554718042199},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.40492548959385105,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":13064.0769957852,\\\"ask\\\":13142.697318728739,\\\"price\\\":13103.387157256957,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.097881008439901},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4058837299249536,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":12032.311120510694,\\\"ask\\\":12104.722220533833,\\\"price\\\":12068.516670522265,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.09704397645046325},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.403272283663632,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":10640.58027616618,\\\"ask\\\":10704.615864588444,\\\"price\\\":10672.59807037731,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.10015270546134647},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4015675659762732,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":9469.753772899598,\\\"ask\\\":9526.743264010327,\\\"price\\\":9498.248518454962,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.10223484002861072},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4988253367669369,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":8651.638231557581,\\\"ask\\\":8703.704259029342,\\\"price\\\":8677.671245293466,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.10074320817791038},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6019897602427404,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":9172.465616700665,\\\"ask\\\":9227.666011585523,\\\"price\\\":9200.065814143094,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.10660541449809124},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.40688262447414947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":9046.698807406498,\\\"ask\\\":9101.142330821185,\\\"price\\\":9073.920569113841,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.1027078637391915},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.39598831236452836,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":8190.724523519465,\\\"ask\\\":8240.016747332022,\\\"price\\\":8215.370635425737,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.1091196479914503},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.545839229161415,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":7840.471608716547,\\\"ask\\\":7887.655991517246,\\\"price\\\":7864.0638001169,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.11485467944556915},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4002072956282609,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":7863.2970041024055,\\\"ask\\\":7910.618751368819,\\\"price\\\":7886.957877735616,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.11569540419737545},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4852655566472103,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":7160.40020672797,\\\"ask\\\":7203.491882997148,\\\"price\\\":7181.946044862557,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.11238650134505235},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6064030080708486,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":7696.054294560414,\\\"ask\\\":7742.369566142522,\\\"price\\\":7719.211930351468,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.10825010291822157},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.607206872406107,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":8411.066589526452,\\\"ask\\\":8461.684843826508,\\\"price\\\":8436.375716676477,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.109401385813364},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.6018478796645075,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":9381.122081551408,\\\"ask\\\":9437.578182343093,\\\"price\\\":9409.35013194725,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.10664724067488651},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.599198726251149,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":10815.433710569383,\\\"ask\\\":10880.521576430374,\\\"price\\\":10847.97764349988,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.10235770627023566},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5989265840319908,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":11516.73759420647,\\\"ask\\\":11586.045944823556,\\\"price\\\":11551.391769515016,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.1007960045994758},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5255592664873181,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":12479.282339253232,\\\"ask\\\":12554.383336279838,\\\"price\\\":12516.832837766538,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.10250267910436117},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5214571672892482,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":12064.914823607452,\\\"ask\\\":12137.522134481722,\\\"price\\\":12101.218479044594,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.10237226380870434},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.45022124974357974,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":11699.31769289953,\\\"ask\\\":11769.724820439544,\\\"price\\\":11734.521256669532,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.102103857298734},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.602488117811944,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":11513.700141503426,\\\"ask\\\":11582.99021256563,\\\"price\\\":11548.34517703453,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.10501054296789425},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.486778951422967,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":12262.767819167846,\\\"ask\\\":12336.565820085598,\\\"price\\\":12299.66681962672,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.10259919870034406},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4231092035872014,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":11262.590650711114,\\\"ask\\\":11330.369531257027,\\\"price\\\":11296.480090984076,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.09279249108292315},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5868236906053482,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":11826.261262661646,\\\"ask\\\":11897.432343480079,\\\"price\\\":11861.846803070866,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.08864556125025391},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.49095563224537786,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":12714.467505174409,\\\"ask\\\":12790.983859267735,\\\"price\\\":12752.725682221073,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.0923580504996846},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5494975256697416,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":12562.053956462667,\\\"ask\\\":12637.653077564737,\\\"price\\\":12599.8535170137,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.08962012929805352},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5926437128207944,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":13514.264364871893,\\\"ask\\\":13595.593939785856,\\\"price\\\":13554.929152328876,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.09718424874473153},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5953180000035916,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":14221.790563756615,\\\"ask\\\":14307.378069656865,\\\"price\\\":14264.584316706736,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.09726591727090361},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5903784259354978,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":14001.806903008615,\\\"ask\\\":14086.070535323606,\\\"price\\\":14043.938719166103,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.09665325842060635},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.587044307842695,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":15191.411171077443,\\\"ask\\\":15282.833906309614,\\\"price\\\":15237.12253869353,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.09078323443059544},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.501784661134053,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":16073.68289555788,\\\"ask\\\":16170.415189813992,\\\"price\\\":16122.049042685941,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.09401584069370883},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5388364036233451,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":16321.918176718396,\\\"ask\\\":16420.14436434158,\\\"price\\\":16371.031270529975,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.09199940487672537},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5499911314683439,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18231.961526482635,\\\"ask\\\":18341.68245843739,\\\"price\\\":18286.82199246,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.09469022077586464},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4059330014806079,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":19333.344623215715,\\\"ask\\\":19449.69373830027,\\\"price\\\":19391.51918075799,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.0964836546093511},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5359635977093667,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":19111.034032280786,\\\"ask\\\":19226.04527018818,\\\"price\\\":19168.539651234474,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.09509061193439822},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5548684069719484,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":20696.369655629514,\\\"ask\\\":20820.92152918395,\\\"price\\\":20758.645592406723,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.0909482918393727},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4088773305040116,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":19233.427085884952,\\\"ask\\\":19349.174891818053,\\\"price\\\":19291.300988851504,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.0940518489782064},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5291005444419948,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":16930.831949723117,\\\"ask\\\":17032.722613412534,\\\"price\\\":16981.77728156783,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.094581912246884},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5876266361404148,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18569.3351456431,\\\"ask\\\":18681.08641031097,\\\"price\\\":18625.210777977038,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.09116694919912316},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5845576307854311,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":19254.20110116733,\\\"ask\\\":19370.07392624958,\\\"price\\\":19312.13751370845,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.08740291894132024},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.47414434251609605,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":19599.19661875818,\\\"ask\\\":19717.14564555109,\\\"price\\\":19658.171132154635,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.09158372116400004},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5625855450556647,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18692.59423116165,\\\"ask\\\":18805.087275682185,\\\"price\\\":18748.84075342191,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.08722463227766153},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5823715284084094,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":20634.25692535576,\\\"ask\\\":20758.43500113525,\\\"price\\\":20696.345963245505,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.08402061794082694},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5815271135708381,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":20951.0930713811,\\\"ask\\\":21077.177884247987,\\\"price\\\":21014.135477814543,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.08305042959329623},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4425997087061624,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":21341.322403487502,\\\"ask\\\":21469.7556376108,\\\"price\\\":21405.539020549146,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.08423617576688619},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4137459282183889,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":20162.064538602433,\\\"ask\\\":20283.400935023314,\\\"price\\\":20222.73273681288,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.0900972520427743},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4140745582381163,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":19712.45529495628,\\\"ask\\\":19831.085918596942,\\\"price\\\":19771.77060677661,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.08849091339309262},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4240757651445914,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":17955.000590695763,\\\"ask\\\":18063.05475673806,\\\"price\\\":18009.027673716904,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.09095105007663684},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5872658810944479,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18157.3292084254,\\\"ask\\\":18266.60099904782,\\\"price\\\":18211.965103736624,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.0896325223026514},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.48966746604373157,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18839.966181873515,\\\"ask\\\":18953.346118775466,\\\"price\\\":18896.656150324492,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.0938063286688317},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.5480940457624806,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18680.21771605992,\\\"ask\\\":18792.636278042235,\\\"price\\\":18736.426997051072,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.09814709958624779},{\\\"volatility\\\":0.0079,\\\"forecast\\\":0.4078407965535728,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"MDYN\\\",\\\"bid\\\":18578.315337230764,\\\"ask\\\":18690.12064517798,\\\"price\\\":18634.217991204387,\\\"maxShares\\\":3500000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.09647275285250706}],\\\"recentTicksOfPrices\\\":[18281.48390249686,18268.839534251234,18245.0239356863,18349.629549978014,18232.288862333404,18273.812385955545,18354.770123339593,18253.38102143675,18240.48879629023,18157.228076330433,18103.581298535446,18182.338182252803,18128.20537674352,18251.57770874448,18326.45105406051,18389.482110818863,18361.0872664393,18218.963788219906,18235.73772397053,18190.48597172692]}],[\\\"TITN\\\",{\\\"shortTermRecords\\\":[{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8364.333505791325,\\\"ask\\\":8533.309940251755,\\\"price\\\":8448.82172302154,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:24 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4052240626451891,\\\"bias\\\":0.09477593735481088,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8362.813285565531,\\\"ask\\\":8531.759008506247,\\\"price\\\":8447.28614703589,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:28 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4052412913327092,\\\"bias\\\":0.0947587086672908,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8381.005451461095,\\\"ask\\\":8550.318692904753,\\\"price\\\":8465.662072182924,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:34 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40503515661592665,\\\"bias\\\":0.09496484338407335,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8413.245126232503,\\\"ask\\\":8583.2096742372,\\\"price\\\":8498.227400234851,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:40 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40466985012816076,\\\"bias\\\":0.09533014987183924,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8426.138538581423,\\\"ask\\\":8596.363559562868,\\\"price\\\":8511.251049072145,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:46 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40452375537956614,\\\"bias\\\":0.09547624462043386,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8428.37740319887,\\\"ask\\\":8598.647653768547,\\\"price\\\":8513.512528483709,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:52 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4044983868925766,\\\"bias\\\":0.09550161310742339,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8388.660863559067,\\\"ask\\\":8558.128759792584,\\\"price\\\":8473.394811675826,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:58 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.404950544115802,\\\"bias\\\":0.095049455884198,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8369.899453176862,\\\"ask\\\":8538.98833101882,\\\"price\\\":8454.443892097841,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:04 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40473748757212136,\\\"bias\\\":0.09526251242787864,\\\"countOfNegative\\\":7,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8331.310415290654,\\\"ask\\\":8499.619716609659,\\\"price\\\":8415.465065950157,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:10 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40517872532680493,\\\"bias\\\":0.09482127467319507,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8285.276949575766,\\\"ask\\\":8452.65628189043,\\\"price\\\":8368.966615733098,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:15 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40570555767330047,\\\"bias\\\":0.09429444232669953,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8256.834902499959,\\\"ask\\\":8423.63964800501,\\\"price\\\":8340.237275252484,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:21 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.405380744715392,\\\"bias\\\":0.09461925528460802,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8218.689368449823,\\\"ask\\\":8384.723497105375,\\\"price\\\":8301.706432777599,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:29 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40581990257407846,\\\"bias\\\":0.09418009742592154,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8208.106801644848,\\\"ask\\\":8373.927141072018,\\\"price\\\":8291.016971358433,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:35 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4059413273065769,\\\"bias\\\":0.0940586726934231,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8192.416024747617,\\\"ask\\\":8357.919378782924,\\\"price\\\":8275.167701765271,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:41 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40612147607392757,\\\"bias\\\":0.09387852392607243,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8157.1414955755,\\\"ask\\\":8321.932232859854,\\\"price\\\":8239.536864217676,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:47 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.405715510242311,\\\"bias\\\":0.094284489757689,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8179.587009392504,\\\"ask\\\":8344.831191400433,\\\"price\\\":8262.209100396469,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:53 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4054560733036808,\\\"bias\\\":0.09454392669631922,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8135.528519191391,\\\"ask\\\":8299.882630690206,\\\"price\\\":8217.7055749408,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:50:59 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40596808216187585,\\\"bias\\\":0.09403191783812415,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8176.133598849059,\\\"ask\\\":8341.308014987424,\\\"price\\\":8258.720806918242,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:05 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4064374030554322,\\\"bias\\\":0.09356259694456781,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8200.971260957758,\\\"ask\\\":8366.647448047814,\\\"price\\\":8283.809354502786,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:11 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40615317627013986,\\\"bias\\\":0.09384682372986014,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8172.476272047911,\\\"ask\\\":8337.576802796353,\\\"price\\\":8255.026537422133,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:17 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4064803921729322,\\\"bias\\\":0.09351960782706781,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8151.063585624629,\\\"ask\\\":8315.73153684937,\\\"price\\\":8233.397561237,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:23 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4062347179715481,\\\"bias\\\":0.09376528202845191,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8113.88410798703,\\\"ask\\\":8277.800958653435,\\\"price\\\":8195.842533320232,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:29 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40580506625851354,\\\"bias\\\":0.09419493374148646,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8117.196640397741,\\\"ask\\\":8281.180410910827,\\\"price\\\":8199.188525654285,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:35 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40584352179556477,\\\"bias\\\":0.09415647820443523,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8134.3639046713815,\\\"ask\\\":8298.694488604136,\\\"price\\\":8216.529196637759,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:41 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4060426557103902,\\\"bias\\\":0.09395734428960978,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8142.251233778585,\\\"ask\\\":8306.741157693305,\\\"price\\\":8224.496195735945,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:47 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4059515517832564,\\\"bias\\\":0.09404844821674357,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8099.326179972757,\\\"ask\\\":8262.948931083318,\\\"price\\\":8181.137555528037,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:53 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4064499925930661,\\\"bias\\\":0.09355000740693392,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8072.326642380123,\\\"ask\\\":8235.403948286792,\\\"price\\\":8153.865295333458,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:51:59 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4061370955741925,\\\"bias\\\":0.09386290442580753,\\\"countOfNegative\\\":14,\\\"countOfPositive\\\":6,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8110.84073708755,\\\"ask\\\":8274.696105513562,\\\"price\\\":8192.768421300556,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:05 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40568926374692343,\\\"bias\\\":0.09431073625307657,\\\"countOfNegative\\\":13,\\\"countOfPositive\\\":7,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8151.6114441388345,\\\"ask\\\":8316.290463212346,\\\"price\\\":8233.95095367559,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:11 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.405215192621105,\\\"bias\\\":0.094784807378895,\\\"countOfNegative\\\":12,\\\"countOfPositive\\\":8,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8180.934712390526,\\\"ask\\\":8346.206120721648,\\\"price\\\":8263.570416556087,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:17 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4055561559204481,\\\"bias\\\":0.09444384407955192,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8142.372233651485,\\\"ask\\\":8306.864602008081,\\\"price\\\":8224.618417829783,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:23 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40600344433036617,\\\"bias\\\":0.09399655566963383,\\\"countOfNegative\\\":11,\\\"countOfPositive\\\":9,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8183.475721832667,\\\"ask\\\":8348.798463687872,\\\"price\\\":8266.13709276027,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:29 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40552894056117333,\\\"bias\\\":0.09447105943882667,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8178.091139296591,\\\"ask\\\":8343.305101706623,\\\"price\\\":8260.698120501607,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:35 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4054667393447581,\\\"bias\\\":0.09453326065524192,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8209.721194701398,\\\"ask\\\":8375.57414812971,\\\"price\\\":8292.647671415554,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:41 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4051011170716393,\\\"bias\\\":0.09489888292836068,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8163.29354181005,\\\"ask\\\":8328.208562856718,\\\"price\\\":8245.751052333384,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:47 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40564084192335614,\\\"bias\\\":0.09435915807664386,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8136.689323207984,\\\"ask\\\":8301.066885292994,\\\"price\\\":8218.878104250489,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:53 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40594936441559604,\\\"bias\\\":0.09405063558440396,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8132.343174170379,\\\"ask\\\":8296.63293526473,\\\"price\\\":8214.488054717554,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:52:59 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4059996276755909,\\\"bias\\\":0.09400037232440911,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8140.539807440431,\\\"ask\\\":8304.995157085692,\\\"price\\\":8222.767482263062,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:05 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.405904884184977,\\\"bias\\\":0.094095115815023,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8176.5782907112225,\\\"ask\\\":8341.76169052357,\\\"price\\\":8259.169990617396,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:11 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4063214468868832,\\\"bias\\\":0.09367855311311679,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8217.211561199367,\\\"ask\\\":8383.21583516299,\\\"price\\\":8300.213698181178,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4058559140133207,\\\"bias\\\":0.09414408598667928,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8202.786516764929,\\\"ask\\\":8368.499375689473,\\\"price\\\":8285.6429462272,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:23 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40602147148831075,\\\"bias\\\":0.09397852851168925,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8230.84688414872,\\\"ask\\\":8397.126619182029,\\\"price\\\":8313.986751665374,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:28 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4063429563923535,\\\"bias\\\":0.09365704360764648,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8195.69597678191,\\\"ask\\\":8361.265592474472,\\\"price\\\":8278.480784628191,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:34 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.406744646507925,\\\"bias\\\":0.09325535349207498,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8200.168782069159,\\\"ask\\\":8365.828757464496,\\\"price\\\":8282.998769766828,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:40 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40679554066497337,\\\"bias\\\":0.09320445933502663,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8229.203402189964,\\\"ask\\\":8395.44993556754,\\\"price\\\":8312.326668878752,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:46 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.40646552842470407,\\\"bias\\\":0.09353447157529593,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8210.416849446512,\\\"ask\\\":8376.283856506037,\\\"price\\\":8293.350352976275,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:52 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4066795480434155,\\\"bias\\\":0.0933204519565845,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8237.996704391766,\\\"ask\\\":8404.420880238065,\\\"price\\\":8321.208792314916,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:53:58 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4069930235435737,\\\"bias\\\":0.0930069764564263,\\\"countOfNegative\\\":8,\\\"countOfPositive\\\":12,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8219.045803198114,\\\"ask\\\":8385.08713255565,\\\"price\\\":8302.066467876883,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:04 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4072074725274765,\\\"bias\\\":0.09279252747252348,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8262.236191203772,\\\"ask\\\":8429.150053652333,\\\"price\\\":8345.693122428052,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:10 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5923049106175348,\\\"bias\\\":0.09230491061753476,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8236.147416584874,\\\"ask\\\":8402.534233081537,\\\"price\\\":8319.340824833205,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:16 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5925972951375676,\\\"bias\\\":0.09259729513756765,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8214.33261610487,\\\"ask\\\":8380.278729561533,\\\"price\\\":8297.305672833201,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:22 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5923513845307274,\\\"bias\\\":0.09235138453072744,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8224.141421679224,\\\"ask\\\":8390.28569282426,\\\"price\\\":8307.213557251742,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:28 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5922411069442552,\\\"bias\\\":0.09224110694425525,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8174.900364683589,\\\"ask\\\":8340.049867000429,\\\"price\\\":8257.47511584201,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:33 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5927967161140016,\\\"bias\\\":0.09279671611400164,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8180.711975380752,\\\"ask\\\":8345.978883974303,\\\"price\\\":8263.345429677527,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:41 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5927307460881945,\\\"bias\\\":0.09273074608819454,\\\"countOfNegative\\\":10,\\\"countOfPositive\\\":10,\\\"magnitudeOfSignal\\\":0},{\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8196.425910116734,\\\"ask\\\":8362.010271937274,\\\"price\\\":8279.218091027004,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:54:47 PM\\\",\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5929088681020771,\\\"bias\\\":0.0929088681020771,\\\"countOfNegative\\\":9,\\\"countOfPositive\\\":11,\\\"magnitudeOfSignal\\\":0}],\\\"longTermRecords\\\":[{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5483196705495229,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":13405.032756512555,\\\"ask\\\":13675.841499068361,\\\"price\\\":13540.437127790465,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:16:23 AM\\\",\\\"bias\\\":0.10689767373094705},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6049981923741607,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":14065.451090944032,\\\"ask\\\":14349.60161803381,\\\"price\\\":14207.526354488922,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:26:17 AM\\\",\\\"bias\\\":0.10689767373094705},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5092765431985589,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":14109.401127882882,\\\"ask\\\":14394.439534506768,\\\"price\\\":14251.920331194822,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:36:10 AM\\\",\\\"bias\\\":0.10755642162604262},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.39461541277294565,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":13109.462029774335,\\\"ask\\\":13374.299646537445,\\\"price\\\":13241.880838155885,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:46:04 AM\\\",\\\"bias\\\":0.10831355818871602},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.38894719559823515,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":12040.439441607914,\\\"ask\\\":12283.680642448477,\\\"price\\\":12162.06004202819,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 7:55:58 AM\\\",\\\"bias\\\":0.11322239191442551},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.3929722824513936,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":11466.046701466199,\\\"ask\\\":11697.684008566528,\\\"price\\\":11581.865355016358,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:05:53 AM\\\",\\\"bias\\\":0.11257956351283072},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.3940121289778066,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":11201.51951754172,\\\"ask\\\":11427.812841128423,\\\"price\\\":11314.666179335076,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:15:46 AM\\\",\\\"bias\\\":0.11003514987408392},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5547857751205183,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":10697.564599549745,\\\"ask\\\":10913.677015702267,\\\"price\\\":10805.620807626008,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:25:40 AM\\\",\\\"bias\\\":0.11148744850877434},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4791638434184316,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":9956.606722063552,\\\"ask\\\":10157.750292206249,\\\"price\\\":10057.178507134897,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:35:34 AM\\\",\\\"bias\\\":0.12274856862035222},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.46709345332412705,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":9681.335882091766,\\\"ask\\\":9876.918425164331,\\\"price\\\":9779.127153628053,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:45:28 AM\\\",\\\"bias\\\":0.12051575307924423},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.38234236875646166,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":9156.877625923124,\\\"ask\\\":9341.86505270945,\\\"price\\\":9249.371339316287,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 8:55:22 AM\\\",\\\"bias\\\":0.12023920730654497},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.3868729564861617,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8812.201538220432,\\\"ask\\\":8990.225811719834,\\\"price\\\":8901.213674970135,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:05:16 AM\\\",\\\"bias\\\":0.1163709436971545},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5236502671911001,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8738.09419716285,\\\"ask\\\":8914.621352661092,\\\"price\\\":8826.357774911972,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:15:11 AM\\\",\\\"bias\\\":0.10956418225534587},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.44685008280065736,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8657.055021863192,\\\"ask\\\":8831.945022304873,\\\"price\\\":8744.50002208403,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:25:04 AM\\\",\\\"bias\\\":0.11185329854826942},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5345089784832514,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8782.114778440362,\\\"ask\\\":8959.53123861088,\\\"price\\\":8870.82300852562,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:34:58 AM\\\",\\\"bias\\\":0.11643723360519898},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.38349143409205927,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8580.122696631794,\\\"ask\\\":8753.45850868496,\\\"price\\\":8666.790602658379,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:44:52 AM\\\",\\\"bias\\\":0.11978823540745576},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5585126498081614,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8302.695379062272,\\\"ask\\\":8470.426598841308,\\\"price\\\":8386.560988951791,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 9:54:46 AM\\\",\\\"bias\\\":0.11963510720835513},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.38269486687975274,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8307.370196842408,\\\"ask\\\":8475.195857384675,\\\"price\\\":8391.283027113543,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:04:41 AM\\\",\\\"bias\\\":0.11964338504967714},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.3827630361197889,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7601.087009404421,\\\"ask\\\":7754.644322725724,\\\"price\\\":7677.86566606507,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:14:33 AM\\\",\\\"bias\\\":0.11870053871737574},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.39177020958422126,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7199.294374580491,\\\"ask\\\":7344.73466497606,\\\"price\\\":7272.014519778272,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:24:29 AM\\\",\\\"bias\\\":0.12022805522047864},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6168879317981587,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7088.837399829205,\\\"ask\\\":7232.046236189389,\\\"price\\\":7160.4418180093,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:34:22 AM\\\",\\\"bias\\\":0.1193212575501339},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.618994480492455,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7419.778588140309,\\\"ask\\\":7569.673105072442,\\\"price\\\":7494.725846606378,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:44:16 AM\\\",\\\"bias\\\":0.12047063293708016},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6169799195709035,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7464.890985299908,\\\"ask\\\":7615.696863790816,\\\"price\\\":7540.293924545363,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"bias\\\":0.11957873709460276},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5566340994804997,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7975.97739017873,\\\"ask\\\":8137.108246545972,\\\"price\\\":8056.5428183623535,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:04:04 AM\\\",\\\"bias\\\":0.11444156316821918},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4985130940444704,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7630.477848307253,\\\"ask\\\":7784.628915949826,\\\"price\\\":7707.553382128536,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:13:58 AM\\\",\\\"bias\\\":0.11794934281546321},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.44734343935808757,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7849.321253090549,\\\"ask\\\":8007.893399617629,\\\"price\\\":7928.60732635409,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:23:53 AM\\\",\\\"bias\\\":0.11994492559392511},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5591732890656707,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8154.151906202914,\\\"ask\\\":8318.882247742367,\\\"price\\\":8236.517076972643,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:33:45 AM\\\",\\\"bias\\\":0.12029748726336909},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.3862830742964702,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8089.913912559207,\\\"ask\\\":8253.346516853337,\\\"price\\\":8171.6302147062715,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:43:40 AM\\\",\\\"bias\\\":0.1174957579505943},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.39081293862323746,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7565.012643698965,\\\"ask\\\":7717.841181955503,\\\"price\\\":7641.4269128272335,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 11:53:34 AM\\\",\\\"bias\\\":0.11243604718448225},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.38842330419443494,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7181.890766921675,\\\"ask\\\":7326.979469283737,\\\"price\\\":7254.435118102707,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:03:28 PM\\\",\\\"bias\\\":0.11342528453439571},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.3865030300744482,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":6629.836997759519,\\\"ask\\\":6763.773098724355,\\\"price\\\":6696.805048241937,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:13:23 PM\\\",\\\"bias\\\":0.11787486063096703},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.3861966876211948,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5924.449357385269,\\\"ask\\\":6044.135202989011,\\\"price\\\":5984.29228018714,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:23:16 PM\\\",\\\"bias\\\":0.11787062131727388},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.42277315272002947,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5637.8627766302825,\\\"ask\\\":5751.758994339985,\\\"price\\\":5694.810885485137,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:33:11 PM\\\",\\\"bias\\\":0.11395860944100539},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.521406394835346,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5836.782586318105,\\\"ask\\\":5954.697386041705,\\\"price\\\":5895.739986179904,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:43:04 PM\\\",\\\"bias\\\":0.1082175842744234},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5323203220207132,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5605.142913403071,\\\"ask\\\":5718.378123774849,\\\"price\\\":5661.760518588959,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 12:52:59 PM\\\",\\\"bias\\\":0.11331302242744978},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4125576789928078,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5624.653071013557,\\\"ask\\\":5738.282425983526,\\\"price\\\":5681.467748498541,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:02:53 PM\\\",\\\"bias\\\":0.11788386961701719},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.38190731166214353,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5209.735030883071,\\\"ask\\\":5314.982203224141,\\\"price\\\":5262.358617053604,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:12:47 PM\\\",\\\"bias\\\":0.1209464070277737},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5270824603162643,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5207.421731491857,\\\"ask\\\":5312.622170511896,\\\"price\\\":5260.021951001878,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:22:41 PM\\\",\\\"bias\\\":0.11975766120838205},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5940056377739845,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5555.690641893316,\\\"ask\\\":5667.92681647702,\\\"price\\\":5611.80872918517,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:32:34 PM\\\",\\\"bias\\\":0.12007810562269672},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4634488486318887,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5419.600224569187,\\\"ask\\\":5529.087097792806,\\\"price\\\":5474.343661180999,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:42:29 PM\\\",\\\"bias\\\":0.115308248851627},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6105825660551643,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5627.8177561798875,\\\"ask\\\":5741.511044183519,\\\"price\\\":5684.664400181701,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 1:52:23 PM\\\",\\\"bias\\\":0.11258876962165398},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.43271639243014176,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5692.662991988833,\\\"ask\\\":5807.666284756286,\\\"price\\\":5750.164638372559,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:02:17 PM\\\",\\\"bias\\\":0.10995736780593623},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4568852933225259,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5433.805374979036,\\\"ask\\\":5543.579220938206,\\\"price\\\":5488.692297958621,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:12:10 PM\\\",\\\"bias\\\":0.1174855732512684},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4879026984281654,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5463.401776102805,\\\"ask\\\":5573.773529155386,\\\"price\\\":5518.587652629099,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:22:04 PM\\\",\\\"bias\\\":0.11903561924032802},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.3956851830769636,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5222.804840294971,\\\"ask\\\":5328.316049189817,\\\"price\\\":5275.560444742392,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:31:58 PM\\\",\\\"bias\\\":0.11684795395712827},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6157950311323367,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5280.327129654087,\\\"ask\\\":5387.000405000634,\\\"price\\\":5333.663767327358,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:41:52 PM\\\",\\\"bias\\\":0.11878001126081661},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6145544063333525,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5894.58417921555,\\\"ask\\\":6013.666687886577,\\\"price\\\":5954.125433551065,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 2:51:47 PM\\\",\\\"bias\\\":0.11809205022275238},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6168906429447815,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":6286.788876171561,\\\"ask\\\":6413.794712053819,\\\"price\\\":6350.291794112692,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:01:40 PM\\\",\\\"bias\\\":0.12190094379856498},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.37883350171155755,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":6205.937820194275,\\\"ask\\\":6331.310301410325,\\\"price\\\":6268.6240608023,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:11:33 PM\\\",\\\"bias\\\":0.1238222953973292},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.49683105984155257,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":5946.98423156359,\\\"ask\\\":6067.125327150736,\\\"price\\\":6007.054779357164,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:21:28 PM\\\",\\\"bias\\\":0.12218822017171399},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6162644375395732,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":6237.402330520986,\\\"ask\\\":6363.410458410295,\\\"price\\\":6300.406394465639,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:31:23 PM\\\",\\\"bias\\\":0.11944186879873742},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.44277810916490873,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":6386.336533629098,\\\"ask\\\":6515.353433298373,\\\"price\\\":6450.844983463738,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:41:16 PM\\\",\\\"bias\\\":0.11842801672063685},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6195300768680092,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":6742.617610941532,\\\"ask\\\":6878.832108132272,\\\"price\\\":6810.724859536901,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 3:51:09 PM\\\",\\\"bias\\\":0.12148326361657469},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6200368510895686,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7159.762561781873,\\\"ask\\\":7304.404229696662,\\\"price\\\":7232.083395739263,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:01:05 PM\\\",\\\"bias\\\":0.12374116306386829},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5758183673980555,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7487.036444793081,\\\"ask\\\":7638.289706304053,\\\"price\\\":7562.663075548568,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:10:59 PM\\\",\\\"bias\\\":0.12339250392441581},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4813958914413002,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7525.2664224952305,\\\"ask\\\":7677.292006788063,\\\"price\\\":7601.27921464165,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:20:53 PM\\\",\\\"bias\\\":0.1230976855731562},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.6113482002361392,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":7886.1779858236705,\\\"ask\\\":8045.494712809998,\\\"price\\\":7965.836349316831,\\\"maxShares\\\":6400000,\\\"investedShares\\\":4096000,\\\"averagePrice\\\":5107.542003531315,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:30:47 PM\\\",\\\"bias\\\":0.11558366736098791},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.609333917233069,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8409.127911980362,\\\"ask\\\":8579.009283939562,\\\"price\\\":8494.068597959966,\\\"maxShares\\\":6400000,\\\"investedShares\\\":6400000,\\\"averagePrice\\\":7980.534380517675,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 4:40:40 PM\\\",\\\"bias\\\":0.11171617065237804},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5236177358457539,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8922.520281177623,\\\"ask\\\":9102.773216150908,\\\"price\\\":9012.646748664265,\\\"maxShares\\\":6400000,\\\"investedShares\\\":3904000,\\\"averagePrice\\\":4868.125972115785,\\\"sharesShort\\\":2240000,\\\"averageShortPrice\\\":3187.5061683610525,\\\"dateObserved\\\":\\\"7/13/2023, 4:50:34 PM\\\",\\\"bias\\\":0.10773687135041277},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5270841831420064,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8833.899767523902,\\\"ask\\\":9012.36238909004,\\\"price\\\":8923.131078306971,\\\"maxShares\\\":6400000,\\\"investedShares\\\":1088000,\\\"averagePrice\\\":1562.9773823338664,\\\"sharesShort\\\":2368000,\\\"averageShortPrice\\\":3369.6493779816838,\\\"dateObserved\\\":\\\"7/13/2023, 5:00:29 PM\\\",\\\"bias\\\":0.10131843022502651},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4530376286581786,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":9203.589859718935,\\\"ask\\\":9389.520967996086,\\\"price\\\":9296.555413857512,\\\"maxShares\\\":6400000,\\\"investedShares\\\":832000,\\\"averagePrice\\\":1195.2179982553098,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:10:23 PM\\\",\\\"bias\\\":0.09860820106894441},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5249205370943987,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":9393.678653590634,\\\"ask\\\":9583.449939521759,\\\"price\\\":9488.564296556193,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:20:17 PM\\\",\\\"bias\\\":0.0953484533320621},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4077163030003477,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":9189.107209339332,\\\"ask\\\":9374.745738820937,\\\"price\\\":9281.926474080128,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:30:10 PM\\\",\\\"bias\\\":0.09421560168210702},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.41260706864729635,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8851.772776872576,\\\"ask\\\":9030.59646933465,\\\"price\\\":8941.184623103616,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:40:04 PM\\\",\\\"bias\\\":0.08896944529537182},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.47358695194083894,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8630.484502157717,\\\"ask\\\":8804.837724423529,\\\"price\\\":8717.661113290622,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:49:59 PM\\\",\\\"bias\\\":0.090144154153036},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4825916935297556,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8880.74021285133,\\\"ask\\\":9060.149106040246,\\\"price\\\":8970.444659445784,\\\"maxShares\\\":6400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 5:59:52 PM\\\",\\\"bias\\\":0.09823699721762535},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5624591827875338,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8427.595236138603,\\\"ask\\\":8597.849685353516,\\\"price\\\":8512.722460746065,\\\"maxShares\\\":6400000,\\\"investedShares\\\":3776000,\\\"averagePrice\\\":5054.591245026426,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:09:47 PM\\\",\\\"bias\\\":0.10008215941238252},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5999333973548677,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8905.96904945696,\\\"ask\\\":9085.887616112652,\\\"price\\\":8995.928332784802,\\\"maxShares\\\":6400000,\\\"investedShares\\\":6400000,\\\"averagePrice\\\":8567.103805129535,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:19:41 PM\\\",\\\"bias\\\":0.10567458951268827},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.4909857935559442,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":9439.646998574108,\\\"ask\\\":9630.346937939243,\\\"price\\\":9534.996968256677,\\\"maxShares\\\":6400000,\\\"investedShares\\\":2944000,\\\"averagePrice\\\":3940.867750359587,\\\"sharesShort\\\":3392000,\\\"averageShortPrice\\\":5179.101211532431,\\\"dateObserved\\\":\\\"7/13/2023, 6:29:34 PM\\\",\\\"bias\\\":0.10617891571981641},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.402989885785409,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8657.024377594591,\\\"ask\\\":8831.913758960138,\\\"price\\\":8744.46906827736,\\\"maxShares\\\":6400000,\\\"investedShares\\\":128000,\\\"averagePrice\\\":164.30694386708154,\\\"sharesShort\\\":6208000,\\\"averageShortPrice\\\":9478.732406012185,\\\"dateObserved\\\":\\\"7/13/2023, 6:39:28 PM\\\",\\\"bias\\\":0.10654307416131192},{\\\"volatility\\\":0.0060999999999999995,\\\"forecast\\\":0.5444442479614672,\\\"buyTrend\\\":false,\\\"sellTrend\\\":false,\\\"sellShortTrend\\\":false,\\\"coverShortTrend\\\":false,\\\"symbol\\\":\\\"TITN\\\",\\\"bid\\\":8326.848939655309,\\\"ask\\\":8495.068110153397,\\\"price\\\":8410.958524904348,\\\"maxShares\\\":6400000,\\\"investedShares\\\":4672000,\\\"averagePrice\\\":5997.203451148479,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"dateObserved\\\":\\\"7/13/2023, 6:49:22 PM\\\",\\\"bias\\\":0.10088153029080316}],\\\"recentTicksOfPrices\\\":[8218.878104250489,8214.488054717554,8222.767482263062,8259.169990617396,8300.213698181178,8285.6429462272,8313.986751665374,8278.480784628191,8282.998769766828,8312.326668878752,8293.350352976275,8321.208792314916,8302.066467876883,8345.693122428052,8319.340824833205,8297.305672833201,8307.213557251742,8257.47511584201,8263.345429677527,8279.218091027004]}]]\"}}],[\"data/salesLedger.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/salesLedger.txt\",\"text\":\"[{\\\"date\\\":\\\"7/13/2023, 7:16:41 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":424.9837867892628,\\\"averagePurchasePrice\\\":318.5597384838671,\\\"profit\\\":\\\"$110,265,637.18\\\",\\\"profitPercent\\\":\\\"33.41%\\\",\\\"shares\\\":1036097,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.36777600765731505},{\\\"date\\\":\\\"7/13/2023, 7:24:09 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":388.45714344712474,\\\"averagePurchasePrice\\\":420.1805934793734,\\\"profit\\\":\\\"$33,229,203.59\\\",\\\"profitPercent\\\":\\\"7.55%\\\",\\\"shares\\\":1047465,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6314690767471021},{\\\"date\\\":\\\"7/13/2023, 7:31:40 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":433.56440794873754,\\\"averagePurchasePrice\\\":388.45714344712474,\\\"profit\\\":\\\"$54,942,136.70\\\",\\\"profitPercent\\\":\\\"11.61%\\\",\\\"shares\\\":1218033,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3738030271342713},{\\\"date\\\":\\\"7/13/2023, 7:39:11 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":368.20430079594075,\\\"averagePurchasePrice\\\":433.56440794873754,\\\"profit\\\":\\\"$79,580,636.39\\\",\\\"profitPercent\\\":\\\"15.08%\\\",\\\"shares\\\":1217572,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6187774381672686},{\\\"date\\\":\\\"7/13/2023, 7:46:40 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":408.6624265060464,\\\"averagePurchasePrice\\\":368.2043007959408,\\\"profit\\\":\\\"$66,727,263.07\\\",\\\"profitPercent\\\":\\\"10.99%\\\",\\\"shares\\\":1649292,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3898412600625881},{\\\"date\\\":\\\"7/13/2023, 8:09:10 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":328.1977689355984,\\\"averagePurchasePrice\\\":409.0933279771134,\\\"profit\\\":\\\"$133,240,324.85\\\",\\\"profitPercent\\\":\\\"19.77%\\\",\\\"shares\\\":1647066,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6053385255475223},{\\\"date\\\":\\\"7/13/2023, 8:16:40 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":377.33906078960433,\\\"averagePurchasePrice\\\":328.1977689355984,\\\"profit\\\":\\\"$120,809,345.02\\\",\\\"profitPercent\\\":\\\"14.97%\\\",\\\"shares\\\":2458408,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4023657372303465},{\\\"date\\\":\\\"7/13/2023, 8:31:40 AM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":39056.272726181436,\\\"averagePurchasePrice\\\":29409.074216422567,\\\"profit\\\":\\\"$304,234,052.20\\\",\\\"profitPercent\\\":\\\"32.80%\\\",\\\"shares\\\":31536,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3362197173606887},{\\\"date\\\":\\\"7/13/2023, 8:46:40 AM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":31195.751720341377,\\\"averagePurchasePrice\\\":39056.272726181436,\\\"profit\\\":\\\"$247,850,087.84\\\",\\\"profitPercent\\\":\\\"20.13%\\\",\\\"shares\\\":31531,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6434834236628523},{\\\"date\\\":\\\"7/13/2023, 8:54:11 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":300.55497684505036,\\\"averagePurchasePrice\\\":310.3497529841559,\\\"profit\\\":\\\"$46,682,236.10\\\",\\\"profitPercent\\\":\\\"3.16%\\\",\\\"shares\\\":4766034,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6031415393336335},{\\\"date\\\":\\\"7/13/2023, 9:09:10 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":364.35176125540306,\\\"averagePurchasePrice\\\":300.55497684505036,\\\"profit\\\":\\\"$323,833,051.84\\\",\\\"profitPercent\\\":\\\"21.23%\\\",\\\"shares\\\":5076009,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.41661186696160224},{\\\"date\\\":\\\"7/13/2023, 9:16:39 AM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":50830.44008953147,\\\"averagePurchasePrice\\\":45653.44128634101,\\\"profit\\\":\\\"$209,699,513.52\\\",\\\"profitPercent\\\":\\\"11.34%\\\",\\\"shares\\\":40506,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.38223705887476117},{\\\"date\\\":\\\"7/13/2023, 9:31:40 AM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":43243.052603438715,\\\"averagePurchasePrice\\\":50830.44008953147,\\\"profit\\\":\\\"$307,304,367.96\\\",\\\"profitPercent\\\":\\\"14.93%\\\",\\\"shares\\\":40502,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6241139847672161},{\\\"date\\\":\\\"7/13/2023, 9:39:11 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":408.97531735459876,\\\"averagePurchasePrice\\\":349.1240787216969,\\\"profit\\\":\\\"$405,584,911.16\\\",\\\"profitPercent\\\":\\\"17.14%\\\",\\\"shares\\\":6776550,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.40536089934265573},{\\\"date\\\":\\\"7/13/2023, 9:54:10 AM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":54903.83271260939,\\\"averagePurchasePrice\\\":44466.43368072747,\\\"profit\\\":\\\"$650,479,582.46\\\",\\\"profitPercent\\\":\\\"23.47%\\\",\\\"shares\\\":62322,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3553566876870623},{\\\"date\\\":\\\"7/13/2023, 10:24:11 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":545.7847526547081,\\\"averagePurchasePrice\\\":339.646803571432,\\\"profit\\\":\\\"$2,076,454,359.05\\\",\\\"profitPercent\\\":\\\"60.69%\\\",\\\"shares\\\":10073130,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39135033089192023},{\\\"date\\\":\\\"7/13/2023, 10:31:41 AM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":63037.95784240672,\\\"averagePurchasePrice\\\":55633.06140278661,\\\"profit\\\":\\\"$731,537,124.17\\\",\\\"profitPercent\\\":\\\"13.31%\\\",\\\"shares\\\":98791,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3805784247083696},{\\\"date\\\":\\\"7/13/2023, 10:46:41 AM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":55257.38317449276,\\\"averagePurchasePrice\\\":62040.20297173864,\\\"profit\\\":\\\"$680,791,623.05\\\",\\\"profitPercent\\\":\\\"10.93%\\\",\\\"shares\\\":100370,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6163332506767738},{\\\"date\\\":\\\"7/13/2023, 10:54:11 AM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":54422.976898332316,\\\"averagePurchasePrice\\\":55088.71794944375,\\\"profit\\\":\\\"-$83,467,950.02\\\",\\\"profitPercent\\\":\\\"-1.21%\\\",\\\"shares\\\":125376,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.395778359054312},{\\\"date\\\":\\\"7/13/2023, 11:01:40 AM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":2187.0045644733837,\\\"averagePurchasePrice\\\":2654.631511920613,\\\"profit\\\":\\\"$1,201,864,384.58\\\",\\\"profitPercent\\\":\\\"17.62%\\\",\\\"shares\\\":2570135,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.598598783726446},{\\\"date\\\":\\\"7/13/2023, 11:31:40 AM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":848.6261941276381,\\\"averagePurchasePrice\\\":682.7524533393505,\\\"profit\\\":\\\"$1,949,428,982.26\\\",\\\"profitPercent\\\":\\\"24.29%\\\",\\\"shares\\\":11752487,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.41869793407069006},{\\\"date\\\":\\\"7/13/2023, 11:39:10 AM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":2875.734489416628,\\\"averagePurchasePrice\\\":3758.45943141467,\\\"profit\\\":\\\"$2,341,991,087.16\\\",\\\"profitPercent\\\":\\\"23.49%\\\",\\\"shares\\\":2653138,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6246012348097154},{\\\"date\\\":\\\"7/13/2023, 12:09:11 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":4654.578548022495,\\\"averagePurchasePrice\\\":2898.7665076201506,\\\"profit\\\":\\\"$7,458,171,583.08\\\",\\\"profitPercent\\\":\\\"60.57%\\\",\\\"shares\\\":4247705,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.40828070697694385},{\\\"date\\\":\\\"7/13/2023, 12:31:40 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":629.6150041998371,\\\"averagePurchasePrice\\\":361.3114244306769,\\\"profit\\\":\\\"$1,797,633,984.45\\\",\\\"profitPercent\\\":\\\"74.26%\\\",\\\"shares\\\":6700000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.40256597677161987},{\\\"date\\\":\\\"7/13/2023, 12:46:40 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":75001.94709069605,\\\"averagePurchasePrice\\\":50304.50321391106,\\\"profit\\\":\\\"$10,152,995,690.53\\\",\\\"profitPercent\\\":\\\"49.10%\\\",\\\"shares\\\":411095,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3413108140144896},{\\\"date\\\":\\\"7/13/2023, 12:46:40 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":370.6153963171111,\\\"averagePurchasePrice\\\":305.3984887268198,\\\"profit\\\":\\\"-$189,129,032.01\\\",\\\"profitPercent\\\":\\\"-21.35%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5961624911281647},{\\\"date\\\":\\\"7/13/2023, 12:54:11 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":401.07955675529365,\\\"averagePurchasePrice\\\":377.7065931626982,\\\"profit\\\":\\\"$67,781,594.42\\\",\\\"profitPercent\\\":\\\"6.19%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.42313412526978644},{\\\"date\\\":\\\"7/13/2023, 1:09:10 PM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":783.0392890568594,\\\"averagePurchasePrice\\\":567.3434217248328,\\\"profit\\\":\\\"$434,372,651.55\\\",\\\"profitPercent\\\":\\\"38.02%\\\",\\\"shares\\\":2013820,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3695523936770353},{\\\"date\\\":\\\"7/13/2023, 1:13:58 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":83232.15979642383,\\\"averagePurchasePrice\\\":59919.00887119947,\\\"profit\\\":\\\"$452,321,754.25\\\",\\\"profitPercent\\\":\\\"38.91%\\\",\\\"shares\\\":19402,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.6466110118253764},{\\\"date\\\":\\\"7/13/2023, 1:13:58 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":1760.0194000140625,\\\"averagePurchasePrice\\\":2988.8046892749694,\\\"profit\\\":\\\"$12,042,095,834.76\\\",\\\"profitPercent\\\":\\\"41.11%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.37057108106894915},{\\\"date\\\":\\\"7/13/2023, 1:13:58 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":297.37100876441565,\\\"averagePurchasePrice\\\":381.3738891122841,\\\"profit\\\":\\\"$243,608,353.01\\\",\\\"profitPercent\\\":\\\"22.03%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.3854109078764768},{\\\"date\\\":\\\"7/13/2023, 1:13:58 PM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":775.4741183357108,\\\"averagePurchasePrice\\\":792.179539565302,\\\"profit\\\":\\\"$9,914,266.57\\\",\\\"profitPercent\\\":\\\"2.11%\\\",\\\"shares\\\":593476,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.372724254683307},{\\\"date\\\":\\\"7/13/2023, 1:16:41 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":1592.9320606633403,\\\"averagePurchasePrice\\\":1684.1387276878713,\\\"profit\\\":\\\"$893,825,336.84\\\",\\\"profitPercent\\\":\\\"5.42%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6186440173576563},{\\\"date\\\":\\\"7/13/2023, 1:16:41 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":284.9680905406322,\\\"averagePurchasePrice\\\":316.64558903825747,\\\"profit\\\":\\\"$91,864,745.64\\\",\\\"profitPercent\\\":\\\"10.00%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6073184773483262},{\\\"date\\\":\\\"7/13/2023, 1:16:41 PM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":726.570409123147,\\\"averagePurchasePrice\\\":747.4387158163092,\\\"profit\\\":\\\"$763,699,327.23\\\",\\\"profitPercent\\\":\\\"2.79%\\\",\\\"shares\\\":36596133,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5506453800921374},{\\\"date\\\":\\\"7/13/2023, 1:46:41 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":170718.98041295688,\\\"averagePurchasePrice\\\":92682.96558449666,\\\"profit\\\":\\\"$25,207,427,617.93\\\",\\\"profitPercent\\\":\\\"84.20%\\\",\\\"shares\\\":323023,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3771118649669319},{\\\"date\\\":\\\"7/13/2023, 1:54:11 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":671.6462393134371,\\\"averagePurchasePrice\\\":284.9680905406322,\\\"profit\\\":\\\"$1,121,366,631.44\\\",\\\"profitPercent\\\":\\\"135.69%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39851633644767775},{\\\"date\\\":\\\"7/13/2023, 2:06:20 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":100272.22655817626,\\\"averagePurchasePrice\\\":169926.1878646441,\\\"profit\\\":\\\"$23,403,034,459.36\\\",\\\"profitPercent\\\":\\\"40.99%\\\",\\\"shares\\\":335990,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.3719484208152579},{\\\"date\\\":\\\"7/13/2023, 2:06:20 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":4985.723634647291,\\\"averagePurchasePrice\\\":1608.1443331333955,\\\"profit\\\":\\\"$33,100,277,154.84\\\",\\\"profitPercent\\\":\\\"210.03%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.6263038815976909},{\\\"date\\\":\\\"7/13/2023, 2:09:09 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":5412.143923071288,\\\"averagePurchasePrice\\\":5305.903071130084,\\\"profit\\\":\\\"$1,041,160,349.02\\\",\\\"profitPercent\\\":\\\"2.00%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3856583363109629},{\\\"date\\\":\\\"7/13/2023, 2:16:40 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":5115.754526277701,\\\"averagePurchasePrice\\\":5391.417183257925,\\\"profit\\\":\\\"$2,701,494,038.41\\\",\\\"profitPercent\\\":\\\"5.11%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6164557121002034},{\\\"date\\\":\\\"7/13/2023, 2:24:10 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":74469.54032849809,\\\"averagePurchasePrice\\\":97003.20458532832,\\\"profit\\\":\\\"$19,272,367,028.94\\\",\\\"profitPercent\\\":\\\"23.23%\\\",\\\"shares\\\":855270,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6122833783744415},{\\\"date\\\":\\\"7/13/2023, 2:24:10 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":5131.262350555923,\\\"averagePurchasePrice\\\":5115.754526277701,\\\"profit\\\":\\\"$151,976,677.93\\\",\\\"profitPercent\\\":\\\"0.30%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4006758715513363},{\\\"date\\\":\\\"7/13/2023, 2:27:53 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":72970.47437119293,\\\"averagePurchasePrice\\\":75556.68900007122,\\\"profit\\\":\\\"-$5,020,755,528.42\\\",\\\"profitPercent\\\":\\\"-3.42%\\\",\\\"shares\\\":1941353,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.5985818105707159},{\\\"date\\\":\\\"7/13/2023, 2:27:53 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":552.4467004823208,\\\"averagePurchasePrice\\\":558.4473687196943,\\\"profit\\\":\\\"$17,401,937.89\\\",\\\"profitPercent\\\":\\\"1.07%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.3938669050605432},{\\\"date\\\":\\\"7/13/2023, 2:27:53 PM\\\",\\\"symbol\\\":\\\"JGN\\\",\\\"price\\\":702.5741080376836,\\\"averagePurchasePrice\\\":629.9223562268162,\\\"profit\\\":\\\"$486,766,737.13\\\",\\\"profitPercent\\\":\\\"11.53%\\\",\\\"shares\\\":6700000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.5787882574717682},{\\\"date\\\":\\\"7/13/2023, 2:31:40 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":549.9128110114113,\\\"averagePurchasePrice\\\":552.4116386471125,\\\"profit\\\":\\\"$7,246,600.14\\\",\\\"profitPercent\\\":\\\"0.45%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5829694041961684},{\\\"date\\\":\\\"7/13/2023, 2:46:41 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":62955.95285077295,\\\"averagePurchasePrice\\\":38511.775457362906,\\\"profit\\\":\\\"$90,753,432,969.14\\\",\\\"profitPercent\\\":\\\"63.47%\\\",\\\"shares\\\":3712681,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.26793252755947017},{\\\"date\\\":\\\"7/13/2023, 2:54:10 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":50733.13034443495,\\\"averagePurchasePrice\\\":62955.95285077295,\\\"profit\\\":\\\"$45,379,404,217.19\\\",\\\"profitPercent\\\":\\\"19.41%\\\",\\\"shares\\\":3712678,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.723762410192309},{\\\"date\\\":\\\"7/13/2023, 3:09:11 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":66727.27155499312,\\\"averagePurchasePrice\\\":50901.446275522765,\\\"profit\\\":\\\"$64,439,627,024.60\\\",\\\"profitPercent\\\":\\\"31.09%\\\",\\\"shares\\\":4071802,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.2735466228984577},{\\\"date\\\":\\\"7/13/2023, 3:09:11 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":3279.7671866907017,\\\"averagePurchasePrice\\\":5360.607585112624,\\\"profit\\\":\\\"$20,392,235,904.53\\\",\\\"profitPercent\\\":\\\"38.82%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6088462926793186},{\\\"date\\\":\\\"7/13/2023, 3:24:09 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":72480.86518743995,\\\"averagePurchasePrice\\\":84288.98402809078,\\\"profit\\\":\\\"$43,776,203,553.59\\\",\\\"profitPercent\\\":\\\"14.01%\\\",\\\"shares\\\":3707297,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5898505989163223},{\\\"date\\\":\\\"7/13/2023, 3:24:09 PM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":298.7361653371508,\\\"averagePurchasePrice\\\":349.9929506288129,\\\"profit\\\":\\\"$2,829,374,548.10\\\",\\\"profitPercent\\\":\\\"14.65%\\\",\\\"shares\\\":55200000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5605372071981517},{\\\"date\\\":\\\"7/13/2023, 3:31:41 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":4998.053811840533,\\\"averagePurchasePrice\\\":3279.7671866907017,\\\"profit\\\":\\\"$16,839,208,926.47\\\",\\\"profitPercent\\\":\\\"52.39%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.38084607962968675},{\\\"date\\\":\\\"7/13/2023, 3:39:10 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":101960.17084372365,\\\"averagePurchasePrice\\\":66726.5113251892,\\\"profit\\\":\\\"$200,265,478,178.89\\\",\\\"profitPercent\\\":\\\"52.80%\\\",\\\"shares\\\":5683925,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.23523992532743349},{\\\"date\\\":\\\"7/13/2023, 3:46:41 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":80481.84514476126,\\\"averagePurchasePrice\\\":101664.4424638593,\\\"profit\\\":\\\"$120,303,405,266.82\\\",\\\"profitPercent\\\":\\\"20.84%\\\",\\\"shares\\\":5679351,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.7605970858621955},{\\\"date\\\":\\\"7/13/2023, 3:54:11 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":96342.73390856628,\\\"averagePurchasePrice\\\":80481.84514476126,\\\"profit\\\":\\\"$117,370,576,852.16\\\",\\\"profitPercent\\\":\\\"19.71%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.25781789499614205},{\\\"date\\\":\\\"7/13/2023, 3:54:11 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":2751.72194826053,\\\"averagePurchasePrice\\\":4910.338518165296,\\\"profit\\\":\\\"$21,154,442,385.07\\\",\\\"profitPercent\\\":\\\"43.96%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6180218236185607},{\\\"date\\\":\\\"7/13/2023, 4:01:40 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":3067.8523410385556,\\\"averagePurchasePrice\\\":2751.72194826053,\\\"profit\\\":\\\"$3,098,077,849.22\\\",\\\"profitPercent\\\":\\\"11.49%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3895619502913178},{\\\"date\\\":\\\"7/13/2023, 4:01:40 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":449.6246161279718,\\\"averagePurchasePrice\\\":739.8606938928634,\\\"profit\\\":\\\"$841,684,625.52\\\",\\\"profitPercent\\\":\\\"39.23%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6293549558996431},{\\\"date\\\":\\\"7/13/2023, 4:09:11 PM\\\",\\\"symbol\\\":\\\"BLD\\\",\\\"price\\\":34188.317920179696,\\\"averagePurchasePrice\\\":29065.520654685544,\\\"profit\\\":\\\"$17,999,624,401.55\\\",\\\"profitPercent\\\":\\\"17.62%\\\",\\\"shares\\\":3513632,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3570116615776173},{\\\"date\\\":\\\"7/13/2023, 4:09:11 PM\\\",\\\"symbol\\\":\\\"KGI\\\",\\\"price\\\":10614.864444693303,\\\"averagePurchasePrice\\\":11015.062722499275,\\\"profit\\\":\\\"$1,418,290,690.60\\\",\\\"profitPercent\\\":\\\"3.63%\\\",\\\"shares\\\":3543970,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6065489610252771},{\\\"date\\\":\\\"7/13/2023, 4:16:40 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":48456.88051309698,\\\"averagePurchasePrice\\\":97016.95283069264,\\\"profit\\\":\\\"$359,344,535,150.21\\\",\\\"profitPercent\\\":\\\"50.05%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.7321077494469023},{\\\"date\\\":\\\"7/13/2023, 4:24:10 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":58122.51166066663,\\\"averagePurchasePrice\\\":48700.40787641471,\\\"profit\\\":\\\"$69,723,568,003.46\\\",\\\"profitPercent\\\":\\\"19.35%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.2713303084079798},{\\\"date\\\":\\\"7/13/2023, 4:24:10 PM\\\",\\\"symbol\\\":\\\"DCOMM\\\",\\\"price\\\":20774.930374212683,\\\"averagePurchasePrice\\\":19919.549897791727,\\\"profit\\\":\\\"$8,007,887,258.07\\\",\\\"profitPercent\\\":\\\"4.29%\\\",\\\"shares\\\":9361784,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39774898780406814},{\\\"date\\\":\\\"7/13/2023, 4:24:10 PM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":325.4218577023506,\\\"averagePurchasePrice\\\":304.48731996360374,\\\"profit\\\":\\\"-$1,155,586,483.18\\\",\\\"profitPercent\\\":\\\"-6.88%\\\",\\\"shares\\\":55200000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5639112007909763},{\\\"date\\\":\\\"7/13/2023, 4:39:10 PM\\\",\\\"symbol\\\":\\\"BLD\\\",\\\"price\\\":27826.220172315432,\\\"averagePurchasePrice\\\":31703.471720772977,\\\"profit\\\":\\\"$62,811,475,085.01\\\",\\\"profitPercent\\\":\\\"12.23%\\\",\\\"shares\\\":16200000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6370664922675611},{\\\"date\\\":\\\"7/13/2023, 4:39:10 PM\\\",\\\"symbol\\\":\\\"HLS\\\",\\\"price\\\":13316.993629736164,\\\"averagePurchasePrice\\\":12715.233477278998,\\\"profit\\\":\\\"$5,837,073,478.83\\\",\\\"profitPercent\\\":\\\"4.73%\\\",\\\"shares\\\":9700000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.41037369203410007},{\\\"date\\\":\\\"7/13/2023, 4:39:10 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":2639.146556872813,\\\"averagePurchasePrice\\\":449.62461612797176,\\\"profit\\\":\\\"$6,349,613,628.16\\\",\\\"profitPercent\\\":\\\"486.97%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.34976016188740666},{\\\"date\\\":\\\"7/13/2023, 4:46:41 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":37461.79135832648,\\\"averagePurchasePrice\\\":58122.51166066663,\\\"profit\\\":\\\"$152,889,330,237.32\\\",\\\"profitPercent\\\":\\\"35.55%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.708996654142484},{\\\"date\\\":\\\"7/13/2023, 4:46:41 PM\\\",\\\"symbol\\\":\\\"KGI\\\",\\\"price\\\":13563.080023342243,\\\"averagePurchasePrice\\\":10529.355242010413,\\\"profit\\\":\\\"$46,266,475,062.25\\\",\\\"profitPercent\\\":\\\"28.81%\\\",\\\"shares\\\":15250716,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3989556091655861},{\\\"date\\\":\\\"7/13/2023, 4:46:41 PM\\\",\\\"symbol\\\":\\\"WDS\\\",\\\"price\\\":56227.69546115685,\\\"averagePurchasePrice\\\":55896.20923488919,\\\"profit\\\":\\\"-$4,184,375,495.64\\\",\\\"profitPercent\\\":\\\"-0.59%\\\",\\\"shares\\\":12623075,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6019327523094726},{\\\"date\\\":\\\"7/13/2023, 4:46:41 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":2267.319502597635,\\\"averagePurchasePrice\\\":2639.146556872813,\\\"profit\\\":\\\"$1,078,298,457.40\\\",\\\"profitPercent\\\":\\\"14.09%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6508410373102681},{\\\"date\\\":\\\"7/13/2023, 4:46:41 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":9077.383180856426,\\\"averagePurchasePrice\\\":7980.534380517688,\\\"profit\\\":\\\"$7,019,832,322.17\\\",\\\"profitPercent\\\":\\\"13.74%\\\",\\\"shares\\\":6400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.394918099098945},{\\\"date\\\":\\\"7/13/2023, 4:54:10 PM\\\",\\\"symbol\\\":\\\"ECP\\\",\\\"price\\\":8792.999216551772,\\\"averagePurchasePrice\\\":8389.369778413835,\\\"profit\\\":\\\"$8,436,282,700.66\\\",\\\"profitPercent\\\":\\\"4.81%\\\",\\\"shares\\\":20901059,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.335881172494892},{\\\"date\\\":\\\"7/13/2023, 4:54:10 PM\\\",\\\"symbol\\\":\\\"DCOMM\\\",\\\"price\\\":18897.89366523381,\\\"averagePurchasePrice\\\":19836.574637734666,\\\"profit\\\":\\\"$11,358,039,767.26\\\",\\\"profitPercent\\\":\\\"4.73%\\\",\\\"shares\\\":12100000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5958448537225353},{\\\"date\\\":\\\"7/13/2023, 4:54:10 PM\\\",\\\"symbol\\\":\\\"UNV\\\",\\\"price\\\":15410.793600429995,\\\"averagePurchasePrice\\\":15680.706813095801,\\\"profit\\\":\\\"$2,537,184,199.06\\\",\\\"profitPercent\\\":\\\"1.72%\\\",\\\"shares\\\":9400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6004366690193921},{\\\"date\\\":\\\"7/13/2023, 4:54:10 PM\\\",\\\"symbol\\\":\\\"GPH\\\",\\\"price\\\":35429.94734684409,\\\"averagePurchasePrice\\\":35692.32216462717,\\\"profit\\\":\\\"-$1,679,198,833.81\\\",\\\"profitPercent\\\":\\\"-0.74%\\\",\\\"shares\\\":6400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4010298963196812},{\\\"date\\\":\\\"7/13/2023, 4:54:10 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":1274.9153924088116,\\\"averagePurchasePrice\\\":3064.2802020179806,\\\"profit\\\":\\\"$17,535,775,134.17\\\",\\\"profitPercent\\\":\\\"58.39%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6414834219249329},{\\\"date\\\":\\\"7/13/2023, 4:54:10 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":3469.0089419158985,\\\"averagePurchasePrice\\\":2267.319502597635,\\\"profit\\\":\\\"$3,484,899,374.02\\\",\\\"profitPercent\\\":\\\"53.00%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3407061452599324},{\\\"date\\\":\\\"7/13/2023, 4:54:10 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":8821.767401099074,\\\"averagePurchasePrice\\\":9107.160481031584,\\\"profit\\\":\\\"$1,826,515,711.57\\\",\\\"profitPercent\\\":\\\"3.13%\\\",\\\"shares\\\":6400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6013184302250265},{\\\"date\\\":\\\"7/13/2023, 5:01:40 PM\\\",\\\"symbol\\\":\\\"ECP\\\",\\\"price\\\":8549.424548303403,\\\"averagePurchasePrice\\\":8775.507685995186,\\\"profit\\\":\\\"$6,239,894,600.29\\\",\\\"profitPercent\\\":\\\"2.58%\\\",\\\"shares\\\":27600000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6009332415459125},{\\\"date\\\":\\\"7/13/2023, 5:01:40 PM\\\",\\\"symbol\\\":\\\"MGCP\\\",\\\"price\\\":22917.139493037073,\\\"averagePurchasePrice\\\":24113.190450873353,\\\"profit\\\":\\\"$17,462,343,984.41\\\",\\\"profitPercent\\\":\\\"4.96%\\\",\\\"shares\\\":14600000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6630785420207359},{\\\"date\\\":\\\"7/13/2023, 5:01:40 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":50292.3878912616,\\\"averagePurchasePrice\\\":37163.70879851141,\\\"profit\\\":\\\"$97,152,225,286.35\\\",\\\"profitPercent\\\":\\\"35.33%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.29627780838722434},{\\\"date\\\":\\\"7/13/2023, 5:01:40 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":9302.486894404492,\\\"averagePurchasePrice\\\":9193.984601963919,\\\"profit\\\":\\\"$694,414,671.62\\\",\\\"profitPercent\\\":\\\"1.18%\\\",\\\"shares\\\":6400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4029054695418528},{\\\"date\\\":\\\"7/13/2023, 5:09:11 PM\\\",\\\"symbol\\\":\\\"MGCP\\\",\\\"price\\\":24084.26312908144,\\\"averagePurchasePrice\\\":22971.706446396496,\\\"profit\\\":\\\"$16,243,327,567.20\\\",\\\"profitPercent\\\":\\\"4.84%\\\",\\\"shares\\\":14600000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.39049223468788097},{\\\"date\\\":\\\"7/13/2023, 5:09:11 PM\\\",\\\"symbol\\\":\\\"UNV\\\",\\\"price\\\":17541.440102318666,\\\"averagePurchasePrice\\\":16667.075019779142,\\\"profit\\\":\\\"-$8,219,031,775.87\\\",\\\"profitPercent\\\":\\\"-5.25%\\\",\\\"shares\\\":9400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5953474398881922},{\\\"date\\\":\\\"7/13/2023, 5:16:40 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":47388.701595617626,\\\"averagePurchasePrice\\\":50292.3878912616,\\\"profit\\\":\\\"$21,487,278,587.77\\\",\\\"profitPercent\\\":\\\"5.77%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6932611680774045},{\\\"date\\\":\\\"7/13/2023, 5:16:40 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":2245.8018281321242,\\\"averagePurchasePrice\\\":1280.6502677493093,\\\"profit\\\":\\\"$9,458,485,291.75\\\",\\\"profitPercent\\\":\\\"75.36%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.37645340472675487},{\\\"date\\\":\\\"7/13/2023, 5:16:40 PM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":435.6935369332869,\\\"averagePurchasePrice\\\":411.7464937241505,\\\"profit\\\":\\\"$1,321,876,785.14\\\",\\\"profitPercent\\\":\\\"5.82%\\\",\\\"shares\\\":55200000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.43311296989969955},{\\\"date\\\":\\\"7/13/2023, 5:24:10 PM\\\",\\\"symbol\\\":\\\"MGCP\\\",\\\"price\\\":23319.972998719426,\\\"averagePurchasePrice\\\":24084.26312908144,\\\"profit\\\":\\\"$11,158,635,903.29\\\",\\\"profitPercent\\\":\\\"3.17%\\\",\\\"shares\\\":14600000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.561889859149485},{\\\"date\\\":\\\"7/13/2023, 5:24:10 PM\\\",\\\"symbol\\\":\\\"BLD\\\",\\\"price\\\":21173.160441468946,\\\"averagePurchasePrice\\\":28563.174575066354,\\\"profit\\\":\\\"$119,718,228,964.28\\\",\\\"profitPercent\\\":\\\"25.87%\\\",\\\"shares\\\":16200000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6185779345438699},{\\\"date\\\":\\\"7/13/2023, 5:24:10 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":55110.07596913285,\\\"averagePurchasePrice\\\":47820.23716615894,\\\"profit\\\":\\\"$53,944,807,142.01\\\",\\\"profitPercent\\\":\\\"15.24%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3025724632931254},{\\\"date\\\":\\\"7/13/2023, 5:24:10 PM\\\",\\\"symbol\\\":\\\"WDS\\\",\\\"price\\\":111859.94536596135,\\\"averagePurchasePrice\\\":108731.5388730086,\\\"profit\\\":\\\"-$1,836,531,031.69\\\",\\\"profitPercent\\\":\\\"-2.88%\\\",\\\"shares\\\":587050,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5975587077390888},{\\\"date\\\":\\\"7/13/2023, 5:24:10 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":1671.329120655931,\\\"averagePurchasePrice\\\":2245.8018281321242,\\\"profit\\\":\\\"$5,629,832,533.27\\\",\\\"profitPercent\\\":\\\"25.58%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6200837102556049},{\\\"date\\\":\\\"7/13/2023, 5:31:40 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":55524.73227753574,\\\"averagePurchasePrice\\\":77904.22885128176,\\\"profit\\\":\\\"$162,318,287,233.91\\\",\\\"profitPercent\\\":\\\"28.73%\\\",\\\"shares\\\":7252991,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5814637417589983},{\\\"date\\\":\\\"7/13/2023, 5:31:40 PM\\\",\\\"symbol\\\":\\\"WDS\\\",\\\"price\\\":125466.30515190642,\\\"averagePurchasePrice\\\":123196.52467469226,\\\"profit\\\":\\\"$18,841,415,964.43\\\",\\\"profitPercent\\\":\\\"1.84%\\\",\\\"shares\\\":8300986,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4075685081743357},{\\\"date\\\":\\\"7/13/2023, 5:39:10 PM\\\",\\\"symbol\\\":\\\"BLD\\\",\\\"price\\\":24242.453108591137,\\\"averagePurchasePrice\\\":23187.16226920497,\\\"profit\\\":\\\"$17,095,711,598.06\\\",\\\"profitPercent\\\":\\\"4.55%\\\",\\\"shares\\\":16200000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4090342077382845},{\\\"date\\\":\\\"7/13/2023, 5:39:10 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":41762.40258386595,\\\"averagePurchasePrice\\\":54546.706082378776,\\\"profit\\\":\\\"$94,603,845,888.99\\\",\\\"profitPercent\\\":\\\"23.44%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.7237122816616167},{\\\"date\\\":\\\"7/13/2023, 5:39:10 PM\\\",\\\"symbol\\\":\\\"UNV\\\",\\\"price\\\":18627.735756873302,\\\"averagePurchasePrice\\\":18768.251629504248,\\\"profit\\\":\\\"$1,320,849,202.73\\\",\\\"profitPercent\\\":\\\"0.75%\\\",\\\"shares\\\":9400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.594604676486013},{\\\"date\\\":\\\"7/13/2023, 5:46:41 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":46252.61856191353,\\\"averagePurchasePrice\\\":41762.40258386595,\\\"profit\\\":\\\"$33,227,598,237.55\\\",\\\"profitPercent\\\":\\\"10.75%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.27742019444552746},{\\\"date\\\":\\\"7/13/2023, 5:46:41 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":3105.4493193745725,\\\"averagePurchasePrice\\\":1671.329120655931,\\\"profit\\\":\\\"$14,054,377,947.44\\\",\\\"profitPercent\\\":\\\"85.81%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.33895499728841416},{\\\"date\\\":\\\"7/13/2023, 5:46:41 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":185.97988966048743,\\\"averagePurchasePrice\\\":3469.008941915899,\\\"profit\\\":\\\"$9,520,784,251.54\\\",\\\"profitPercent\\\":\\\"94.64%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6586789800754898},{\\\"date\\\":\\\"7/13/2023, 5:54:10 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":39885.00176614848,\\\"averagePurchasePrice\\\":45511.49190578172,\\\"profit\\\":\\\"$41,636,027,033.29\\\",\\\"profitPercent\\\":\\\"12.36%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.691234562872528},{\\\"date\\\":\\\"7/13/2023, 5:54:10 PM\\\",\\\"symbol\\\":\\\"DCOMM\\\",\\\"price\\\":19535.513591954234,\\\"averagePurchasePrice\\\":21637.63964724423,\\\"profit\\\":\\\"$25,435,725,269.01\\\",\\\"profitPercent\\\":\\\"9.72%\\\",\\\"shares\\\":12100000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5995210250184919},{\\\"date\\\":\\\"7/13/2023, 5:54:10 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":324.3922503011835,\\\"averagePurchasePrice\\\":185.97988966048743,\\\"profit\\\":\\\"$401,395,845.86\\\",\\\"profitPercent\\\":\\\"74.42%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3581462406802786},{\\\"date\\\":\\\"7/13/2023, 6:01:40 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":1714.885524629656,\\\"averagePurchasePrice\\\":3141.3765336977012,\\\"profit\\\":\\\"$13,979,611,888.87\\\",\\\"profitPercent\\\":\\\"45.41%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6424297139888515},{\\\"date\\\":\\\"7/13/2023, 6:01:40 PM\\\",\\\"symbol\\\":\\\"CTYS\\\",\\\"price\\\":521.784616734476,\\\"averagePurchasePrice\\\":497.2193092466852,\\\"profit\\\":\\\"$1,356,004,973.33\\\",\\\"profitPercent\\\":\\\"4.94%\\\",\\\"shares\\\":55200000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4491735535789995},{\\\"date\\\":\\\"7/13/2023, 6:16:41 PM\\\",\\\"symbol\\\":\\\"GPH\\\",\\\"price\\\":34200.7277161447,\\\"averagePurchasePrice\\\":32928.064759399174,\\\"profit\\\":\\\"-$8,145,042,923.17\\\",\\\"profitPercent\\\":\\\"-3.86%\\\",\\\"shares\\\":6400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.5914829056856968},{\\\"date\\\":\\\"7/13/2023, 6:16:41 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":2633.922643963427,\\\"averagePurchasePrice\\\":1714.885524629656,\\\"profit\\\":\\\"$9,006,563,769.47\\\",\\\"profitPercent\\\":\\\"53.59%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3376538821402169},{\\\"date\\\":\\\"7/13/2023, 6:16:41 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":130.1461298145748,\\\"averagePurchasePrice\\\":324.3922503011835,\\\"profit\\\":\\\"$563,313,749.41\\\",\\\"profitPercent\\\":\\\"59.88%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6480170770011145},{\\\"date\\\":\\\"7/13/2023, 6:24:10 PM\\\",\\\"symbol\\\":\\\"ECP\\\",\\\"price\\\":7840.045043099826,\\\"averagePurchasePrice\\\":7618.975921445642,\\\"profit\\\":\\\"$6,101,507,757.66\\\",\\\"profitPercent\\\":\\\"2.90%\\\",\\\"shares\\\":27600000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.43405802858665565},{\\\"date\\\":\\\"7/13/2023, 6:24:10 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":70699.72659392818,\\\"averagePurchasePrice\\\":39931.88798473859,\\\"profit\\\":\\\"$227,682,005,708.00\\\",\\\"profitPercent\\\":\\\"77.05%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.27514157681534157},{\\\"date\\\":\\\"7/13/2023, 6:24:10 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":9740.343953510945,\\\"averagePurchasePrice\\\":8567.103805129542,\\\"profit\\\":\\\"$7,508,736,949.64\\\",\\\"profitPercent\\\":\\\"13.69%\\\",\\\"shares\\\":6400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3950464948665264},{\\\"date\\\":\\\"7/13/2023, 6:39:10 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":1256.490615354888,\\\"averagePurchasePrice\\\":2624.518172249617,\\\"profit\\\":\\\"$13,406,670,057.57\\\",\\\"profitPercent\\\":\\\"52.12%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6369964957668013},{\\\"date\\\":\\\"7/13/2023, 6:39:10 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":8213.677700407661,\\\"averagePurchasePrice\\\":9771.889078363078,\\\"profit\\\":\\\"$9,972,552,818.91\\\",\\\"profitPercent\\\":\\\"15.95%\\\",\\\"shares\\\":6400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.6065430741613119},{\\\"date\\\":\\\"7/13/2023, 6:46:40 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":1602.2415451459574,\\\"averagePurchasePrice\\\":1256.490615354888,\\\"profit\\\":\\\"$3,388,359,111.95\\\",\\\"profitPercent\\\":\\\"27.52%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.3795249320325383},{\\\"date\\\":\\\"7/13/2023, 6:46:40 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":205.6540576505925,\\\"averagePurchasePrice\\\":130.1461298145748,\\\"profit\\\":\\\"$218,972,990.72\\\",\\\"profitPercent\\\":\\\"58.02%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.38723883439067724},{\\\"date\\\":\\\"7/13/2023, 6:46:40 PM\\\",\\\"symbol\\\":\\\"TITN\\\",\\\"price\\\":8427.905207250267,\\\"averagePurchasePrice\\\":8215.347193354077,\\\"profit\\\":\\\"$1,360,371,288.94\\\",\\\"profitPercent\\\":\\\"2.59%\\\",\\\"shares\\\":6400000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.4023636520719338},{\\\"date\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"symbol\\\":\\\"FSIG\\\",\\\"price\\\":32649.835650620495,\\\"averagePurchasePrice\\\":70699.72659392818,\\\"profit\\\":\\\"$281,569,192,980.48\\\",\\\"profitPercent\\\":\\\"53.82%\\\",\\\"shares\\\":7400000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.28385651191744593},{\\\"date\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"symbol\\\":\\\"FLCM\\\",\\\"price\\\":70216.050125108,\\\"averagePurchasePrice\\\":63434.87958991237,\\\"profit\\\":\\\"$91,545,802,225.14\\\",\\\"profitPercent\\\":\\\"10.69%\\\",\\\"shares\\\":13500000,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.5819479031079017},{\\\"date\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"symbol\\\":\\\"DCOMM\\\",\\\"price\\\":14252.162711372725,\\\"averagePurchasePrice\\\":20380.7231551216,\\\"profit\\\":\\\"$74,155,581,369.36\\\",\\\"profitPercent\\\":\\\"30.07%\\\",\\\"shares\\\":12100000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.4012073182457806},{\\\"date\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"symbol\\\":\\\"WDS\\\",\\\"price\\\":78086.5806392909,\\\"averagePurchasePrice\\\":78006.34490087008,\\\"profit\\\":\\\"$1,111,189,234.59\\\",\\\"profitPercent\\\":\\\"0.10%\\\",\\\"shares\\\":13849056,\\\"type\\\":\\\"Short-Term Long Sale\\\",\\\"forecastAtSale\\\":0.570431565098334},{\\\"date\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"symbol\\\":\\\"APHE\\\",\\\"price\\\":1432.5921672587501,\\\"averagePurchasePrice\\\":1587.8202235701356,\\\"profit\\\":\\\"$1,521,234,951.85\\\",\\\"profitPercent\\\":\\\"9.78%\\\",\\\"shares\\\":9800000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.38260452083840346},{\\\"date\\\":\\\"7/13/2023, 6:53:17 PM\\\",\\\"symbol\\\":\\\"NTLK\\\",\\\"price\\\":133.57023407050983,\\\"averagePurchasePrice\\\":205.65405765059248,\\\"profit\\\":\\\"$209,043,088.38\\\",\\\"profitPercent\\\":\\\"35.05%\\\",\\\"shares\\\":2900000,\\\"type\\\":\\\"Short-Term Cover Short\\\",\\\"forecastAtSale\\\":0.40764246690826555}]\"}}],[\"data/stockMarketReserveMoney.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/stockMarketReserveMoney.txt\",\"text\":\"{\\\"stockMarketReserveMoneyLimit\\\":2000000000000,\\\"capitalToReserveForTrading\\\":1609821275288.4194,\\\"moneyInvested\\\":0,\\\"moneyRequested\\\":{},\\\"countOfVisitedWithoutFillingRequest\\\":0}\"}}],[\"data/contracts.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/contracts.txt\",\"text\":\"[{\\\"server\\\":\\\"lexo-corp\\\",\\\"name\\\":\\\"contract-782097.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[7,[[0,5],[3,4],[2,4],[1,6],[3,5],[4,6],[1,4],[0,1]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [7,[[0,5],[3,4],[2,4],[1,6],[3,5],[4,6],[1,4],[0,1]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 6. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"aerocorp\\\",\\\"name\\\":\\\"contract-773336.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,1,1,0],[0,0,0,0,1,0,1,1],[1,0,0,0,1,0,0,0],[0,0,0,1,0,0,1,0],[0,0,0,0,0,1,0,1],[0,0,0,0,0,1,1,0],[0,1,1,0,0,0,0,1],[0,0,0,0,0,1,0,0],[1,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,0,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,0,1,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,0,0,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"deltaone\\\",\\\"name\\\":\\\"contract-432225-CyberSec.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":23,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 23 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"solaris\\\",\\\"name\\\":\\\"contract-410663.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[3],[1,9],[5,4,4],[9,7,8,5],[2,2,3,8,2],[9,8,4,6,5,8],[8,1,1,7,6,5,3],[1,5,1,2,7,7,8,4],[6,2,3,2,9,9,1,5,3],[9,6,3,3,4,2,7,9,7,6],[4,2,2,3,1,5,9,6,3,4,5],[6,3,8,1,9,7,7,9,1,6,8,5]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[5,4,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,7,8,5],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2,2,3,8,2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,8,4,6,5,8],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[8,1,1,7,6,5,3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,5,1,2,7,7,8,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,2,3,2,9,9,1,5,3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[9,6,3,3,4,2,7,9,7,6],\\\\n&nbsp;&nbsp;&nbsp;[4,2,2,3,1,5,9,6,3,4,5],\\\\n&nbsp;&nbsp;[6,3,8,1,9,7,7,9,1,6,8,5]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"netlink\\\",\\\"name\\\":\\\"contract-795996-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":73,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 73 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"zb-def\\\",\\\"name\\\":\\\"contract-391770-TheBlackHand.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,1,0,0,1,0],[0,0,1,0,1,0,1,0,0],[0,0,0,1,0,0,1,0,0],[0,0,0,1,1,1,0,1,1],[0,0,1,0,1,1,0,1,0],[0,1,1,0,1,0,0,0,0],[1,1,0,1,0,1,1,0,1],[0,1,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,1,1,0,1,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,1,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,1,0,1,0,1,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,0,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"megacorp\\\",\\\"name\\\":\\\"contract-440346.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[15,22],[5,12],[13,21]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[15,22],[5,12],[13,21]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"nwo\\\",\\\"name\\\":\\\"contract-593748-NiteSec.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"666RB6666R1lbVoooooooooFiqXWXi68O5iANQyv4BRCCD4vXClee3MRmMoe3MRmRmR\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 666RB6666R1lbVoooooooooFiqXWXi68O5iANQyv4BRCCD4vXClee3MRmMoe3MRmRmR\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"clarkinc\\\",\\\"name\\\":\\\"contract-178512-ECorp.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0],[0,0,1,0,0],[0,0,0,0,0],[0,0,0,1,0],[0,1,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,\\\\n0,0,1,0,0,\\\\n0,0,0,0,0,\\\\n0,0,0,1,0,\\\\n0,1,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-195663.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[1,0,0,4,2,7,6,3,5,5,10,10,3,0,9,7,10,2,0,2],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 1,0,0,4,2,7,6,3,5,5,10,10,3,0,9,7,10,2,0,2\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"b-and-a\\\",\\\"name\\\":\\\"contract-233152.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[13,3],\\\"description\\\":\\\"You are in a grid with 13 rows and 3 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [13, 3]\\\"},{\\\"server\\\":\\\"johnson-ortho\\\",\\\"name\\\":\\\"contract-510847-BladeIndustries.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"()((a((a(a)())(a()\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n ()((a((a(a)())(a()\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-632773.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[23,29],[14,20],[24,30],[4,11],[4,11]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[23,29],[14,20],[24,30],[4,11],[4,11]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"}]\"}}],[\"contracts/2023-07-13T12:06:58.738Z.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"contracts/2023-07-13T12:06:58.738Z.txt\",\"text\":\"[{\\\"server\\\":\\\"lexo-corp\\\",\\\"name\\\":\\\"contract-782097.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[7,[[0,5],[3,4],[2,4],[1,6],[3,5],[4,6],[1,4],[0,1]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [7,[[0,5],[3,4],[2,4],[1,6],[3,5],[4,6],[1,4],[0,1]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 6. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"aerocorp\\\",\\\"name\\\":\\\"contract-773336.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,1,1,0],[0,0,0,0,1,0,1,1],[1,0,0,0,1,0,0,0],[0,0,0,1,0,0,1,0],[0,0,0,0,0,1,0,1],[0,0,0,0,0,1,1,0],[0,1,1,0,0,0,0,1],[0,0,0,0,0,1,0,0],[1,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,0,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,1,0,1,1],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,0,1,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,0,0,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,0,0,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,0,1,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"deltaone\\\",\\\"name\\\":\\\"contract-432225-CyberSec.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":23,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 23 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"solaris\\\",\\\"name\\\":\\\"contract-410663.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[3],[1,9],[5,4,4],[9,7,8,5],[2,2,3,8,2],[9,8,4,6,5,8],[8,1,1,7,6,5,3],[1,5,1,2,7,7,8,4],[6,2,3,2,9,9,1,5,3],[9,6,3,3,4,2,7,9,7,6],[4,2,2,3,1,5,9,6,3,4,5],[6,3,8,1,9,7,7,9,1,6,8,5]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[5,4,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,7,8,5],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2,2,3,8,2],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,8,4,6,5,8],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[8,1,1,7,6,5,3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,5,1,2,7,7,8,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,2,3,2,9,9,1,5,3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[9,6,3,3,4,2,7,9,7,6],\\\\n&nbsp;&nbsp;&nbsp;[4,2,2,3,1,5,9,6,3,4,5],\\\\n&nbsp;&nbsp;[6,3,8,1,9,7,7,9,1,6,8,5]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"netlink\\\",\\\"name\\\":\\\"contract-795996-OmniTekIncorporated.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":73,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 73 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"zb-def\\\",\\\"name\\\":\\\"contract-391770-TheBlackHand.cct\\\",\\\"type\\\":\\\"Shortest Path in a Grid\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,1,0,0,1,0],[0,0,1,0,1,0,1,0,0],[0,0,0,1,0,0,1,0,0],[0,0,0,1,1,1,0,1,1],[0,0,1,0,1,1,0,1,0],[0,1,1,0,1,0,0,0,0],[1,1,0,1,0,1,1,0,1],[0,1,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n &nbsp;&nbsp;[[0,0,0,0,1,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,0,0,1,0,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,1,1,1,0,1,1],\\\\n&nbsp;&nbsp;&nbsp;[0,0,1,0,1,1,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,1,1,0,1,0,0,0,0],\\\\n&nbsp;&nbsp;&nbsp;[1,1,0,1,0,1,1,0,1],\\\\n&nbsp;&nbsp;&nbsp;[0,1,0,0,0,0,0,1,0],\\\\n&nbsp;&nbsp;&nbsp;[0,0,0,0,0,0,0,0,0]]\\\\n\\\\n You are trying to find the shortest path to the bottom-right corner of the grid, but there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine the shortest path from start to finish, if one exists. The answer should be given as a string of UDLR characters, indicating the moves along the path\\\\n\\\\n NOTE: If there are multiple equally short paths, any of them is accepted as answer. If there is no path, the answer should be an empty string.\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\\n\\\\n Examples:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1,0,0,0],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,0,1,0]]\\\\n \\\\n Answer: 'DRRURRD'\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[[0,1],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,0]]\\\\n \\\\n Answer: ''\\\\n\\\\n\\\"},{\\\"server\\\":\\\"megacorp\\\",\\\"name\\\":\\\"contract-440346.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[15,22],[5,12],[13,21]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[15,22],[5,12],[13,21]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"nwo\\\",\\\"name\\\":\\\"contract-593748-NiteSec.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"666RB6666R1lbVoooooooooFiqXWXi68O5iANQyv4BRCCD4vXClee3MRmMoe3MRmRmR\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 666RB6666R1lbVoooooooooFiqXWXi68O5iANQyv4BRCCD4vXClee3MRmMoe3MRmRmR\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"clarkinc\\\",\\\"name\\\":\\\"contract-178512-ECorp.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0],[0,0,1,0,0],[0,0,0,0,0],[0,0,0,1,0],[0,1,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,\\\\n0,0,1,0,0,\\\\n0,0,0,0,0,\\\\n0,0,0,1,0,\\\\n0,1,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-195663.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[1,0,0,4,2,7,6,3,5,5,10,10,3,0,9,7,10,2,0,2],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 1,0,0,4,2,7,6,3,5,5,10,10,3,0,9,7,10,2,0,2\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"b-and-a\\\",\\\"name\\\":\\\"contract-233152.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[13,3],\\\"description\\\":\\\"You are in a grid with 13 rows and 3 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [13, 3]\\\"},{\\\"server\\\":\\\"johnson-ortho\\\",\\\"name\\\":\\\"contract-510847-BladeIndustries.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"()((a((a(a)())(a()\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n ()((a((a(a)())(a()\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"alpha-ent\\\",\\\"name\\\":\\\"contract-632773.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[23,29],[14,20],[24,30],[4,11],[4,11]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[23,29],[14,20],[24,30],[4,11],[4,11]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"}]\"}}],[\"data/organizations.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/organizations.txt\",\"text\":\"{\\\"toJoinInOrderInWhichIWantToComplete\\\":[\\\"CyberSec\\\",\\\"NiteSec\\\",\\\"Chongqing\\\",\\\"The Black Hand\\\",\\\"Daedalus\\\",\\\"Bachman & Associates\\\",\\\"BitRunners\\\",\\\"NWO\\\",\\\"OmniTek Incorporated\\\",\\\"Blade Industries\\\",\\\"ECorp\\\",\\\"Illuminati\\\",\\\"Aevum\\\",\\\"Volhaven\\\",\\\"New Tokyo\\\",\\\"Ishima\\\",\\\"Tian Di Hui\\\",\\\"Netburners\\\"],\\\"companiesWeWantToBecomePartOf\\\":[\\\"Bachman & Associates\\\",\\\"NWO\\\",\\\"OmniTek Incorporated\\\",\\\"Blade Industries\\\",\\\"ECorp\\\"],\\\"doNoWorkFor\\\":[\\\"Aevum\\\",\\\"Volhaven\\\",\\\"New Tokyo\\\",\\\"Ishima\\\",\\\"Tian Di Hui\\\",\\\"Netburners\\\"],\\\"stopAtAugments\\\":[{\\\"final\\\":true,\\\"faction\\\":\\\"Chongqing\\\",\\\"augmentToStopAt\\\":\\\"Neuregen Gene Modification\\\"}]}\"}}]]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":2,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"scripts/coordinator-for-8.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":32.899,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44092.409999919364,\"ramUsage\":2.7,\"server\":\"home\",\"scriptKey\":\"scripts/coordinator-for-8.js*[]\",\"title\":\"scripts/coordinator-for-8.js \",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":234.20999999999523,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"scripts/hacking/weaken.js global-pharm\",\"threads\":373,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.61000000000095,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"catalyst\\\"]\",\"title\":\"scripts/hacking/weaken.js catalyst\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"netlink\\\"]\",\"title\":\"scripts/hacking/weaken.js netlink\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.41,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"scripts/hacking/grow.js millenium-fitness\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.809999999999956,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"scripts/hacking/grow.js rho-construction\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.80999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"computek\\\"]\",\"title\":\"scripts/hacking/grow.js computek\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.80999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"scripts/hacking/grow.js crush-fitness\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"scripts/hacking/grow.js summit-uni\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"scripts/hacking/grow.js johnson-ortho\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"rothman-uni\\\"]\",\"title\":\"scripts/hacking/weaken.js rothman-uni\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"the-hub\\\"]\",\"title\":\"scripts/hacking/grow.js the-hub\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"omega-net\\\"]\",\"title\":\"scripts/hacking/grow.js omega-net\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"scripts/hacking/grow.js silver-helix\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"max-hardware\\\"]\",\"title\":\"scripts/hacking/grow.js max-hardware\",\"threads\":500,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"scripts/hacking/grow.js harakiri-sushi\",\"threads\":485,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"nectar-net\\\"]\",\"title\":\"scripts/hacking/grow.js nectar-net\",\"threads\":453,\"temporary\":false}}]}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-195663.cct\",\"type\":\"Array Jumping Game\",\"data\":[1,0,0,4,2,7,6,3,5,5,10,10,3,0,9,7,10,2,0,2],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"53.1.0.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":67063202835,\"moneyMax\":1676580070875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1296,\"serverGrowth\":99,\"runningScripts\":[]}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-440346.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[15,22],[5,12],[13,21]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"47.4.1.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":46480235667,\"moneyMax\":1162005891675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1155,\"serverGrowth\":99,\"runningScripts\":[]}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-233152.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[13,3],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"83.5.5.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":22755247403,\"moneyMax\":568881185075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1023,\"serverGrowth\":60,\"runningScripts\":[]}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"49.8.6.2\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\".\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":15734264584,\"moneyMax\":393356614600,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":913,\"serverGrowth\":55,\"runningScripts\":[]}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-593748-NiteSec.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"666RB6666R1lbVoooooooooFiqXWXi68O5iANQyv4BRCCD4vXClee3MRmMoe3MRmRmR\",\"reward\":{\"name\":\"NiteSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"65.7.7.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\",\"ecorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":22384288239,\"moneyMax\":559607205975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1247,\"serverGrowth\":78,\"runningScripts\":[]}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-178512-ECorp.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0],[0,0,1,0,0],[0,0,0,0,0],[0,0,0,1,0],[0,1,0,0,0]],\"reward\":{\"name\":\"ECorp\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"50.0.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":59,\"minDifficulty\":20,\"moneyAvailable\":23434720147,\"moneyMax\":585868003675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1083,\"serverGrowth\":57,\"runningScripts\":[]}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"95.3.4.0\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"helios\",\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":21176440832,\"moneyMax\":529411020800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":938,\"serverGrowth\":96,\"runningScripts\":[]}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"14.5.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"stormtech\",\"nwo\",\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":18206091706,\"moneyMax\":455152292650,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":986,\"serverGrowth\":89,\"runningScripts\":[]}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"56.3.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"stormtech\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":27049821469,\"moneyMax\":676245536725,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":952,\"serverGrowth\":97,\"runningScripts\":[]}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"95.6.0.9\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"microdyne\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":1439058545,\"moneyMax\":35976463625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1146,\"serverGrowth\":94,\"runningScripts\":[]}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"17.9.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1469,\"serverGrowth\":1,\"runningScripts\":[]}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"12.5.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"run4theh111z\",\"4sigma\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":1012575826,\"moneyMax\":25314395650,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1012,\"serverGrowth\":71,\"runningScripts\":[]}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"27.3.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":891886322,\"moneyMax\":22297158050,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":979,\"serverGrowth\":56,\"runningScripts\":[]}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"38.3.8.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"icarus\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":716175875,\"moneyMax\":17904396875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":910,\"serverGrowth\":57,\"runningScripts\":[]}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"70.7.8.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":742298556,\"moneyMax\":18557463900,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":808,\"serverGrowth\":75,\"runningScripts\":[]}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"68.6.9.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":737495112,\"moneyMax\":18437377800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":840,\"serverGrowth\":70,\"runningScripts\":[]}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"0.4.4.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\",\"infocomm\",\"taiyang-digital\",\"zb-def\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":927299455,\"moneyMax\":23182486375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":909,\"serverGrowth\":89,\"runningScripts\":[]}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"57.8.4.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"univ-energy\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"univ-energy\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"univ-energy\"}}]]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":1122045775,\"moneyMax\":28051144375,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":844,\"serverGrowth\":86,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"univ-energy\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"nectar-net\\\"]\",\"title\":\"scripts/hacking/grow.js nectar-net\",\"threads\":47,\"temporary\":false}}]}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"20.8.9.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":862068314,\"moneyMax\":21551707850,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":817,\"serverGrowth\":64,\"runningScripts\":[]}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"77.9.4.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nova-med\",\"fulcrumtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":567719143,\"moneyMax\":14192978575,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":865,\"serverGrowth\":70,\"runningScripts\":[]}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"69.6.2.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"icarus\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":876149173,\"moneyMax\":21903729325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":883,\"serverGrowth\":74,\"runningScripts\":[]}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"25.6.3.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"rho-construction\",\"omnia\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":59,\"minDifficulty\":20,\"moneyAvailable\":803739971,\"moneyMax\":20093499275,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":868,\"serverGrowth\":89,\"runningScripts\":[]}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-773336.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,1,0],[0,0,0,0,1,0,1,1],[1,0,0,0,1,0,0,0],[0,0,0,1,0,0,1,0],[0,0,0,0,0,1,0,1],[0,0,0,0,0,1,1,0],[0,1,1,0,0,0,0,1],[0,0,0,0,0,1,0,0],[1,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"77.5.6.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":1082277950,\"moneyMax\":27056948750,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":908,\"serverGrowth\":58,\"runningScripts\":[]}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"66.1.5.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"galactic-cyber\",\"icarus\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":945060219,\"moneyMax\":23626505475,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":883,\"serverGrowth\":63,\"runningScripts\":[]}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-391770-TheBlackHand.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,1,0,0,1,0],[0,0,1,0,1,0,1,0,0],[0,0,0,1,0,0,1,0,0],[0,0,0,1,1,1,0,1,1],[0,0,1,0,1,1,0,1,0],[0,1,1,0,1,0,0,0,0],[1,1,0,1,0,1,1,0,1],[0,1,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"The Black Hand\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"0.9.5.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"icarus\",\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":57,\"hackDifficulty\":57,\"minDifficulty\":19,\"moneyAvailable\":923217703,\"moneyMax\":23080442575,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":794,\"serverGrowth\":67,\"runningScripts\":[]}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"28.3.8.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"infocomm\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":964142442,\"moneyMax\":24103561050,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":805,\"serverGrowth\":73,\"runningScripts\":[]}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-410663.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[1,9],[5,4,4],[9,7,8,5],[2,2,3,8,2],[9,8,4,6,5,8],[8,1,1,7,6,5,3],[1,5,1,2,7,7,8,4],[6,2,3,2,9,9,1,5,3],[9,6,3,3,4,2,7,9,7,6],[4,2,2,3,1,5,9,6,3,4,5],[6,3,8,1,9,7,7,9,1,6,8,5]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"2.0.2.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":822376194,\"moneyMax\":20559404850,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":828,\"serverGrowth\":77,\"runningScripts\":[]}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-432225-CyberSec.cct\",\"type\":\"Total Ways to Sum\",\"data\":23,\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"7.6.4.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"snap-fitness\",\"univ-energy\",\"solaris\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1578090333,\"moneyMax\":39452258325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":880,\"serverGrowth\":60,\"runningScripts\":[]}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"27.9.6.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"global-pharm\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"global-pharm\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"global-pharm\"}}]]},\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":75,\"hackDifficulty\":31,\"minDifficulty\":25,\"moneyAvailable\":293704.01590965665,\"moneyMax\":42505706375,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":793,\"serverGrowth\":81,\"runningScripts\":[]}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"87.6.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"icarus\",\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":1161127518,\"moneyMax\":29028187950,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":827,\"serverGrowth\":77,\"runningScripts\":[]}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"96.4.7.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":1346277239,\"moneyMax\":33656930975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":812,\"serverGrowth\":77,\"runningScripts\":[]}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"52.7.8.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"unitalife\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"unitalife\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"unitalife\"}}]]},\"serversOnNetwork\":[\"galactic-cyber\",\"defcomm\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":1099544897,\"moneyMax\":27488622425,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":778,\"serverGrowth\":74,\"runningScripts\":[]}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-782097.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[7,[[0,5],[3,4],[2,4],[1,6],[3,5],[4,6],[1,4],[0,1]]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"60.5.4.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"lexo-corp\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"lexo-corp\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"lexo-corp\"}}]]},\"serversOnNetwork\":[\"catalyst\",\"aerocorp\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":723382423,\"moneyMax\":18084560575,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":680,\"serverGrowth\":57,\"runningScripts\":[]}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"95.0.5.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"rho-construction\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"rho-construction\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"rho-construction\"}}]]},\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":46,\"hackDifficulty\":15,\"minDifficulty\":15,\"moneyAvailable\":1081726.7251889703,\"moneyMax\":16400018675,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":513,\"serverGrowth\":50,\"runningScripts\":[]}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-632773.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[23,29],[14,20],[24,30],[4,11],[4,11]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"72.2.9.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"alpha-ent\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"alpha-ent\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"alpha-ent\"}}]]},\"serversOnNetwork\":[\"syscore\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":57,\"hackDifficulty\":57,\"minDifficulty\":19,\"moneyAvailable\":641574809,\"moneyMax\":16039370225,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":524,\"serverGrowth\":55,\"runningScripts\":[]}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"55.0.1.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"aevum-police\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"aevum-police\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"aevum-police\"}}]]},\"serversOnNetwork\":[\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":229067343,\"moneyMax\":5726683575,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":402,\"serverGrowth\":43,\"runningScripts\":[]}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"3.4.7.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"rothman-uni\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"rothman-uni\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"rothman-uni\"}}]]},\"serversOnNetwork\":[\"netlink\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":46,\"hackDifficulty\":21.336,\"minDifficulty\":15,\"moneyAvailable\":16614.326440416175,\"moneyMax\":5783413425,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":377,\"serverGrowth\":35,\"runningScripts\":[]}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"86.8.1.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"computek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1033630088,\"moneyMax\":25840752200,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":768,\"serverGrowth\":83,\"runningScripts\":[]}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"72.5.1.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"summit-uni\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"summit-uni\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"summit-uni\"}}]]},\"serversOnNetwork\":[\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":52,\"hackDifficulty\":20.826,\"minDifficulty\":17,\"moneyAvailable\":0,\"moneyMax\":5412956925,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":436,\"serverGrowth\":42,\"runningScripts\":[]}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"49.0.1.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"crush-fitness\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":409697957,\"moneyMax\":10242448925,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":633,\"serverGrowth\":62,\"runningScripts\":[]}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"34.2.8.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"catalyst\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"catalyst\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"catalyst\"}}]]},\"serversOnNetwork\":[\"avmnite-02h\",\"lexo-corp\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":65,\"hackDifficulty\":28,\"minDifficulty\":22,\"moneyAvailable\":1002977.1055919946,\"moneyMax\":8401659075,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":445,\"serverGrowth\":29,\"runningScripts\":[]}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"95.3.9.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"the-hub\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"the-hub\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"the-hub\"}}]]},\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":45,\"hackDifficulty\":19,\"minDifficulty\":15,\"moneyAvailable\":69096.46397778128,\"moneyMax\":4787389150,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":292,\"serverGrowth\":51,\"runningScripts\":[]}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":false,\"ip\":\"41.7.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"neo-net\",\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":59,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":289248.1799610076,\"moneyMax\":5534579875,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":339,\"serverGrowth\":52,\"runningScripts\":[]}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-795996-OmniTekIncorporated.cct\",\"type\":\"Total Ways to Sum\",\"data\":73,\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"71.0.6.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"netlink\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"netlink\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"netlink\"}}]]},\"serversOnNetwork\":[\"silver-helix\",\"rothman-uni\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":70,\"hackDifficulty\":28.824,\"minDifficulty\":23,\"moneyAvailable\":1618.2961129524288,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":422,\"serverGrowth\":61,\"runningScripts\":[]}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-510847-BladeIndustries.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()((a((a(a)())(a()\",\"reward\":{\"name\":\"Blade Industries\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"33.0.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"neo-net\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":44,\"hackDifficulty\":15,\"minDifficulty\":15,\"moneyAvailable\":50731.71381954714,\"moneyMax\":1785050475,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":284,\"serverGrowth\":49,\"runningScripts\":[]}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"26.1.6.1\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"n00dles\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"n00dles\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"n00dles\"}}]]},\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":5.899749999999825,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":1,\"serverGrowth\":3000,\"runningScripts\":[]}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"98.9.0.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"foodnstuff\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"foodnstuff\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"foodnstuff\"}}]]},\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":7.696499999996863,\"minDifficulty\":3,\"moneyAvailable\":5341132.02273333,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":1,\"serverGrowth\":5,\"runningScripts\":[]}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"10.0.7.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"sigma-cosmetics\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"sigma-cosmetics\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"sigma-cosmetics\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":4.55449999999976,\"minDifficulty\":3,\"moneyAvailable\":164394.93187113287,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":5,\"serverGrowth\":10,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"scripts/hacking/grow.js harakiri-sushi\",\"threads\":9,\"temporary\":false}}]}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"89.7.8.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"joesguns\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"joesguns\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"joesguns\"}}]]},\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":7,\"minDifficulty\":5,\"moneyAvailable\":139936.96012271554,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":10,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"scripts/hacking/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"joesguns\",\"scriptKey\":\"scripts/hacking/grow.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"scripts/hacking/grow.js harakiri-sushi\",\"threads\":6,\"temporary\":false}}]}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"85.6.5.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"n00dles\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":7500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":75,\"serverGrowth\":40,\"runningScripts\":[]}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"52.7.9.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"nectar-net\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"nectar-net\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"nectar-net\"}}]]},\"serversOnNetwork\":[\"foodnstuff\",\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":20,\"hackDifficulty\":9,\"minDifficulty\":7,\"moneyAvailable\":9104040.522713989,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":20,\"serverGrowth\":25,\"runningScripts\":[]}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"39.9.7.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"neo-net\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"neo-net\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"neo-net\"}}]]},\"serversOnNetwork\":[\"nectar-net\",\"computek\",\"johnson-ortho\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":12,\"minDifficulty\":8,\"moneyAvailable\":1747500.107983643,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":50,\"serverGrowth\":25,\"runningScripts\":[]}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"86.9.4.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"silver-helix\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"silver-helix\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"silver-helix\"}}]]},\"serversOnNetwork\":[\"max-hardware\",\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":14,\"minDifficulty\":10,\"moneyAvailable\":348263377.1290929,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":150,\"serverGrowth\":30,\"runningScripts\":[]}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"54.9.9.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"hong-fang-tea\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"hong-fang-tea\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"hong-fang-tea\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":708543.9182686502,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":30,\"serverGrowth\":20,\"runningScripts\":[]}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"49.2.8.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"harakiri-sushi\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"harakiri-sushi\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"harakiri-sushi\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":9.581999999999999,\"minDifficulty\":5,\"moneyAvailable\":62373.418360819735,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":40,\"serverGrowth\":40,\"runningScripts\":[]}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-924545-Daedalus.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[41],[14],[15]],\"reward\":{\"name\":\"Daedalus\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"99.8.0.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":24000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":100,\"serverGrowth\":35,\"runningScripts\":[]}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"74.7.7.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"max-hardware\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"max-hardware\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"max-hardware\"}}]]},\"serversOnNetwork\":[\"joesguns\",\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":9,\"minDifficulty\":5,\"moneyAvailable\":112268.88378651785,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":80,\"serverGrowth\":30,\"runningScripts\":[]}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"30.2.4.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"omega-net\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"omega-net\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"omega-net\"}}]]},\"serversOnNetwork\":[\"CSEC\",\"the-hub\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":34,\"hackDifficulty\":13,\"minDifficulty\":11,\"moneyAvailable\":2052399.2421924577,\"moneyMax\":1625139175,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":181,\"serverGrowth\":40,\"runningScripts\":[]}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"85.6.6.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"neo-net\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":42,\"hackDifficulty\":18,\"minDifficulty\":14,\"moneyAvailable\":311599909.4069876,\"moneyMax\":1052710225,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":233,\"serverGrowth\":33,\"runningScripts\":[]}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"60.9.4.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"iron-gym\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"iron-gym\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"iron-gym\"}}]]},\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":14,\"minDifficulty\":10,\"moneyAvailable\":11328.319255893104,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":100,\"serverGrowth\":20,\"runningScripts\":[]}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"24.9.2.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"millenium-fitness\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"millenium-fitness\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"millenium-fitness\"}}]]},\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":48,\"hackDifficulty\":16,\"minDifficulty\":16,\"moneyAvailable\":7977165.1843177015,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":513,\"serverGrowth\":32,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"scripts/hacking/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":234.20999999999523,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"scripts/hacking/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"scripts/hacking/weaken.js global-pharm\",\"threads\":127,\"temporary\":false}}]}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"49.9.9.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":59,\"minDifficulty\":20,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":977,\"serverGrowth\":54,\"runningScripts\":[]}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"36.9.4.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"lexo-corp\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":54,\"hackDifficulty\":54,\"minDifficulty\":18,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":718,\"serverGrowth\":53,\"runningScripts\":[]}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"69.0.8.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"run4theh111z\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"run4theh111z\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"run4theh111z\"}}]]},\"serversOnNetwork\":[\"taiyang-digital\",\"stormtech\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":512,\"serverGrowth\":1,\"runningScripts\":[]}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"40.2.2.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"I.I.I.I\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"I.I.I.I\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"I.I.I.I\"}}]]},\"serversOnNetwork\":[\"netlink\",\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":362,\"serverGrowth\":1,\"runningScripts\":[]}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"12.0.9.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"avmnite-02h\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"avmnite-02h\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"avmnite-02h\"}}]]},\"serversOnNetwork\":[\"omega-net\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":220,\"serverGrowth\":1,\"runningScripts\":[]}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"58.4.8.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\".\"}}],[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\".\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\".\"}}]]},\"serversOnNetwork\":[\"fulcrumtech\",\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":514,\"serverGrowth\":1,\"runningScripts\":[]}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"55.7.3.0\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/hacking/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/hacking/weaken.js\",\"server\":\"CSEC\"}}],[\"scripts/hacking/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/hacking/grow.js\",\"server\":\"CSEC\"}}],[\"scripts/hacking/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/hacking/hack.js\",\"server\":\"CSEC\"}}]]},\"serversOnNetwork\":[\"iron-gym\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":52,\"serverGrowth\":1,\"runningScripts\":[]}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"41.5.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":1,\"runningScripts\":[]}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"10.2.0.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1,\"runningScripts\":[]}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"61.9.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}}}","CompaniesSave":"{\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":400035.7017433649,\"favor\":12.9902,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":33.9857,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":823.2110030522847,\"favor\":0.006,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":29.6856,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Daedalus\",\"playerReputation\":2501213.1215012316}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Bachman & Associates\",\"playerReputation\":375042.2902995125}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":188.6103,\"isBanned\":false,\"isMember\":true,\"name\":\"BitRunners\",\"playerReputation\":221586.2878098975}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":117.4453,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":425609.2279132648}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":107.0864,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":411480.41053597914}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":83.3363,\"isBanned\":true,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":46.3213,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":30.2212,\"isBanned\":true,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Volhaven\",\"playerReputation\":20681.596312068134}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":46.3574,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":158681.6724681391}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":62.9695,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":230369.392819819}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":7236.977871879616,\"lastPrice\":7247.688602834658,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.47,\"b\":false,\"otlkMag\":5.661249839494274,\"otlkMagForecast\":30.351497720767618,\"cap\":105114294,\"spreadPerc\":0.5,\"shareTxForMovement\":44522,\"shareTxUntilMovement\":31330,\"totalShares\":138100000,\"maxShares\":27600000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":19444.090328568407,\"lastPrice\":19472.255310003155,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.46,\"b\":true,\"otlkMag\":9.798563433787915,\"otlkMagForecast\":70.68000858096926,\"cap\":142786367,\"spreadPerc\":0.1,\"shareTxForMovement\":32694,\"shareTxUntilMovement\":31950,\"totalShares\":72900000,\"maxShares\":14600000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":23884.16260459101,\"lastPrice\":23936.809415265245,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":9.468682223452646,\"otlkMagForecast\":36.61903774464958,\"cap\":425382757,\"spreadPerc\":0.6,\"shareTxForMovement\":64862,\"shareTxUntilMovement\":24770,\"totalShares\":80800000,\"maxShares\":16200000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":24349.022503776323,\"lastPrice\":24399.62704294275,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.66,\"b\":true,\"otlkMag\":8.558819302225771,\"otlkMagForecast\":59.16681485204366,\"cap\":69667197,\"spreadPerc\":0.5,\"shareTxForMovement\":72563,\"shareTxUntilMovement\":72563,\"totalShares\":65900000,\"maxShares\":13200000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":23401.459282188902,\"lastPrice\":23452.305193858563,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":false,\"otlkMag\":9.666983754016618,\"otlkMagForecast\":39.6248650169565,\"cap\":606627384,\"spreadPerc\":0.3,\"shareTxForMovement\":36850,\"shareTxUntilMovement\":36850,\"totalShares\":51900000,\"maxShares\":10400000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":32432.807629999435,\"lastPrice\":32545.149394008982,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.1,\"b\":true,\"otlkMag\":21.273823355029467,\"otlkMagForecast\":74.76458133627119,\"cap\":63945923,\"spreadPerc\":0.7,\"shareTxForMovement\":76770,\"shareTxUntilMovement\":29656,\"totalShares\":36900000,\"maxShares\":7400000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":11257.29493626776,\"lastPrice\":11287.071689258033,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.84,\"b\":false,\"otlkMag\":6.886307625186563,\"otlkMagForecast\":39.65019019659546,\"cap\":216632116,\"spreadPerc\":0.6,\"shareTxForMovement\":57778,\"shareTxUntilMovement\":42096,\"totalShares\":101600000,\"maxShares\":20300000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":71129.71119498333,\"lastPrice\":70841.9420830553,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.29,\"b\":true,\"otlkMag\":7.016117202359397,\"otlkMagForecast\":62.69805318561832,\"cap\":652167043,\"spreadPerc\":0.9,\"shareTxForMovement\":51768,\"shareTxUntilMovement\":21914,\"totalShares\":67600000,\"maxShares\":13500000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":13706.370458031934,\"lastPrice\":13669.35267483549,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.86,\"b\":true,\"otlkMag\":5.934826123828649,\"otlkMagForecast\":57.10945185937219,\"cap\":46361246,\"spreadPerc\":0.5,\"shareTxForMovement\":38033,\"shareTxUntilMovement\":38033,\"totalShares\":59000000,\"maxShares\":11800000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":13980.162831960888,\"lastPrice\":14010.978690904494,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":9.227405845968907,\"otlkMagForecast\":39.30790367272818,\"cap\":353610450,\"spreadPerc\":0.6,\"shareTxForMovement\":104705,\"shareTxUntilMovement\":99677,\"totalShares\":60500000,\"maxShares\":12100000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":13881.294832379892,\"lastPrice\":13908.395854813662,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":false,\"otlkMag\":8.622956114018,\"otlkMagForecast\":40.27241859801148,\"cap\":269955057,\"spreadPerc\":0.2,\"shareTxForMovement\":38936,\"shareTxUntilMovement\":38936,\"totalShares\":48400000,\"maxShares\":9700000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":17714.655487961554,\"lastPrice\":17674.583057704815,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.72,\"b\":true,\"otlkMag\":7.6347549190186,\"otlkMagForecast\":57.07185607892425,\"cap\":198796113,\"spreadPerc\":0.6,\"shareTxForMovement\":100716,\"shareTxUntilMovement\":100716,\"totalShares\":94800000,\"maxShares\":19000000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":45924.154392004675,\"lastPrice\":46015.260128953,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":false,\"otlkMag\":8.890573818077687,\"otlkMagForecast\":42.19189451665908,\"cap\":139873557,\"spreadPerc\":0.7,\"shareTxForMovement\":86568,\"shareTxUntilMovement\":86568,\"totalShares\":40300000,\"maxShares\":8100000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":20022.257646275117,\"lastPrice\":20056.304016159487,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":true,\"otlkMag\":9.80644235001505,\"otlkMagForecast\":61.98312756646264,\"cap\":103514223,\"spreadPerc\":0.4,\"shareTxForMovement\":101846,\"shareTxUntilMovement\":35434,\"totalShares\":46900000,\"maxShares\":9400000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":14152.723024357645,\"lastPrice\":14179.016986100942,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":5.807969781825803,\"otlkMagForecast\":56.13636983263666,\"cap\":201501885,\"spreadPerc\":0.5,\"shareTxForMovement\":86923,\"shareTxUntilMovement\":86923,\"totalShares\":77700000,\"maxShares\":15500000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":12620.859061505042,\"lastPrice\":12591.51813505542,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":true,\"otlkMag\":1.1985038731504853,\"otlkMagForecast\":51.91100980382133,\"cap\":204105743,\"spreadPerc\":0.4,\"shareTxForMovement\":81093,\"shareTxUntilMovement\":81093,\"totalShares\":40700000,\"maxShares\":8100000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":56083.85542693481,\"lastPrice\":56211.01069717725,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.72,\"b\":false,\"otlkMag\":9.33070163220901,\"otlkMagForecast\":40.59451606273142,\"cap\":454859235,\"spreadPerc\":0.7,\"shareTxForMovement\":97540,\"shareTxUntilMovement\":97540,\"totalShares\":25300000,\"maxShares\":5100000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":34021.296069586424,\"lastPrice\":33957.13872996525,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":8.836187735768618,\"otlkMagForecast\":60.238047295175505,\"cap\":189462387,\"spreadPerc\":0.9,\"shareTxForMovement\":42534,\"shareTxUntilMovement\":20468,\"totalShares\":31800000,\"maxShares\":6400000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":29113.435874971932,\"lastPrice\":29182.193162203323,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":true,\"otlkMag\":6.300293088571386,\"otlkMagForecast\":55.70321587135815,\"cap\":76066617,\"spreadPerc\":1.1,\"shareTxForMovement\":78284,\"shareTxUntilMovement\":78284,\"totalShares\":35500000,\"maxShares\":7100000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":79610.126238511,\"lastPrice\":80229.32385156932,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.47,\"b\":false,\"otlkMag\":5.575561095828752,\"otlkMagForecast\":41.30251799258888,\"cap\":103809023,\"spreadPerc\":0.6,\"shareTxForMovement\":26994,\"shareTxUntilMovement\":17486,\"totalShares\":88200000,\"maxShares\":17600000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":14060.91416743473,\"lastPrice\":14006.224312649127,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.24,\"b\":false,\"otlkMag\":7.6545671017036305,\"otlkMagForecast\":43.906560888392356,\"cap\":107922259,\"spreadPerc\":1,\"shareTxForMovement\":59396,\"shareTxUntilMovement\":59396,\"totalShares\":47200000,\"maxShares\":9400000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":4563.074002562625,\"lastPrice\":4555.184807422732,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":false,\"otlkMag\":2.1616553357562394,\"otlkMagForecast\":50.468688671742555,\"cap\":47750387,\"spreadPerc\":0.7,\"shareTxForMovement\":116479,\"shareTxUntilMovement\":116479,\"totalShares\":28200000,\"maxShares\":5600000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":1318.9715050813202,\"lastPrice\":1326.945953432822,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.92,\"b\":true,\"otlkMag\":10.451375119967947,\"otlkMagForecast\":66.7895396323874,\"cap\":76242349,\"spreadPerc\":0.9,\"shareTxForMovement\":72029,\"shareTxUntilMovement\":39060,\"totalShares\":49200000,\"maxShares\":9800000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":15151.859074104252,\"lastPrice\":15226.290189700405,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.56,\"b\":false,\"otlkMag\":5.100306335043826,\"otlkMagForecast\":46.79116332106344,\"cap\":127203449,\"spreadPerc\":0.8,\"shareTxForMovement\":45671,\"shareTxUntilMovement\":45671,\"totalShares\":33800000,\"maxShares\":6800000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":1173.9875144311998,\"lastPrice\":1170.7433088719035,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.88,\"b\":true,\"otlkMag\":4.069744056838604,\"otlkMagForecast\":52.95822019009161,\"cap\":35975590,\"spreadPerc\":0.8,\"shareTxForMovement\":116146,\"shareTxUntilMovement\":116146,\"totalShares\":54900000,\"maxShares\":11000000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":129.08551261913615,\"lastPrice\":130.58949668636524,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.7,\"b\":false,\"otlkMag\":8.285848223016712,\"otlkMagForecast\":35.39728074788114,\"cap\":93302890,\"spreadPerc\":1.2,\"shareTxForMovement\":43429,\"shareTxUntilMovement\":2654,\"totalShares\":14700000,\"maxShares\":2900000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":6310.6585304511755,\"lastPrice\":6290.849041511244,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1,\"b\":false,\"otlkMag\":8.030782122965464,\"otlkMagForecast\":40.94484063917609,\"cap\":43897667,\"spreadPerc\":0.9,\"shareTxForMovement\":69088,\"shareTxUntilMovement\":69088,\"totalShares\":15000000,\"maxShares\":3000000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":3762.196248590698,\"lastPrice\":3753.8036990347805,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":true,\"otlkMag\":5.3207591580786024,\"otlkMagForecast\":53.67603298745048,\"cap\":3997025,\"spreadPerc\":0.8,\"shareTxForMovement\":129742,\"shareTxUntilMovement\":129742,\"totalShares\":19800000,\"maxShares\":4000000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":1131.4013337985075,\"lastPrice\":1123.3011348135722,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.29,\"b\":false,\"otlkMag\":0.8325726990057439,\"otlkMagForecast\":47.37156256170426,\"cap\":28138164,\"spreadPerc\":1.4,\"shareTxForMovement\":32644,\"shareTxUntilMovement\":32644,\"totalShares\":12700000,\"maxShares\":2500000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":416.78359756832356,\"lastPrice\":413.9808581084752,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.15,\"b\":false,\"otlkMag\":1.5203415313944832,\"otlkMagForecast\":43.920621171344855,\"cap\":14380096,\"spreadPerc\":1.1,\"shareTxForMovement\":21869,\"shareTxUntilMovement\":21869,\"totalShares\":33500000,\"maxShares\":6700000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":739.381483681066,\"lastPrice\":736.2516299249066,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.35,\"b\":false,\"otlkMag\":8.936760343660968,\"otlkMagForecast\":31.98769669063427,\"cap\":4494895,\"spreadPerc\":0.5,\"shareTxForMovement\":28400,\"shareTxUntilMovement\":15650,\"totalShares\":276200000,\"maxShares\":55200000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":18190.48597172692,\"lastPrice\":18235.73772397053,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":8.33715499227122,\"otlkMagForecast\":58.82153315671879,\"cap\":136573879,\"spreadPerc\":0.3,\"shareTxForMovement\":195698,\"shareTxUntilMovement\":195698,\"totalShares\":17600000,\"maxShares\":3500000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":8279.218091027004,\"lastPrice\":8263.345429677527,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":9.290886810207711,\"otlkMagForecast\":60.55007716779657,\"cap\":90321330,\"spreadPerc\":1,\"shareTxForMovement\":136292,\"shareTxUntilMovement\":83728,\"totalShares\":32200000,\"maxShares\":6400000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":13,\"lastUpdate\":1689292485817,\"ticksUntilCycle\":69}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":10,\"AutoexecScript\":\"\",\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":true,\"SuppressMessages\":true,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":true,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-5,\"y\":3,\"opened\":true},\"EditorTheme\":{\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}},\"base\":\"vs-dark\",\"inherit\":true},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoTabSize\":2,\"MonacoDetectIndentation\":false,\"MonacoFontFamily\":\"Lucida Console\",\"MonacoFontSize\":20,\"MonacoFontLigatures\":false,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"32","AllGangsSave":"","LastExportBonus":"1689292488442","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"isBonusCharging\":false,\"storedCycles\":0}}"}}