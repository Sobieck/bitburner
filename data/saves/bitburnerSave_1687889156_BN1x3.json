{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":503,\"strength\":1,\"defense\":1,\"dexterity\":1,\"agility\":1,\"charisma\":1,\"intelligence\":0},\"exp\":{\"hacking\":166716942.38555416,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1.24,\"hacking_speed\":1.24,\"hacking_money\":1.24,\"hacking_grow\":1.24,\"hacking\":1.24,\"strength\":1.24,\"defense\":1.24,\"dexterity\":1.24,\"agility\":1.24,\"charisma\":1.24,\"hacking_exp\":1.24,\"strength_exp\":1.24,\"defense_exp\":1.24,\"dexterity_exp\":1.24,\"agility_exp\":1.24,\"charisma_exp\":1.24,\"company_rep\":1.24,\"faction_rep\":1.24,\"crime_money\":1.24,\"crime_success\":1.24,\"hacknet_node_money\":1.24,\"hacknet_node_purchase_cost\":0.8064516129032259,\"hacknet_node_ram_cost\":0.8064516129032259,\"hacknet_node_core_cost\":0.8064516129032259,\"hacknet_node_level_cost\":0.8064516129032259,\"work_money\":1.24,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"NeuroFlux Governor\"},{\"level\":2,\"name\":\"NeuroFlux Governor\"},{\"level\":3,\"name\":\"NeuroFlux Governor\"},{\"level\":4,\"name\":\"NeuroFlux Governor\"},{\"level\":5,\"name\":\"NeuroFlux Governor\"},{\"level\":6,\"name\":\"NeuroFlux Governor\"},{\"level\":7,\"name\":\"NeuroFlux Governor\"}],\"city\":\"Sector-12\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"The Black Hand\",\"NiteSec\",\"Sector-12\"],\"factionInvitations\":[],\"hacknetNodes\":[],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0,\"Company Favor\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{},\"karma\":0,\"numPeopleKilled\":0,\"location\":\"Alpha Enterprises\",\"money\":47094133471.89484,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":3150000000,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":556004347364.4329,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-31200000000,\"total\":47094132392.89484,\"work\":0,\"servers\":-223205302545.68866,\"other\":-5285200000,\"augmentations\":-252369712425.84943}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":3150000000,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":556004347364.4329,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-31200000000,\"total\":47094132392.89484,\"work\":0,\"servers\":-223205302545.68866,\"other\":-5285200000,\"augmentations\":-252369712425.84943}},\"playtimeSinceLastAug\":164753400,\"playtimeSinceLastBitnode\":164753400,\"lastAugReset\":1687724402367,\"lastNodeReset\":1687724402367,\"purchasedServers\":[\"CLOUD-000\",\"CLOUD-001\",\"CLOUD-002\",\"CLOUD-003\",\"CLOUD-004\",\"CLOUD-005\",\"CLOUD-006\",\"CLOUD-007\",\"CLOUD-008\",\"CLOUD-009\",\"CLOUD-010\",\"CLOUD-011\",\"CLOUD-012\",\"CLOUD-013\",\"CLOUD-014\",\"CLOUD-015\",\"CLOUD-016\",\"CLOUD-017\",\"CLOUD-018\",\"CLOUD-019\",\"CLOUD-020\",\"CLOUD-021\",\"CLOUD-022\",\"CLOUD-023\",\"CLOUD-024\"],\"scriptProdSinceLastAug\":456844329270.8009,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":{\"ctor\":\"JSONMap\",\"data\":[[1,2]]},\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1686525459069},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1686525759083},{\"ID\":\"WORKOUT\",\"unlockedOn\":1686528279088},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1686532892094},{\"ID\":\"TRAVEL\",\"unlockedOn\":1686563653859},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1686567073861},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1686654552271},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1686667992269},{\"ID\":\"NITESEC\",\"unlockedOn\":1686679931301},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1686687177835},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1686697617844},{\"ID\":\"FROZE\",\"unlockedOn\":1686704316676},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1686746667786},{\"ID\":\"TOR\",\"unlockedOn\":1686746787787},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1686746893212},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1686762613218},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1686764833216},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1686767653216},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1686860173219},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1686862933218},{\"ID\":\"4S\",\"unlockedOn\":1686863833212},{\"ID\":\"DONATION\",\"unlockedOn\":1687005871880},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1687008391895},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1687017151898},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1687131964898},{\"ID\":\"SF1.1\",\"unlockedOn\":1687262446639}],\"terminalCommandHistory\":[\"nano data/batchQueue.txt \",\"nano data/serversUsedForBatching.txt \",\"nano data/batchQueue.txt \",\"run scripts/test.js \",\"free\",\"nano data/enviroment.txt \",\"connect foodnstuff \",\"connect max-hardware \",\"connect phantasy \",\"connect avmnite-02h \",\"backdoor \",\"connect I.I.I.I \",\"backdoor \",\"home\",\"nano data/batchQueue.txt \",\"run scripts/test.js \",\"nano data/batchQueue.txt \",\"nano data/serversUsedForBatching.txt \",\"run scripts/test.js \",\"nano stopTrading.txt\",\"free\",\"run scripts/clean.js \",\"ls\",\"run scripts/coordinator.js \",\"run scripts/coordinator.js 1000 0 20 ?\",\"nano data/serversUsedForBatching.txt \",\"nano data/batchQueue.txt \",\"run scripts/test.js \",\"nano stopTrading.txt\",\"run scripts/clean.js \",\"nano scripts/test.js \",\"run scripts/test.js \",\"run scripts/coordinator.js 200 5 5 ?\",\"nano data/batchQueue.txt \",\"run scripts/coordinator.js 100 2 2 ?\",\"nano data/batchQueue.txt \",\"nano data/serversUsedForBatching.txt \",\"nano data/batchQueue.txt \",\"nano  scripts/test.js \",\"run scripts/test.js \",\"nano data/serversUsedForBatching.txt \",\"nano data/batchQueue.txt \",\"nano data/serversUsedForBatching.txt \",\"run scripts/test.js \",\"nano stopTrading.txt\",\"run scripts/clean.js \",\"run scripts/coordinator.js 500 0 2 ?\",\"nano stopTrading.txt\",\"run scripts/clean.js \",\"run scripts/coordinator.js 500 0 2 ?\"],\"lastUpdate\":1687889155856,\"lastSave\":1687889115476,\"totalPlaytime\":1367982400,\"currentWork\":{\"ctor\":\"FactionWork\",\"data\":{\"type\":\"FACTION\",\"singularity\":false,\"cyclesWorked\":93400,\"factionWorkType\":\"hacking\",\"factionName\":\"The Black Hand\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"40a77882039c0\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"43.3.1.6\",\"isConnectedTo\":true,\"maxRam\":16384,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"fl1ght.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"HTTPWorm.exe\",\"relaySMTP.exe\",\"SQLInject.exe\",\"Formulas.exe\"],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/scan.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n/// run scripts/scan.js dispatchScript\\r\\nexport async function main(ns) {\\r\\n    const dispatchScript = ns.args[0];\\r\\n\\r\\n    if (dispatchScript === undefined){\\r\\n        ns.tprint(\\\"Must define dispatch script for scan.\\\")\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const result = new dataMonger(ns).scanEnvironment();\\r\\n\\r\\n    ns.rm('data/enviroment.txt')\\r\\n    ns.write('data/enviroment.txt', JSON.stringify(result), \\\"W\\\")\\r\\n\\r\\n    ns.run(dispatchScript)\\r\\n}\\r\\n\\r\\nexport class dataMonger {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    scanEnvironment(machineToScan = \\\"home\\\", serversToScan = [], scannedServers = [], result = []) {\\r\\n        if (serversToScan.length === 0 && machineToScan !== \\\"home\\\") {\\r\\n            return result;\\r\\n        }\\r\\n\\r\\n        let lineage = result\\r\\n            .find(x => x.name === machineToScan)\\r\\n            ?.lineage\\r\\n            .map(x => x); // so we aren't using a reference\\r\\n\\r\\n        const scan = this.ns\\r\\n            .scan(machineToScan)\\r\\n            .map(x => new ServerNode(\\r\\n                machineToScan,\\r\\n                this.ns.getServer(x),\\r\\n                lineage\\r\\n            ));\\r\\n\\r\\n        scan.forEach(x => {\\r\\n            if (!scannedServers.includes(x.name) && !serversToScan.includes(x.name)) {\\r\\n                serversToScan.push(x.name);\\r\\n                result.push(x);\\r\\n            }\\r\\n        });\\r\\n\\r\\n        scannedServers.push(machineToScan);\\r\\n        machineToScan = serversToScan.pop();\\r\\n        return this.scanEnvironment(machineToScan, serversToScan, scannedServers, result);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass ServerNode {\\r\\n    constructor(parentsName, server, lineage = []) {\\r\\n        this.name = server.hostname;\\r\\n        this.lineage = lineage\\r\\n        if (parentsName !== \\\"home\\\" && this.lineage !== undefined) {\\r\\n            if (!this.lineage.includes(parentsName)) {\\r\\n                this.lineage.push(parentsName)\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.server = server;\\r\\n    }\\r\\n}\",\"filename\":\"scripts/scan.js\",\"server\":\"home\"}}],[\"scripts/clean.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/clean.js \\r\\nexport async function main(ns) {\\r\\n\\r\\n    if(!ns.fileExists(\\\"stopTrading.txt\\\")){\\r\\n        ns.tprint(\\\"must add stopTrading.txt to server.\\\");\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    ns.killall(\\\"home\\\", true);\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n    enviroment\\r\\n        .filter(x => x.server.hasAdminRights)\\r\\n        .map(target => {\\r\\n            ns.killall(target.name);\\r\\n        })\\r\\n\\r\\n    ns.rm('data/enviroment.txt');\\r\\n    ns.rm('data/dataOnWhatHappensEachRound.txt');\\r\\n    ns.rm('data/recordOfWhoIsBeingHacked.txt');\\r\\n    ns.rm('data/salesLedger.txt');\\r\\n    ns.rm('stopTrading.txt');\\r\\n    ns.rm('data/stockHistory.txt');\\r\\n    ns.rm('data/contractData.txt');\\r\\n    ns.rm('data/serversUsedForBatching.txt');\\r\\n    ns.rm('data/batchQueue.txt')\\r\\n}\",\"filename\":\"scripts/clean.js\",\"server\":\"home\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"home\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"home\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"home\"}}],[\"scripts/advanced-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//need to make it so we have a one to one ratio. no multiplies like we are seeing now.\\r\\n// the ten most valuable servers need to be tackled by owned machines and local.\\r\\n\\r\\n/** @param {NS} ns */\\r\\n//run scripts/advanced-dispatch.js \\r\\nexport async function main(ns) {\\r\\n    //home just gets put in the queue, and filtered out of hack if we have more than 5 purchased servers.\\r\\n\\r\\n    const helpers = new Helpers(ns);\\r\\n    const nameOfrecordOfWhoIsBeingHacked = 'data/recordOfWhoIsBeingHacked.txt';\\r\\n    const nameOfDataOnWhatHappensEachRound = 'data/dataOnWhatHappensEachRound.txt';\\r\\n    const hackScript = 'scripts/advanced-hacks/hack.js'\\r\\n    const growScript = 'scripts/advanced-hacks/grow.js'\\r\\n    const weakenScript = 'scripts/advanced-hacks/weaken.js'\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\"\\r\\n\\r\\n    let batchTargets = [];\\r\\n\\r\\n    let machinesRunningBatches = []\\r\\n    const machinesRunningBatchesTextName = \\\"data/serversUsedForBatching.txt\\\"\\r\\n\\r\\n    if (ns.fileExists(machinesRunningBatchesTextName)) {\\r\\n        machinesRunningBatches = JSON.parse(ns.read(machinesRunningBatchesTextName));\\r\\n    }\\r\\n\\r\\n    const portsWeCanPop = helpers.numberOfPortsWeCanPop();\\r\\n    const currentHackingLevel = ns.getHackingLevel();\\r\\n    const countOfPurchasedServers = ns.getPurchasedServers().length;\\r\\n    const spaceRequireForOtherPrograms = 0;\\r\\n\\r\\n    let recordOfWhoIsBeingHacked = new Map();\\r\\n    let dataOnWhatHappensEachRound = [];\\r\\n    let roundData = new RoundData();\\r\\n\\r\\n    if (ns.fileExists(nameOfrecordOfWhoIsBeingHacked)) {\\r\\n        recordOfWhoIsBeingHacked = new Map(JSON.parse(ns.read(nameOfrecordOfWhoIsBeingHacked)));\\r\\n    }\\r\\n\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        const batchQueue = JSON.parse(ns.read(batchQueuesFileName));\\r\\n        batchTargets = batchQueue.map(x => x[0]);\\r\\n    }\\r\\n\\r\\n    if (ns.fileExists(nameOfDataOnWhatHappensEachRound)) {\\r\\n        dataOnWhatHappensEachRound = JSON.parse(ns.read(nameOfDataOnWhatHappensEachRound));\\r\\n    }\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n\\r\\n    clearDeletedServersOfWhoIsBeingHacked(recordOfWhoIsBeingHacked, enviroment);\\r\\n\\r\\n    const allHackableMachines = enviroment\\r\\n        .filter(x => x.server.requiredHackingSkill < currentHackingLevel)\\r\\n        .filter(x => x.server.numOpenPortsRequired <= portsWeCanPop || x.server.purchasedByPlayer);\\r\\n\\r\\n    allHackableMachines\\r\\n        .filter(x => !x.server.hasAdminRights)\\r\\n        .map(x => helpers.hackMachine(x.name));\\r\\n\\r\\n    const allMachinesByOrderOfValue = allHackableMachines\\r\\n        .filter(x => !x.server.purchasedByPlayer && x.server.moneyMax !== 0)\\r\\n        .filter(x => !batchTargets.includes(x.name))\\r\\n        .sort((a, b) => b.server.moneyMax - a.server.moneyMax);\\r\\n\\r\\n    cleanProcessesAttackingBatchTarget(ns, recordOfWhoIsBeingHacked, batchTargets);\\r\\n\\r\\n    const homeServer = ns.getServer(\\\"home\\\")\\r\\n    homeServer.maxRam -= 32;\\r\\n    homeServer.ramUsed -= 32;\\r\\n\\r\\n    if (homeServer.ramUsed < 0) {\\r\\n        homeServer.ramUsed = 0;\\r\\n    }\\r\\n\\r\\n    allHackableMachines.push({ name: \\\"home\\\", server: homeServer })\\r\\n\\r\\n    const freeMachines = allHackableMachines\\r\\n        .filter(x => x.server.ramUsed === 0 && x.server.maxRam !== 0 && !machinesRunningBatches.includes(x.name))\\r\\n        .sort((b, a) => b.server.maxRam - a.server.maxRam);\\r\\n\\r\\n\\r\\n    roundData.countOfFreeMachines = freeMachines.length;\\r\\n\\r\\n    const machinesNextInQueueToHack = getMachinesToHack();\\r\\n\\r\\n    const hackQueue = [];\\r\\n    const growAndWeakenQueue = [];\\r\\n\\r\\n    // figure out what needs to happen to items in the queue\\r\\n    machinesNextInQueueToHack.forEach(machineNextToHack => {\\r\\n        const machineInQuestion = allMachinesByOrderOfValue\\r\\n            .map(x => new HackedRecord(\\r\\n                x.name,\\r\\n                x.server.moneyMax,\\r\\n                x.server.minDifficulty,\\r\\n                x.server.hackDifficulty,\\r\\n                x.server.moneyAvailable,\\r\\n            ))\\r\\n            .find(x => x.name === machineNextToHack.name);\\r\\n\\r\\n        if (machineInQuestion.needsWeakening() || machineInQuestion.needsGrowing()) {\\r\\n            growAndWeakenQueue.push(machineInQuestion);\\r\\n        } else {\\r\\n            hackQueue.push(machineInQuestion);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    const topMachines = allMachinesByOrderOfValue.splice(0, countOfPurchasedServers + 1).map(x => x.name);\\r\\n    const ramNeededForHack = ns.getScriptRam(hackScript);\\r\\n\\r\\n    hackQueue.forEach(target => {\\r\\n        let machineToRunOn = freeMachines.pop();\\r\\n\\r\\n        if (machineToRunOn.name === \\\"home\\\" && countOfPurchasedServers >= 5 && freeMachines.length > 0) {\\r\\n            const nextMachine = freeMachines.pop();\\r\\n            freeMachines.push(machineToRunOn);\\r\\n            machineToRunOn = nextMachine;\\r\\n        }\\r\\n\\r\\n        if ((!machineToRunOn.server.purchasedByPlayer || !machineToRunOn.name === \\\"home\\\") && topMachines.includes(target.name)) {\\r\\n            freeMachines.push(machineToRunOn);\\r\\n            // ns.tprint(\\\"Broke out of hack queue with servers left.\\\")\\r\\n        } else {\\r\\n\\r\\n            const threadsNeeded = Math.floor((machineToRunOn.server.maxRam - spaceRequireForOtherPrograms) / ramNeededForHack)\\r\\n\\r\\n            ns.scp(hackScript, machineToRunOn.name);\\r\\n            ns.exec(hackScript, machineToRunOn.name, threadsNeeded, target.name);\\r\\n\\r\\n            target.hacking();\\r\\n            recordOfWhoIsBeingHacked.set(machineToRunOn.name, target);\\r\\n            roundData.addNewThreadsHacking(threadsNeeded);\\r\\n        }\\r\\n    });\\r\\n\\r\\n\\r\\n    const ramNeededForWeaken = ns.getScriptRam(weakenScript);\\r\\n    const ramNeededForGrow = ns.getScriptRam(growScript);\\r\\n    growAndWeakenQueue.map(target => {\\r\\n        const machineToRunOn = freeMachines.pop();\\r\\n\\r\\n        if ((!machineToRunOn.server.purchasedByPlayer || !machineToRunOn.name === \\\"home\\\") && topMachines.includes(target.name)) {\\r\\n            freeMachines.push(machineToRunOn);\\r\\n            // ns.tprint(\\\"Broke out of hack queue with servers left.\\\")\\r\\n        } else {\\r\\n            //grow default\\r\\n            let script = growScript;\\r\\n            let threadsNeeded = Math.floor((machineToRunOn.server.maxRam - spaceRequireForOtherPrograms) / ramNeededForGrow)\\r\\n\\r\\n            if (target.needsWeakening()) {\\r\\n                script = weakenScript;\\r\\n                threadsNeeded = Math.floor((machineToRunOn.server.maxRam - spaceRequireForOtherPrograms) / ramNeededForWeaken)\\r\\n            }\\r\\n\\r\\n\\r\\n            ns.scp(script, machineToRunOn.name);\\r\\n            ns.exec(script, machineToRunOn.name, threadsNeeded, target.name);\\r\\n\\r\\n\\r\\n            if (target.needsWeakening()) {\\r\\n                target.weakening();\\r\\n                roundData.addNewThreadsWeakening(threadsNeeded);\\r\\n            } else {\\r\\n                target.growing();\\r\\n                roundData.addThreadsGrowing(threadsNeeded);\\r\\n            }\\r\\n\\r\\n            recordOfWhoIsBeingHacked.set(machineToRunOn.name, target);\\r\\n        }\\r\\n    });\\r\\n\\r\\n\\r\\n    ns.rm(nameOfrecordOfWhoIsBeingHacked);\\r\\n    ns.write(nameOfrecordOfWhoIsBeingHacked, JSON.stringify(Array.from(recordOfWhoIsBeingHacked.entries()), \\\"W\\\"));\\r\\n\\r\\n    dataOnWhatHappensEachRound.push(roundData);\\r\\n    ns.rm(nameOfDataOnWhatHappensEachRound);\\r\\n    ns.write(nameOfDataOnWhatHappensEachRound, JSON.stringify(dataOnWhatHappensEachRound), \\\"W\\\")\\r\\n\\r\\n    function getMachinesToHack() {\\r\\n        const machinesNextInQueueToHack = [];\\r\\n\\r\\n        // figure out who has already been worked on.\\r\\n        freeMachines.forEach(freeMachine => {\\r\\n            if (recordOfWhoIsBeingHacked.has(freeMachine.name)) {\\r\\n                const recordOfHacking = recordOfWhoIsBeingHacked.get(freeMachine.name);\\r\\n                if (recordOfHacking.hacking === false) {\\r\\n                    machinesNextInQueueToHack.push(recordOfHacking.server);\\r\\n                }\\r\\n\\r\\n                recordOfWhoIsBeingHacked.delete(freeMachine.name);\\r\\n            }\\r\\n        });\\r\\n\\r\\n        const machinesCurrentlyBeingHacked = Array.from(recordOfWhoIsBeingHacked.entries()).map(x => x[1].name);\\r\\n\\r\\n        let i = 0;\\r\\n        while (machinesNextInQueueToHack.length < roundData.countOfFreeMachines) {\\r\\n            if (i >= allMachinesByOrderOfValue.length) {\\r\\n                break;\\r\\n            }\\r\\n\\r\\n            const nextMostValuableTarget = allMachinesByOrderOfValue[i];\\r\\n\\r\\n            if (!machinesCurrentlyBeingHacked.includes(nextMostValuableTarget.name)) {\\r\\n                machinesNextInQueueToHack.push(nextMostValuableTarget);\\r\\n            }\\r\\n\\r\\n            i++;\\r\\n        }\\r\\n        return machinesNextInQueueToHack;\\r\\n    }\\r\\n\\r\\n    function clearDeletedServersOfWhoIsBeingHacked(recordOfWhoIsBeingHacked, enviroment) {\\r\\n        const machinesWhoAreHackin = Array.from(recordOfWhoIsBeingHacked.entries()).map(x => x[0]);\\r\\n        const namesOfMachinesInTheEnvironment = enviroment.map(x => x.name);\\r\\n\\r\\n        machinesWhoAreHackin\\r\\n            .map(machineWhoIsHackin => {\\r\\n                if (!namesOfMachinesInTheEnvironment.includes(machineWhoIsHackin) && machineWhoIsHackin !== \\\"home\\\") {\\r\\n                    recordOfWhoIsBeingHacked.delete(machineWhoIsHackin);\\r\\n                    ns.tprint(machineWhoIsHackin);\\r\\n                }\\r\\n            });\\r\\n    }\\r\\n\\r\\n    function cleanProcessesAttackingBatchTarget(ns, recordOfWhoIsBeingHacked, batchTargets) {\\r\\n        for (const machineHackin of recordOfWhoIsBeingHacked) {\\r\\n            const whoTheyHackin = machineHackin[1].name;\\r\\n\\r\\n            if (batchTargets.includes(whoTheyHackin)) {\\r\\n                ns.killall(machineHackin[0]);\\r\\n                recordOfWhoIsBeingHacked.delete(machineHackin[0]);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nexport class RoundData {\\r\\n    countOfFreeMachines = 0;\\r\\n    newThreadsHacking = 0;\\r\\n    newThreadsWeakening = 0;\\r\\n    newThreadsGrowing = 0;\\r\\n    totalThreadsAllocated = 0\\r\\n\\r\\n    addNewThreadsHacking(threads) {\\r\\n        this.newThreadsHacking += threads;\\r\\n        this.calculateTotal();\\r\\n    }\\r\\n\\r\\n    addNewThreadsWeakening(threads) {\\r\\n        this.newThreadsWeakening += threads;\\r\\n        this.calculateTotal();\\r\\n    }\\r\\n\\r\\n    addThreadsGrowing(threads) {\\r\\n        this.newThreadsGrowing += threads;\\r\\n        this.calculateTotal();\\r\\n    }\\r\\n\\r\\n    calculateTotal() {\\r\\n        this.totalThreadsAllocated = this.newThreadsGrowing + this.newThreadsHacking + this.newThreadsWeakening;\\r\\n    }\\r\\n}\\r\\n\\r\\nexport class HackedRecord {\\r\\n    constructor(name, maxMoney, minSecurityThreashhold, hackDifficulty, moneyAvailable) {\\r\\n        this.name = name;\\r\\n        this.moneyThreshhold = maxMoney * 0.75;\\r\\n        this.securityThreshholdTarget = minSecurityThreashhold + 5;\\r\\n        this.hackDifficulty = hackDifficulty;\\r\\n        this.moneyAvailable = moneyAvailable;\\r\\n\\r\\n\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    needsWeakening() {\\r\\n        return this.hackDifficulty > this.securityThreshholdTarget;\\r\\n    }\\r\\n\\r\\n    needsGrowing() {\\r\\n        return this.moneyAvailable < this.moneyThreshhold;\\r\\n    }\\r\\n\\r\\n    weakening() {\\r\\n        this.isWeakening = true;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    growing() {\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = true;\\r\\n        this.isHacking = false;\\r\\n    }\\r\\n\\r\\n    hacking() {\\r\\n        this.isWeakening = false;\\r\\n        this.isGrowing = false;\\r\\n        this.isHacking = true;\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\nexport class Helpers {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    hackMachine(hostName) {\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            this.ns.brutessh(hostName);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            this.ns.ftpcrack(hostName);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            this.ns.relaysmtp(hostName)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            this.ns.httpworm(hostName)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            this.ns.sqlinject(hostName)\\r\\n        }\\r\\n\\r\\n        this.ns.nuke(hostName);\\r\\n        this.ns.killall(hostName);\\r\\n\\r\\n        if (hostName !== \\\"home\\\") {\\r\\n            this.ns\\r\\n                .ls(hostName, '.js')\\r\\n                .map(y => this.ns.rm(y, hostName))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    numberOfPortsWeCanPop() {\\r\\n        let portsWeCanPop = 0;\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        return portsWeCanPop;\\r\\n    }\\r\\n\\r\\n    fileExists(fileName) {\\r\\n        return this.ns.fileExists(fileName, \\\"home\\\");\\r\\n    }\\r\\n}\",\"filename\":\"scripts/advanced-dispatch.js\",\"server\":\"home\"}}],[\"scripts/coordinator.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/coordinator.js 1000 564 5.629 BitRunners\\r\\nexport async function main(ns) {\\r\\n\\r\\n    const targetRepInThousands = ns.args[0];\\r\\n    const currentRepInThousands = ns.args[1];\\r\\n    const currentRepPerSecond = ns.args[2];\\r\\n    const factionName = ns.args[3];\\r\\n\\r\\n    if (targetRepInThousands === undefined\\r\\n        || currentRepInThousands === undefined\\r\\n        || factionName === undefined\\r\\n        || currentRepPerSecond === undefined) {\\r\\n        ns.tprint(\\\"need inputs\\\");\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    const timeLeftInSeconds = calculateTimeLeftInSeconds(targetRepInThousands, currentRepInThousands, currentRepPerSecond);\\r\\n    const endDate = new Date();\\r\\n    endDate.setSeconds(endDate.getSeconds() + timeLeftInSeconds);\\r\\n    ns.tprint(\\\"End Date: \\\", endDate.toLocaleString());\\r\\n    ns.tprint(\\\"Update node production multipliers.\\\");\\r\\n\\r\\n    let i = 0;\\r\\n    const loopEveryXSeconds = 3;\\r\\n    const sleepTotalOfXMS = loopEveryXSeconds * 1000;\\r\\n    const numberOfDifferentSleeps = 5;\\r\\n    const individualSleepAmount = sleepTotalOfXMS / numberOfDifferentSleeps;\\r\\n    let dispatchScript = 'scripts/advanced-dispatch.js';\\r\\n\\r\\n    while (true) {\\r\\n        i++;\\r\\n\\r\\n        \\r\\n        ns.run(\\\"scripts/investments/invest-in-stocks.js\\\");\\r\\n        await ns.sleep(individualSleepAmount); \\r\\n\\r\\n       \\r\\n        let moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        if(ns.fileExists('Formulas.exe') && moneyAvailable > 1_000_000_000_000){\\r\\n            dispatchScript = 'scripts/batch-dispatch.js'\\r\\n        }\\r\\n\\r\\n        ns.run(\\\"scripts/scan.js\\\", 1, dispatchScript); // this triggers all hacks. But we need to analyse the environment first. \\r\\n        await ns.sleep(individualSleepAmount); // need rest between actions for some fing reason. \\r\\n        \\r\\n\\r\\n\\r\\n        const currentNumberOfPurchasedServers = ns.getPurchasedServers().length;\\r\\n        if (currentNumberOfPurchasedServers < ns.getPurchasedServerLimit()) {\\r\\n\\r\\n            const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n            const timeInMinutesToWaitToBuy = 5;\\r\\n            const timeInSecondsToWaitToBuy = timeInMinutesToWaitToBuy * 60;\\r\\n            let iterationsToWait = timeInSecondsToWaitToBuy / loopEveryXSeconds;\\r\\n\\r\\n            if (moneyAvailable > 1_000_000_000) {\\r\\n                iterationsToWait = 0;\\r\\n            }\\r\\n\\r\\n            if(moneyAvailable < 1_000_000_000){\\r\\n                iterationsToWait = timeInSecondsToWaitToBuy / loopEveryXSeconds;\\r\\n            }\\r\\n\\r\\n            if (i >= iterationsToWait) {\\r\\n                i = 0;\\r\\n                ns.run('scripts/investments/purchase-server.js')\\r\\n            }\\r\\n        } else {\\r\\n            const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n            if (moneyAvailable > 500_000_000_000) {\\r\\n                ns.run('scripts/investments/upgrade-small-servers.js')\\r\\n            }\\r\\n        }\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n\\r\\n        moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        if (moneyAvailable > 1_000_000_000_000) {\\r\\n            ns.run('scripts/investments/invest-in-nodes.js', 1, endDate.toISOString())\\r\\n        }\\r\\n        await ns.sleep(individualSleepAmount);\\r\\n\\r\\n\\r\\n\\r\\n        ns.run('scripts/contracts/coding-contracts.js');\\r\\n        await ns.sleep(individualSleepAmount);        \\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nfunction calculateTimeLeftInSeconds(targetRepInThousands, currentRepInThousands, currentRepPerSecond) {\\r\\n    const repLeftInThousands = targetRepInThousands - currentRepInThousands;\\r\\n    const repLeftInSeconds = repLeftInThousands * 1000;\\r\\n\\r\\n    return repLeftInSeconds / currentRepPerSecond;\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/coordinator.js\",\"server\":\"home\"}}],[\"scripts/investments/invest-in-nodes.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//take an hours until payoff numberz\\r\\n\\r\\n//hacknet\\r\\n\\r\\n/** @param {NS} ns */\\r\\n//run scripts/invest-in-nodes.js endDate\\r\\nexport async function main(ns) {\\r\\n    const endDate = ns.args[0];\\r\\n\\r\\n    if (endDate === undefined){\\r\\n        ns.tprint(\\\"need inputs\\\");\\r\\n    } else {\\r\\n        const timeLeftInSeconds = (new Date(endDate) - new Date()) / 1000;\\r\\n        const conservativeTimeLeft = timeLeftInSeconds / 2;\\r\\n    \\r\\n        let numberPurchased = 0\\r\\n    \\r\\n        while(buyHacknetNodeIfAboveBreakeven(ns, conservativeTimeLeft)){\\r\\n            numberPurchased++;\\r\\n        }\\r\\n\\r\\n        if(numberPurchased != 0){\\r\\n            ns.tprint(\\\"Total nodes purchase: \\\", numberPurchased);\\r\\n        }        \\r\\n    }\\r\\n}\\r\\n\\r\\nfunction buyHacknetNodeIfAboveBreakeven(ns, secondsLeft) {\\r\\n    const productionMultiplier = 2.8991;\\r\\n    const upgradeCostMultiplier = 0.8700;\\r\\n\\r\\n    const fixedCostOfFullyUpgradedNode = 409_194_200 * upgradeCostMultiplier;\\r\\n    const variableCost = ns.hacknet.getPurchaseNodeCost();\\r\\n    const totalCost = variableCost + fixedCostOfFullyUpgradedNode;\\r\\n\\r\\n    const moneyToInvest = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    if (totalCost > moneyToInvest) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    const revPerSecond = 9172 * productionMultiplier;\\r\\n    const expectedValue = secondsLeft * revPerSecond;\\r\\n\\r\\n    if (expectedValue < totalCost) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    const indexOfNode = ns.hacknet.purchaseNode();\\r\\n    ns.hacknet.upgradeLevel(indexOfNode, 199);\\r\\n    ns.hacknet.upgradeRam(indexOfNode, 6);\\r\\n    ns.hacknet.upgradeCore(indexOfNode, 15);\\r\\n\\r\\n    return true;\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/investments/invest-in-nodes.js\",\"server\":\"home\"}}],[\"scripts/investments/invest-in-stocks.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"\\r\\n/** @param {NS} ns */\\r\\n//run scripts/invest-in-stocks.js\\r\\nexport async function main(ns) {\\r\\n\\r\\n    let historicalData = new Map();\\r\\n    const nameOfStockHistoricalData = \\\"../../data/stockHistory.txt\\\"\\r\\n\\r\\n    if (ns.fileExists(nameOfStockHistoricalData)) {\\r\\n        historicalData = new Map(JSON.parse(ns.read(nameOfStockHistoricalData)));\\r\\n    }\\r\\n\\r\\n    const stockRecords = ns.stock\\r\\n        .getSymbols()\\r\\n        .map(x => new Stock(\\r\\n            x,\\r\\n            ns.stock.getVolatility(x),\\r\\n            ns.stock.getForecast(x),\\r\\n            ns.stock.getBidPrice(x),\\r\\n            ns.stock.getAskPrice(x),\\r\\n            ns.stock.getPrice(x),\\r\\n            ns.stock.getMaxShares(x),\\r\\n            ns.stock.getPosition(x),\\r\\n        ));\\r\\n\\r\\n\\r\\n    SaveHistoricData(stockRecords, historicalData, ns, nameOfStockHistoricalData);\\r\\n\\r\\n    const nameOfLedger = \\\"../../data/salesLedger.txt\\\"\\r\\n    let ledger = [];\\r\\n\\r\\n    if (ns.fileExists(nameOfLedger)) {\\r\\n        ledger = JSON.parse(ns.read(nameOfLedger));\\r\\n    }\\r\\n\\r\\n    const stopTradingExists = ns.fileExists(\\\"../../stopTrading.txt\\\");\\r\\n    // sell short term positions;\\r\\n    stockRecords.map(stock => {\\r\\n        const investedShares = stock.investedShares;\\r\\n\\r\\n        if (investedShares > 0) {\\r\\n            // do not allow clean to run if invest-in-stocks.js is running on server. We need clean closes for this.  \\r\\n            if (stock.forecast < 0.5 || stopTradingExists) {\\r\\n                const salePrice = ns.stock.sellStock(stock.symbol, investedShares);\\r\\n                ledger.push(new LedgerItem(\\r\\n                    stock.symbol,\\r\\n                    salePrice,\\r\\n                    stock.averagePrice,\\r\\n                    investedShares,\\r\\n                    \\\"Short-Term Long Sale\\\",\\r\\n                    stock.forecast\\r\\n                ))\\r\\n\\r\\n                if (stopTradingExists) {\\r\\n                    ns.toast(\\\"Stopped trading\\\", \\\"success\\\", null)\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfLedger);\\r\\n    ns.write(nameOfLedger, JSON.stringify(ledger), \\\"W\\\");\\r\\n\\r\\n\\r\\n    const commission = 100_001;\\r\\n    const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\") - commission;\\r\\n\\r\\n    if (moneyAvailable > 600_000_000_000 && !stopTradingExists) {\\r\\n        const stocksToGoLong = stockRecords\\r\\n            .filter(stock => stock.investedShares !== stock.maxShares && stock.forecast > 0.6)\\r\\n            .sort((a, b) => b.volatility - a.volatility);\\r\\n\\r\\n        if (stocksToGoLong.length > 0) {\\r\\n            const stockToLookAt = stocksToGoLong[0];\\r\\n\\r\\n            let sharesToBuy = Math.round(moneyAvailable / stockToLookAt.ask);\\r\\n\\r\\n            if (stockToLookAt.maxShares < sharesToBuy) {\\r\\n                sharesToBuy = stockToLookAt.maxShares;\\r\\n            }\\r\\n\\r\\n            sharesToBuy = sharesToBuy - stockToLookAt.investedShares;\\r\\n            const ticker = stockToLookAt.symbol;\\r\\n\\r\\n            ns.stock.buyStock(ticker, sharesToBuy);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nclass LedgerItem {\\r\\n\\r\\n    constructor(symbol, price, averagePurchasePrice, shares, type, forecastAtSale) {\\r\\n        const formatter = new Intl.NumberFormat('en-US', {\\r\\n            style: 'currency',\\r\\n            currency: 'USD',\\r\\n        });\\r\\n\\r\\n        const numberProfit = (price - averagePurchasePrice) * shares\\r\\n\\r\\n        this.date = new Date().toLocaleString();\\r\\n        this.symbol = symbol;\\r\\n        this.price = price;\\r\\n        this.averagePurchasePrice = averagePurchasePrice;\\r\\n        this.profit = formatter.format(numberProfit);\\r\\n        this.profitPercent = (numberProfit / (shares * averagePurchasePrice)).toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 });\\r\\n        this.shares = shares;\\r\\n        this.type = type;\\r\\n        this.forecastAtSale = forecastAtSale;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass StockHistoricData {\\r\\n\\r\\n    constructor(shortTermRecords = [], longTermRecords = []) {\\r\\n        this.shortTermRecords = shortTermRecords;\\r\\n\\r\\n        this.longTermRecords = longTermRecords;\\r\\n    }\\r\\n\\r\\n    addRecord(record) {\\r\\n        this.shortTermRecords.push(record);\\r\\n    }\\r\\n\\r\\n    storeLongTerm() {\\r\\n        const newLongTermStock = new Stock(\\r\\n            this.shortTermRecords[0].symbol,\\r\\n            this.shortTermRecords[0].volatility,\\r\\n            this.shortTermRecords.map(x => x.forecast).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.bid).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.ask).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords.map(x => x.price).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            this.shortTermRecords[0].maxShares,\\r\\n            [\\r\\n                this.shortTermRecords.map(x => x.investedShares).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.averagePrice).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.sharesShort).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n                this.shortTermRecords.map(x => x.averageShortPrice).reduce((a, b) => a + b) / this.shortTermRecords.length,\\r\\n            ]\\r\\n        );\\r\\n\\r\\n        newLongTermStock.bias = Math.max(...this.shortTermRecords.map(x => x.bias));\\r\\n\\r\\n        this.longTermRecords.push(newLongTermStock);\\r\\n\\r\\n        this.shortTermRecords.length = 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Stock {\\r\\n    constructor(symbol, volatility, forecast, bid, ask, price, maxShares, position = {}, dateObserved = new Date()) {\\r\\n        this.symbol = symbol;\\r\\n        this.forecast = forecast;\\r\\n        this.bias = Math.abs(forecast - .5);\\r\\n        this.bid = bid;\\r\\n        this.ask = ask;\\r\\n        this.price = price;\\r\\n        this.maxShares = maxShares;\\r\\n        this.investedShares = position[0];\\r\\n        this.averagePrice = position[1];\\r\\n        this.sharesShort = position[2];\\r\\n        this.averageShortPrice = position[3];\\r\\n        this.volatility = volatility;\\r\\n        this.dateObserved = dateObserved.toLocaleString();\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction SaveHistoricData(stockRecords, historicalData, ns, nameOfStockHistoricalData) {\\r\\n    stockRecords.map(x => {\\r\\n        if (historicalData.has(x.symbol)) {\\r\\n            const data = historicalData.get(x.symbol);\\r\\n            const record = new StockHistoricData(data.shortTermRecords, data.longTermRecords);\\r\\n            if (data.shortTermRecords[data.shortTermRecords.length - 1]?.price !== x.price) {\\r\\n                record.addRecord(x);\\r\\n\\r\\n                if (record.shortTermRecords.length >= 100) {\\r\\n                    record.storeLongTerm();\\r\\n                }\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n            const stockHistoryData = new StockHistoricData();\\r\\n            stockHistoryData.addRecord(x);\\r\\n            historicalData.set(x.symbol, stockHistoryData);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    ns.rm(nameOfStockHistoricalData);\\r\\n    ns.write(nameOfStockHistoricalData, JSON.stringify(Array.from(historicalData.entries()), \\\"W\\\"));\\r\\n}\\r\\n\",\"filename\":\"scripts/investments/invest-in-stocks.js\",\"server\":\"home\"}}],[\"scripts/investments/purchase-server.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// replace servers with this as well. just a bool passed in, put them both in their own methods.\\r\\n\\r\\n/** @param {NS} ns */\\r\\n//run scripts/purchase-servers.js\\r\\nexport async function main(ns) {\\r\\n    let currentNumberOfPurchasedServers = ns.getPurchasedServers().length;\\r\\n    let ram = 128;\\r\\n\\r\\n    if (currentNumberOfPurchasedServers < ns.getPurchasedServerLimit()) {\\r\\n\\r\\n        let purchaseCost = ns.getPurchasedServerCost(ram);\\r\\n        let moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n        if (moneyAvailable > purchaseCost) {\\r\\n\\r\\n            let ramToBuy = ram;\\r\\n\\r\\n            while (moneyAvailable > ns.getPurchasedServerCost(ramToBuy)) {\\r\\n                ramToBuy = ramToBuy * 2;\\r\\n            }\\r\\n\\r\\n            ramToBuy = ramToBuy / 2;\\r\\n            \\r\\n            const hostname = \\\"CLOUD-\\\" + String(currentNumberOfPurchasedServers).padStart(3, '0')\\r\\n            ns.purchaseServer(hostname, ramToBuy);\\r\\n\\r\\n            currentNumberOfPurchasedServers = ns.getPurchasedServers().length;\\r\\n        }\\r\\n        else {\\r\\n            ns.tprint(\\\"Not enough money\\\")\\r\\n        }\\r\\n    }\\r\\n}\",\"filename\":\"scripts/investments/purchase-server.js\",\"server\":\"home\"}}],[\"scripts/investments/upgrade-small-servers.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/upgrade-small-servers.js\\r\\nexport async function main(ns) {\\r\\n    const enviroment = JSON.parse(ns.read('../../data/enviroment.txt'));\\r\\n\\r\\n    replaceSmallMachinesWithMax(ns, enviroment);\\r\\n}\\r\\n\\r\\nfunction replaceSmallMachinesWithMax(ns, environment) {\\r\\n    const ramToBuy = 1048576;\\r\\n    const costOfRamToBuy = ns.getPurchasedServerCost(ramToBuy);\\r\\n\\r\\n    environment\\r\\n        .filter(x => x.server.purchasedByPlayer)\\r\\n        .map(x => {\\r\\n            const moneyAvailable = ns.getServerMoneyAvailable(\\\"home\\\")\\r\\n\\r\\n            if (moneyAvailable > costOfRamToBuy && x.server.maxRam < ramToBuy) {\\r\\n                ns.upgradePurchasedServer(x.name, ramToBuy);\\r\\n            }\\r\\n        });\\r\\n}\\r\\n\",\"filename\":\"scripts/investments/upgrade-small-servers.js\",\"server\":\"home\"}}],[\"scripts/test.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n  const targetServer = ns.getServer(\\\"catalyst\\\");\\nns.tprint(targetServer.moneyAvailable);\\n}\",\"filename\":\"scripts/test.js\",\"server\":\"home\"}}],[\"scripts/contracts/coding-contracts.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"//run scripts/coding-contracts.js\\r\\nexport async function main(ns) {\\r\\n    const solverRegistry = [\\r\\n        new LzDecompression2Handler(),\\r\\n        new AlgorithmicStockTrading4Handler(),\\r\\n        new AlgorithmicStockTrading3Handler(),\\r\\n        new AlgorithmicStockTrading1Handler(),\\r\\n        new AlgorithmicStockTrading2Handler(),\\r\\n        new SpiralizeMatrixHandler(),\\r\\n    ]\\r\\n\\r\\n    const allContracts = [];\\r\\n\\r\\n    JSON\\r\\n        .parse(ns.read('../../data/enviroment.txt'))\\r\\n        .map(server => {\\r\\n            const hostName = server.name;\\r\\n            ns\\r\\n                .ls(hostName)\\r\\n                .filter(file => file.endsWith('.cct'))\\r\\n                .map(contract => {\\r\\n                    const cont = new Contract(\\r\\n                        hostName,\\r\\n                        contract,\\r\\n                        ns.codingcontract.getContractType(contract, hostName),\\r\\n                        ns.codingcontract.getNumTriesRemaining(contract, hostName),\\r\\n                        ns.codingcontract.getData(contract, hostName),\\r\\n                        ns.codingcontract.getDescription(contract, hostName),\\r\\n                    );\\r\\n\\r\\n                    allContracts.push(cont);\\r\\n                });\\r\\n        });\\r\\n\\r\\n    allContracts\\r\\n        .forEach(contract => {\\r\\n            if (contract.attemptsLeft === 10 || contract.attemptsLeft === 5) {\\r\\n                const solver = solverRegistry.find(x => x.type === contract.type);\\r\\n                if (solver) {\\r\\n                    const result = solver.solve(contract.input);\\r\\n                    const success = ns.codingcontract.attempt(result, contract.name, contract.server);\\r\\n                    if (success === \\\"\\\") {\\r\\n                        ns.alert(`${contract.name} on ${contract.server} had a problem solving. You need to figure this out.`);\\r\\n                    } else {\\r\\n                        ns.toast(`Contract completed: ${success}`, \\\"success\\\", null);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        });\\r\\n\\r\\n    ns.rm(\\\"../../data/contractData.txt\\\");\\r\\n    ns.write(\\\"../../data/contractData.txt\\\", JSON.stringify(allContracts), \\\"W\\\");\\r\\n}\\r\\n\\r\\nclass Contract {\\r\\n    constructor(server, name, type, attemptsLeft, input, description) {\\r\\n        this.server = server;\\r\\n        this.name = name;\\r\\n        this.type = type;\\r\\n        this.attemptsLeft = attemptsLeft;\\r\\n        this.input = input;\\r\\n        this.description = description;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass LzDecompression2Handler {\\r\\n    type = 'Compression II: LZ Decompression';\\r\\n\\r\\n    solve(input) {\\r\\n        return this.lzDecompression(input);\\r\\n    }\\r\\n\\r\\n    /// all need to be worked on in tests. These are just copies.\\r\\n    lzDecompression(stringToDecode) {\\r\\n        let decompressedString = '';\\r\\n        let startOfNextChunk = 0\\r\\n        let nextSectionCompressed = false;\\r\\n\\r\\n\\r\\n        while (startOfNextChunk < stringToDecode.length) {\\r\\n            const chunkLength = Number(stringToDecode[startOfNextChunk]);\\r\\n\\r\\n\\r\\n            if (chunkLength === 0) {\\r\\n                startOfNextChunk++;\\r\\n                nextSectionCompressed = !nextSectionCompressed;\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            if (nextSectionCompressed) {\\r\\n                const nextCharacterInEncoded = parseInt(stringToDecode[startOfNextChunk + 1]);\\r\\n\\r\\n                const placesBack = nextCharacterInEncoded;\\r\\n                const startText = decompressedString.length - placesBack;\\r\\n                const endOfText = startText + chunkLength;\\r\\n\\r\\n                if (chunkLength <= nextCharacterInEncoded) {\\r\\n                    decompressedString += decompressedString.slice(startText, endOfText);\\r\\n                } else {\\r\\n                    let nextChunk = \\\"\\\";\\r\\n                    const partialChunk = decompressedString.slice(startText, endOfText);\\r\\n\\r\\n                    while (nextChunk.length < chunkLength) {\\r\\n                        if (nextChunk.length + partialChunk.length > chunkLength) {\\r\\n                            const howMuchLeftInChunk = chunkLength - nextChunk.length;\\r\\n                            nextChunk += partialChunk.slice(0, howMuchLeftInChunk)\\r\\n                        } else {\\r\\n                            nextChunk += partialChunk;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    decompressedString += nextChunk;\\r\\n                }\\r\\n\\r\\n                startOfNextChunk += 2;\\r\\n                nextSectionCompressed = false;\\r\\n            } else {\\r\\n                const startText = startOfNextChunk + 1;\\r\\n                const endOfText = startText + chunkLength;\\r\\n                decompressedString += stringToDecode.slice(startText, endOfText);\\r\\n                startOfNextChunk = endOfText;\\r\\n                nextSectionCompressed = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        return decompressedString;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading1Handler {\\r\\n    type = 'Algorithmic Stock Trader I';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 1;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading2Handler {\\r\\n    type = 'Algorithmic Stock Trader II';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input.length;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading3Handler {\\r\\n    type = 'Algorithmic Stock Trader III';\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = 2;\\r\\n        const stockPricesByDay = input;\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return new AlgorithmicStockTrading4Handler().tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n}\\r\\n\\r\\nclass AlgorithmicStockTrading4Handler {\\r\\n    type = 'Algorithmic Stock Trader IV';\\r\\n\\r\\n    solve(input) {\\r\\n        let maxNumberOfTrades = input[0];\\r\\n        const stockPricesByDay = input[1];\\r\\n\\r\\n        if (stockPricesByDay.length < maxNumberOfTrades) {\\r\\n            maxNumberOfTrades = stockPricesByDay.length;\\r\\n        }\\r\\n\\r\\n        return this.tradeStock(maxNumberOfTrades, stockPricesByDay);;\\r\\n    }\\r\\n\\r\\n    tradeStock(maxNumberOfTrades, stockPricesByDay) {\\r\\n        if (maxNumberOfTrades === 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        let profitsPerTransaction = []\\r\\n\\r\\n        for (let i = stockPricesByDay.length - 1; i >= 1; i--) {\\r\\n            const priceToSeeIfHasNoVolitility = stockPricesByDay[i];\\r\\n\\r\\n            const yesterdaysPrice = stockPricesByDay[i - 1]\\r\\n            const tomorrowsPrice = stockPricesByDay[i + 1]\\r\\n\\r\\n            if (\\r\\n                (yesterdaysPrice <= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility <= tomorrowsPrice) || // rising prices filter\\r\\n                (!tomorrowsPrice && yesterdaysPrice >= priceToSeeIfHasNoVolitility) || // end price\\r\\n                (yesterdaysPrice >= priceToSeeIfHasNoVolitility && priceToSeeIfHasNoVolitility >= tomorrowsPrice)) { // falling price filter\\r\\n                stockPricesByDay.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < stockPricesByDay.length; i++) {\\r\\n            const price = stockPricesByDay[i];\\r\\n            const potentialBuyPrice = stockPricesByDay[i - 1];\\r\\n            let potentialProfit = 0;\\r\\n\\r\\n            if (potentialBuyPrice) {\\r\\n                potentialProfit = price - potentialBuyPrice;\\r\\n            }\\r\\n\\r\\n            if (potentialProfit < 0) {\\r\\n                potentialProfit = 0;\\r\\n            }\\r\\n\\r\\n\\r\\n            profitsPerTransaction.push({ price, potentialProfit });\\r\\n        }\\r\\n\\r\\n        if (maxNumberOfTrades >= profitsPerTransaction.filter(x => x.potentialProfit > 0).length) {\\r\\n            return profitsPerTransaction\\r\\n                .reduce((acc, x) => acc + x.potentialProfit, 0);\\r\\n        }\\r\\n\\r\\n        const minProfit = Math.min(...profitsPerTransaction.filter(x => x.potentialProfit !== 0).map(x => x.potentialProfit));\\r\\n        const countOfMinProfits = profitsPerTransaction.filter(x => x.potentialProfit === minProfit).length;\\r\\n        const maxPrice = Math.max(...stockPricesByDay);\\r\\n        const arraysToWorkWith = [];\\r\\n\\r\\n        for (let i = 0; i < profitsPerTransaction.length; i++) {\\r\\n            const profitPerTranaction = profitsPerTransaction[i];\\r\\n\\r\\n            if (profitPerTranaction.potentialProfit === minProfit) {\\r\\n\\r\\n                const copyOfProfitsPerTransaction = profitsPerTransaction.map(x => x)\\r\\n                if (profitPerTranaction.price === maxPrice) {\\r\\n                    copyOfProfitsPerTransaction.splice(i - 1, 1);\\r\\n                } else {\\r\\n                    copyOfProfitsPerTransaction.splice(i, 1); // if there is a bigger price in the future, splice sell price. \\r\\n                }\\r\\n\\r\\n                arraysToWorkWith.push(copyOfProfitsPerTransaction.map(x => x.price));\\r\\n            }\\r\\n\\r\\n            if (arraysToWorkWith.length === countOfMinProfits) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const potentialProfitsForAllTrades = []\\r\\n        for (const newArrayOfPrices of arraysToWorkWith) {\\r\\n            potentialProfitsForAllTrades.push(this.tradeStock(maxNumberOfTrades, newArrayOfPrices))\\r\\n        }\\r\\n\\r\\n        return Math.max(...potentialProfitsForAllTrades);\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nclass SpiralizeMatrixHandler {\\r\\n    type = \\\"Spiralize Matrix\\\";\\r\\n\\r\\n    solve(matrix) {\\r\\n        return this.solveRecursively(matrix);\\r\\n    }\\r\\n\\r\\n    solveRecursively(matrix, spiralOrderResult = []){\\r\\n\\r\\n        if(matrix.length === 0){\\r\\n            return spiralOrderResult;\\r\\n        }\\r\\n\\r\\n        for (let i = 0; i < matrix.length; i++) {\\r\\n            if (i === 0 || i === matrix.length - 1) {\\r\\n                let rowToEmpty = matrix[i];\\r\\n\\r\\n                if(i === matrix.length - 1 && i !== 0){\\r\\n                    rowToEmpty.reverse()\\r\\n                }\\r\\n\\r\\n                for (let x = 0; x < rowToEmpty.length; x++) {\\r\\n                    const number = rowToEmpty[x];\\r\\n                    spiralOrderResult.push(number);\\r\\n                }\\r\\n\\r\\n                rowToEmpty.length = 0\\r\\n            } else {\\r\\n                let rowBeingUsed = matrix[i];\\r\\n\\r\\n                spiralOrderResult.push(rowBeingUsed.pop());\\r\\n            }\\r\\n        }      \\r\\n\\r\\n        \\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            if(matrix[i].length === 0){\\r\\n                matrix.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (let i = matrix.length - 1; i > -1; i--) {\\r\\n            const row = matrix[i];\\r\\n            row.reverse();\\r\\n            spiralOrderResult.push(row.pop());\\r\\n            row.reverse();            \\r\\n        }\\r\\n\\r\\n        return this.solveRecursively(matrix, spiralOrderResult)\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"filename\":\"scripts/contracts/coding-contracts.js\",\"server\":\"home\"}}],[\"scripts/batch-dispatch.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n\\r\\n    let serversUsedForBatching = [];\\r\\n    const nameOfServersUsedFile = \\\"data/serversUsedForBatching.txt\\\";\\r\\n    const batchQueuesFileName = \\\"data/batchQueue.txt\\\"\\r\\n\\r\\n\\r\\n    if (ns.fileExists(nameOfServersUsedFile)) {\\r\\n        serversUsedForBatching = JSON.parse(ns.read(nameOfServersUsedFile))\\r\\n    }\\r\\n\\r\\n    let batchQueueForDifferentTargets = new Map();\\r\\n    if (ns.fileExists(batchQueuesFileName)) {\\r\\n        batchQueueForDifferentTargets = new Map(JSON.parse(ns.read(batchQueuesFileName)));\\r\\n    }\\r\\n\\r\\n    if (!serversUsedForBatching.includes(\\\"home\\\")) {\\r\\n        serversUsedForBatching.push(\\\"home\\\");\\r\\n    }\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n    const targetNames = Array.from(batchQueueForDifferentTargets.keys());\\r\\n    const player = ns.getPlayer();\\r\\n\\r\\n    giveBatchQueueStructure(targetNames, batchQueueForDifferentTargets);\\r\\n    cleanFinishedJobsFromQueue(targetNames, batchQueueForDifferentTargets);\\r\\n    addNewTargetsToQueueIfNeeded(batchQueueForDifferentTargets, targetNames, ns, enviroment);\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const targetServer = ns.getServer(nameOfTarget);\\r\\n        const batchForTarget = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n\\r\\n        prepServerForBatching(targetServer, batchForTarget, ns, player, serversUsedForBatching, batchQueueForDifferentTargets, nameOfTarget);\\r\\n        // add jobs to batches\\r\\n\\r\\n\\r\\n        if (batchForTarget.prepStage === false) {\\r\\n\\r\\n            if (batchForTarget.batchesQueue.length === 0 || batchForTarget.batchesQueue.every(x => new Date() > new Date(x.startTime))) {\\r\\n                const batch = new BatchOfJobs();\\r\\n\\r\\n                const secondsToPadEndTime = 6;\\r\\n                const msToPadStartTime = 6;\\r\\n\\r\\n                const defaultStartTime = getWeakenEndDate(ns, targetServer, player);\\r\\n                addSecondsToDate(defaultStartTime, 40);\\r\\n\\r\\n                const noJobsRunningAfter = batchForTarget.thereAreNoJobsRunningAfter();\\r\\n\\r\\n                let noMoreJobsAfter = new Date(noJobsRunningAfter);\\r\\n\\r\\n                if (noJobsRunningAfter < 0) {\\r\\n                    noMoreJobsAfter = new Date(defaultStartTime);\\r\\n                }\\r\\n\\r\\n                const hackStart = createNewDataFromOldDateAndAddMilliseconds(noMoreJobsAfter, msToPadStartTime);\\r\\n                const hackEnd = createNewDataFromOldDateAndAddSeconds(hackStart, secondsToPadEndTime);\\r\\n\\r\\n                batch.jobs.push(new JobHasTo(hackStart, hackEnd, \\\"hack\\\"))\\r\\n\\r\\n                const weakenAfterhackStart = createNewDataFromOldDateAndAddMilliseconds(hackEnd, msToPadStartTime);\\r\\n                const weakenAfterHackEnd = createNewDataFromOldDateAndAddSeconds(weakenAfterhackStart, secondsToPadEndTime);\\r\\n\\r\\n                batch.jobs.push(new JobHasTo(weakenAfterhackStart, weakenAfterHackEnd, \\\"weaken-after-hack\\\"))\\r\\n\\r\\n                const growStart = createNewDataFromOldDateAndAddMilliseconds(weakenAfterHackEnd, msToPadStartTime);\\r\\n                const growEnd = createNewDataFromOldDateAndAddSeconds(growStart, secondsToPadEndTime);\\r\\n\\r\\n                batch.jobs.push(new JobHasTo(growStart, growEnd, \\\"grow\\\"))\\r\\n\\r\\n                const weakenAfterGrowStart = createNewDataFromOldDateAndAddMilliseconds(growEnd, msToPadStartTime);\\r\\n                const weakenAfterGrowEnd = createNewDataFromOldDateAndAddSeconds(weakenAfterGrowStart, secondsToPadEndTime);\\r\\n\\r\\n                batch.jobs.push(new JobHasTo(weakenAfterGrowStart, weakenAfterGrowEnd, \\\"weaken-after-grow\\\"))\\r\\n\\r\\n                batchForTarget.batchesQueue.push(batch);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    await executeJobs(ns, targetNames, batchQueueForDifferentTargets, serversUsedForBatching, player, enviroment);\\r\\n\\r\\n    ns.rm(nameOfServersUsedFile);\\r\\n    ns.write(nameOfServersUsedFile, JSON.stringify(serversUsedForBatching), \\\"W\\\")\\r\\n\\r\\n    ns.rm(batchQueuesFileName);\\r\\n    ns.write(batchQueuesFileName, JSON.stringify(Array.from(batchQueueForDifferentTargets.entries()), \\\"W\\\"));\\r\\n\\r\\n    ns.run('scripts/advanced-dispatch.js');\\r\\n}\\r\\n\\r\\nclass BatchQueueForTarget {\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n\\r\\n    targetMachineSaturatedWithAttacks = false;\\r\\n\\r\\n    prepStage = true;\\r\\n\\r\\n    weakeningDoneAfter;\\r\\n    successfulWeakening = false;\\r\\n\\r\\n    growDoneAfter;\\r\\n    successfulGrowing = false;\\r\\n\\r\\n    hackDoneAfter;\\r\\n    successfulHacking = false;\\r\\n\\r\\n    securityWeNeedToReduceAfterFullHack;\\r\\n    securityWeNeedToReduceAfterFullGrowth;\\r\\n    originalNumberOfThreadsForFullMoney;\\r\\n\\r\\n    batchesQueue = [];\\r\\n\\r\\n    getAllocatedMemory(machineRunningOn) {\\r\\n        return this.batchesQueue\\r\\n            .reduce((acc, x) => acc.concat(x.jobs), [])\\r\\n            .filter(x => x.machineRunningOn === machineRunningOn)\\r\\n            .reduce((acc, x) => acc + x, 0);\\r\\n    }\\r\\n\\r\\n    thereAreNoJobsRunningAfter() {\\r\\n        return Math.max(...this.batchesQueue.map(x => x.wholeBatchFinishsBefore()));\\r\\n    }\\r\\n}\\r\\n\\r\\nclass BatchOfJobs {\\r\\n    jobs = [];\\r\\n    //6 second window? 2 cycles seems like enough for each step.\\r\\n\\r\\n    startTime;\\r\\n\\r\\n    wholeBatchFinishsBefore() {\\r\\n        return Math.max(...this.jobs.map(x => new Date(x.endBefore)))\\r\\n    }\\r\\n\\r\\n    constructor(obj) {\\r\\n        obj && Object.assign(this, obj);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass JobHasTo {\\r\\n    executing = false;\\r\\n    ramCost = 0;\\r\\n    machineRunningOn;\\r\\n\\r\\n    constructor(endAfter, endBefore, type) {\\r\\n        this.endAfter = endAfter;\\r\\n        this.endBefore = endBefore;\\r\\n        this.type = type;\\r\\n        // this.types = [\\\"grow\\\", \\\"hack\\\", \\\"weaken-after-hack\\\", \\\"weaken-after-grow\\\",\\r\\n        //     \\\"weaken-dynamic\\\", \\\"grow-dynamic\\\", \\\"hack-dynamic\\\"]\\r\\n    }\\r\\n}\\r\\n\\r\\nexport class Helpers {\\r\\n    constructor(ns) {\\r\\n        this.ns = ns;\\r\\n    }\\r\\n\\r\\n    hackMachine(hostName) {\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            this.ns.brutessh(hostName);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            this.ns.ftpcrack(hostName);\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            this.ns.relaysmtp(hostName)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            this.ns.httpworm(hostName)\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            this.ns.sqlinject(hostName)\\r\\n        }\\r\\n\\r\\n        this.ns.nuke(hostName);\\r\\n        this.ns.killall(hostName);\\r\\n\\r\\n        if (hostName !== \\\"home\\\") {\\r\\n            this.ns\\r\\n                .ls(hostName, '.js')\\r\\n                .map(y => this.ns.rm(y, hostName))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    numberOfPortsWeCanPop() {\\r\\n        let portsWeCanPop = 0;\\r\\n        if (this.fileExists(\\\"BruteSSH.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"FTPCrack.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"relaySMTP.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"HTTPWorm.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        if (this.fileExists(\\\"SQLInject.exe\\\")) {\\r\\n            portsWeCanPop++;\\r\\n        }\\r\\n\\r\\n        return portsWeCanPop;\\r\\n    }\\r\\n\\r\\n    fileExists(fileName) {\\r\\n        return this.ns.fileExists(fileName, \\\"home\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\nasync function executeJobs(ns, targetNames, batchQueueForDifferentTargets, serversUsedForBatching, player) {\\r\\n    const hackScript = 'scripts/advanced-hacks/hack.js';\\r\\n    const growScript = 'scripts/advanced-hacks/grow.js';\\r\\n    const weakenScript = 'scripts/advanced-hacks/weaken.js';\\r\\n\\r\\n    const ramNeededForWeaken = ns.getScriptRam(weakenScript);\\r\\n    const ramNeededForGrow = ns.getScriptRam(growScript);\\r\\n    const ramNeededForHack = ns.getScriptRam(hackScript);\\r\\n\\r\\n    for (const nameOfTarget of targetNames) {\\r\\n        const batchForTarget = batchQueueForDifferentTargets.get(nameOfTarget);\\r\\n\\r\\n        for (let i = 0; i < batchForTarget.batchesQueue.length; i++) {\\r\\n            const batchOfJobs = batchForTarget.batchesQueue[i];\\r\\n\\r\\n            for (let y = 0; y < batchOfJobs.jobs.length; y++) {\\r\\n                const job = batchOfJobs.jobs[y];\\r\\n\\r\\n                const targetServer = ns.getServer(nameOfTarget);\\r\\n\\r\\n                if (job.executing === false) {\\r\\n\\r\\n                    let freeMachine = getServerWithMostUnallocatedSpace(ns, serversUsedForBatching, batchQueueForDifferentTargets);\\r\\n                    let script;\\r\\n                    let numberOfThreads;\\r\\n                    let ramCost;\\r\\n                    let shouldExecute = false;\\r\\n\\r\\n                    if (job.type.startsWith(\\\"weaken\\\")) {\\r\\n                        script = weakenScript;\\r\\n\\r\\n                        let amountToWeaken = targetServer.hackDifficulty - targetServer.minDifficulty;\\r\\n\\r\\n                        if (job.type === \\\"weaken-after-hack\\\") {\\r\\n                            amountToWeaken = batchForTarget.securityWeNeedToReduceAfterFullHack;\\r\\n                        }\\r\\n\\r\\n                        if (job.type === \\\"weaken-after-grow\\\") {\\r\\n                            amountToWeaken = batchForTarget.securityWeNeedToReduceAfterFullGrowth;\\r\\n                        }\\r\\n\\r\\n                        numberOfThreads = getNumberOfThreadsToWeaken(ns, freeMachine, amountToWeaken);\\r\\n                        ramCost = ramNeededForWeaken * numberOfThreads;\\r\\n\\r\\n                        const ifStartedNowWeakenDoneAt = getWeakenEndDate(ns, targetServer, player);\\r\\n                        if (new Date(job.endAfter) < ifStartedNowWeakenDoneAt && ifStartedNowWeakenDoneAt < new Date(job.endBefore)) {\\r\\n                            shouldExecute = true;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (job.type.startsWith(\\\"grow\\\")) {\\r\\n                        script = growScript;\\r\\n\\r\\n                        if (job.type !== \\\"grow-dynamic\\\") {\\r\\n                            targetServer.moneyAvailable = 0;\\r\\n                        }\\r\\n\\r\\n                        numberOfThreads = getGrowThreads(ns, targetServer, player, freeMachine);\\r\\n                        ramCost = ramNeededForGrow * numberOfThreads;\\r\\n\\r\\n                        const ifStartedNowGrowDoneAt = getGrowEndDate(ns, targetServer, player);\\r\\n                        if (new Date(job.endAfter) < ifStartedNowGrowDoneAt && ifStartedNowGrowDoneAt < new Date(job.endBefore)) {\\r\\n                            shouldExecute = true;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (job.type.startsWith(\\\"hack\\\")) {\\r\\n                        script = hackScript;\\r\\n\\r\\n                        if (job.type === \\\"hack\\\") {\\r\\n                            targetServer.moneyAvailable = targetServer.moneyMax;\\r\\n                        }\\r\\n\\r\\n\\r\\n                        numberOfThreads = getHackThreadsForTotalStealing(ns, nameOfTarget, targetServer);\\r\\n\\r\\n                        if (numberOfThreads === -1) {\\r\\n                            numberOfThreads = batchForTarget.originalNumberOfThreadsForFullMoney;\\r\\n                        }\\r\\n\\r\\n                        ramCost = ramNeededForHack * numberOfThreads;\\r\\n\\r\\n                        const ifStartedNowHackDoneAt = getHackEndDate(ns, targetServer, player);\\r\\n                        if (new Date(job.endAfter) < ifStartedNowHackDoneAt && ifStartedNowHackDoneAt < new Date(job.endBefore)) {\\r\\n                            shouldExecute = true;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    if (shouldExecute) {\\r\\n                        if (freeMachine.maxRam - freeMachine.ramUsed < ramCost) {\\r\\n                            await addServerToHackingPool(serversUsedForBatching, ns, batchQueueForDifferentTargets);\\r\\n                            y--;\\r\\n                            continue;\\r\\n                        }\\r\\n\\r\\n                        ns.tprint(script, freeMachine.hostname, numberOfThreads, nameOfTarget)\\r\\n\\r\\n                        ns.scp(script, freeMachine.hostname);\\r\\n                        ns.exec(script, freeMachine.hostname, numberOfThreads, nameOfTarget);\\r\\n\\r\\n                        job.ramCost = ramCost;\\r\\n                        job.executing = true;\\r\\n                        job.machineRunningOn = freeMachine.hostname;\\r\\n\\r\\n                        if (!batchOfJobs.startTime) {\\r\\n                            batchOfJobs.startTime = new Date();\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction prepServerForBatching(targetServer, batchForTarget, ns, player, serversUsedForBatching, batchQueueForTargetAllTargets, nameOfTarget) {\\r\\n\\r\\n    const amountToWeaken = targetServer.hackDifficulty - targetServer.minDifficulty;\\r\\n    const serverHasMaxMoney = targetServer.moneyMax === targetServer.moneyAvailable;\\r\\n    const currentTime = new Date();\\r\\n\\r\\n    if (amountToWeaken === 0 && serverHasMaxMoney && batchForTarget.securityWeNeedToReduceAfterFullHack && batchForTarget.securityWeNeedToReduceAfterFullGrowth && batchForTarget.prepStage && batchForTarget.originalNumberOfThreadsForFullMoney) {\\r\\n        batchForTarget.prepStage = false;\\r\\n        batchForTarget.targetMachineSaturatedWithAttacks = false;\\r\\n    }\\r\\n\\r\\n    if (batchForTarget.prepStage) {\\r\\n        batchForTarget.targetMachineSaturatedWithAttacks = false;\\r\\n\\r\\n        if (batchForTarget.successfulWeakening === false) {\\r\\n            if (currentTime > new Date(batchForTarget.weakeningDoneAfter) || !batchForTarget.weakeningDoneAfter) {\\r\\n                if (amountToWeaken !== 0) {\\r\\n                    let endDate = new Date();\\r\\n                    endDate = getWeakenEndDate(ns, targetServer, player);\\r\\n                    addSecondsToDate(endDate, 10);\\r\\n\\r\\n                    const job = new JobHasTo(new Date(), endDate, \\\"weaken-dynamic\\\");\\r\\n                    const batchOfJobs = new BatchOfJobs();\\r\\n                    batchOfJobs.jobs.push(job);\\r\\n\\r\\n                    batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                    batchForTarget.weakeningDoneAfter = endDate;\\r\\n                } else if (amountToWeaken === 0) {\\r\\n                    batchForTarget.successfulWeakening = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (batchForTarget.successfulWeakening && batchForTarget.successfulGrowing === false) {\\r\\n            if (currentTime > new Date(batchForTarget.growDoneAfter) || !batchForTarget.growDoneAfter) {\\r\\n\\r\\n                if (serverHasMaxMoney === false) {\\r\\n\\r\\n                    if (targetServer.moneyAvailable === 0) {\\r\\n                        const serverDoingHackin = getServerWithMostUnallocatedSpace(ns, serversUsedForBatching, batchQueueForTargetAllTargets);\\r\\n                        const growThreads = getGrowThreads(ns, targetServer, player, serverDoingHackin);\\r\\n                        batchForTarget.securityWeNeedToReduceAfterFullGrowth = ns.growthAnalyzeSecurity(growThreads, nameOfTarget, serverDoingHackin.cpuCores);\\r\\n                    }\\r\\n\\r\\n                    let endDate = getGrowEndDate(ns, targetServer, player);\\r\\n                    addSecondsToDate(endDate, 10);\\r\\n\\r\\n                    const job = new JobHasTo(new Date(), endDate, \\\"grow-dynamic\\\");\\r\\n                    const batchOfJobs = new BatchOfJobs();\\r\\n                    batchOfJobs.jobs.push(job);\\r\\n\\r\\n                    batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                    batchForTarget.growDoneAfter = endDate;\\r\\n                }\\r\\n\\r\\n\\r\\n                if (serverHasMaxMoney) {\\r\\n                    batchForTarget.successfulGrowing = true;\\r\\n                    batchForTarget.successfulWeakening = false;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (batchForTarget.successfulGrowing && batchForTarget.successfulHacking === false) {\\r\\n\\r\\n            if (currentTime > new Date(batchForTarget.hackDoneAfter) || !batchForTarget.hackDoneAfter) {\\r\\n                if (serverHasMaxMoney) {\\r\\n                    if (currentTime > new Date(batchForTarget.hackDoneAfter)) {\\r\\n\\r\\n                        batchForTarget.successfulWeakening = false;\\r\\n                        batchForTarget.successfulGrowing = false;\\r\\n                        batchForTarget.successfulHacking = false;\\r\\n                        batchForTarget.hackDoneAfter = undefined;\\r\\n\\r\\n                    } else {\\r\\n                        const hackThreads = getHackThreadsForTotalStealing(ns, nameOfTarget, targetServer);\\r\\n                        batchForTarget.securityWeNeedToReduceAfterFullHack = ns.hackAnalyzeSecurity(hackThreads, nameOfTarget);\\r\\n                        batchForTarget.originalNumberOfThreadsForFullMoney = hackThreads;\\r\\n\\r\\n                        let endDate = getHackEndDate(ns, targetServer, player);\\r\\n                        addSecondsToDate(endDate, 100);\\r\\n\\r\\n                        const job = new JobHasTo(new Date(), endDate, \\\"hack-dynamic\\\");\\r\\n                        const batchOfJobs = new BatchOfJobs();\\r\\n                        batchOfJobs.jobs.push(job);\\r\\n\\r\\n                        batchForTarget.batchesQueue.push(batchOfJobs);\\r\\n                        batchForTarget.hackDoneAfter = endDate;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (targetServer.moneyAvailable === 0) {\\r\\n                    batchForTarget.successfulGrowing = false;\\r\\n                    batchForTarget.successfulWeakening = false;\\r\\n                    batchForTarget.successfulHacking = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nasync function addServerToHackingPool(serversUsedForBatching, ns) {\\r\\n\\r\\n    const enviroment = JSON.parse(ns.read(\\\"data/enviroment.txt\\\"));\\r\\n\\r\\n    const allPurchasedMachines = enviroment\\r\\n        .filter(x => x.server.purchasedByPlayer && !serversUsedForBatching.includes(x.name))\\r\\n        .sort((b, a) => b.server.maxRam - a.server.maxRam);\\r\\n\\r\\n    if (allPurchasedMachines.length > 0) {\\r\\n        const serverToAdd = allPurchasedMachines.pop();\\r\\n        ns.killall(serverToAdd.name);\\r\\n        ns.tprint(\\\"here\\\");\\r\\n        await ns.sleep(200);\\r\\n        serversUsedForBatching.push(serverToAdd.name);\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getServerWithMostUnallocatedSpace(ns, serversUsedForBatching, batchQueueForTargetAllTargets) {\\r\\n    let server;\\r\\n    let serversUnallocatedSpace;\\r\\n    for (let i = 0; i < serversUsedForBatching.length; i++) {\\r\\n        const serverName = serversUsedForBatching[i];\\r\\n\\r\\n        if (!server) {\\r\\n            serversUnallocatedSpace = getUnallocatedMemoryOnServer(ns, serverName, batchQueueForTargetAllTargets);\\r\\n            server = getServer(ns, serverName);\\r\\n        } else {\\r\\n            const nextServersUnallocatedSpace = getUnallocatedMemoryOnServer(ns, serverName, batchQueueForTargetAllTargets);\\r\\n\\r\\n            if (nextServersUnallocatedSpace > serversUnallocatedSpace) {\\r\\n                serversUnallocatedSpace = serversUnallocatedSpace;\\r\\n                server = getServer(ns, serverName);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction getUnallocatedMemoryOnServer(ns, serverName) {\\r\\n    const server = getServer(ns, serverName);\\r\\n    const serverMaxMemory = server.maxRam;\\r\\n\\r\\n    const freeMemoryOnServer = serverMaxMemory - server.ramUsed;\\r\\n\\r\\n    return freeMemoryOnServer;\\r\\n}\\r\\n\\r\\nfunction giveBatchQueueStructure(targetNames, batchQueue) {\\r\\n    for (const target of targetNames) {\\r\\n        let targetObject = batchQueue.get(target);\\r\\n        targetObject = new BatchQueueForTarget(targetObject);\\r\\n\\r\\n        for (let i = 0; i < targetObject.batchesQueue.length; i++) {\\r\\n            targetObject.batchesQueue[i] = new BatchOfJobs(targetObject.batchesQueue[i]);\\r\\n        }\\r\\n\\r\\n        batchQueue.set(target, targetObject);\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getServer(ns, serverName) {\\r\\n    const server = ns.getServer(serverName);\\r\\n\\r\\n    if (serverName === \\\"home\\\") {\\r\\n        server.maxRam -= 32;\\r\\n        server.ramUsed -= 32;\\r\\n\\r\\n        if (server.ramUsed < 0) {\\r\\n            server.ramUsed = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return server;\\r\\n}\\r\\n\\r\\nfunction cleanFinishedJobsFromQueue(targetNames, batchQueue) {\\r\\n    for (const target of targetNames) {\\r\\n        const batch = batchQueue.get(target);\\r\\n        const currentTime = new Date();\\r\\n\\r\\n        for (let i = batch.batchesQueue.length - 1; i > -1; i--) {\\r\\n            const job = batch.batchesQueue[i];\\r\\n            if (job.wholeBatchFinishsBefore() < currentTime) {\\r\\n                batch.batchesQueue.splice(i, 1);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction addNewTargetsToQueueIfNeeded(batchQueue, targetNames, ns, enviroment) {\\r\\n    if ((batchQueue.size === 0 || targetNames.map(x => batchQueue.get(x)).every(x => x.targetMachineSaturatedWithAttacks)) && batchQueue.size < 4) {\\r\\n        const helpers = new Helpers(ns);\\r\\n        const portsWeCanPop = helpers.numberOfPortsWeCanPop();\\r\\n        const currentHackingLevel = ns.getHackingLevel();\\r\\n\\r\\n        const allHackableMachines = enviroment\\r\\n            .filter(x => x.server.requiredHackingSkill < currentHackingLevel)\\r\\n            .filter(x => x.server.numOpenPortsRequired <= portsWeCanPop || x.server.purchasedByPlayer);\\r\\n\\r\\n        allHackableMachines\\r\\n            .filter(x => !x.server.hasAdminRights)\\r\\n            .map(x => helpers.hackMachine(x.name));\\r\\n\\r\\n        // we can probabably refine this to account for difficulty. \\r\\n        const allMachinesByOrderOfValue = allHackableMachines\\r\\n            .filter(x => !x.server.purchasedByPlayer && x.server.moneyMax !== 0 && !targetNames.includes(x.name))\\r\\n            .sort((a, b) => b.server.moneyMax - a.server.moneyMax);\\r\\n\\r\\n        const mostValuableMachine = allMachinesByOrderOfValue[0];\\r\\n\\r\\n        batchQueue.set(mostValuableMachine.name, new BatchQueueForTarget());\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction getHackThreadsForTotalStealing(ns, theTarget, targetServer) {\\r\\n    return Math.ceil(ns.hackAnalyzeThreads(theTarget, targetServer.moneyAvailable));\\r\\n}\\r\\n\\r\\nfunction getGrowThreads(ns, serverToHack, player, serverDoingHackin) {\\r\\n    return Math.ceil(ns.formulas.hacking.growThreads(serverToHack, player, serverToHack.moneyMax, serverDoingHackin.cpuCores));\\r\\n}\\r\\n\\r\\nfunction createNewDataFromOldDateAndAddSeconds(date, secondsToAdd) {\\r\\n    const newDate = new Date(date);\\r\\n    addSecondsToDate(newDate, secondsToAdd);\\r\\n    return newDate;\\r\\n}\\r\\n\\r\\nfunction createNewDataFromOldDateAndAddMilliseconds(date, secondsToAdd) {\\r\\n    const newDate = new Date(date);\\r\\n    addMillisecondsToDate(newDate, secondsToAdd);\\r\\n    return newDate;\\r\\n}\\r\\n\\r\\n\\r\\nfunction addSecondsToDate(date, secondsToAdd) {\\r\\n    date.setSeconds(date.getSeconds() + secondsToAdd);\\r\\n}\\r\\n\\r\\nfunction addMillisecondsToDate(date, msToAdd) {\\r\\n    date.setMilliseconds(date.getMilliseconds() + msToAdd);\\r\\n}\\r\\n\\r\\nfunction getWeakenEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    const howLongToWeaken = ns.formulas.hacking.weakenTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToWeaken);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getGrowEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    const howLongToGrow = ns.formulas.hacking.growTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToGrow);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getHackEndDate(ns, targetServer, player) {\\r\\n    let endDate = new Date();\\r\\n    const howLongToHack = ns.formulas.hacking.hackTime(targetServer, player);\\r\\n\\r\\n    endDate.setMilliseconds(endDate.getMilliseconds() + howLongToHack);\\r\\n    return endDate;\\r\\n}\\r\\n\\r\\nfunction getNumberOfThreadsToWeaken(ns, serverDoingHackin, amountToWeaken) {\\r\\n    let numberOfThreadsToWeaken = 0;\\r\\n    let foundNumberOfThreads = false;\\r\\n    while (!foundNumberOfThreads) {\\r\\n        numberOfThreadsToWeaken++;\\r\\n\\r\\n        const amountNumberOfThreadsWillWeaken = Math.ceil(ns.weakenAnalyze(numberOfThreadsToWeaken, serverDoingHackin.cpuCores));\\r\\n        if (amountNumberOfThreadsWillWeaken > amountToWeaken) {\\r\\n            foundNumberOfThreads = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //add a small margin\\r\\n    numberOfThreadsToWeaken += 20;\\r\\n    return numberOfThreadsToWeaken;\\r\\n}\\r\\n\",\"filename\":\"scripts/batch-dispatch.js\",\"server\":\"home\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"CLOUD-000\",\"CLOUD-001\",\"CLOUD-002\",\"CLOUD-003\",\"CLOUD-004\",\"CLOUD-005\",\"CLOUD-006\",\"CLOUD-007\",\"CLOUD-008\",\"CLOUD-009\",\"CLOUD-010\",\"CLOUD-011\",\"CLOUD-012\",\"darkweb\",\"CLOUD-013\",\"CLOUD-014\",\"CLOUD-015\",\"CLOUD-016\",\"CLOUD-017\",\"CLOUD-018\",\"CLOUD-019\",\"CLOUD-020\",\"CLOUD-021\",\"CLOUD-022\",\"CLOUD-023\",\"CLOUD-024\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[[\"data/contractData.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/contractData.txt\",\"text\":\"[{\\\"server\\\":\\\"foodnstuff\\\",\\\"name\\\":\\\"contract-327336.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[1,6,2,6,3,5,3,1,1,2,2,2,2,5,5,4,3,2,5,1,1,1,2],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 1,6,2,6,3,5,3,1,1,2,2,2,2,5,5,4,3,2,5,1,1,1,2\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"joesguns\\\",\\\"name\\\":\\\"contract-62935-TheBlackHand.cct\\\",\\\"type\\\":\\\"Algorithmic Stock Trader I\\\",\\\"attemptsLeft\\\":4,\\\"input\\\":[98,122,66,134,198,154,165,156,160,46,19,1,26,108,166,57,160,69,185,172,2,155,47,34,108,25,112,9,125,82,4,28],\\\"description\\\":\\\"You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\\\n\\\\n 98,122,66,134,198,154,165,156,160,46,19,1,26,108,166,57,160,69,185,172,2,155,47,34,108,25,112,9,125,82,4,28\\\\n\\\\n Determine the maximum possible profit you can earn using at most one transaction (i.e. you can only buy and sell the stock once). If no profit can be made then the answer should be 0. Note that you have to buy the stock before you can sell it\\\"},{\\\"server\\\":\\\"hong-fang-tea\\\",\\\"name\\\":\\\"contract-530756.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"()a))))(((()())))\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n ()a))))(((()())))\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"iron-gym\\\",\\\"name\\\":\\\"contract-56343.cct\\\",\\\"type\\\":\\\"Sanitize Parentheses in Expression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"()))aaa(a)aa\\\",\\\"description\\\":\\\"Given the following string:\\\\n\\\\n ()))aaa(a)aa\\\\n\\\\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\\\\n\\\\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\\\\n \\\\\\\"()())()\\\\\\\" -> [\\\\\\\"()()()\\\\\\\", \\\\\\\"(())()\\\\\\\"]\\\\n \\\\\\\"(a)())()\\\\\\\" -> [\\\\\\\"(a)()()\\\\\\\", \\\\\\\"(a())()\\\\\\\"]\\\\n \\\\\\\")(\\\\\\\" -> [\\\\\\\"\\\\\\\"]\\\"},{\\\"server\\\":\\\"darkweb\\\",\\\"name\\\":\\\"contract-259444.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[6,-3,6,10,7,1,-3,-5,8,0,-3,6,2,9,-2,-6,5,3,-10,-2,-7,-2,6,3,2,7,4,-4,-5,-4,7,-9,-6,3],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 6,-3,6,10,7,1,-3,-5,8,0,-3,6,2,9,-2,-6,5,3,-10,-2,-7,-2,6,3,2,7,4,-4,-5,-4,7,-9,-6,3\\\"},{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-757310.cct\\\",\\\"type\\\":\\\"Encryption II: Vigenère Cipher\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"MEDIATRASHPASTEPOPUPFLASH\\\",\\\"WIRELESS\\\"],\\\"description\\\":\\\"Vigenère cipher is a type of polyalphabetic substitution. It uses  the Vigenère square to encrypt and decrypt plaintext with a keyword.\\\\n\\\\n &nbsp;&nbsp;Vigenère square:\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +----------------------------------------------------\\\\n &nbsp;&nbsp;&nbsp;&nbsp; A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp; B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A \\\\n &nbsp;&nbsp;&nbsp;&nbsp; C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\\\n &nbsp;&nbsp;&nbsp;&nbsp; D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\\\n &nbsp;&nbsp;&nbsp;&nbsp; E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\\\n\\\\n For encryption each letter of the plaintext is paired with the corresponding letter of a repeating keyword. For example, the plaintext DASHBOARD is encrypted with the keyword LINUX:\\\\n &nbsp;&nbsp; Plaintext: DASHBOARD\\\\n &nbsp;&nbsp; Keyword:&nbsp;&nbsp;&nbsp;LINUXLINU\\\\n So, the first letter D is paired with the first letter of the key L. Therefore, row D and column L of the  Vigenère square are used to get the first cipher letter O. This must be repeated for the whole ciphertext.\\\\n\\\\n You are given an array with two elements:\\\\n &nbsp;&nbsp;[\\\\\\\"MEDIATRASHPASTEPOPUPFLASH\\\\\\\", \\\\\\\"WIRELESS\\\\\\\"]\\\\n The first element is the plaintext, the second element is the keyword.\\\\n\\\\n Return the ciphertext as uppercase string.\\\"},{\\\"server\\\":\\\"silver-helix\\\",\\\"name\\\":\\\"contract-832289-Sector12.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1781572450\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 1781572450\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"netlink\\\",\\\"name\\\":\\\"contract-988821.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[10,[[0,7],[7,9],[6,7],[3,6],[3,9],[1,5],[2,8],[0,8],[5,9],[5,8],[0,3],[3,8],[2,4],[7,8]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [10,[[0,7],[7,9],[6,7],[3,6],[3,9],[1,5],[2,8],[0,8],[5,9],[5,8],[0,3],[3,8],[2,4],[7,8]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 9. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"rothman-uni\\\",\\\"name\\\":\\\"contract-149708.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0],[0,0],[0,1],[0,0],[1,0],[0,0],[0,1],[0,1],[0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,\\\\n0,0,\\\\n0,1,\\\\n0,0,\\\\n1,0,\\\\n0,0,\\\\n0,1,\\\\n0,1,\\\\n0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"aevum-police\\\",\\\"name\\\":\\\"contract-387304.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[0,0,0,0,7,1,4,0],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 0,0,0,0,7,1,4,0\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"aevum-police\\\",\\\"name\\\":\\\"contract-598168.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[16,20],[17,24],[20,25],[3,6],[20,24],[23,31],[18,28],[22,30],[20,21],[4,10],[12,18]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[16,20],[17,24],[20,25],[3,6],[20,24],[23,31],[18,28],[22,30],[20,21],[4,10],[12,18]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"snap-fitness\\\",\\\"name\\\":\\\"contract-113120-NiteSec.cct\\\",\\\"type\\\":\\\"Encryption II: Vigenère Cipher\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"FRAMEQUEUECACHEFLASHMOUSE\\\",\\\"PROTOCOL\\\"],\\\"description\\\":\\\"Vigenère cipher is a type of polyalphabetic substitution. It uses  the Vigenère square to encrypt and decrypt plaintext with a keyword.\\\\n\\\\n &nbsp;&nbsp;Vigenère square:\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +----------------------------------------------------\\\\n &nbsp;&nbsp;&nbsp;&nbsp; A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp; B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A \\\\n &nbsp;&nbsp;&nbsp;&nbsp; C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\\\n &nbsp;&nbsp;&nbsp;&nbsp; D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\\\n &nbsp;&nbsp;&nbsp;&nbsp; E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\\\n\\\\n For encryption each letter of the plaintext is paired with the corresponding letter of a repeating keyword. For example, the plaintext DASHBOARD is encrypted with the keyword LINUX:\\\\n &nbsp;&nbsp; Plaintext: DASHBOARD\\\\n &nbsp;&nbsp; Keyword:&nbsp;&nbsp;&nbsp;LINUXLINU\\\\n So, the first letter D is paired with the first letter of the key L. Therefore, row D and column L of the  Vigenère square are used to get the first cipher letter O. This must be repeated for the whole ciphertext.\\\\n\\\\n You are given an array with two elements:\\\\n &nbsp;&nbsp;[\\\\\\\"FRAMEQUEUECACHEFLASHMOUSE\\\\\\\", \\\\\\\"PROTOCOL\\\\\\\"]\\\\n The first element is the plaintext, the second element is the keyword.\\\\n\\\\n Return the ciphertext as uppercase string.\\\"},{\\\"server\\\":\\\"icarus\\\",\\\"name\\\":\\\"contract-205033.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":57,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 57 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"infocomm\\\",\\\"name\\\":\\\"contract-177715.cct\\\",\\\"type\\\":\\\"HammingCodes: Encoded Binary to Integer\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1000100000000000000011011100000100101011011101001010011111101001\\\",\\\"description\\\":\\\"You are given the following encoded binary string: \\\\n '1000100000000000000011011100000100101011011101001010011111101001' \\\\n\\\\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\\\\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\\\\n\\\\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\\\\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\\\\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit 😉\\\\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\\\\n Extra note for automation: return the decimal value as a string\\\"},{\\\"server\\\":\\\"infocomm\\\",\\\"name\\\":\\\"contract-326339.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0],[1,0,1],[0,0,1],[0,0,0],[0,1,1],[0,1,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,1,0],[1,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,\\\\n1,0,1,\\\\n0,0,1,\\\\n0,0,0,\\\\n0,1,1,\\\\n0,1,0,\\\\n0,0,0,\\\\n0,0,0,\\\\n0,0,0,\\\\n0,0,0,\\\\n0,1,0,\\\\n1,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"fulcrumtech\\\",\\\"name\\\":\\\"contract-831123.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":10,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 10 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"helios\\\",\\\"name\\\":\\\"contract-963655-Sector12.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,1],[0,0,0,0,0,1,0,1],[0,0,0,1,0,0,0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,0,0,0,\\\\n0,0,0,0,0,1,0,1,\\\\n0,0,0,0,0,1,0,1,\\\\n0,0,0,1,0,0,0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"omnitek\\\",\\\"name\\\":\\\"contract-694271.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[10,19],[13,21],[25,34],[13,18]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[10,19],[13,21],[25,34],[13,18]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\".\\\",\\\"name\\\":\\\"contract-440622.cct\\\",\\\"type\\\":\\\"Minimum Path Sum in a Triangle\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[9],[6,3],[7,9,7],[1,5,2,4],[1,1,2,8,8],[9,7,9,6,7,9],[6,5,7,9,2,4,6],[9,2,5,5,2,1,9,9],[9,1,2,5,2,5,3,7,3]],\\\"description\\\":\\\"Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\\\\n\\\\n [\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6,3],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7,9,7],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,5,2,4],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,1,2,8,8],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,7,9,6,7,9],\\\\n&nbsp;&nbsp;&nbsp;&nbsp;[6,5,7,9,2,4,6],\\\\n&nbsp;&nbsp;&nbsp;[9,2,5,5,2,1,9,9],\\\\n&nbsp;&nbsp;[9,1,2,5,2,5,3,7,3]\\\\n]\\\\n\\\\n Example: If you are given the following triangle:\\\\n\\\\n[\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\\\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\\\n &nbsp;&nbsp;&nbsp;[6,5,7],\\\\n &nbsp;&nbsp;[4,1,8,3]\\\\n ]\\\\n\\\\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\\"},{\\\"server\\\":\\\"The-Cave\\\",\\\"name\\\":\\\"contract-802258.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"ll66VVVVVVVVvwwwwwBBBBBBBBBBBBBBHHHHHHPPPPPPPB66hhRrrrrrrrrrrrrrBBKKmnEgrreG66S11111111111qq\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; ll66VVVVVVVVvwwwwwBBBBBBBBBBBBBBHHHHHHPPPPPPPB66hhRrrrrrrrrrrrrrBBKKmnEgrreG66S11111111111qq\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"ecorp\\\",\\\"name\\\":\\\"contract-835458.cct\\\",\\\"type\\\":\\\"Array Jumping Game II\\\",\\\"attemptsLeft\\\":3,\\\"input\\\":[7,5,0,1,4,1,4,3,3,2,5,2,5,4],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 7,5,0,1,4,1,4,3,3,2,5,2,5,4\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\\\\n\\\\n If it's impossible to reach the end, then the answer should be 0.\\\"},{\\\"server\\\":\\\"fulcrumassets\\\",\\\"name\\\":\\\"contract-426456.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"400893515\\\",-42],\\\"description\\\":\\\"You are given the following string which contains only digits between 0 and 9:\\\\n\\\\n 400893515\\\\n\\\\n You are also given a target number of -42. Return all possible ways you can add the +(add), -(subtract), and *(multiply) operators to the string such that it evaluates to the target number. (Normal order of operations applies.)\\\\n\\\\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\\\\n\\\\n [\\\\\\\"400893515\\\\\\\", -42]\\\\n\\\\n NOTE: The order of evaluation expects script operator precedence NOTE: Numbers in the expression cannot have leading 0's. In other words, \\\\\\\"1+01\\\\\\\" is not a valid expression Examples:\\\\n\\\\n Input: digits = \\\\\\\"123\\\\\\\", target = 6\\\\n Output: [1+2+3, 1*2*3]\\\\n\\\\n Input: digits = \\\\\\\"105\\\\\\\", target = 5\\\\n Output: [1*0+5, 10-5]\\\"},{\\\"server\\\":\\\"nectar-net\\\",\\\"name\\\":\\\"contract-206782.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[7,0,2,8,10,5,0,8,0,6,0,0,0,4,1,3,7,10,1,0],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 7,0,2,8,10,5,0,8,0,6,0,0,0,4,1,3,7,10,1,0\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"nectar-net\\\",\\\"name\\\":\\\"contract-866414-NiteSec.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,1],[0,0,0,0,0,0,0,0,1,0,1],[0,0,0,1,1,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,0,0,0,0,0,0,0,0,0,\\\\n0,0,0,0,0,1,0,0,0,0,1,\\\\n0,0,0,0,0,0,0,0,1,0,1,\\\\n0,0,0,1,1,0,0,1,0,0,0,\\\\n0,0,0,0,0,0,0,0,0,0,1,\\\\n0,0,0,0,0,0,0,0,0,1,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"max-hardware\\\",\\\"name\\\":\\\"contract-229672.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"13412925\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 13412925\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"max-hardware\\\",\\\"name\\\":\\\"contract-70491.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"1228135105\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 1228135105\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"max-hardware\\\",\\\"name\\\":\\\"contract-910894.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"MLLLLLLLLShaRSJB6MJB6MJB6Mo6M3dgIN6gIN60a560a560L3E60iN06dLQQQw\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; MLLLLLLLLShaRSJB6MJB6MJB6Mo6M3dgIN6gIN60a560a560L3E60iN06dLQQQw\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"max-hardware\\\",\\\"name\\\":\\\"contract-952022.cct\\\",\\\"type\\\":\\\"Compression I: RLE Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"00000000000000zvlggZZ6666666KBooooooooo222222222222233UUUUUUUUUYYRRRRRRRR\\\",\\\"description\\\":\\\"Run-length encoding (RLE) is a data compression technique which encodes data as a series of runs of a repeated single character. Runs are encoded as a length, followed by the character itself. Lengths are encoded as a single ASCII digit; runs of 10 characters or more are encoded by splitting them into multiple runs.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 00000000000000zvlggZZ6666666KBooooooooo222222222222233UUUUUUUUUYYRRRRRRRR\\\\n Encode it using run-length encoding with the minimum possible output length.\\\\n\\\\n Examples:\\\\n &nbsp; &nbsp; aaaaabccc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;5a1b3c\\\\n &nbsp; &nbsp; aAaAaA &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -> &nbsp;1a1A1a1A1a1A\\\\n &nbsp; &nbsp; 111112333 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-> &nbsp;511233\\\\n &nbsp; &nbsp; zzzzzzzzzzzzzzzzzzz &nbsp;-> &nbsp;9z9z1z &nbsp;(or 9z8z2z, etc.)\\\\n\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-44298.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid II\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[[0,0],[0,0],[0,0],[0,0]],\\\"description\\\":\\\"You are located in the top-left corner of the following grid:\\\\n\\\\n 0,0,\\\\n0,0,\\\\n0,0,\\\\n0,0,\\\\n\\\\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\\\\n\\\\n Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\\\"},{\\\"server\\\":\\\"phantasy\\\",\\\"name\\\":\\\"contract-709063-NiteSec.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":24,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 24 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"avmnite-02h\\\",\\\"name\\\":\\\"contract-821960.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":51,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 51 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"syscore\\\",\\\"name\\\":\\\"contract-196640.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"2212413080\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 2212413080\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"syscore\\\",\\\"name\\\":\\\"contract-781551.cct\\\",\\\"type\\\":\\\"Encryption I: Caesar Cipher\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"CACHE FRAME PRINT LOGIC SHELL\\\",20],\\\"description\\\":\\\"Caesar cipher is one of the simplest encryption technique. It is a type of substitution cipher in which each letter in the plaintext  is replaced by a letter some fixed number of positions down the alphabet. For example, with a left shift of 3, D would be replaced by A,  E would become B, and A would become X (because of rotation).\\\\n\\\\n You are given an array with two elements:\\\\n &nbsp;&nbsp;[\\\\\\\"CACHE FRAME PRINT LOGIC SHELL\\\\\\\", 20]\\\\n The first element is the plaintext, the second element is the left shift value.\\\\n\\\\n Return the ciphertext as uppercase string. Spaces remains the same.\\\"},{\\\"server\\\":\\\"lexo-corp\\\",\\\"name\\\":\\\"contract-422103.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"5L5wWL5wqRR48HRR48WHRR48WA1WNCirg3AQ3AQ3AQ3AhjAhjAd45jAd45jAdb3wIAdb3wV4BEuyHIrkoRCOCOOOO\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; 5L5wWL5wqRR48HRR48WHRR48WA1WNCirg3AQ3AQ3AQ3AhjAhjAd45jAd45jAdb3wIAdb3wV4BEuyHIrkoRCOCOOOO\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"lexo-corp\\\",\\\"name\\\":\\\"contract-456358.cct\\\",\\\"type\\\":\\\"Compression III: LZ Compression\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"jW61nzzzzzz61zzzz661zzzz661vxErZ1vxErZ1vxTlgeE1vxTeE1voooob3oWWoob3oWWooob3oWWoo3oWWoo3oo3oo3\\\",\\\"description\\\":\\\"Lempel-Ziv (LZ) compression is a data compression technique which encodes data using references to earlier parts of the data. In this variant of LZ, data is encoded in two types of chunk. Each chunk begins with a length L, encoded as a single ASCII digit from 1 to 9, followed by the chunk data, which is either:\\\\n\\\\n 1. Exactly L characters, which are to be copied directly into the uncompressed data.\\\\n 2. A reference to an earlier part of the uncompressed data. To do this, the length is followed by a second ASCII digit X: each of the L output characters is a copy of the character X places before it in the uncompressed data.\\\\n\\\\n For both chunk types, a length of 0 instead means the chunk ends immediately, and the next character is the start of a new chunk. The two chunk types alternate, starting with type 1, and the final chunk may be of either type.\\\\n\\\\n You are given the following input string:\\\\n &nbsp; &nbsp; jW61nzzzzzz61zzzz661zzzz661vxErZ1vxErZ1vxTlgeE1vxTeE1voooob3oWWoob3oWWooob3oWWoo3oWWoo3oo3oo3\\\\n Encode it using Lempel-Ziv encoding with the minimum possible output length.\\\\n\\\\n Examples (some have other possible encodings of minimal length):\\\\n &nbsp; &nbsp; abracadabra &nbsp; &nbsp; -> &nbsp;7abracad47\\\\n &nbsp; &nbsp; mississippi &nbsp; &nbsp; -> &nbsp;4miss433ppi\\\\n &nbsp; &nbsp; aAAaAAaAaAA &nbsp; &nbsp; -> &nbsp;3aAA53035\\\\n &nbsp; &nbsp; 2718281828 &nbsp; &nbsp; &nbsp;-> &nbsp;627182844\\\\n &nbsp; &nbsp; abcdefghijk &nbsp; &nbsp; -> &nbsp;9abcdefghi02jk\\\\n &nbsp; &nbsp; aaaaaaaaaaaa &nbsp; &nbsp;-> &nbsp;3aaa91\\\\n &nbsp; &nbsp; aaaaaaaaaaaaa &nbsp; -> &nbsp;1a91031\\\\n &nbsp; &nbsp; aaaaaaaaaaaaaa &nbsp;-> &nbsp;1a91041\\\"},{\\\"server\\\":\\\"aerocorp\\\",\\\"name\\\":\\\"contract-717114.cct\\\",\\\"type\\\":\\\"Unique Paths in a Grid I\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[13,14],\\\"description\\\":\\\"You are in a grid with 13 rows and 14 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\\\n\\\\n NOTE: The data returned for this contract is an array with the number of rows and columns:\\\\n\\\\n [13, 14]\\\"},{\\\"server\\\":\\\"aerocorp\\\",\\\"name\\\":\\\"contract-791231.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"97826\\\",24],\\\"description\\\":\\\"You are given the following string which contains only digits between 0 and 9:\\\\n\\\\n 97826\\\\n\\\\n You are also given a target number of 24. Return all possible ways you can add the +(add), -(subtract), and *(multiply) operators to the string such that it evaluates to the target number. (Normal order of operations applies.)\\\\n\\\\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\\\\n\\\\n [\\\\\\\"97826\\\\\\\", 24]\\\\n\\\\n NOTE: The order of evaluation expects script operator precedence NOTE: Numbers in the expression cannot have leading 0's. In other words, \\\\\\\"1+01\\\\\\\" is not a valid expression Examples:\\\\n\\\\n Input: digits = \\\\\\\"123\\\\\\\", target = 6\\\\n Output: [1+2+3, 1*2*3]\\\\n\\\\n Input: digits = \\\\\\\"105\\\\\\\", target = 5\\\\n Output: [1*0+5, 10-5]\\\"},{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-577625.cct\\\",\\\"type\\\":\\\"Total Ways to Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":35,\\\"description\\\":\\\"It is possible write four as a sum in exactly four different ways:\\\\n\\\\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\\\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\\\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\\\n\\\\n How many different distinct ways can the number 35 be written as a sum of at least two positive integers?\\\"},{\\\"server\\\":\\\"unitalife\\\",\\\"name\\\":\\\"contract-748928.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[19,21],[8,10],[19,21],[10,16],[20,30],[4,11],[17,20],[5,15],[3,11],[4,11],[23,33],[23,33],[3,7],[6,9],[3,5],[19,24]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[19,21],[8,10],[19,21],[10,16],[20,30],[4,11],[17,20],[5,15],[3,11],[4,11],[23,33],[23,33],[3,7],[6,9],[3,5],[19,24]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"defcomm\\\",\\\"name\\\":\\\"contract-675448.cct\\\",\\\"type\\\":\\\"Encryption II: Vigenère Cipher\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"ENTERARRAYSHIFTMODEMCACHE\\\",\\\"SPYWARE\\\"],\\\"description\\\":\\\"Vigenère cipher is a type of polyalphabetic substitution. It uses  the Vigenère square to encrypt and decrypt plaintext with a keyword.\\\\n\\\\n &nbsp;&nbsp;Vigenère square:\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +----------------------------------------------------\\\\n &nbsp;&nbsp;&nbsp;&nbsp; A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp; B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A \\\\n &nbsp;&nbsp;&nbsp;&nbsp; C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\\\n &nbsp;&nbsp;&nbsp;&nbsp; D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\\\n &nbsp;&nbsp;&nbsp;&nbsp; E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\\\n\\\\n For encryption each letter of the plaintext is paired with the corresponding letter of a repeating keyword. For example, the plaintext DASHBOARD is encrypted with the keyword LINUX:\\\\n &nbsp;&nbsp; Plaintext: DASHBOARD\\\\n &nbsp;&nbsp; Keyword:&nbsp;&nbsp;&nbsp;LINUXLINU\\\\n So, the first letter D is paired with the first letter of the key L. Therefore, row D and column L of the  Vigenère square are used to get the first cipher letter O. This must be repeated for the whole ciphertext.\\\\n\\\\n You are given an array with two elements:\\\\n &nbsp;&nbsp;[\\\\\\\"ENTERARRAYSHIFTMODEMCACHE\\\\\\\", \\\\\\\"SPYWARE\\\\\\\"]\\\\n The first element is the plaintext, the second element is the keyword.\\\\n\\\\n Return the ciphertext as uppercase string.\\\"},{\\\"server\\\":\\\"univ-energy\\\",\\\"name\\\":\\\"contract-710487.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[3,13],[17,25],[4,8],[2,5],[20,28],[1,5],[5,7],[14,23],[18,28]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[3,13],[17,25],[4,8],[2,5],[20,28],[1,5],[5,7],[14,23],[18,28]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"solaris\\\",\\\"name\\\":\\\"contract-24056.cct\\\",\\\"type\\\":\\\"Array Jumping Game\\\",\\\"attemptsLeft\\\":1,\\\"input\\\":[2,0,3,2,0,2,0,6,10,0,3,7,10,4,2,8,1],\\\"description\\\":\\\"You are given the following array of integers:\\\\n\\\\n 2,0,3,2,0,2,0,6,10,0,3,7,10,4,2,8,1\\\\n\\\\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \\\\n\\\\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\\\\n\\\\n Your answer should be submitted as 1 or 0, representing true and false respectively\\\"},{\\\"server\\\":\\\"solaris\\\",\\\"name\\\":\\\"contract-673761.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[11,[[1,10],[5,6],[2,4],[3,8],[2,9],[0,10],[0,7],[1,2],[9,10],[2,5],[3,10],[4,6],[2,8],[4,7],[7,9],[1,7],[4,10],[1,6]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [11,[[1,10],[5,6],[2,4],[3,8],[2,9],[0,10],[0,7],[1,2],[9,10],[2,5],[3,10],[4,6],[2,8],[4,7],[7,9],[1,7],[4,10],[1,6]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 10. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"solaris\\\",\\\"name\\\":\\\"contract-92756.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[-9,7,-6,7,5,4,-1,-8,-8,3,8,-8,9,5,7,-8,1,4,-8,-5],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n -9,7,-6,7,5,4,-1,-8,-8,3,8,-8,9,5,7,-8,1,4,-8,-5\\\"},{\\\"server\\\":\\\"titan-labs\\\",\\\"name\\\":\\\"contract-168192.cct\\\",\\\"type\\\":\\\"Merge Overlapping Intervals\\\",\\\"attemptsLeft\\\":15,\\\"input\\\":[[11,12],[15,25],[24,27],[12,14],[5,9],[3,11],[10,15],[16,20],[22,25],[17,18],[20,28],[24,26],[6,10],[6,10],[18,19],[6,16],[9,16]],\\\"description\\\":\\\"Given the following array of arrays of numbers representing a list of intervals, merge all overlapping intervals.\\\\n\\\\n [[11,12],[15,25],[24,27],[12,14],[5,9],[3,11],[10,15],[16,20],[22,25],[17,18],[20,28],[24,26],[6,10],[6,10],[18,19],[6,16],[9,16]]\\\\n\\\\n Example:\\\\n\\\\n [[1, 3], [8, 10], [2, 6], [10, 16]]\\\\n\\\\n would merge into [[1, 6], [8, 16]].\\\\n\\\\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second.\\\"},{\\\"server\\\":\\\"run4theh111z\\\",\\\"name\\\":\\\"contract-8920.cct\\\",\\\"type\\\":\\\"Proper 2-Coloring of a Graph\\\",\\\"attemptsLeft\\\":5,\\\"input\\\":[14,[[0,11],[5,7],[1,12],[3,4],[2,4],[4,5],[1,8],[0,8],[4,8],[11,12],[3,10],[9,10],[5,13],[0,9],[3,13],[8,13],[1,2],[7,8],[6,13],[1,3],[0,3],[9,13],[6,7]]],\\\"description\\\":\\\"You are given the following data, representing a graph:\\\\n [14,[[0,11],[5,7],[1,12],[3,4],[2,4],[4,5],[1,8],[0,8],[4,8],[11,12],[3,10],[9,10],[5,13],[0,9],[3,13],[8,13],[1,2],[7,8],[6,13],[1,3],[0,3],[9,13],[6,7]]]\\\\n Note that \\\\\\\"graph\\\\\\\", as used here, refers to the field of graph theory, and has no relation to statistics or plotting. The first element of the data represents the number of vertices in the graph. Each vertex is a unique number between 0 and 13. The next element of the data represents the edges of the graph. Two vertices u,v in a graph are said to be adjacent if there exists an edge [u,v]. Note that an edge [u,v] is the same as an edge [v,u], as order does not matter. You must construct a 2-coloring of the graph, meaning that you have to assign each vertex in the graph a \\\\\\\"color\\\\\\\", either 0 or 1, such that no two adjacent vertices have the same color. Submit your answer in the form of an array, where element i represents the color of vertex i. If it is impossible to construct a 2-coloring of the given graph, instead submit an empty array.\\\\n\\\\n Examples:\\\\n\\\\n Input: [4, [[0, 2], [0, 3], [1, 2], [1, 3]]]\\\\n Output: [0, 0, 1, 1]\\\\n\\\\n Input: [3, [[0, 1], [0, 2], [1, 2]]]\\\\n Output: []\\\"},{\\\"server\\\":\\\"4sigma\\\",\\\"name\\\":\\\"contract-666129-Sector12.cct\\\",\\\"type\\\":\\\"Subarray with Maximum Sum\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[3,-5,-8,-5,-1,2,4,7,8,-1,10,3,-2,-2,9,7,-10,4,-7,-8,1,-8,-10,7,-9],\\\"description\\\":\\\"Given the following integer array, find the contiguous subarray (containing at least one number) which has the largest sum and return that sum. 'Sum' refers to the sum of all the numbers in the subarray.\\\\n 3,-5,-8,-5,-1,2,4,7,8,-1,10,3,-2,-2,9,7,-10,4,-7,-8,1,-8,-10,7,-9\\\"},{\\\"server\\\":\\\"powerhouse-fitness\\\",\\\"name\\\":\\\"contract-354374.cct\\\",\\\"type\\\":\\\"Generate IP Addresses\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":\\\"8911485184\\\",\\\"description\\\":\\\"Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\\\\n\\\\n 8911485184\\\\n\\\\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\\\n\\\\n Examples:\\\\n\\\\n 25525511135 -> [\\\\\\\"255.255.11.135\\\\\\\", \\\\\\\"255.255.111.35\\\\\\\"]\\\\n 1938718066 -> [\\\\\\\"193.87.180.66\\\\\\\"]\\\"},{\\\"server\\\":\\\"megacorp\\\",\\\"name\\\":\\\"contract-361575-NiteSec.cct\\\",\\\"type\\\":\\\"Find All Valid Math Expressions\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"389882\\\",-25],\\\"description\\\":\\\"You are given the following string which contains only digits between 0 and 9:\\\\n\\\\n 389882\\\\n\\\\n You are also given a target number of -25. Return all possible ways you can add the +(add), -(subtract), and *(multiply) operators to the string such that it evaluates to the target number. (Normal order of operations applies.)\\\\n\\\\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\\\\n\\\\n [\\\\\\\"389882\\\\\\\", -25]\\\\n\\\\n NOTE: The order of evaluation expects script operator precedence NOTE: Numbers in the expression cannot have leading 0's. In other words, \\\\\\\"1+01\\\\\\\" is not a valid expression Examples:\\\\n\\\\n Input: digits = \\\\\\\"123\\\\\\\", target = 6\\\\n Output: [1+2+3, 1*2*3]\\\\n\\\\n Input: digits = \\\\\\\"105\\\\\\\", target = 5\\\\n Output: [1*0+5, 10-5]\\\"},{\\\"server\\\":\\\"nova-med\\\",\\\"name\\\":\\\"contract-844803.cct\\\",\\\"type\\\":\\\"Encryption II: Vigenère Cipher\\\",\\\"attemptsLeft\\\":10,\\\"input\\\":[\\\"TABLELINUXPRINTMODEMCLOUD\\\",\\\"VERSION\\\"],\\\"description\\\":\\\"Vigenère cipher is a type of polyalphabetic substitution. It uses  the Vigenère square to encrypt and decrypt plaintext with a keyword.\\\\n\\\\n &nbsp;&nbsp;Vigenère square:\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +----------------------------------------------------\\\\n &nbsp;&nbsp;&nbsp;&nbsp; A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \\\\n &nbsp;&nbsp;&nbsp;&nbsp; B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A \\\\n &nbsp;&nbsp;&nbsp;&nbsp; C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\\\n &nbsp;&nbsp;&nbsp;&nbsp; D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\\\n &nbsp;&nbsp;&nbsp;&nbsp; E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\\\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\\\n &nbsp;&nbsp;&nbsp;&nbsp; Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\\\n\\\\n For encryption each letter of the plaintext is paired with the corresponding letter of a repeating keyword. For example, the plaintext DASHBOARD is encrypted with the keyword LINUX:\\\\n &nbsp;&nbsp; Plaintext: DASHBOARD\\\\n &nbsp;&nbsp; Keyword:&nbsp;&nbsp;&nbsp;LINUXLINU\\\\n So, the first letter D is paired with the first letter of the key L. Therefore, row D and column L of the  Vigenère square are used to get the first cipher letter O. This must be repeated for the whole ciphertext.\\\\n\\\\n You are given an array with two elements:\\\\n &nbsp;&nbsp;[\\\\\\\"TABLELINUXPRINTMODEMCLOUD\\\\\\\", \\\\\\\"VERSION\\\\\\\"]\\\\n The first element is the plaintext, the second element is the keyword.\\\\n\\\\n Return the ciphertext as uppercase string.\\\"}]\"}}],[\"data/stockHistory.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/stockHistory.txt\",\"text\":\"[[\\\"ECP\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.71490093799326,\\\"bias\\\":0.21490093799326004,\\\"bid\\\":13346.857775724666,\\\"ask\\\":13427.179888717992,\\\"price\\\":13387.018832221329,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7156739228798115,\\\"bias\\\":0.21567392287981146,\\\"bid\\\":13394.865566848917,\\\"ask\\\":13475.476593329451,\\\"price\\\":13435.171080089185,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7151174720125065,\\\"bias\\\":0.21511747201250653,\\\"bid\\\":13429.425074380388,\\\"ask\\\":13510.244081849076,\\\"price\\\":13469.834578114733,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7156169403096203,\\\"bias\\\":0.2156169403096203,\\\"bid\\\":13460.606047317482,\\\"ask\\\":13541.612703570143,\\\"price\\\":13501.109375443813,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7153966599855832,\\\"bias\\\":0.21539665998558322,\\\"bid\\\":13474.35778063482,\\\"ask\\\":13555.447195563414,\\\"price\\\":13514.902488099118,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.715859465470906,\\\"bias\\\":0.21585946547090595,\\\"bid\\\":13503.30904985365,\\\"ask\\\":13584.572695088475,\\\"price\\\":13543.940872471063,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7156341733134947,\\\"bias\\\":0.21563417331349466,\\\"bid\\\":13489.230363039165,\\\"ask\\\":13570.409281974204,\\\"price\\\":13529.819822506684,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7163225732930876,\\\"bias\\\":0.21632257329308757,\\\"bid\\\":13532.293972874046,\\\"ask\\\":13613.732050945504,\\\"price\\\":13573.013011909776,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7164278085642697,\\\"bias\\\":0.21642780856426969,\\\"bid\\\":13538.87707977904,\\\"ask\\\":13620.354775344409,\\\"price\\\":13579.615927561725,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7163503870774516,\\\"bias\\\":0.21635038707745158,\\\"bid\\\":13534.035626327232,\\\"ask\\\":13615.484185763504,\\\"price\\\":13574.759906045369,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7170553113454846,\\\"bias\\\":0.21705531134548461,\\\"bid\\\":13578.132936650081,\\\"ask\\\":13659.846876088295,\\\"price\\\":13618.989906369188,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7178876222522754,\\\"bias\\\":0.21788762225227543,\\\"bid\\\":13630.199057801303,\\\"ask\\\":13712.226333976634,\\\"price\\\":13671.21269588897,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7184546304177749,\\\"bias\\\":0.2184546304177749,\\\"bid\\\":13594.821303855888,\\\"ask\\\":13676.635674791829,\\\"price\\\":13635.72848932386,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.718694829954049,\\\"bias\\\":0.21869482995404899,\\\"bid\\\":13609.769349437109,\\\"ask\\\":13691.673678520981,\\\"price\\\":13650.721513979046,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7180903006167945,\\\"bias\\\":0.21809030061679446,\\\"bid\\\":13647.390288380799,\\\"ask\\\":13729.521022312878,\\\"price\\\":13688.45565534684,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7184472039285755,\\\"bias\\\":0.21844720392857553,\\\"bid\\\":13625.092915361167,\\\"ask\\\":13707.089462494732,\\\"price\\\":13666.09118892795,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.7179466649362944,\\\"bias\\\":0.21794666493629444,\\\"bid\\\":13656.312771486311,\\\"ask\\\":13738.497201404984,\\\"price\\\":13697.404986445648,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.6824670094796168,\\\"bias\\\":0.21018622513146024,\\\"bid\\\":12366.965179938135,\\\"ask\\\":12441.390246216593,\\\"price\\\":12404.177713077368,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"ECP\\\",\\\"forecast\\\":0.713844119109077,\\\"bias\\\":0.21750796026224606,\\\"bid\\\":12879.598464350765,\\\"ask\\\":12957.108585500322,\\\"price\\\":12918.353524925536,\\\"maxShares\\\":18100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.004,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"MGCP\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.30986552041257803,\\\"bias\\\":0.19013447958742197,\\\"bid\\\":172625.39125665496,\\\"ask\\\":173664.26021105808,\\\"price\\\":173144.82573385653,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3091132287355086,\\\"bias\\\":0.19088677126449138,\\\"bid\\\":171945.06833939377,\\\"ask\\\":172979.84307363283,\\\"price\\\":172462.4557065133,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3085714802533103,\\\"bias\\\":0.19142851974668967,\\\"bid\\\":171458.45861207828,\\\"ask\\\":172490.30490262236,\\\"price\\\":171974.38175735032,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3090603932340675,\\\"bias\\\":0.19093960676593252,\\\"bid\\\":171021.6652218962,\\\"ask\\\":172050.88286616033,\\\"price\\\":171536.27404402828,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3088458170406178,\\\"bias\\\":0.1911541829593822,\\\"bid\\\":170829.68837183405,\\\"ask\\\":171857.7506890166,\\\"price\\\":171343.71953042533,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.30839402765417095,\\\"bias\\\":0.19160597234582905,\\\"bid\\\":170426.88756582825,\\\"ask\\\":171452.52580594353,\\\"price\\\":170939.7066858859,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.30861400436479314,\\\"bias\\\":0.19138599563520686,\\\"bid\\\":170622.5492441638,\\\"ask\\\":171649.36498685685,\\\"price\\\":171135.95711551033,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3079419164261717,\\\"bias\\\":0.1920580835738283,\\\"bid\\\":170025.47280108996,\\\"ask\\\":171048.69530540943,\\\"price\\\":170537.0840532497,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.30804469078124674,\\\"bias\\\":0.19195530921875326,\\\"bid\\\":169934.53722502213,\\\"ask\\\":170957.21247411953,\\\"price\\\":170445.87484957083,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.30796915699427624,\\\"bias\\\":0.19203084300572376,\\\"bid\\\":169867.6948421383,\\\"ask\\\":170889.96783015516,\\\"price\\\":170378.83133614674,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3086574105426133,\\\"bias\\\":0.1913425894573867,\\\"bid\\\":170476.51393543085,\\\"ask\\\":171502.4508297263,\\\"price\\\":170989.48238257857,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.30946449595999825,\\\"bias\\\":0.19053550404000175,\\\"bid\\\":169760.46219871272,\\\"ask\\\":170782.08985487345,\\\"price\\\":170271.2760267931,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.30891908312726984,\\\"bias\\\":0.19108091687273016,\\\"bid\\\":169275.9055193309,\\\"ask\\\":170294.61708715034,\\\"price\\\":169785.26130324064,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.30868797197027836,\\\"bias\\\":0.19131202802972164,\\\"bid\\\":169071.4147155991,\\\"ask\\\":170088.89564668594,\\\"price\\\":169580.15518114253,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3081062521971511,\\\"bias\\\":0.1918937478028489,\\\"bid\\\":168558.88011696425,\\\"ask\\\":169573.27658707637,\\\"price\\\":169066.07835202033,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.3084516883091558,\\\"bias\\\":0.1915483116908442,\\\"bid\\\":168862.31013934984,\\\"ask\\\":169878.5326677712,\\\"price\\\":169370.42140356053,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.30796889367090524,\\\"bias\\\":0.19203110632909476,\\\"bid\\\":168437.765285673,\\\"ask\\\":169451.43288017053,\\\"price\\\":168944.59908292178,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.6184439889511322,\\\"bias\\\":0.19511447493326495,\\\"bid\\\":182888.96499944333,\\\"ask\\\":183989.6006965312,\\\"price\\\":183439.28284798726,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"MGCP\\\",\\\"forecast\\\":0.31160392327577585,\\\"bias\\\":0.19227442655852378,\\\"bid\\\":178494.03618220094,\\\"ask\\\":179568.2229596263,\\\"price\\\":179031.12957091365,\\\"maxShares\\\":18300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0044,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"BLD\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.3907672356230978,\\\"bias\\\":0.10923276437690221,\\\"bid\\\":62585.87177694249,\\\"ask\\\":63214.875513394174,\\\"price\\\":62900.373645168336,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39145481630256834,\\\"bias\\\":0.10854518369743166,\\\"bid\\\":62194.38068200846,\\\"ask\\\":62819.449834591454,\\\"price\\\":62506.91525829996,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39194490850475255,\\\"bias\\\":0.10805509149524745,\\\"bid\\\":62475.194440423504,\\\"ask\\\":63103.08584183479,\\\"price\\\":62789.14014112915,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.3915058569434464,\\\"bias\\\":0.10849414305655358,\\\"bid\\\":62222.371284359935,\\\"ask\\\":62847.72174952938,\\\"price\\\":62535.04651694466,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.3916998281067049,\\\"bias\\\":0.1083001718932951,\\\"bid\\\":62111.32560263691,\\\"ask\\\":62735.56003080412,\\\"price\\\":62423.44281672052,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39210704588264306,\\\"bias\\\":0.10789295411735694,\\\"bid\\\":61878.656637358356,\\\"ask\\\":62500.55268396497,\\\"price\\\":62189.604660661666,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39190998242002534,\\\"bias\\\":0.10809001757997466,\\\"bid\\\":61765.843052791504,\\\"ask\\\":62386.60529452809,\\\"price\\\":62076.2241736598,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39130610763377277,\\\"bias\\\":0.10869389236622723,\\\"bid\\\":62110.91502249135,\\\"ask\\\":62735.14532422492,\\\"price\\\":62423.03017335814,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.3912135733486839,\\\"bias\\\":0.1087864266513161,\\\"bid\\\":62058.08316382353,\\\"ask\\\":62681.78249210316,\\\"price\\\":62369.93282796335,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39114547113867915,\\\"bias\\\":0.10885452886132085,\\\"bid\\\":62019.258021164555,\\\"ask\\\":62642.5671470054,\\\"price\\\":62330.91258408498,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39052478887319597,\\\"bias\\\":0.10947521112680403,\\\"bid\\\":62372.888264892914,\\\"ask\\\":62999.751463535045,\\\"price\\\":62686.31986421398,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.38979015828323854,\\\"bias\\\":0.11020984171676146,\\\"bid\\\":62791.439928157684,\\\"ask\\\":63422.50967617937,\\\"price\\\":63106.97480216853,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39029205595493854,\\\"bias\\\":0.10970794404506146,\\\"bid\\\":62506.78287483424,\\\"ask\\\":63134.991747948145,\\\"price\\\":62820.8873113912,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.3900809565373574,\\\"bias\\\":0.10991904346264258,\\\"bid\\\":62386.73865825378,\\\"ask\\\":63013.74105682919,\\\"price\\\":62700.239857541485,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39061268493437823,\\\"bias\\\":0.10938731506562177,\\\"bid\\\":62086.39851591183,\\\"ask\\\":62710.38242059436,\\\"price\\\":62398.3904682531,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.3909259552452579,\\\"bias\\\":0.10907404475474208,\\\"bid\\\":61909.09932194921,\\\"ask\\\":62531.30132518487,\\\"price\\\":62220.20032356704,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.3913633271596677,\\\"bias\\\":0.1086366728403323,\\\"bid\\\":62157.3462935428,\\\"ask\\\":62782.0432412166,\\\"price\\\":62469.694767379704,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.4099365216727852,\\\"bias\\\":0.10488511557929303,\\\"bid\\\":71825.96396738559,\\\"ask\\\":72547.83295198242,\\\"price\\\":72186.89845968399,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"BLD\\\",\\\"forecast\\\":0.39424575706256143,\\\"bias\\\":0.108737270535326,\\\"bid\\\":66752.19993674404,\\\"ask\\\":67423.07631801788,\\\"price\\\":67087.63812738094,\\\"maxShares\\\":13200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"CLRK\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6120237970680427,\\\"bias\\\":0.11202379706804266,\\\"bid\\\":51100.92258238481,\\\"ask\\\":51305.73589934828,\\\"price\\\":51203.329240866544,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6126987256063627,\\\"bias\\\":0.11269872560636274,\\\"bid\\\":50794.890097990974,\\\"ask\\\":50998.47683185066,\\\"price\\\":50896.68346492082,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6131857637801973,\\\"bias\\\":0.11318576378019729,\\\"bid\\\":51014.405007146735,\\\"ask\\\":51218.871560281594,\\\"price\\\":51116.638283714165,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6127455751113058,\\\"bias\\\":0.11274557511130578,\\\"bid\\\":51212.80418990962,\\\"ask\\\":51418.06593014974,\\\"price\\\":51315.43506002968,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6125526418323273,\\\"bias\\\":0.11255264183232727,\\\"bid\\\":51125.31716374929,\\\"ask\\\":51330.22825458596,\\\"price\\\":51227.77270916763,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6121475718718551,\\\"bias\\\":0.11214757187185509,\\\"bid\\\":51309.31400172218,\\\"ask\\\":51514.9625548353,\\\"price\\\":51412.13827827874,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6123436276575189,\\\"bias\\\":0.11234362765751893,\\\"bid\\\":51399.01267018711,\\\"ask\\\":51605.02073700149,\\\"price\\\":51502.0167035943,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6117428877056256,\\\"bias\\\":0.11174288770562557,\\\"bid\\\":51673.860839528665,\\\"ask\\\":51880.97050221214,\\\"price\\\":51777.4156708704,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6118339406901872,\\\"bias\\\":0.11183394069018715,\\\"bid\\\":51715.966957867524,\\\"ask\\\":51923.24538254835,\\\"price\\\":51819.60617020794,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6117669311118545,\\\"bias\\\":0.11176693111185454,\\\"bid\\\":51746.95455534927,\\\"ask\\\":51954.35717881761,\\\"price\\\":51850.65586708344,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6123769073582919,\\\"bias\\\":0.11237690735829187,\\\"bid\\\":52029.36736556274,\\\"ask\\\":52237.90190410207,\\\"price\\\":52133.63463483241,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6130986910341621,\\\"bias\\\":0.11309869103416215,\\\"bid\\\":52363.54588064311,\\\"ask\\\":52573.41981202846,\\\"price\\\":52468.482846335784,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6126057112122392,\\\"bias\\\":0.11260571121223917,\\\"bid\\\":52591.79053394064,\\\"ask\\\":52802.57927355563,\\\"price\\\":52697.18490374814,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6123983220107906,\\\"bias\\\":0.11239832201079059,\\\"bid\\\":52495.108770904335,\\\"ask\\\":52705.51000846307,\\\"price\\\":52600.3093896837,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.612918741442925,\\\"bias\\\":0.11291874144292502,\\\"bid\\\":52738.16822417422,\\\"ask\\\":52949.543647918406,\\\"price\\\":52843.85593604631,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6126092169169794,\\\"bias\\\":0.11260921691697945,\\\"bid\\\":52882.730201311344,\\\"ask\\\":53094.68503177752,\\\"price\\\":52988.70761654443,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6121770214828867,\\\"bias\\\":0.11217702148288666,\\\"bid\\\":52680.5416930469,\\\"ask\\\":52891.68614873045,\\\"price\\\":52786.113920888674,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.5887504857054938,\\\"bias\\\":0.10466250250010445,\\\"bid\\\":47300.134956529255,\\\"ask\\\":47489.71465575376,\\\"price\\\":47394.92480614152,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"CLRK\\\",\\\"forecast\\\":0.6066061734428447,\\\"bias\\\":0.11127998054627786,\\\"bid\\\":49291.95372572552,\\\"ask\\\":49489.516666510004,\\\"price\\\":49390.73519611777,\\\"maxShares\\\":14200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0067,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"OMTK\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.62040640990285,\\\"bias\\\":0.12040640990285001,\\\"bid\\\":106392.55275787246,\\\"ask\\\":106818.97581501825,\\\"price\\\":106605.76428644535,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6196484951727242,\\\"bias\\\":0.11964849517272425,\\\"bid\\\":107062.25533413842,\\\"ask\\\":107491.36256994658,\\\"price\\\":107276.8089520425,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.61910827042493,\\\"bias\\\":0.11910827042493,\\\"bid\\\":107545.6519686107,\\\"ask\\\":107976.69666587969,\\\"price\\\":107761.1743172452,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6195922334790619,\\\"bias\\\":0.1195922334790619,\\\"bid\\\":107982.6335652676,\\\"ask\\\":108415.4296917817,\\\"price\\\":108199.03162852465,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6193784206040892,\\\"bias\\\":0.11937842060408921,\\\"bid\\\":107789.92144403225,\\\"ask\\\":108221.94517727487,\\\"price\\\":108005.93331065356,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6198272935290676,\\\"bias\\\":0.11982729352906762,\\\"bid\\\":108195.22063526743,\\\"ask\\\":108628.8688141663,\\\"price\\\":108412.04472471686,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6200461547287829,\\\"bias\\\":0.12004615472878288,\\\"bid\\\":108392.83617922486,\\\"ask\\\":108827.27640439209,\\\"price\\\":108610.05629180848,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6207168257828758,\\\"bias\\\":0.12071682578287579,\\\"bid\\\":108998.40274535671,\\\"ask\\\":109435.27009102948,\\\"price\\\":109216.8364181931,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6208195955423244,\\\"bias\\\":0.12081959554232435,\\\"bid\\\":108905.68815232946,\\\"ask\\\":109342.18389642697,\\\"price\\\":109123.93602437821,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6208952307269847,\\\"bias\\\":0.12089523072698471,\\\"bid\\\":108973.8650221244,\\\"ask\\\":109410.63402020908,\\\"price\\\":109192.24952116674,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6215845683822819,\\\"bias\\\":0.12158456838228193,\\\"bid\\\":108356.02519588238,\\\"ask\\\":108790.31788203823,\\\"price\\\":108573.1715389603,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6207686782617601,\\\"bias\\\":0.12076867826176008,\\\"bid\\\":107633.75167225582,\\\"ask\\\":108065.14947454944,\\\"price\\\":107849.45057340263,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.620218695451789,\\\"bias\\\":0.12021869545178898,\\\"bid\\\":108123.91778191665,\\\"ask\\\":108557.28017783616,\\\"price\\\":108340.5989798764,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.620450019598943,\\\"bias\\\":0.12045001959894297,\\\"bid\\\":108331.96922494595,\\\"ask\\\":108766.16549438461,\\\"price\\\":108549.06735966528,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6210326911163151,\\\"bias\\\":0.1210326911163151,\\\"bid\\\":108856.02022218434,\\\"ask\\\":109292.31689642154,\\\"price\\\":109074.16855930294,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6206860700410115,\\\"bias\\\":0.1206860700410115,\\\"bid\\\":109167.76897729067,\\\"ask\\\":109605.31514553634,\\\"price\\\":109386.54206141351,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.6211700045793807,\\\"bias\\\":0.12117000457938065,\\\"bid\\\":109605.51671293951,\\\"ask\\\":110044.81738112765,\\\"price\\\":109825.16704703358,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.39549142867683834,\\\"bias\\\":0.12261168493063523,\\\"bid\\\":116749.75619900768,\\\"ask\\\":117217.6910935929,\\\"price\\\":116983.72364630032,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"OMTK\\\",\\\"forecast\\\":0.4846739240600951,\\\"bias\\\":0.124521841485977,\\\"bid\\\":106444.86063111074,\\\"ask\\\":106871.49333905109,\\\"price\\\":106658.17698508094,\\\"maxShares\\\":9600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"FSIG\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6731210526637881,\\\"bias\\\":0.17312105266378808,\\\"bid\\\":109813.56771612441,\\\"ask\\\":111808.16329522656,\\\"price\\\":110810.8655056755,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6747556541274637,\\\"bias\\\":0.17475565412746374,\\\"bid\\\":110850.42265524517,\\\"ask\\\":112863.8511192153,\\\"price\\\":111857.13688723024,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6735720956250312,\\\"bias\\\":0.17357209562503118,\\\"bid\\\":110104.72214726431,\\\"ask\\\":112104.6061015032,\\\"price\\\":111104.66412438377,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6746299879260158,\\\"bias\\\":0.1746299879260158,\\\"bid\\\":110775.7916382571,\\\"ask\\\":112787.86454389647,\\\"price\\\":111781.8280910768,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.674161669808417,\\\"bias\\\":0.17416166980841696,\\\"bid\\\":110479.51058684236,\\\"ask\\\":112486.20200012505,\\\"price\\\":111482.85629348371,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6731793759681598,\\\"bias\\\":0.1731793759681598,\\\"bid\\\":109859.88693288776,\\\"ask\\\":111855.3238297515,\\\"price\\\":110857.60538131963,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6736538368969773,\\\"bias\\\":0.17365383689697733,\\\"bid\\\":109559.72527262515,\\\"ask\\\":111549.710191805,\\\"price\\\":110554.71773221508,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6721985890953869,\\\"bias\\\":0.17219858909538688,\\\"bid\\\":110477.85384493215,\\\"ask\\\":112484.5151660308,\\\"price\\\":111481.18450548148,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6724184856275888,\\\"bias\\\":0.17241848562758877,\\\"bid\\\":110618.93338032925,\\\"ask\\\":112628.15719551181,\\\"price\\\":111623.54528792054,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.67225658013609,\\\"bias\\\":0.17225658013609002,\\\"bid\\\":110722.80746733806,\\\"ask\\\":112733.9179965127,\\\"price\\\":111728.36273192539,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6737298758113596,\\\"bias\\\":0.17372987581135957,\\\"bid\\\":109783.83578711617,\\\"ask\\\":111777.89133118083,\\\"price\\\":110780.8635591485,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6754785906096261,\\\"bias\\\":0.17547859060962612,\\\"bid\\\":110888.88819882598,\\\"ask\\\":112903.01533059072,\\\"price\\\":111895.95176470836,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6766772897641877,\\\"bias\\\":0.17667728976418773,\\\"bid\\\":111646.37329186454,\\\"ask\\\":113674.2589823323,\\\"price\\\":112660.31613709843,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6771872319560728,\\\"bias\\\":0.17718723195607278,\\\"bid\\\":111325.05670666843,\\\"ask\\\":113347.10617258167,\\\"price\\\":112336.08143962505,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6784729347767935,\\\"bias\\\":0.1784729347767935,\\\"bid\\\":112132.85159033212,\\\"ask\\\":114169.57341538355,\\\"price\\\":113151.21250285784,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6792396178934912,\\\"bias\\\":0.1792396178934912,\\\"bid\\\":112614.55131835531,\\\"ask\\\":114660.02248256358,\\\"price\\\":113637.28690045945,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6781615285782132,\\\"bias\\\":0.1781615285782132,\\\"bid\\\":113291.90460636161,\\\"ask\\\":115349.67885753668,\\\"price\\\":114320.79173194915,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.6048519941964609,\\\"bias\\\":0.1712337330373498,\\\"bid\\\":105025.32217208804,\\\"ask\\\":106932.94659095546,\\\"price\\\":105979.13438152174,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"FSIG\\\",\\\"forecast\\\":0.47734379377346836,\\\"bias\\\":0.17174515835775578,\\\"bid\\\":101978.03471138157,\\\"ask\\\":103830.30981209288,\\\"price\\\":102904.17226173721,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0105,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"KGI\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5882708604835422,\\\"bias\\\":0.08827086048354216,\\\"bid\\\":31303.84144920729,\\\"ask\\\":31429.307747600906,\\\"price\\\":31366.5745984041,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5889138073430137,\\\"bias\\\":0.08891380734301368,\\\"bid\\\":31531.852215601877,\\\"ask\\\":31658.23238480269,\\\"price\\\":31595.042300202284,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5884492670165092,\\\"bias\\\":0.08844926701650924,\\\"bid\\\":31696.593973504783,\\\"ask\\\":31823.634430312417,\\\"price\\\":31760.1142019086,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5888651311898742,\\\"bias\\\":0.08886513118987416,\\\"bid\\\":31845.62265735827,\\\"ask\\\":31973.26042352003,\\\"price\\\":31909.44154043915,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5890489750971694,\\\"bias\\\":0.08904897509716936,\\\"bid\\\":31911.50478256516,\\\"ask\\\":32039.406605340973,\\\"price\\\":31975.455693953067,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5894364231529271,\\\"bias\\\":0.0894364231529271,\\\"bid\\\":31773.260764653507,\\\"ask\\\":31900.608503189196,\\\"price\\\":31836.93463392135,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5896254460548213,\\\"bias\\\":0.08962544605482126,\\\"bid\\\":31706.24995224762,\\\"ask\\\":31833.329110372862,\\\"price\\\":31769.78953131024,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5902048475589118,\\\"bias\\\":0.09020484755891178,\\\"bid\\\":31502.595166406925,\\\"ask\\\":31628.858072885512,\\\"price\\\":31565.72661964622,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5902937092120756,\\\"bias\\\":0.09029370921207558,\\\"bid\\\":31533.628672489947,\\\"ask\\\":31660.015961758443,\\\"price\\\":31596.822317124195,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5902283011974613,\\\"bias\\\":0.09022830119746128,\\\"bid\\\":31556.47137175491,\\\"ask\\\":31682.950214928278,\\\"price\\\":31619.710793341594,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5896329782906051,\\\"bias\\\":0.08963297829060513,\\\"bid\\\":31764.67977219954,\\\"ask\\\":31891.993117979895,\\\"price\\\":31828.336445089717,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.588936980240254,\\\"bias\\\":0.08893698024025398,\\\"bid\\\":31519.92824188184,\\\"ask\\\":31646.260619604815,\\\"price\\\":31583.094430743327,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5894056470090079,\\\"bias\\\":0.08940564700900788,\\\"bid\\\":31686.027235580223,\\\"ask\\\":31813.02534073285,\\\"price\\\":31749.526288156536,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5892065792680572,\\\"bias\\\":0.0892065792680572,\\\"bid\\\":31756.578325723913,\\\"ask\\\":31883.859200776915,\\\"price\\\":31820.218763250414,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5897059243525585,\\\"bias\\\":0.08970592435255853,\\\"bid\\\":31934.339780289738,\\\"ask\\\":32062.333126102523,\\\"price\\\":31998.33645319613,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5894086479889172,\\\"bias\\\":0.08940864798891723,\\\"bid\\\":32040.166953619577,\\\"ask\\\":32168.584456439698,\\\"price\\\":32104.375705029637,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5898235026556994,\\\"bias\\\":0.08982350265569938,\\\"bid\\\":32188.832805124664,\\\"ask\\\":32317.846163061033,\\\"price\\\":32253.33948409285,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5775212017298242,\\\"bias\\\":0.08161099834485763,\\\"bid\\\":25996.01211859526,\\\"ask\\\":26100.204551936316,\\\"price\\\":26048.108335265777,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"KGI\\\",\\\"forecast\\\":0.5812297761877315,\\\"bias\\\":0.08803298878024879,\\\"bid\\\":28543.39950054392,\\\"ask\\\":28657.80190335172,\\\"price\\\":28600.600701947827,\\\"maxShares\\\":20900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008100000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"FLCM\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6946733236135685,\\\"bias\\\":0.19467332361356848,\\\"bid\\\":460578.97334982746,\\\"ask\\\":463350.7625575496,\\\"price\\\":461964.86795368855,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6924851128155318,\\\"bias\\\":0.19248511281553182,\\\"bid\\\":465756.07653029886,\\\"ask\\\":468559.02182536584,\\\"price\\\":467157.5491778324,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6909331677174163,\\\"bias\\\":0.1909331677174163,\\\"bid\\\":469511.31686715275,\\\"ask\\\":472336.86140196,\\\"price\\\":470924.0891345564,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6895478045358168,\\\"bias\\\":0.18954780453581677,\\\"bid\\\":472917.9732354935,\\\"ask\\\":475764.01921283844,\\\"price\\\":474340.996224166,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6889426565279696,\\\"bias\\\":0.1889426565279696,\\\"bid\\\":474427.8053861713,\\\"ask\\\":477282.9376151753,\\\"price\\\":475855.37150067335,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.690211299949867,\\\"bias\\\":0.19021129994986696,\\\"bid\\\":477613.3206399979,\\\"ask\\\":480487.6234723348,\\\"price\\\":479050.4720561664,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6895909149166548,\\\"bias\\\":0.1895909149166548,\\\"bid\\\":479171.0838005774,\\\"ask\\\":482054.761335987,\\\"price\\\":480612.9225682822,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.687699482601653,\\\"bias\\\":0.18769948260165303,\\\"bid\\\":483951.4799113993,\\\"ask\\\":486863.926129522,\\\"price\\\":485407.70302046067,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6874141360811242,\\\"bias\\\":0.18741413608112423,\\\"bid\\\":483216.87876543263,\\\"ask\\\":486124.9041140711,\\\"price\\\":484670.8914397519,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6876236441782236,\\\"bias\\\":0.18762364417822364,\\\"bid\\\":482677.2993899232,\\\"ask\\\":485582.07752065494,\\\"price\\\":484129.6884552891,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6857132526915152,\\\"bias\\\":0.18571325269151517,\\\"bid\\\":487591.93905392074,\\\"ask\\\":490526.29375233944,\\\"price\\\":489059.1164031301,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6834878526772198,\\\"bias\\\":0.1834878526772198,\\\"bid\\\":493434.74829028285,\\\"ask\\\":496404.2653311471,\\\"price\\\":494919.506810715,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6819956971444945,\\\"bias\\\":0.18199569714449448,\\\"bid\\\":489454.4187572417,\\\"ask\\\":492399.98195939156,\\\"price\\\":490927.20035831665,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6813703487315546,\\\"bias\\\":0.18137034873155455,\\\"bid\\\":491136.21425449074,\\\"ask\\\":494091.8985930333,\\\"price\\\":492614.05642376206,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6829370823955851,\\\"bias\\\":0.18293708239558515,\\\"bid\\\":486929.96131538966,\\\"ask\\\":489860.33219592355,\\\"price\\\":488395.14675565663,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6820015345633068,\\\"bias\\\":0.1820015345633068,\\\"bid\\\":489420.1413478604,\\\"ask\\\":492365.49826670403,\\\"price\\\":490892.81980728224,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6806983182845907,\\\"bias\\\":0.1806983182845907,\\\"bid\\\":485940.5790757087,\\\"ask\\\":488864.9958003368,\\\"price\\\":487402.7874380228,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.668885894063153,\\\"bias\\\":0.19977054738392946,\\\"bid\\\":318051.8696397033,\\\"ask\\\":319965.9230176753,\\\"price\\\":319008.8963286893,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"FLCM\\\",\\\"forecast\\\":0.6977687081610331,\\\"bias\\\":0.20465222167385722,\\\"bid\\\":412838.5709911233,\\\"ask\\\":415323.0558717117,\\\"price\\\":414080.8134314175,\\\"maxShares\\\":12600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0125,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"STM\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5605763229759746,\\\"bias\\\":0.060576322975974595,\\\"bid\\\":6819.813434128825,\\\"ask\\\":6915.96387529479,\\\"price\\\":6867.888654711808,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5600860723944454,\\\"bias\\\":0.06008607239444541,\\\"bid\\\":6765.063064045349,\\\"ask\\\":6860.441596670359,\\\"price\\\":6812.752330357855,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5597372651303896,\\\"bias\\\":0.05973726513038957,\\\"bid\\\":6726.017679130737,\\\"ask\\\":6820.845722945268,\\\"price\\\":6773.431701038003,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5594251893279362,\\\"bias\\\":0.05942518932793617,\\\"bid\\\":6761.155333322788,\\\"ask\\\":6856.47877206047,\\\"price\\\":6808.817052691629,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5595617878246508,\\\"bias\\\":0.059561787824650825,\\\"bid\\\":6776.696952374098,\\\"ask\\\":6872.239507593873,\\\"price\\\":6824.468229983986,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5592738426690662,\\\"bias\\\":0.05927384266906621,\\\"bid\\\":6809.45817613129,\\\"ask\\\":6905.462621716222,\\\"price\\\":6857.460398923757,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5594130366890905,\\\"bias\\\":0.05941303668909048,\\\"bid\\\":6793.5048448332645,\\\"ask\\\":6889.284369332423,\\\"price\\\":6841.394607082844,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5598398004454359,\\\"bias\\\":0.05983980044543591,\\\"bid\\\":6842.302580278161,\\\"ask\\\":6938.770088962848,\\\"price\\\":6890.536334620505,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5597743018271185,\\\"bias\\\":0.059774301827118514,\\\"bid\\\":6834.82141630566,\\\"ask\\\":6931.183450372406,\\\"price\\\":6883.002433339033,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5597261907061806,\\\"bias\\\":0.05972619070618057,\\\"bid\\\":6829.324631680215,\\\"ask\\\":6925.609168279936,\\\"price\\\":6877.466899980076,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5592883338845308,\\\"bias\\\":0.05928833388453081,\\\"bid\\\":6879.390881375461,\\\"ask\\\":6976.381286550945,\\\"price\\\":6927.886083963203,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5587768088040284,\\\"bias\\\":0.05877680880402836,\\\"bid\\\":6820.544906898141,\\\"ask\\\":6916.705660872534,\\\"price\\\":6868.625283885338,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.559120956823664,\\\"bias\\\":0.05912095682366403,\\\"bid\\\":6780.841946245016,\\\"ask\\\":6876.442940451893,\\\"price\\\":6828.642443348454,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5589746936871564,\\\"bias\\\":0.058974693687156354,\\\"bid\\\":6764.107785069803,\\\"ask\\\":6859.472849511874,\\\"price\\\":6811.790317290839,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.558607895587182,\\\"bias\\\":0.058607895587182046,\\\"bid\\\":6722.2978842927105,\\\"ask\\\":6817.073483869848,\\\"price\\\":6769.68568408128,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5588236962988046,\\\"bias\\\":0.05882369629880457,\\\"bid\\\":6697.636450917297,\\\"ask\\\":6792.0643565697055,\\\"price\\\":6744.850403743501,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5585204285317615,\\\"bias\\\":0.05852042853176154,\\\"bid\\\":6663.2836428029905,\\\"ask\\\":6757.227218834452,\\\"price\\\":6710.255430818722,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5616734755727882,\\\"bias\\\":0.06290040859277313,\\\"bid\\\":5872.420346336327,\\\"ask\\\":5955.213785257485,\\\"price\\\":5913.817065796909,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"STM\\\",\\\"forecast\\\":0.5608134509813986,\\\"bias\\\":0.06211307531938848,\\\"bid\\\":6641.978772410244,\\\"ask\\\":6735.621977660736,\\\"price\\\":6688.800375035493,\\\"maxShares\\\":9700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.009000000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"DCOMM\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.40888383719309546,\\\"bias\\\":0.09111616280690454,\\\"bid\\\":4784.163153928638,\\\"ask\\\":4812.954506911157,\\\"price\\\":4798.558830419898,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4094082195800909,\\\"bias\\\":0.09059178041990912,\\\"bid\\\":4756.787379492501,\\\"ask\\\":4785.413983581723,\\\"price\\\":4771.100681537112,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.409782190612748,\\\"bias\\\":0.09021780938725199,\\\"bid\\\":4776.423826421722,\\\"ask\\\":4805.168603712123,\\\"price\\\":4790.796215066923,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.41011734468611954,\\\"bias\\\":0.08988265531388046,\\\"bid\\\":4794.167971535051,\\\"ask\\\":4823.019534051811,\\\"price\\\":4808.593752793431,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.40997042205260537,\\\"bias\\\":0.09002957794739463,\\\"bid\\\":4786.344189618633,\\\"ask\\\":4815.148668192065,\\\"price\\\":4800.74642890535,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.40966091914745806,\\\"bias\\\":0.09033908085254194,\\\"bid\\\":4802.798642316248,\\\"ask\\\":4831.702144677229,\\\"price\\\":4817.250393496739,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4098117779398074,\\\"bias\\\":0.09018822206019261,\\\"bid\\\":4810.818918770683,\\\"ask\\\":4839.770687589764,\\\"price\\\":4825.294803180223,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4093511046112957,\\\"bias\\\":0.0906488953887043,\\\"bid\\\":4786.370568300728,\\\"ask\\\":4815.175205622498,\\\"price\\\":4800.772886961613,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4094216619161085,\\\"bias\\\":0.09057833808389149,\\\"bid\\\":4790.096078751648,\\\"ask\\\":4818.923136397094,\\\"price\\\":4804.509607574371,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.40947350523258064,\\\"bias\\\":0.09052649476741936,\\\"bid\\\":4792.837732796046,\\\"ask\\\":4821.6812898640255,\\\"price\\\":4807.259511330036,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.40994543836973696,\\\"bias\\\":0.09005456163026304,\\\"bid\\\":4767.981270995501,\\\"ask\\\":4796.675240530078,\\\"price\\\":4782.32825576279,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4093929274478967,\\\"bias\\\":0.09060707255210332,\\\"bid\\\":4738.906700400144,\\\"ask\\\":4767.425697594126,\\\"price\\\":4753.166198997135,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4097701857755281,\\\"bias\\\":0.0902298142244719,\\\"bid\\\":4758.637963824046,\\\"ask\\\":4787.275704830007,\\\"price\\\":4772.956834327027,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4096114477566114,\\\"bias\\\":0.0903885522433886,\\\"bid\\\":4750.280967895124,\\\"ask\\\":4778.86841604695,\\\"price\\\":4764.574691971037,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.40921167584361595,\\\"bias\\\":0.09078832415638405,\\\"bid\\\":4729.363862887985,\\\"ask\\\":4757.825430768956,\\\"price\\\":4743.594646828471,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.40897395667154224,\\\"bias\\\":0.09102604332845776,\\\"bid\\\":4717.012887048418,\\\"ask\\\":4745.400126087826,\\\"price\\\":4731.206506568122,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.40930767270492374,\\\"bias\\\":0.09069232729507626,\\\"bid\\\":4734.306210722776,\\\"ask\\\":4762.7975219207065,\\\"price\\\":4748.551866321742,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.5555049748724133,\\\"bias\\\":0.09122139762853987,\\\"bid\\\":5353.108572220209,\\\"ask\\\":5385.323869545504,\\\"price\\\":5369.216220882856,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"forecast\\\":0.4114279331374168,\\\"bias\\\":0.09092139802789234,\\\"bid\\\":5074.532955365653,\\\"ask\\\":5105.071769540367,\\\"price\\\":5089.802362453011,\\\"maxShares\\\":25900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"HLS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4129202128192418,\\\"bias\\\":0.0870797871807582,\\\"bid\\\":17559.63363324684,\\\"ask\\\":17736.112363229222,\\\"price\\\":17647.872998238032,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.41246604322806674,\\\"bias\\\":0.08753395677193326,\\\"bid\\\":17468.525543055366,\\\"ask\\\":17644.088613839842,\\\"price\\\":17556.307078447604,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.412793514908441,\\\"bias\\\":0.08720648509155898,\\\"bid\\\":17403.41793538257,\\\"ask\\\":17578.326658351238,\\\"price\\\":17490.872296866906,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4130871101593882,\\\"bias\\\":0.0869128898406118,\\\"bid\\\":17345.023007788477,\\\"ask\\\":17519.34484706273,\\\"price\\\":17432.183927425605,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4132158595020368,\\\"bias\\\":0.08678414049796318,\\\"bid\\\":17319.36677783425,\\\"ask\\\":17493.430765551177,\\\"price\\\":17406.398771692715,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4134862353545828,\\\"bias\\\":0.08651376464541721,\\\"bid\\\":17265.575903398072,\\\"ask\\\":17439.09927931162,\\\"price\\\":17352.337591354848,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4133553086642553,\\\"bias\\\":0.0866446913357447,\\\"bid\\\":17291.704979145674,\\\"ask\\\":17465.490958835577,\\\"price\\\":17378.597968990627,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4137563907103182,\\\"bias\\\":0.08624360928968178,\\\"bid\\\":17212.029744570737,\\\"ask\\\":17385.01496813426,\\\"price\\\":17298.5223563525,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4136955555846257,\\\"bias\\\":0.08630444441537433,\\\"bid\\\":17199.897159742366,\\\"ask\\\":17372.760447779976,\\\"price\\\":17286.32880376117,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.41365078944873734,\\\"bias\\\":0.08634921055126266,\\\"bid\\\":17208.8187504986,\\\"ask\\\":17381.771702764916,\\\"price\\\":17295.29522663176,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.41405874341431487,\\\"bias\\\":0.08594125658568513,\\\"bid\\\":17127.89856492928,\\\"ask\\\":17300.03824899892,\\\"price\\\":17213.9684069641,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4135809008086838,\\\"bias\\\":0.08641909919131618,\\\"bid\\\":17223.131518279108,\\\"ask\\\":17396.22831745779,\\\"price\\\":17309.67991786845,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4132548130536034,\\\"bias\\\":0.0867451869463966,\\\"bid\\\":17158.387265716476,\\\"ask\\\":17330.833368889504,\\\"price\\\":17244.61031730299,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.4131165123786482,\\\"bias\\\":0.08688348762135178,\\\"bid\\\":17185.74344101018,\\\"ask\\\":17358.46448061832,\\\"price\\\":17272.103960814253,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.41346475675617483,\\\"bias\\\":0.08653524324382517,\\\"bid\\\":17254.6269387932,\\\"ask\\\":17428.040274861472,\\\"price\\\":17341.33360682734,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.41367009755527334,\\\"bias\\\":0.08632990244472666,\\\"bid\\\":17213.78009734233,\\\"ask\\\":17386.782912390994,\\\"price\\\":17300.281504866663,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.41338327012825843,\\\"bias\\\":0.08661672987174157,\\\"bid\\\":17156.777434440693,\\\"ask\\\":17329.20735840492,\\\"price\\\":17242.992396422807,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.42379655945246547,\\\"bias\\\":0.08837758076582647,\\\"bid\\\":19601.26950568139,\\\"ask\\\":19798.267189155573,\\\"price\\\":19699.76834741848,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"HLS\\\",\\\"forecast\\\":0.41423135246769915,\\\"bias\\\":0.08815792205354023,\\\"bid\\\":18221.336287503884,\\\"ask\\\":18404.465295418497,\\\"price\\\":18312.900791461194,\\\"maxShares\\\":9900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"VITA\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42389636400700614,\\\"bias\\\":0.07610363599299386,\\\"bid\\\":35964.101727537716,\\\"ask\\\":36325.54998610593,\\\"price\\\":36144.82585682182,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42334888421484224,\\\"bias\\\":0.07665111578515776,\\\"bid\\\":35707.22850739643,\\\"ask\\\":36066.095125561216,\\\"price\\\":35886.66181647882,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42295335582375054,\\\"bias\\\":0.07704664417624946,\\\"bid\\\":35891.48182839779,\\\"ask\\\":36252.200238733436,\\\"price\\\":36071.841033565615,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4225955759018778,\\\"bias\\\":0.0774044240981222,\\\"bid\\\":36058.150366680704,\\\"ask\\\":36420.543837702615,\\\"price\\\":36239.34710219166,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.422753732970592,\\\"bias\\\":0.07724626702940801,\\\"bid\\\":35984.62455978445,\\\"ask\\\":36346.27907797324,\\\"price\\\":36165.45181887885,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42242178728392893,\\\"bias\\\":0.07757821271607107,\\\"bid\\\":35830.65167886071,\\\"ask\\\":36190.75873090956,\\\"price\\\":36010.70520488514,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4222598507862842,\\\"bias\\\":0.0777401492137158,\\\"bid\\\":35756.01469526999,\\\"ask\\\":36115.37162688074,\\\"price\\\":35935.69316107537,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42275621290097054,\\\"bias\\\":0.07724378709902946,\\\"bid\\\":35984.31283010005,\\\"ask\\\":36345.96421532718,\\\"price\\\":36165.13852271361,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42283136706318997,\\\"bias\\\":0.07716863293681003,\\\"bid\\\":36019.32368321011,\\\"ask\\\":36381.3269363077,\\\"price\\\":36200.325309758904,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42288657725394435,\\\"bias\\\":0.07711342274605565,\\\"bid\\\":35993.572132253124,\\\"ask\\\":36355.31657579335,\\\"price\\\":36174.44435402324,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42338908731476843,\\\"bias\\\":0.07661091268523157,\\\"bid\\\":36228.12445112781,\\\"ask\\\":36592.22620440547,\\\"price\\\":36410.17532776664,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4228015495317779,\\\"bias\\\":0.0771984504682221,\\\"bid\\\":35952.401404967946,\\\"ask\\\":36313.732072354556,\\\"price\\\":36133.066738661255,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42320333602452975,\\\"bias\\\":0.07679666397547025,\\\"bid\\\":35766.25262717784,\\\"ask\\\":36125.71245257661,\\\"price\\\":35945.98253987723,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42303445406456375,\\\"bias\\\":0.07696554593543625,\\\"bid\\\":35844.90545572056,\\\"ask\\\":36205.1557618082,\\\"price\\\":36025.030608764384,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.4226089485280538,\\\"bias\\\":0.07739105147194619,\\\"bid\\\":35647.825748997435,\\\"ask\\\":36006.09535451499,\\\"price\\\":35826.960551756216,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42235564865644615,\\\"bias\\\":0.07764435134355385,\\\"bid\\\":35764.50060369412,\\\"ask\\\":36123.94282081667,\\\"price\\\":35944.2217122554,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.42199982789354434,\\\"bias\\\":0.07800017210645566,\\\"bid\\\":35928.398577846805,\\\"ask\\\":36289.48801078999,\\\"price\\\":36108.9432943184,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.41894485795397207,\\\"bias\\\":0.08336251024429198,\\\"bid\\\":38215.94614028985,\\\"ask\\\":38600.02600099628,\\\"price\\\":38407.98607064306,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"VITA\\\",\\\"forecast\\\":0.420530651823351,\\\"bias\\\":0.08299977172351203,\\\"bid\\\":36961.585733767344,\\\"ask\\\":37333.05895722231,\\\"price\\\":37147.32234549483,\\\"maxShares\\\":16200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.008,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"ICRS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5613441265694057,\\\"bias\\\":0.06134412656940569,\\\"bid\\\":14921.27888938226,\\\"ask\\\":15071.241491285597,\\\"price\\\":14996.26019033393,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5616861354452041,\\\"bias\\\":0.06168613544520407,\\\"bid\\\":15004.468757815048,\\\"ask\\\":15155.267438798111,\\\"price\\\":15079.86809830658,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5614394472048189,\\\"bias\\\":0.061439447204818864,\\\"bid\\\":14944.703583622879,\\\"ask\\\":15094.901609588936,\\\"price\\\":15019.802596605909,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5612183357513182,\\\"bias\\\":0.06121833575131819,\\\"bid\\\":14998.487354178207,\\\"ask\\\":15149.225920551855,\\\"price\\\":15073.856637365032,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5613152764275298,\\\"bias\\\":0.061315276427529763,\\\"bid\\\":14974.774446221521,\\\"ask\\\":15125.27469191219,\\\"price\\\":15050.024569066856,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5611110744602695,\\\"bias\\\":0.06111107446026953,\\\"bid\\\":15024.645841726224,\\\"ask\\\":15175.647307472214,\\\"price\\\":15100.14657459922,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5612099358233981,\\\"bias\\\":0.061209935823398065,\\\"bid\\\":15000.379242709969,\\\"ask\\\":15151.13682303871,\\\"price\\\":15075.75803287434,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5615128202075499,\\\"bias\\\":0.06151282020754989,\\\"bid\\\":15074.605437654538,\\\"ask\\\":15226.10900989227,\\\"price\\\":15150.357223773404,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5614664374226347,\\\"bias\\\":0.06146643742263469,\\\"bid\\\":15085.972209318355,\\\"ask\\\":15237.590020467282,\\\"price\\\":15161.78111489282,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5614323559630492,\\\"bias\\\":0.06143235596304919,\\\"bid\\\":15094.336968587282,\\\"ask\\\":15246.03884766856,\\\"price\\\":15170.187908127922,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5617426072950481,\\\"bias\\\":0.0617426072950481,\\\"bid\\\":15018.489213604003,\\\"ask\\\":15169.428803690475,\\\"price\\\":15093.95900864724,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5613756362222023,\\\"bias\\\":0.06137563622220232,\\\"bid\\\":14929.753285200277,\\\"ask\\\":15079.801056910832,\\\"price\\\":15004.777171055555,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5611280739507041,\\\"bias\\\":0.061128073950704076,\\\"bid\\\":14869.775164516244,\\\"ask\\\":15019.220141044043,\\\"price\\\":14944.497652780145,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5612322537029562,\\\"bias\\\":0.06123225370295615,\\\"bid\\\":14895.11752184182,\\\"ask\\\":15044.817195428168,\\\"price\\\":14969.967358634995,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5614946095863761,\\\"bias\\\":0.06149460958637609,\\\"bid\\\":14958.937183535847,\\\"ask\\\":15109.278260757312,\\\"price\\\":15034.10772214658,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5616505946353295,\\\"bias\\\":0.061650594635329514,\\\"bid\\\":14996.881493851188,\\\"ask\\\":15147.603920925067,\\\"price\\\":15072.242707388128,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5614316368494945,\\\"bias\\\":0.061431636849494486,\\\"bid\\\":14943.80718123986,\\\"ask\\\":15093.99619813674,\\\"price\\\":15018.9016896883,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.4615519667254835,\\\"bias\\\":0.06355917242267284,\\\"bid\\\":14504.72455147252,\\\"ask\\\":14650.500677617973,\\\"price\\\":14577.612614545254,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"ICRS\\\",\\\"forecast\\\":0.5620746495674019,\\\"bias\\\":0.06340126244581346,\\\"bid\\\":14511.080340442706,\\\"ask\\\":14656.920343864249,\\\"price\\\":14584.000342153484,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0062,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"UNV\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.58125158730459,\\\"bias\\\":0.08125158730459003,\\\"bid\\\":37954.66860312317,\\\"ask\\\":38566.840677367094,\\\"price\\\":38260.75464024513,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.581675359587265,\\\"bias\\\":0.08167535958726502,\\\"bid\\\":37757.740954032946,\\\"ask\\\":38366.73677587219,\\\"price\\\":38062.23886495257,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5813698053973763,\\\"bias\\\":0.08136980539737626,\\\"bid\\\":37617.01263792023,\\\"ask\\\":38223.73864820927,\\\"price\\\":37920.37564306475,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5816437504876993,\\\"bias\\\":0.08164375048769934,\\\"bid\\\":37490.793596496675,\\\"ask\\\":38095.483815795014,\\\"price\\\":37793.138706145844,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5815228066412119,\\\"bias\\\":0.08152280664121192,\\\"bid\\\":37546.33098617245,\\\"ask\\\":38151.9169698204,\\\"price\\\":37849.12397799642,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5817767908164434,\\\"bias\\\":0.0817767908164434,\\\"bid\\\":37429.718756549766,\\\"ask\\\":38033.42389778444,\\\"price\\\":37731.571327167105,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5819005487480406,\\\"bias\\\":0.08190054874804065,\\\"bid\\\":37373.1596169056,\\\"ask\\\":37975.95251395246,\\\"price\\\":37674.55606542903,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5815214275444316,\\\"bias\\\":0.08152142754443159,\\\"bid\\\":37200.95477863923,\\\"ask\\\":37800.9701782947,\\\"price\\\":37500.962478466965,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5814639233846202,\\\"bias\\\":0.08146392338462016,\\\"bid\\\":37227.195850626835,\\\"ask\\\":37827.634493378886,\\\"price\\\":37527.41517200286,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5815061787410962,\\\"bias\\\":0.08150617874109622,\\\"bid\\\":37246.505605987404,\\\"ask\\\":37847.25569640656,\\\"price\\\":37546.88065119698,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5818912519643975,\\\"bias\\\":0.0818912519643975,\\\"bid\\\":37071.363186908944,\\\"ask\\\":37669.28839960102,\\\"price\\\":37370.32579325498,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5814359278189094,\\\"bias\\\":0.0814359278189094,\\\"bid\\\":37277.48394291472,\\\"ask\\\":37878.733683929466,\\\"price\\\":37578.10881342209,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5817432124253662,\\\"bias\\\":0.0817432124253662,\\\"bid\\\":37418.14418084522,\\\"ask\\\":38021.66263537499,\\\"price\\\":37719.903408110105,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5818735382895368,\\\"bias\\\":0.0818735382895368,\\\"bid\\\":37477.80114600894,\\\"ask\\\":38082.28180965424,\\\"price\\\":37780.04147783159,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5822017019044897,\\\"bias\\\":0.08220170190448972,\\\"bid\\\":37328.18318896407,\\\"ask\\\":37930.25065975381,\\\"price\\\":37629.21692435894,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.5820066442317591,\\\"bias\\\":0.08200664423175907,\\\"bid\\\":37239.81626073216,\\\"ask\\\":37840.4584584859,\\\"price\\\":37540.13735960903,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.582279107817342,\\\"bias\\\":0.08227910781734205,\\\"bid\\\":37363.543965479796,\\\"ask\\\":37966.18177137463,\\\"price\\\":37664.86286842721,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.417936400014818,\\\"bias\\\":0.08442374491276156,\\\"bid\\\":39602.6892199379,\\\"ask\\\":40241.44227187239,\\\"price\\\":39922.06574590515,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"UNV\\\",\\\"forecast\\\":0.48869117350253566,\\\"bias\\\":0.08259749016671125,\\\"bid\\\":36739.064148706864,\\\"ask\\\":37331.629699492434,\\\"price\\\":37035.34692409966,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0058,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"AERO\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5685539977735147,\\\"bias\\\":0.06855399777351467,\\\"bid\\\":26639.56448801029,\\\"ask\\\":27177.73750797009,\\\"price\\\":26908.65099799019,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5689485327043451,\\\"bias\\\":0.06894853270434509,\\\"bid\\\":26792.877774966266,\\\"ask\\\":27334.148033046393,\\\"price\\\":27063.51290400633,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.568663906948497,\\\"bias\\\":0.068663906948497,\\\"bid\\\":26903.481188685666,\\\"ask\\\":27446.985859164164,\\\"price\\\":27175.233523924915,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5689189894900006,\\\"bias\\\":0.06891898949000064,\\\"bid\\\":26803.906188998513,\\\"ask\\\":27345.399243321717,\\\"price\\\":27074.652716160115,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5688063341684634,\\\"bias\\\":0.06880633416846338,\\\"bid\\\":26847.7199867997,\\\"ask\\\":27390.09816835121,\\\"price\\\":27118.909077575456,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5685697923473952,\\\"bias\\\":0.06856979234739524,\\\"bid\\\":26755.739337294777,\\\"ask\\\":27296.259323906794,\\\"price\\\":27025.999330600785,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5686842982286545,\\\"bias\\\":0.06868429822865452,\\\"bid\\\":26800.419208804942,\\\"ask\\\":27341.84181908383,\\\"price\\\":27071.130513944387,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5683334650094303,\\\"bias\\\":0.06833346500943027,\\\"bid\\\":26937.313340215915,\\\"ask\\\":27481.501488503105,\\\"price\\\":27209.40741435951,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5683866529175555,\\\"bias\\\":0.06838665291755552,\\\"bid\\\":26958.280217087777,\\\"ask\\\":27502.89193864511,\\\"price\\\":27230.586077866443,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5683475112092324,\\\"bias\\\":0.06834751120923244,\\\"bid\\\":26973.710028259007,\\\"ask\\\":27518.63346317333,\\\"price\\\":27246.17174571617,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5687038207677176,\\\"bias\\\":0.06870382076771764,\\\"bid\\\":27114.329496924915,\\\"ask\\\":27662.09372918602,\\\"price\\\":27388.211613055468,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5691253386859568,\\\"bias\\\":0.06912533868595683,\\\"bid\\\":26948.989609392273,\\\"ask\\\":27493.413641905245,\\\"price\\\":27221.20162564876,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5694131540731565,\\\"bias\\\":0.06941315407315651,\\\"bid\\\":27061.196421344488,\\\"ask\\\":27607.88725813933,\\\"price\\\":27334.54183974191,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5692910380446682,\\\"bias\\\":0.06929103804466819,\\\"bid\\\":27108.804196516812,\\\"ask\\\":27656.456806547456,\\\"price\\\":27382.630501532134,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5695974995394598,\\\"bias\\\":0.06959749953945982,\\\"bid\\\":26989.43489861026,\\\"ask\\\":27534.676007673097,\\\"price\\\":27262.05545314168,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.56977973288414,\\\"bias\\\":0.06977973288413997,\\\"bid\\\":26918.95060769491,\\\"ask\\\":27462.767791688748,\\\"price\\\":27190.85919969183,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.5700355565453364,\\\"bias\\\":0.07003555654533644,\\\"bid\\\":27017.639785990592,\\\"ask\\\":27563.45069075808,\\\"price\\\":27290.545238374336,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.43155427209862457,\\\"bias\\\":0.07035156940423787,\\\"bid\\\":25356.153444574502,\\\"ask\\\":25868.398968707334,\\\"price\\\":25612.276206640927,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"AERO\\\",\\\"forecast\\\":0.49056358328370897,\\\"bias\\\":0.07068256118394367,\\\"bid\\\":25841.86373891284,\\\"ask\\\":26363.92159222421,\\\"price\\\":26102.892665568525,\\\"maxShares\\\":7700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0064,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"OMN\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5538154954189458,\\\"bias\\\":0.05381549541894581,\\\"bid\\\":9614.524568818413,\\\"ask\\\":9828.396702806283,\\\"price\\\":9721.46063581235,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5534573892828457,\\\"bias\\\":0.05345738928284571,\\\"bid\\\":9678.50280068224,\\\"ask\\\":9893.798110707527,\\\"price\\\":9786.150455694884,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5532022315941866,\\\"bias\\\":0.05320223159418658,\\\"bid\\\":9632.525751677047,\\\"ask\\\":9846.798316426182,\\\"price\\\":9739.662034051615,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5534307566478307,\\\"bias\\\":0.0534307566478307,\\\"bid\\\":9591.327131215061,\\\"ask\\\":9804.683245357357,\\\"price\\\":9698.00518828621,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5533297718778659,\\\"bias\\\":0.05332977187786592,\\\"bid\\\":9609.454854361236,\\\"ask\\\":9823.214214114469,\\\"price\\\":9716.334534237852,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5535417548550943,\\\"bias\\\":0.05354175485509427,\\\"bid\\\":9571.409017890599,\\\"ask\\\":9784.322059744585,\\\"price\\\":9677.865538817592,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5536451355164781,\\\"bias\\\":0.05364513551647809,\\\"bid\\\":9589.889895055026,\\\"ask\\\":9803.214038322174,\\\"price\\\":9696.551966688601,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5533283062179928,\\\"bias\\\":0.05332830621799278,\\\"bid\\\":9646.527986444851,\\\"ask\\\":9861.112026588215,\\\"price\\\":9753.820006516533,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5532803119908529,\\\"bias\\\":0.053280311990852924,\\\"bid\\\":9655.209635800054,\\\"ask\\\":9869.98679655597,\\\"price\\\":9762.598216178012,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5533155723663551,\\\"bias\\\":0.05331557236635509,\\\"bid\\\":9648.824140864914,\\\"ask\\\":9863.459258255234,\\\"price\\\":9756.141699560074,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5536369462564863,\\\"bias\\\":0.053636946256486295,\\\"bid\\\":9706.985012289759,\\\"ask\\\":9922.91390032856,\\\"price\\\":9814.94945630916,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.554017442996852,\\\"bias\\\":0.05401744299685196,\\\"bid\\\":9775.845684153763,\\\"ask\\\":9993.306356602076,\\\"price\\\":9884.57602037792,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5537573896159268,\\\"bias\\\":0.0537573896159268,\\\"bid\\\":9822.909032222917,\\\"ask\\\":10041.416614335054,\\\"price\\\":9932.162823278986,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5536480391065792,\\\"bias\\\":0.053648039106579226,\\\"bid\\\":9802.968339627614,\\\"ask\\\":10021.032347182525,\\\"price\\\":9912.00034340507,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.55337368943386,\\\"bias\\\":0.053373689433860005,\\\"bid\\\":9753.092189543426,\\\"ask\\\":9970.046717521136,\\\"price\\\":9861.569453532282,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.5535352789495973,\\\"bias\\\":0.05353527894959731,\\\"bid\\\":9782.619798756272,\\\"ask\\\":10000.231159294834,\\\"price\\\":9891.425479025553,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.553308343039795,\\\"bias\\\":0.053308343039795036,\\\"bid\\\":9741.326341444546,\\\"ask\\\":9958.019141759794,\\\"price\\\":9849.672741602171,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.4447381760773153,\\\"bias\\\":0.05669869749965001,\\\"bid\\\":9754.539953575471,\\\"ask\\\":9971.526686617592,\\\"price\\\":9863.033320096527,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"OMN\\\",\\\"forecast\\\":0.49292277990114447,\\\"bias\\\":0.05435347155367354,\\\"bid\\\":9596.218531824772,\\\"ask\\\":9809.683453665168,\\\"price\\\":9702.950992744967,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0074,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"SLRS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4169577209136181,\\\"bias\\\":0.0830422790863819,\\\"bid\\\":9916.180235789596,\\\"ask\\\":10015.840338661852,\\\"price\\\":9966.010287225725,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4175327140826107,\\\"bias\\\":0.08246728591738928,\\\"bid\\\":9984.840874211468,\\\"ask\\\":10085.191033751282,\\\"price\\\":10035.015953981376,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4179422967985391,\\\"bias\\\":0.08205770320146089,\\\"bid\\\":10034.431668886946,\\\"ask\\\":10135.280228373245,\\\"price\\\":10084.855948630096,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.41757553648738516,\\\"bias\\\":0.08242446351261484,\\\"bid\\\":9989.781923844064,\\\"ask\\\":10090.181742174154,\\\"price\\\":10039.98183300911,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4174134377281352,\\\"bias\\\":0.08258656227186478,\\\"bid\\\":9970.174239367483,\\\"ask\\\":10070.37699554203,\\\"price\\\":10020.275617454758,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4170718520483983,\\\"bias\\\":0.0829281479516017,\\\"bid\\\":10011.411804547139,\\\"ask\\\":10112.029008612939,\\\"price\\\":10061.72040658004,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.41723846458514147,\\\"bias\\\":0.08276153541485853,\\\"bid\\\":9991.338015209129,\\\"ask\\\":10091.753472648415,\\\"price\\\":10041.545743928773,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.417747071820021,\\\"bias\\\":0.08225292817997898,\\\"bid\\\":9930.311738095157,\\\"ask\\\":10030.113866116213,\\\"price\\\":9980.212802105685,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4178240985720666,\\\"bias\\\":0.0821759014279334,\\\"bid\\\":9939.61109894358,\\\"ask\\\":10039.506687877685,\\\"price\\\":9989.558893410633,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.41776751066183265,\\\"bias\\\":0.08223248933816735,\\\"bid\\\":9932.771201171372,\\\"ask\\\":10032.5980474143,\\\"price\\\":9982.684624292837,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.41725173724253706,\\\"bias\\\":0.08274826275746294,\\\"bid\\\":9870.859818445133,\\\"ask\\\":9970.064439736037,\\\"price\\\":9920.462129090585,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4178625453415391,\\\"bias\\\":0.0821374546584609,\\\"bid\\\":9943.721784609812,\\\"ask\\\":10043.658686967698,\\\"price\\\":9993.690235788756,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4174510842934938,\\\"bias\\\":0.08254891570650619,\\\"bid\\\":9993.534068226094,\\\"ask\\\":10093.971596549973,\\\"price\\\":10043.752832388034,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.417625808475933,\\\"bias\\\":0.082374191524067,\\\"bid\\\":9972.42629211647,\\\"ask\\\":10072.651681986987,\\\"price\\\":10022.538987051728,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4171874789110214,\\\"bias\\\":0.08281252108897857,\\\"bid\\\":10025.491568956959,\\\"ask\\\":10126.250278192707,\\\"price\\\":10075.870923574834,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.41744835901975963,\\\"bias\\\":0.08255164098024037,\\\"bid\\\":9994.007949736422,\\\"ask\\\":10094.450240688546,\\\"price\\\":10044.229095212484,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.41781248181604747,\\\"bias\\\":0.08218751818395253,\\\"bid\\\":10038.090006465638,\\\"ask\\\":10138.975333163784,\\\"price\\\":10088.532669814711,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.5431225268866948,\\\"bias\\\":0.08866885435725724,\\\"bid\\\":11132.386001298679,\\\"ask\\\":11244.269277693635,\\\"price\\\":11188.327639496154,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"SLRS\\\",\\\"forecast\\\":0.4156932848586351,\\\"bias\\\":0.08791257946024472,\\\"bid\\\":10590.0206639462,\\\"ask\\\":10696.453032428064,\\\"price\\\":10643.236848187127,\\\"maxShares\\\":7900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"GPH\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6013828994712758,\\\"bias\\\":0.10138289947127577,\\\"bid\\\":18877.56806210954,\\\"ask\\\":19220.450226708905,\\\"price\\\":19049.009144409225,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6019754846218526,\\\"bias\\\":0.10197548462185257,\\\"bid\\\":18987.90783904381,\\\"ask\\\":19332.794157008277,\\\"price\\\":19160.350998026046,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.602403026173557,\\\"bias\\\":0.10240302617355701,\\\"bid\\\":19067.516380363617,\\\"ask\\\":19413.8486657789,\\\"price\\\":19240.68252307126,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6027893917254274,\\\"bias\\\":0.10278939172542745,\\\"bid\\\":19139.457921198667,\\\"ask\\\":19487.09691472195,\\\"price\\\":19313.27741796031,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6029600370874618,\\\"bias\\\":0.10296003708746182,\\\"bid\\\":19171.232209102127,\\\"ask\\\":19519.448333989953,\\\"price\\\":19345.34027154604,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6033195227621538,\\\"bias\\\":0.10331952276215384,\\\"bid\\\":19104.52861658525,\\\"ask\\\":19451.533172688713,\\\"price\\\":19278.03089463698,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6031442918452729,\\\"bias\\\":0.10314429184527285,\\\"bid\\\":19072.182010143286,\\\"ask\\\":19418.599039590892,\\\"price\\\":19245.39052486709,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6026092080184411,\\\"bias\\\":0.10260920801844109,\\\"bid\\\":18973.751477842496,\\\"ask\\\":19318.380667147405,\\\"price\\\":19146.066072494952,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6025280933896752,\\\"bias\\\":0.10252809338967517,\\\"bid\\\":18988.750607424954,\\\"ask\\\":19333.652232988676,\\\"price\\\":19161.201420206817,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.602468493604829,\\\"bias\\\":0.10246849360482901,\\\"bid\\\":18999.788805964337,\\\"ask\\\":19344.890923529783,\\\"price\\\":19172.33986474706,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6030110295315875,\\\"bias\\\":0.10301102953158747,\\\"bid\\\":19100.386244898225,\\\"ask\\\":19447.31556115268,\\\"price\\\":19273.850903025454,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6036529071924454,\\\"bias\\\":0.10365290719244535,\\\"bid\\\":19219.403706427394,\\\"ask\\\":19568.494792921534,\\\"price\\\":19393.949249674464,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.603214586870524,\\\"bias\\\":0.10321458687052398,\\\"bid\\\":19300.677405814302,\\\"ask\\\":19651.24470480992,\\\"price\\\":19475.961055312113,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6033990057394001,\\\"bias\\\":0.10339900573940008,\\\"bid\\\":19266.253389158926,\\\"ask\\\":19616.195428518018,\\\"price\\\":19441.224408838472,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6029345454446985,\\\"bias\\\":0.10293454544469849,\\\"bid\\\":19352.79590146776,\\\"ask\\\":19704.309853260314,\\\"price\\\":19528.55287736404,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6032082794443341,\\\"bias\\\":0.10320827944433408,\\\"bid\\\":19301.46747845013,\\\"ask\\\":19652.049127907347,\\\"price\\\":19476.75830317874,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.6028239892277693,\\\"bias\\\":0.10282398922776925,\\\"bid\\\":19373.335405686663,\\\"ask\\\":19725.2224261734,\\\"price\\\":19549.278915930034,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.5634610307491301,\\\"bias\\\":0.10456592396536646,\\\"bid\\\":19198.454253880034,\\\"ask\\\":19547.164825595315,\\\"price\\\":19372.80953973767,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"GPH\\\",\\\"forecast\\\":0.4844746267889828,\\\"bias\\\":0.10724426328960185,\\\"bid\\\":18334.29004479046,\\\"ask\\\":18667.30439474629,\\\"price\\\":18500.797219768385,\\\"maxShares\\\":7000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.006500000000000001,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"NVMD\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5641344614297502,\\\"bias\\\":0.06413446142975021,\\\"bid\\\":9645.367481486477,\\\"ask\\\":9840.223390203375,\\\"price\\\":9742.795435844926,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5645554661958803,\\\"bias\\\":0.06455546619588026,\\\"bid\\\":9708.683608109432,\\\"ask\\\":9904.818630495482,\\\"price\\\":9806.751119302457,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5642515001482903,\\\"bias\\\":0.06425150014829029,\\\"bid\\\":9663.183515346043,\\\"ask\\\":9858.399343938892,\\\"price\\\":9760.791429642468,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5639792435696165,\\\"bias\\\":0.06397924356961648,\\\"bid\\\":9704.129878884843,\\\"ask\\\":9900.172906741103,\\\"price\\\":9802.151392812973,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5638599561078569,\\\"bias\\\":0.06385995610785689,\\\"bid\\\":9686.07047872056,\\\"ask\\\":9881.748670209863,\\\"price\\\":9783.909574465211,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5636095464830482,\\\"bias\\\":0.06360954648304817,\\\"bid\\\":9724.051796314163,\\\"ask\\\":9920.497287148793,\\\"price\\\":9822.274541731478,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5634883862375694,\\\"bias\\\":0.06348838623756936,\\\"bid\\\":9705.565126964813,\\\"ask\\\":9901.63714973178,\\\"price\\\":9803.601138348296,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5638582829041863,\\\"bias\\\":0.06385828290418627,\\\"bid\\\":9649.346011372814,\\\"ask\\\":9844.28229443085,\\\"price\\\":9746.814152901832,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5639149772292389,\\\"bias\\\":0.06391497722923889,\\\"bid\\\":9657.912843026214,\\\"ask\\\":9853.022193390381,\\\"price\\\":9755.467518208297,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5638732505375779,\\\"bias\\\":0.06387325053757786,\\\"bid\\\":9664.217981019852,\\\"ask\\\":9859.45470790914,\\\"price\\\":9761.836344464497,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5634934402950017,\\\"bias\\\":0.0634934402950017,\\\"bid\\\":9721.684431291087,\\\"ask\\\":9918.082096569695,\\\"price\\\":9819.883263930391,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5639377715838092,\\\"bias\\\":0.0639377715838092,\\\"bid\\\":9789.717421040348,\\\"ask\\\":9987.489490152273,\\\"price\\\":9888.60345559631,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.564241424263616,\\\"bias\\\":0.06424142426361601,\\\"bid\\\":9743.443946198753,\\\"ask\\\":9940.281197637112,\\\"price\\\":9841.862571917933,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5641125135716066,\\\"bias\\\":0.06411251357160663,\\\"bid\\\":9762.995724759961,\\\"ask\\\":9960.2279616238,\\\"price\\\":9861.61184319188,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5637890804158762,\\\"bias\\\":0.06378908041587616,\\\"bid\\\":9713.990834213328,\\\"ask\\\":9910.233073288346,\\\"price\\\":9812.111953750837,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5639795928987079,\\\"bias\\\":0.06397959289870792,\\\"bid\\\":9685.065415526156,\\\"ask\\\":9880.723302708504,\\\"price\\\":9782.89435911733,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5642471372375402,\\\"bias\\\":0.06424713723754016,\\\"bid\\\":9644.733899842218,\\\"ask\\\":9839.577008929939,\\\"price\\\":9742.155454386078,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.5375008190048702,\\\"bias\\\":0.063555086285217,\\\"bid\\\":9786.985677555516,\\\"ask\\\":9984.70255993037,\\\"price\\\":9885.844118742942,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"NVMD\\\",\\\"forecast\\\":0.4924488935574165,\\\"bias\\\":0.06529565811020954,\\\"bid\\\":9529.399062290437,\\\"ask\\\":9721.912174659938,\\\"price\\\":9625.655618475183,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0073,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"WDS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4422266939477606,\\\"bias\\\":0.057773306052239404,\\\"bid\\\":14684.635778068396,\\\"ask\\\":14861.915083236223,\\\"price\\\":14773.27543065231,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.44092790097710444,\\\"bias\\\":0.05907209902289556,\\\"bid\\\":15014.758857885845,\\\"ask\\\":15196.023552347244,\\\"price\\\":15105.391205116544,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4418804593664053,\\\"bias\\\":0.0581195406335947,\\\"bid\\\":14776.482870482996,\\\"ask\\\":14954.8709936679,\\\"price\\\":14865.676932075448,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4410370577438604,\\\"bias\\\":0.05896294225613963,\\\"bid\\\":14565.121137984397,\\\"ask\\\":14740.957610475156,\\\"price\\\":14653.039374229777,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.44066056900393025,\\\"bias\\\":0.05933943099606975,\\\"bid\\\":14658.121994019513,\\\"ask\\\":14835.08121326321,\\\"price\\\":14746.601603641362,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4398637073510281,\\\"bias\\\":0.06013629264897191,\\\"bid\\\":14463.888282460728,\\\"ask\\\":14638.50262792303,\\\"price\\\":14551.195455191879,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.44025598326651916,\\\"bias\\\":0.05974401673348084,\\\"bid\\\":14558.237880143488,\\\"ask\\\":14733.991254954073,\\\"price\\\":14646.11456754878,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4390639244178409,\\\"bias\\\":0.06093607558215908,\\\"bid\\\":14273.443099377055,\\\"ask\\\":14445.758307820237,\\\"price\\\":14359.600703598646,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4392491982065701,\\\"bias\\\":0.0607508017934299,\\\"bid\\\":14230.176795402249,\\\"ask\\\":14401.969674219983,\\\"price\\\":14316.073234811116,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.43938502344523295,\\\"bias\\\":0.06061497655476705,\\\"bid\\\":14261.992295813627,\\\"ask\\\":14434.169265179586,\\\"price\\\":14348.080780496606,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4381506551897344,\\\"bias\\\":0.061849344810265605,\\\"bid\\\":13977.356288688217,\\\"ask\\\":14146.097008471173,\\\"price\\\":14061.726648579695,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.43963293532677505,\\\"bias\\\":0.060367064673224946,\\\"bid\\\":13650.215502196468,\\\"ask\\\":13815.00683622701,\\\"price\\\":13732.61116921174,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.44061476652957404,\\\"bias\\\":0.05938523347042596,\\\"bid\\\":13431.756680507642,\\\"ask\\\":13593.91068469888,\\\"price\\\":13512.833682603261,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4410228691615095,\\\"bias\\\":0.05897713083849049,\\\"bid\\\":13524.061365233052,\\\"ask\\\":13687.329711694618,\\\"price\\\":13605.695538463835,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4420417948782964,\\\"bias\\\":0.057958205121703577,\\\"bid\\\":13294.379370921575,\\\"ask\\\":13454.874896526264,\\\"price\\\":13374.62713372392,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4426345962114575,\\\"bias\\\":0.05736540378854249,\\\"bid\\\":13159.780048180533,\\\"ask\\\":13318.650632263196,\\\"price\\\":13239.215340221865,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4434561225599218,\\\"bias\\\":0.056543877440078216,\\\"bid\\\":13348.24043258621,\\\"ask\\\":13509.386192335742,\\\"price\\\":13428.813312460976,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.5297212825700731,\\\"bias\\\":0.06429686146650881,\\\"bid\\\":13847.350750636086,\\\"ask\\\":14014.521987062286,\\\"price\\\":13930.936368849185,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"WDS\\\",\\\"forecast\\\":0.4391090491499635,\\\"bias\\\":0.06701723301913376,\\\"bid\\\":14092.020740122236,\\\"ask\\\":14262.145738996962,\\\"price\\\":14177.083239559597,\\\"maxShares\\\":14100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.025,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"LXO\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.42636047378092146,\\\"bias\\\":0.07363952621907854,\\\"bid\\\":6464.269450768803,\\\"ask\\\":6555.407187234828,\\\"price\\\":6509.838319001816,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4254665150827326,\\\"bias\\\":0.07453348491726741,\\\"bid\\\":6386.736649111053,\\\"ask\\\":6476.781274576869,\\\"price\\\":6431.7589618439615,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4261155295694144,\\\"bias\\\":0.0738844704305856,\\\"bid\\\":6442.35037242609,\\\"ask\\\":6533.179078583154,\\\"price\\\":6487.764725504622,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4255365554060975,\\\"bias\\\":0.07446344459390247,\\\"bid\\\":6392.259291668126,\\\"ask\\\":6482.381779163949,\\\"price\\\":6437.320535416038,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.42527980583474323,\\\"bias\\\":0.07472019416525677,\\\"bid\\\":6414.299768603778,\\\"ask\\\":6504.732997969792,\\\"price\\\":6459.516383286786,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.42473796553612153,\\\"bias\\\":0.07526203446387847,\\\"bid\\\":6460.813648029505,\\\"ask\\\":6551.902662201119,\\\"price\\\":6506.358155115312,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.42447285639200744,\\\"bias\\\":0.07552714360799256,\\\"bid\\\":6483.571746301903,\\\"ask\\\":6574.981619865071,\\\"price\\\":6529.276683083487,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.42365908934755736,\\\"bias\\\":0.07634091065244264,\\\"bid\\\":6553.428975973566,\\\"ask\\\":6645.823745020524,\\\"price\\\":6599.626360497045,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4237844296093465,\\\"bias\\\":0.07621557039065352,\\\"bid\\\":6542.686870879566,\\\"ask\\\":6634.930190307879,\\\"price\\\":6588.808530593723,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.42369241306346445,\\\"bias\\\":0.07630758693653555,\\\"bid\\\":6534.797282559252,\\\"ask\\\":6626.929369121013,\\\"price\\\":6580.863325840133,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4245315373342929,\\\"bias\\\":0.07546846266570711,\\\"bid\\\":6463.718335460651,\\\"ask\\\":6554.848301922332,\\\"price\\\":6509.283318691492,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4255082221787935,\\\"bias\\\":0.07449177782120647,\\\"bid\\\":6547.369380074203,\\\"ask\\\":6639.678716751985,\\\"price\\\":6593.5240484130945,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.42616246485557224,\\\"bias\\\":0.07383753514442776,\\\"bid\\\":6490.36611575372,\\\"ask\\\":6581.871781031214,\\\"price\\\":6536.118948392467,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.42588845771675615,\\\"bias\\\":0.07411154228324385,\\\"bid\\\":6514.451516840961,\\\"ask\\\":6606.296754742041,\\\"price\\\":6560.374135791501,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.42657987223362986,\\\"bias\\\":0.07342012776637014,\\\"bid\\\":6575.227290889754,\\\"ask\\\":6667.929387639458,\\\"price\\\":6621.578339264606,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4261743607664294,\\\"bias\\\":0.0738256392335706,\\\"bid\\\":6539.110704652421,\\\"ask\\\":6631.303604818719,\\\"price\\\":6585.20715473557,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4267452770340971,\\\"bias\\\":0.07325472296590291,\\\"bid\\\":6589.6796494813925,\\\"ask\\\":6682.585505566729,\\\"price\\\":6636.132577524061,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4357097153182292,\\\"bias\\\":0.07635673456256264,\\\"bid\\\":6055.789811085237,\\\"ask\\\":6141.168519398629,\\\"price\\\":6098.479165241932,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"LXO\\\",\\\"forecast\\\":0.4256302732130316,\\\"bias\\\":0.07823558965197414,\\\"bid\\\":6346.3712272977755,\\\"ask\\\":6435.846753160984,\\\"price\\\":6391.108990229378,\\\"maxShares\\\":12200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013500000000000002,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"RHOC\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4492879838649817,\\\"bias\\\":0.0507120161350183,\\\"bid\\\":4435.295103379125,\\\"ask\\\":4470.919963647231,\\\"price\\\":4453.107533513178,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4490280526523632,\\\"bias\\\":0.050971947347636826,\\\"bid\\\":4412.677336263424,\\\"ask\\\":4448.120527719356,\\\"price\\\":4430.39893199139,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4492154551074296,\\\"bias\\\":0.050784544892570394,\\\"bid\\\":4428.900898620026,\\\"ask\\\":4464.474399813762,\\\"price\\\":4446.687649216894,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.44938348195172007,\\\"bias\\\":0.050616518048279935,\\\"bid\\\":4443.554455981709,\\\"ask\\\":4479.245656431361,\\\"price\\\":4461.400056206535,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4494571704928353,\\\"bias\\\":0.05054282950716471,\\\"bid\\\":4437.094844406636,\\\"ask\\\":4472.734160425967,\\\"price\\\":4454.914502416302,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4493024193202488,\\\"bias\\\":0.05069758067975122,\\\"bid\\\":4423.550891798974,\\\"ask\\\":4459.08142105037,\\\"price\\\":4441.316156424672,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.44937782031508255,\\\"bias\\\":0.050622179684917445,\\\"bid\\\":4416.981647154701,\\\"ask\\\":4452.459411388875,\\\"price\\\":4434.720529271788,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4491475282543654,\\\"bias\\\":0.05085247174563462,\\\"bid\\\":4396.97876881358,\\\"ask\\\":4432.295867358267,\\\"price\\\":4414.637318085924,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.44918278046980215,\\\"bias\\\":0.050817219530197855,\\\"bid\\\":4400.026865346714,\\\"ask\\\":4435.368446594479,\\\"price\\\":4417.697655970596,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.44920868490982435,\\\"bias\\\":0.05079131509017565,\\\"bid\\\":4402.269810416972,\\\"ask\\\":4437.629407287792,\\\"price\\\":4419.949608852382,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4489728603092223,\\\"bias\\\":0.05102713969077771,\\\"bid\\\":4381.924489748885,\\\"ask\\\":4417.120670389438,\\\"price\\\":4399.522580069161,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4486940356003622,\\\"bias\\\":0.051305964399637805,\\\"bid\\\":4358.1107122593085,\\\"ask\\\":4393.115617578661,\\\"price\\\":4375.613164918985,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4485037791133479,\\\"bias\\\":0.05149622088665212,\\\"bid\\\":4342.009359191887,\\\"ask\\\":4376.88493637415,\\\"price\\\":4359.447147783018,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4484230925657417,\\\"bias\\\":0.0515769074342583,\\\"bid\\\":4335.216750594454,\\\"ask\\\":4370.037768671518,\\\"price\\\":4352.627259632986,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4486262576290743,\\\"bias\\\":0.05137374237092568,\\\"bid\\\":4318.207029610841,\\\"ask\\\":4352.891423422976,\\\"price\\\":4335.549226516909,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.44874606134663053,\\\"bias\\\":0.05125393865336947,\\\"bid\\\":4328.277101041292,\\\"ask\\\":4363.042378961302,\\\"price\\\":4345.659740001297,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4485787083343776,\\\"bias\\\":0.051421291665622426,\\\"bid\\\":4314.190519641605,\\\"ask\\\":4348.842652329489,\\\"price\\\":4331.516585985547,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.44741131450296284,\\\"bias\\\":0.05385265965019714,\\\"bid\\\":4722.393548338096,\\\"ask\\\":4760.324420212297,\\\"price\\\":4741.358984275196,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"RHOC\\\",\\\"forecast\\\":0.4486014918124642,\\\"bias\\\":0.05268082931871637,\\\"bid\\\":4507.684305719547,\\\"ask\\\":4543.890605363879,\\\"price\\\":4525.787455541712,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.005699999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"APHE\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3902669807030918,\\\"bias\\\":0.10973301929690821,\\\"bid\\\":841.5175765620417,\\\"ask\\\":858.5179316441032,\\\"price\\\":850.0177541030724,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.39200367227625393,\\\"bias\\\":0.10799632772374607,\\\"bid\\\":828.4067819571596,\\\"ask\\\":845.1422725017487,\\\"price\\\":836.7745272294542,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3907776712026381,\\\"bias\\\":0.10922232879736188,\\\"bid\\\":837.8110610236482,\\\"ask\\\":854.7365370039239,\\\"price\\\":846.2737990137861,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.38966184552717,\\\"bias\\\":0.11033815447283002,\\\"bid\\\":846.370218325777,\\\"ask\\\":863.4686065747827,\\\"price\\\":854.9194124502799,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3891658574693739,\\\"bias\\\":0.11083414253062612,\\\"bid\\\":850.1747909395704,\\\"ask\\\":867.3500392413798,\\\"price\\\":858.7624150904751,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.38811803966123487,\\\"bias\\\":0.11188196033876513,\\\"bid\\\":858.2122807025394,\\\"ask\\\":875.5499025349138,\\\"price\\\":866.8810916187266,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3876042472086936,\\\"bias\\\":0.11239575279130642,\\\"bid\\\":854.2891521006791,\\\"ask\\\":871.5475188097837,\\\"price\\\":862.9183354552314,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.389183042554771,\\\"bias\\\":0.11081695744522901,\\\"bid\\\":866.2891405703965,\\\"ask\\\":883.7899312889904,\\\"price\\\":875.0395359296934,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3894202445745117,\\\"bias\\\":0.11057975542548831,\\\"bid\\\":864.438822357979,\\\"ask\\\":881.9022329106654,\\\"price\\\":873.1705276343222,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.38959429566428994,\\\"bias\\\":0.11040570433571006,\\\"bid\\\":865.7994377662799,\\\"ask\\\":883.2903354989321,\\\"price\\\":874.544886632606,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3880114849745834,\\\"bias\\\":0.11198851502541662,\\\"bid\\\":878.2118091512897,\\\"ask\\\":895.9534618614167,\\\"price\\\":887.0826355063532,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3861220091888125,\\\"bias\\\":0.11387799081118749,\\\"bid\\\":863.6404250203504,\\\"ask\\\":881.0877063338928,\\\"price\\\":872.3640656771216,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3874259240233035,\\\"bias\\\":0.1125740759766965,\\\"bid\\\":873.529197678074,\\\"ask\\\":891.176252176621,\\\"price\\\":882.3527249273475,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3879705545467912,\\\"bias\\\":0.11202944545320881,\\\"bid\\\":877.7553097743584,\\\"ask\\\":895.4877402748504,\\\"price\\\":886.6215250246044,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3893331399370311,\\\"bias\\\":0.11066686006296889,\\\"bid\\\":867.2076852860442,\\\"ask\\\":884.72703246354,\\\"price\\\":875.9673588747921,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.388536275415792,\\\"bias\\\":0.111463724584208,\\\"bid\\\":873.452075309915,\\\"ask\\\":891.0975717808224,\\\"price\\\":882.2748235453687,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.38966004598027604,\\\"bias\\\":0.11033995401972396,\\\"bid\\\":864.7338803591839,\\\"ask\\\":882.2032516795715,\\\"price\\\":873.4685660193777,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.3963821866381628,\\\"bias\\\":0.11223149364647084,\\\"bid\\\":893.6635641723261,\\\"ask\\\":911.717373549545,\\\"price\\\":902.690468860935,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"APHE\\\",\\\"forecast\\\":0.39091529536531383,\\\"bias\\\":0.11953144008416017,\\\"bid\\\":885.090211773537,\\\"ask\\\":902.9708221123967,\\\"price\\\":894.0305169429666,\\\"maxShares\\\":6700000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0176,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"SYSC\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5575579961401488,\\\"bias\\\":0.05755799614014878,\\\"bid\\\":2364.978046069411,\\\"ask\\\":2412.7553803334395,\\\"price\\\":2388.8667132014252,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5567816245675307,\\\"bias\\\":0.056781624567530664,\\\"bid\\\":2396.8780747007695,\\\"ask\\\":2445.2998539876535,\\\"price\\\":2421.0889643442115,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5573309987770264,\\\"bias\\\":0.05733099877702641,\\\"bid\\\":2420.068376274133,\\\"ask\\\":2468.958646501893,\\\"price\\\":2444.513511388013,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5568318235578468,\\\"bias\\\":0.05683182355784677,\\\"bid\\\":2441.1396673370164,\\\"ask\\\":2490.4556202125113,\\\"price\\\":2465.797643774764,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5570495522615428,\\\"bias\\\":0.057049552261542846,\\\"bid\\\":2431.82309684276,\\\"ask\\\":2480.950836172917,\\\"price\\\":2456.3869665078387,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5565898855635375,\\\"bias\\\":0.0565898855635375,\\\"bid\\\":2451.417082224696,\\\"ask\\\":2500.9406596433764,\\\"price\\\":2476.1788709340362,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5563684001856821,\\\"bias\\\":0.05636840018568212,\\\"bid\\\":2461.011606640693,\\\"ask\\\":2510.729012835455,\\\"price\\\":2485.870309738074,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.555693576624418,\\\"bias\\\":0.055693576624417984,\\\"bid\\\":2490.474011307755,\\\"ask\\\":2540.786617596801,\\\"price\\\":2515.630314452278,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5555919761207706,\\\"bias\\\":0.0555919761207706,\\\"bid\\\":2495.0173254420984,\\\"ask\\\":2545.4217158550705,\\\"price\\\":2520.2195206485844,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.555517401367502,\\\"bias\\\":0.05551740136750205,\\\"bid\\\":2498.364306687039,\\\"ask\\\":2548.836312882737,\\\"price\\\":2523.600309784888,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5548390648727525,\\\"bias\\\":0.054839064872752474,\\\"bid\\\":2468.206651482659,\\\"ask\\\":2518.069412118672,\\\"price\\\":2493.1380318006654,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5540505017261829,\\\"bias\\\":0.054050501726182865,\\\"bid\\\":2503.698445662477,\\\"ask\\\":2554.2782122415165,\\\"price\\\":2528.9883289519967,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.553523043887287,\\\"bias\\\":0.053523043887287014,\\\"bid\\\":2479.5019498257043,\\\"ask\\\":2529.5928983070316,\\\"price\\\":2504.547424066368,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5533023537210306,\\\"bias\\\":0.05330235372103065,\\\"bid\\\":2489.725615331208,\\\"ask\\\":2540.023102509616,\\\"price\\\":2514.874358920412,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5538548845566221,\\\"bias\\\":0.05385488455662213,\\\"bid\\\":2515.5340473909287,\\\"ask\\\":2566.35291703519,\\\"price\\\":2540.9434822130593,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.553524385218742,\\\"bias\\\":0.05352438521874203,\\\"bid\\\":2500.190752256282,\\\"ask\\\":2550.6996563422676,\\\"price\\\":2525.445204299275,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.5530644736012316,\\\"bias\\\":0.053064473601231565,\\\"bid\\\":2521.673797194691,\\\"ask\\\":2572.6167021885235,\\\"price\\\":2547.145249691607,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4588503848368296,\\\"bias\\\":0.05365174905721892,\\\"bid\\\":2314.1556636455043,\\\"ask\\\":2360.906283113091,\\\"price\\\":2337.530973379298,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"SYSC\\\",\\\"forecast\\\":0.4924355333041865,\\\"bias\\\":0.05829881050725155,\\\"bid\\\":2238.098305802682,\\\"ask\\\":2283.3124129906155,\\\"price\\\":2260.705359396649,\\\"maxShares\\\":6900000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.015,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"CTK\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5584605081630752,\\\"bias\\\":0.05846050816307524,\\\"bid\\\":1757.9248141843116,\\\"ask\\\":1793.4384467940956,\\\"price\\\":1775.6816304892036,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5589283782643648,\\\"bias\\\":0.05892837826436481,\\\"bid\\\":1771.993806855015,\\\"ask\\\":1807.791661538955,\\\"price\\\":1789.892734196985,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5592666640039323,\\\"bias\\\":0.05926666400393232,\\\"bid\\\":1761.8795167134053,\\\"ask\\\":1797.4730423035753,\\\"price\\\":1779.6762795084903,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5589604868797875,\\\"bias\\\":0.0589604868797875,\\\"bid\\\":1770.9815509274647,\\\"ask\\\":1806.7589559967066,\\\"price\\\":1788.8702534620857,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5590945112898315,\\\"bias\\\":0.05909451128983145,\\\"bid\\\":1775.0072089591833,\\\"ask\\\":1810.8659404533084,\\\"price\\\":1792.936574706246,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5588119994237988,\\\"bias\\\":0.05881199942379878,\\\"bid\\\":1783.4929479538757,\\\"ask\\\":1819.5231085186003,\\\"price\\\":1801.508028236238,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5589485743379522,\\\"bias\\\":0.0589485743379522,\\\"bid\\\":1779.3608650494862,\\\"ask\\\":1815.3075491918999,\\\"price\\\":1797.334207120693,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5585298515642673,\\\"bias\\\":0.058529851564267266,\\\"bid\\\":1766.8108761995827,\\\"ask\\\":1802.5040252137155,\\\"price\\\":1784.6574507066491,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5584664986026463,\\\"bias\\\":0.0584664986026463,\\\"bid\\\":1764.9005403076108,\\\"ask\\\":1800.5550966774617,\\\"price\\\":1782.7278184925362,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5584199629781348,\\\"bias\\\":0.05841996297813479,\\\"bid\\\":1766.3052891946963,\\\"ask\\\":1801.9882243299426,\\\"price\\\":1784.1467567623195,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5579964408773023,\\\"bias\\\":0.05799644087730227,\\\"bid\\\":1753.5924234324557,\\\"ask\\\":1789.0185329967476,\\\"price\\\":1771.3054782146016,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5575016216962116,\\\"bias\\\":0.05750162169621165,\\\"bid\\\":1768.5538788908216,\\\"ask\\\":1804.2822400805353,\\\"price\\\":1786.4180594856784,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5571686810163118,\\\"bias\\\":0.057168681016311784,\\\"bid\\\":1778.7939993171356,\\\"ask\\\":1814.7292316265728,\\\"price\\\":1796.7616154718542,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5573085428113272,\\\"bias\\\":0.057308542811327245,\\\"bid\\\":1774.4528433654607,\\\"ask\\\":1810.3003755546617,\\\"price\\\":1792.3766094600612,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5576610177522838,\\\"bias\\\":0.05766101775228383,\\\"bid\\\":1785.3665768249673,\\\"ask\\\":1821.434588477997,\\\"price\\\":1803.4005826514822,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5578709729089671,\\\"bias\\\":0.057870972908967144,\\\"bid\\\":1778.8892894988307,\\\"ask\\\":1814.8264468624434,\\\"price\\\":1796.857868180637,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5575759320092932,\\\"bias\\\":0.05757593200929323,\\\"bid\\\":1769.8660633564868,\\\"ask\\\":1805.6209333232846,\\\"price\\\":1787.7434983398857,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.5352508692811275,\\\"bias\\\":0.05929872599691943,\\\"bid\\\":1748.7940521434282,\\\"ask\\\":1784.1232249140023,\\\"price\\\":1766.4586385287143,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"CTK\\\",\\\"forecast\\\":0.4918242417862572,\\\"bias\\\":0.05977853165661928,\\\"bid\\\":1748.465520149262,\\\"ask\\\":1783.788055909853,\\\"price\\\":1766.1267880295577,\\\"maxShares\\\":25600000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0089,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"NTLK\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4480376553561177,\\\"bias\\\":0.051962344643882274,\\\"bid\\\":160.39491608772212,\\\"ask\\\":165.28004043557152,\\\"price\\\":162.83747826164682,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4467713724910698,\\\"bias\\\":0.053228627508930204,\\\"bid\\\":156.5791999329404,\\\"ask\\\":161.34810957556803,\\\"price\\\":158.96365475425424,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.44584094238698957,\\\"bias\\\":0.05415905761301043,\\\"bid\\\":159.3161858014181,\\\"ask\\\":164.16845541973538,\\\"price\\\":161.74232061057674,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.44669288950907793,\\\"bias\\\":0.05330711049092207,\\\"bid\\\":161.8223033739477,\\\"ask\\\":166.75090144625065,\\\"price\\\":164.2866024100992,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4463239227261855,\\\"bias\\\":0.053676077273814515,\\\"bid\\\":160.70994461547224,\\\"ask\\\":165.60466374081656,\\\"price\\\":163.15730417814441,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4471052798966651,\\\"bias\\\":0.0528947201033349,\\\"bid\\\":158.4040727198519,\\\"ask\\\":163.2285622443144,\\\"price\\\":160.81631748208315,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.44673125836920347,\\\"bias\\\":0.053268741630796534,\\\"bid\\\":159.52415678720456,\\\"ask\\\":164.38276054722093,\\\"price\\\":161.95345866721274,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.44788339768736823,\\\"bias\\\":0.052116602312631766,\\\"bid\\\":162.97447394516354,\\\"ask\\\":167.93816350694516,\\\"price\\\":165.45631872605435,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.44771162865142505,\\\"bias\\\":0.05228837134857495,\\\"bid\\\":162.43909738722326,\\\"ask\\\":167.38648106399148,\\\"price\\\":164.91278922560738,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.44758490348807045,\\\"bias\\\":0.05241509651192955,\\\"bid\\\":162.04636471054303,\\\"ask\\\":166.98178698599102,\\\"price\\\":164.51407584826703,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4464278578888813,\\\"bias\\\":0.053572142111118715,\\\"bid\\\":165.62348362532472,\\\"ask\\\":170.66785368497926,\\\"price\\\":168.145668655152,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4478196150994822,\\\"bias\\\":0.052180384900517796,\\\"bid\\\":169.92623629670896,\\\"ask\\\":175.1016546610757,\\\"price\\\":172.51394547889234,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4487395843922719,\\\"bias\\\":0.051260415607728094,\\\"bid\\\":172.92213062999792,\\\"ask\\\":178.1887945070537,\\\"price\\\":175.55546256852583,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.4491214427783116,\\\"bias\\\":0.05087855722168838,\\\"bid\\\":174.21029353172355,\\\"ask\\\":179.5161907966491,\\\"price\\\":176.86324216418635,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.45007428929864374,\\\"bias\\\":0.04992571070135626,\\\"bid\\\":177.47287960063417,\\\"ask\\\":182.8781449691814,\\\"price\\\":180.1755122849078,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.44453890494091863,\\\"bias\\\":0.05546109505908137,\\\"bid\\\":179.4405643623758,\\\"ask\\\":184.90575921605222,\\\"price\\\":182.17316178921402,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.44539987721200835,\\\"bias\\\":0.054600122787991645,\\\"bid\\\":176.69753028092015,\\\"ask\\\":182.07918094937455,\\\"price\\\":179.38835561514736,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.46436739775356267,\\\"bias\\\":0.06881049584851939,\\\"bid\\\":134.48923180119826,\\\"ask\\\":138.58535053626017,\\\"price\\\":136.53729116872915,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"NTLK\\\",\\\"forecast\\\":0.5103766545808145,\\\"bias\\\":0.06451446743790912,\\\"bid\\\":165.7618954486687,\\\"ask\\\":170.8104810968515,\\\"price\\\":168.28618827276009,\\\"maxShares\\\":4100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0271,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"OMGA\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5255396000779968,\\\"bias\\\":0.025539600077996827,\\\"bid\\\":734.0976995341492,\\\"ask\\\":751.9300323163553,\\\"price\\\":743.0138659252523,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5278362076513754,\\\"bias\\\":0.0278362076513754,\\\"bid\\\":740.6989553533521,\\\"ask\\\":758.6916425279275,\\\"price\\\":749.6952989406398,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5260407330660309,\\\"bias\\\":0.02604073306603094,\\\"bid\\\":735.9519615832014,\\\"ask\\\":753.8293371682184,\\\"price\\\":744.8906493757099,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5245291728382163,\\\"bias\\\":0.024529172838216318,\\\"bid\\\":731.7047088900518,\\\"ask\\\":749.478912344871,\\\"price\\\":740.5918106174614,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5251556651413495,\\\"bias\\\":0.02515566514134948,\\\"bid\\\":729.8406446210096,\\\"ask\\\":747.5695671624106,\\\"price\\\":738.7051058917101,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5238044162622886,\\\"bias\\\":0.023804416262288575,\\\"bid\\\":733.761019404963,\\\"ask\\\":751.5851737224925,\\\"price\\\":742.6730965637278,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5244255319826425,\\\"bias\\\":0.024425531982642523,\\\"bid\\\":731.8514391455341,\\\"ask\\\":749.6292068980571,\\\"price\\\":740.7403230217956,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5224761035293484,\\\"bias\\\":0.022476103529348368,\\\"bid\\\":737.6924256184936,\\\"ask\\\":755.6120796821008,\\\"price\\\":746.6522526502972,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5222027526240288,\\\"bias\\\":0.02220275262402882,\\\"bid\\\":736.7963452647471,\\\"ask\\\":754.6942321942552,\\\"price\\\":745.7452887295011,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5224013142288212,\\\"bias\\\":0.02240131422882119,\\\"bid\\\":737.455270161125,\\\"ask\\\":755.3691633634195,\\\"price\\\":746.4122167622722,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5205765855734851,\\\"bias\\\":0.020576585573485073,\\\"bid\\\":731.4967665768077,\\\"ask\\\":749.2659188013456,\\\"price\\\":740.3813426890766,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.518604033451728,\\\"bias\\\":0.018604033451728008,\\\"bid\\\":724.5509373781672,\\\"ask\\\":742.1513650067866,\\\"price\\\":733.3511511924769,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5198143636633888,\\\"bias\\\":0.019814363663388845,\\\"bid\\\":729.2646780391448,\\\"ask\\\":746.9796094894883,\\\"price\\\":738.1221437643165,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5203590306446297,\\\"bias\\\":0.02035903064462974,\\\"bid\\\":731.2693166813998,\\\"ask\\\":749.0329438072637,\\\"price\\\":740.1511302443317,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5189520893711064,\\\"bias\\\":0.018952089371106373,\\\"bid\\\":726.2504542569319,\\\"ask\\\":743.8921656963715,\\\"price\\\":735.0713099766517,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5197274635443947,\\\"bias\\\":0.019727463544394697,\\\"bid\\\":729.2217142301371,\\\"ask\\\":746.9356020252011,\\\"price\\\":738.0786581276691,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5208575266151493,\\\"bias\\\":0.02085752661514928,\\\"bid\\\":733.3989695969478,\\\"ask\\\":751.2143291822988,\\\"price\\\":742.3066493896233,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.481952440064161,\\\"bias\\\":0.024614543722746574,\\\"bid\\\":775.6693364669044,\\\"ask\\\":794.5115065835095,\\\"price\\\":785.0904215252071,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"OMGA\\\",\\\"forecast\\\":0.5001832377869608,\\\"bias\\\":0.024860425122145924,\\\"bid\\\":751.9703737638374,\\\"ask\\\":770.2368605759146,\\\"price\\\":761.103617169876,\\\"maxShares\\\":11400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.01,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"FNS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.47781703528913266,\\\"bias\\\":0.022182964710867337,\\\"bid\\\":1116.538506271358,\\\"ask\\\":1139.0948397313855,\\\"price\\\":1127.8166730013718,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4762810642973582,\\\"bias\\\":0.023718935702641775,\\\"bid\\\":1124.2695322148465,\\\"ask\\\":1146.9820480171666,\\\"price\\\":1135.6257901160066,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.47510303764158196,\\\"bias\\\":0.02489696235841804,\\\"bid\\\":1129.8533387305777,\\\"ask\\\":1152.678658704933,\\\"price\\\":1141.2659987177553,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.47621581771037635,\\\"bias\\\":0.023784182289623645,\\\"bid\\\":1134.9032651348527,\\\"ask\\\":1157.8306038244457,\\\"price\\\":1146.3669344796492,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.47574806987501056,\\\"bias\\\":0.02425193012498944,\\\"bid\\\":1132.6757064850397,\\\"ask\\\":1155.5580439897878,\\\"price\\\":1144.1168752374138,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.47474498755643596,\\\"bias\\\":0.02525501244356404,\\\"bid\\\":1128.0101518973863,\\\"ask\\\":1150.7982357741014,\\\"price\\\":1139.4041938357439,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.47423758424493834,\\\"bias\\\":0.025762415755061663,\\\"bid\\\":1125.7483891607822,\\\"ask\\\":1148.490780861,\\\"price\\\":1137.1195850108911,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.47265436675443157,\\\"bias\\\":0.027345633245568435,\\\"bid\\\":1132.666624455852,\\\"ask\\\":1155.548778485263,\\\"price\\\":1144.1077014705575,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4729104482530653,\\\"bias\\\":0.027089551746934726,\\\"bid\\\":1131.6069174354334,\\\"ask\\\":1154.4676632422097,\\\"price\\\":1143.0372903388215,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4730969921297853,\\\"bias\\\":0.026903007870214712,\\\"bid\\\":1130.828207327308,\\\"ask\\\":1153.6732216167488,\\\"price\\\":1142.2507144720284,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4714095986834439,\\\"bias\\\":0.028590401316556102,\\\"bid\\\":1137.9209164964368,\\\"ask\\\":1160.909217839799,\\\"price\\\":1149.415067168118,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.46929919199985504,\\\"bias\\\":0.030700808000144963,\\\"bid\\\":1146.3205044594745,\\\"ask\\\":1169.4784944485548,\\\"price\\\":1157.8994994540146,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4677612594344858,\\\"bias\\\":0.03223874056551418,\\\"bid\\\":1152.062905878194,\\\"ask\\\":1175.3369039767433,\\\"price\\\":1163.6999049274687,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4670788897703941,\\\"bias\\\":0.03292111022960592,\\\"bid\\\":1149.6295839206698,\\\"ask\\\":1172.8544239998753,\\\"price\\\":1161.2420039602725,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4688306879557678,\\\"bias\\\":0.031169312044232178,\\\"bid\\\":1143.5445544021509,\\\"ask\\\":1166.6464645920933,\\\"price\\\":1155.095509497122,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.46981259907361184,\\\"bias\\\":0.030187400926388164,\\\"bid\\\":1139.9534166444776,\\\"ask\\\":1162.9827785968912,\\\"price\\\":1151.4680976206844,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.46848107849964654,\\\"bias\\\":0.03151892150035346,\\\"bid\\\":1134.9473356919439,\\\"ask\\\":1157.8755646958216,\\\"price\\\":1146.4114501938827,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.4878785308583945,\\\"bias\\\":0.031555500455149876,\\\"bid\\\":1182.8005947192432,\\\"ask\\\":1206.6955562287228,\\\"price\\\":1194.7480754739831,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"FNS\\\",\\\"forecast\\\":0.5040190560310549,\\\"bias\\\":0.025922333809656917,\\\"bid\\\":1142.781991065853,\\\"ask\\\":1165.8684959358698,\\\"price\\\":1154.3252435008608,\\\"maxShares\\\":7100000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0077,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"JGN\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5622142820709695,\\\"bias\\\":0.06221428207096946,\\\"bid\\\":583.404630153714,\\\"ask\\\":598.7729385468209,\\\"price\\\":591.0887843502675,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5639653666832682,\\\"bias\\\":0.06396536668326824,\\\"bid\\\":599.8251502754546,\\\"ask\\\":615.6260154296205,\\\"price\\\":607.7255828525375,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5652567596772318,\\\"bias\\\":0.06525675967723177,\\\"bid\\\":611.9349846566814,\\\"ask\\\":628.0548525402414,\\\"price\\\":619.9949185984615,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5664423703308096,\\\"bias\\\":0.06644237033080957,\\\"bid\\\":623.0528618037301,\\\"ask\\\":639.4656018309813,\\\"price\\\":631.2592318173557,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5669735265751383,\\\"bias\\\":0.06697352657513833,\\\"bid\\\":618.1115299817802,\\\"ask\\\":634.3941032133164,\\\"price\\\":626.2528165975483,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5658475041309092,\\\"bias\\\":0.06584750413090923,\\\"bid\\\":607.8910884984109,\\\"ask\\\":623.9044302420367,\\\"price\\\":615.8977593702239,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5653097315677433,\\\"bias\\\":0.06530973156774333,\\\"bid\\\":612.8556980626174,\\\"ask\\\":628.9998197947633,\\\"price\\\":620.9277589286904,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5669412256602284,\\\"bias\\\":0.06694122566022842,\\\"bid\\\":628.1653682592838,\\\"ask\\\":644.7127842417979,\\\"price\\\":636.4390762505409,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5671960479947151,\\\"bias\\\":0.06719604799471512,\\\"bid\\\":630.5565788175722,\\\"ask\\\":647.1669851491395,\\\"price\\\":638.8617819833559,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.567007953310015,\\\"bias\\\":0.06700795331001497,\\\"bid\\\":632.321628168207,\\\"ask\\\":648.9785302273492,\\\"price\\\":640.6500791977782,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5652995300142135,\\\"bias\\\":0.06529953001421351,\\\"bid\\\":616.6008778411265,\\\"ask\\\":632.8436567913486,\\\"price\\\":624.7222673162375,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5672588689552653,\\\"bias\\\":0.06725886895526534,\\\"bid\\\":635.1022378168851,\\\"ask\\\":651.832387951879,\\\"price\\\":643.4673128843821,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5658892786924867,\\\"bias\\\":0.06588927869248673,\\\"bid\\\":622.4277606292326,\\\"ask\\\":638.824033958878,\\\"price\\\":630.6258972940553,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5653223740552206,\\\"bias\\\":0.06532237405522057,\\\"bid\\\":627.7830656328094,\\\"ask\\\":644.320410826784,\\\"price\\\":636.0517382297968,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5667353187783177,\\\"bias\\\":0.06673531877831773,\\\"bid\\\":614.4914115870379,\\\"ask\\\":630.6786220239811,\\\"price\\\":622.5850168055096,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5658807356542584,\\\"bias\\\":0.06588073565425845,\\\"bid\\\":622.3603181845482,\\\"ask\\\":638.7548149148402,\\\"price\\\":630.5575665496942,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5670619649543329,\\\"bias\\\":0.06706196495433292,\\\"bid\\\":633.5191225868138,\\\"ask\\\":650.2075695850478,\\\"price\\\":641.8633460859309,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.5520038674696711,\\\"bias\\\":0.10408924018754429,\\\"bid\\\":521.5194559077082,\\\"ask\\\":535.2575570765027,\\\"price\\\":528.3885064921054,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"JGN\\\",\\\"forecast\\\":0.48929378423011194,\\\"bias\\\":0.07664935072735068,\\\"bid\\\":549.2503317068383,\\\"ask\\\":563.7189321368056,\\\"price\\\":556.4846319218218,\\\"maxShares\\\":6200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0313,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"SGC\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.46652057078331294,\\\"bias\\\":0.03347942921668706,\\\"bid\\\":4405.087106448741,\\\"ask\\\":4530.180857950328,\\\"price\\\":4467.633982199534,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.47073538834659767,\\\"bias\\\":0.029264611653402328,\\\"bid\\\":4460.543961414492,\\\"ask\\\":4587.212552610846,\\\"price\\\":4523.878257012669,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.47337804046302145,\\\"bias\\\":0.026621959536978546,\\\"bid\\\":4420.624847680818,\\\"ask\\\":4546.159833213336,\\\"price\\\":4483.392340447077,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4755414577972712,\\\"bias\\\":0.024458542202728806,\\\"bid\\\":4456.548786376629,\\\"ask\\\":4583.103924326472,\\\"price\\\":4519.826355351551,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.47466689411134083,\\\"bias\\\":0.02533310588865917,\\\"bid\\\":4440.67028902474,\\\"ask\\\":4566.774516299276,\\\"price\\\":4503.722402662008,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4727618018372956,\\\"bias\\\":0.027238198162704397,\\\"bid\\\":4474.064878288232,\\\"ask\\\":4601.117430612848,\\\"price\\\":4537.59115445054,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4737567979775573,\\\"bias\\\":0.02624320202244268,\\\"bid\\\":4490.408386983579,\\\"ask\\\":4617.925055173781,\\\"price\\\":4554.16672107868,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4766890961428637,\\\"bias\\\":0.0233109038571363,\\\"bid\\\":4540.582204429209,\\\"ask\\\":4669.523686907929,\\\"price\\\":4605.052945668569,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4762921910774114,\\\"bias\\\":0.023707808922588613,\\\"bid\\\":4532.864284923727,\\\"ask\\\":4661.586597274502,\\\"price\\\":4597.2254410991145,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4765890211566223,\\\"bias\\\":0.023410978843377728,\\\"bid\\\":4538.539589921923,\\\"ask\\\":4667.423067120518,\\\"price\\\":4602.98132852122,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.47391926004742685,\\\"bias\\\":0.02608073995257315,\\\"bid\\\":4590.296573561011,\\\"ask\\\":4720.649823114468,\\\"price\\\":4655.47319833774,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.47741954274716825,\\\"bias\\\":0.022580457252831754,\\\"bid\\\":4529.506302359543,\\\"ask\\\":4658.133256179084,\\\"price\\\":4593.819779269314,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4753629062899191,\\\"bias\\\":0.024637093710080882,\\\"bid\\\":4488.623750053931,\\\"ask\\\":4616.089738899275,\\\"price\\\":4552.356744476603,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.47631103747191517,\\\"bias\\\":0.023688962528084834,\\\"bid\\\":4471.416002300298,\\\"ask\\\":4598.393332994424,\\\"price\\\":4534.904667647361,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4740191517939934,\\\"bias\\\":0.0259808482060066,\\\"bid\\\":4428.569988598725,\\\"ask\\\":4554.330596794227,\\\"price\\\":4491.450292696476,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4755072637180372,\\\"bias\\\":0.0244927362819628,\\\"bid\\\":4403.348810985912,\\\"ask\\\":4528.3931991275,\\\"price\\\":4465.871005056706,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.4774715137797021,\\\"bias\\\":0.022528486220297905,\\\"bid\\\":4368.316117600455,\\\"ask\\\":4492.365662522171,\\\"price\\\":4430.340890061313,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5527579205782329,\\\"bias\\\":0.06277818908839883,\\\"bid\\\":3511.8039351481475,\\\"ask\\\":3611.530618904888,\\\"price\\\":3561.6672770265163,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"SGC\\\",\\\"forecast\\\":0.5098724568766388,\\\"bias\\\":0.058740103443063574,\\\"bid\\\":4228.32340214665,\\\"ask\\\":4348.397494702538,\\\"price\\\":4288.360448424595,\\\"maxShares\\\":2300000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.013999999999999999,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"CTYS\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.33566656587652,\\\"bias\\\":0.16433343412348,\\\"bid\\\":139.19721476750317,\\\"ask\\\":140.87766404035028,\\\"price\\\":140.03743940392673,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.33810484025651905,\\\"bias\\\":0.16189515974348095,\\\"bid\\\":137.16209139087988,\\\"ask\\\":138.81797176984423,\\\"price\\\":137.99003158036206,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.33638183340895267,\\\"bias\\\":0.16361816659104733,\\\"bid\\\":135.71768440590427,\\\"ask\\\":137.35612727599568,\\\"price\\\":136.53690584094997,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3379489009553646,\\\"bias\\\":0.16205109904463538,\\\"bid\\\":134.4301675172599,\\\"ask\\\":136.05306692390687,\\\"price\\\":135.24161722058338,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3372659826382924,\\\"bias\\\":0.16273401736170762,\\\"bid\\\":134.99668526570986,\\\"ask\\\":136.6264239208291,\\\"price\\\":135.81155459326948,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3387083033225624,\\\"bias\\\":0.1612916966774376,\\\"bid\\\":136.19316842653444,\\\"ask\\\":137.8373515463719,\\\"price\\\":137.01525998645317,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3380139013595511,\\\"bias\\\":0.16198609864044888,\\\"bid\\\":135.60933558965607,\\\"ask\\\":137.24647042574853,\\\"price\\\":136.4279030077023,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3358807338550679,\\\"bias\\\":0.1641192661449321,\\\"bid\\\":133.84673065740543,\\\"ask\\\":135.46258656071416,\\\"price\\\":134.6546586090598,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3362100727343453,\\\"bias\\\":0.16378992726565472,\\\"bid\\\":133.57867771610398,\\\"ask\\\":135.19129756780745,\\\"price\\\":134.38498764195572,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3364517632388504,\\\"bias\\\":0.1635482367611496,\\\"bid\\\":133.38185774659317,\\\"ask\\\":134.99210150208526,\\\"price\\\":134.18697962433922,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3386498994701181,\\\"bias\\\":0.1613501005298819,\\\"bid\\\":131.6129412459589,\\\"ask\\\":133.20182987267066,\\\"price\\\":132.40738555931478,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.33609773674460014,\\\"bias\\\":0.16390226325539986,\\\"bid\\\":133.69473507032353,\\\"ask\\\":135.30875601684653,\\\"price\\\":134.50174554358503,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3343383324118658,\\\"bias\\\":0.16566166758813422,\\\"bid\\\":132.27483450086106,\\\"ask\\\":133.87171379060987,\\\"price\\\":133.07327414573547,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.33358695715108555,\\\"bias\\\":0.16641304284891445,\\\"bid\\\":131.67759742997842,\\\"ask\\\":133.26726661424377,\\\"price\\\":132.4724320221111,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3316894204698754,\\\"bias\\\":0.16831057953012463,\\\"bid\\\":133.17906069835848,\\\"ask\\\":134.78685619974712,\\\"price\\\":133.9829584490528,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.33282560689207213,\\\"bias\\\":0.16717439310792787,\\\"bid\\\":134.07809058054906,\\\"ask\\\":135.69673956140073,\\\"price\\\":134.8874150709749,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.33124550485542054,\\\"bias\\\":0.16875449514457946,\\\"bid\\\":135.34537236969192,\\\"ask\\\":136.9793205270725,\\\"price\\\":136.1623464483822,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.586607952534278,\\\"bias\\\":0.18343223531685093,\\\"bid\\\":146.3386815907136,\\\"ask\\\":148.1053457547867,\\\"price\\\":147.22201367275017,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"CTYS\\\",\\\"forecast\\\":0.3377746405812732,\\\"bias\\\":0.17149935416173223,\\\"bid\\\":149.84647250448626,\\\"ask\\\":151.65548424498309,\\\"price\\\":150.75097837473461,\\\"maxShares\\\":18000000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0165,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"MDYN\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5730528158366259,\\\"bias\\\":0.07305281583662593,\\\"bid\\\":16386.087406808772,\\\"ask\\\":16650.379139176657,\\\"price\\\":16518.233272992715,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5735520717908771,\\\"bias\\\":0.07355207179087708,\\\"bid\\\":16498.072846535353,\\\"ask\\\":16764.170795673017,\\\"price\\\":16631.121821104185,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5731915116646094,\\\"bias\\\":0.07319151166460935,\\\"bid\\\":16417.59205354465,\\\"ask\\\":16682.391925376018,\\\"price\\\":16549.991989460334,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5735143956905762,\\\"bias\\\":0.07351439569057616,\\\"bid\\\":16490.018187373105,\\\"ask\\\":16755.986222653315,\\\"price\\\":16623.00220501321,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5733716973836915,\\\"bias\\\":0.07337169738369154,\\\"bid\\\":16458.0715336548,\\\"ask\\\":16723.524300326648,\\\"price\\\":16590.797916990723,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5736712283310882,\\\"bias\\\":0.07367122833108819,\\\"bid\\\":16391.156648828346,\\\"ask\\\":16655.530143164284,\\\"price\\\":16523.343395996315,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5738173203492164,\\\"bias\\\":0.0738173203492164,\\\"bid\\\":16423.660751291805,\\\"ask\\\":16688.558505344896,\\\"price\\\":16556.10962831835,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5733695708205672,\\\"bias\\\":0.07336957082056716,\\\"bid\\\":16523.280817765335,\\\"ask\\\":16789.78534708413,\\\"price\\\":16656.533082424732,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5734373863354815,\\\"bias\\\":0.07343738633548147,\\\"bid\\\":16508.022447980613,\\\"ask\\\":16774.280874560944,\\\"price\\\":16641.15166127078,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5734872999772824,\\\"bias\\\":0.07348729997728243,\\\"bid\\\":16496.809959297992,\\\"ask\\\":16762.88753928667,\\\"price\\\":16629.84874929233,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.573942236367771,\\\"bias\\\":0.07394223636777097,\\\"bid\\\":16395.311823102456,\\\"ask\\\":16659.752336378304,\\\"price\\\":16527.53207974038,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5744809541991746,\\\"bias\\\":0.07448095419917455,\\\"bid\\\":16276.725173327437,\\\"ask\\\":16539.252998703687,\\\"price\\\":16407.98908601556,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5748492150790736,\\\"bias\\\":0.0748492150790736,\\\"bid\\\":16357.203212292612,\\\"ask\\\":16621.029070555396,\\\"price\\\":16489.116141424005,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5746928456820763,\\\"bias\\\":0.07469284568207635,\\\"bid\\\":16391.375461128697,\\\"ask\\\":16655.75248469529,\\\"price\\\":16523.563972911994,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5743005518570969,\\\"bias\\\":0.07430055185709694,\\\"bid\\\":16305.73620656335,\\\"ask\\\":16568.7319518305,\\\"price\\\":16437.234079196925,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5745315773295958,\\\"bias\\\":0.07453157732959581,\\\"bid\\\":16356.436239300772,\\\"ask\\\":16620.24972703143,\\\"price\\\":16488.3429831661,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.5742070992686107,\\\"bias\\\":0.07420709926861069,\\\"bid\\\":16427.64504643611,\\\"ask\\\":16692.607063314113,\\\"price\\\":16560.126054875112,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.540160021127139,\\\"bias\\\":0.0842952504178871,\\\"bid\\\":16591.159695811963,\\\"ask\\\":16858.759045744428,\\\"price\\\":16724.959370778197,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"MDYN\\\",\\\"forecast\\\":0.4864130287443038,\\\"bias\\\":0.08405099480842293,\\\"bid\\\":16418.39805203064,\\\"ask\\\":16683.210923837592,\\\"price\\\":16550.804487934118,\\\"maxShares\\\":3400000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0076,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}],[\\\"TITN\\\",{\\\"shortTermRecords\\\":[{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6292272735794229,\\\"bias\\\":0.12922727357942287,\\\"bid\\\":33419.049618700374,\\\"ask\\\":33754.91946411444,\\\"price\\\":33586.98454140741,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:46 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6284951785951693,\\\"bias\\\":0.12849517859516935,\\\"bid\\\":33230.79140480806,\\\"ask\\\":33564.76920787145,\\\"price\\\":33397.78030633976,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:49 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6279730270393622,\\\"bias\\\":0.1279730270393622,\\\"bid\\\":33096.30164740556,\\\"ask\\\":33428.927794615665,\\\"price\\\":33262.614721010614,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:55 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.628441011295303,\\\"bias\\\":0.12844101129530305,\\\"bid\\\":33217.331433597086,\\\"ask\\\":33551.17396056791,\\\"price\\\":33384.2526970825,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:58 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6286476811348193,\\\"bias\\\":0.12864768113481928,\\\"bid\\\":33270.780254089106,\\\"ask\\\":33605.15995513523,\\\"price\\\":33437.97010461217,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:04 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6282123276214505,\\\"bias\\\":0.12821232762145052,\\\"bid\\\":33383.3710986995,\\\"ask\\\":33718.88236602311,\\\"price\\\":33551.12673236131,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:07 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6280015690145123,\\\"bias\\\":0.12800156901451232,\\\"bid\\\":33328.58474373563,\\\"ask\\\":33663.54539442644,\\\"price\\\":33496.065069081036,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:10 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6273579644553373,\\\"bias\\\":0.1273579644553373,\\\"bid\\\":33496.16416684007,\\\"ask\\\":33832.80903283846,\\\"price\\\":33664.48659983926,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:16 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.627455545654623,\\\"bias\\\":0.12745554565462303,\\\"bid\\\":33521.82880340085,\\\"ask\\\":33858.73160544508,\\\"price\\\":33690.28020442297,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:19 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6275273561198003,\\\"bias\\\":0.12752735611980026,\\\"bid\\\":33502.95271129633,\\\"ask\\\":33839.66580387217,\\\"price\\\":33671.30925758425,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:22 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6268729178320968,\\\"bias\\\":0.12687291783209675,\\\"bid\\\":33674.88143053358,\\\"ask\\\":34013.32244993593,\\\"price\\\":33844.10194023476,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:28 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6261066781238966,\\\"bias\\\":0.12610667812389664,\\\"bid\\\":33472.72535383855,\\\"ask\\\":33809.134653877125,\\\"price\\\":33640.93000385784,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:31 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6255898151792154,\\\"bias\\\":0.1255898151792154,\\\"bid\\\":33336.093482332726,\\\"ask\\\":33671.12959773305,\\\"price\\\":33503.61154003289,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:38 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.62580730848257,\\\"bias\\\":0.12580730848257005,\\\"bid\\\":33278.46267232763,\\\"ask\\\":33612.919583607305,\\\"price\\\":33445.69112796747,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:41 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6252595800387166,\\\"bias\\\":0.12525958003871662,\\\"bid\\\":33423.34742340608,\\\"ask\\\":33759.260462837294,\\\"price\\\":33591.30394312169,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:44 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6255824337151258,\\\"bias\\\":0.12558243371512579,\\\"bid\\\":33509.49532993913,\\\"ask\\\":33846.2741774762,\\\"price\\\":33677.884753707665,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:50 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.6260356451699348,\\\"bias\\\":0.12603564516993482,\\\"bid\\\":33630.42694974552,\\\"ask\\\":33968.421190446476,\\\"price\\\":33799.424070096,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:05:53 PM\\\"}],\\\"longTermRecords\\\":[{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.5766010473598657,\\\"bias\\\":0.129657324052323,\\\"bid\\\":32265.475836249614,\\\"ask\\\":32589.751975307387,\\\"price\\\":32427.613905778475,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 12:57:53 PM\\\"},{\\\"symbol\\\":\\\"TITN\\\",\\\"forecast\\\":0.4806534560799441,\\\"bias\\\":0.13369219551676736,\\\"bid\\\":31980.021593065794,\\\"ask\\\":32301.428845257415,\\\"price\\\":32140.72521916163,\\\"maxShares\\\":5200000,\\\"investedShares\\\":0,\\\"averagePrice\\\":0,\\\"sharesShort\\\":0,\\\"averageShortPrice\\\":0,\\\"volatility\\\":0.0063,\\\"dateObserved\\\":\\\"6/27/2023, 1:04:43 PM\\\"}]}]]\"}}],[\"data/salesLedger.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/salesLedger.txt\",\"text\":\"[]\"}}],[\"data/enviroment.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/enviroment.txt\",\"text\":\"[{\\\"name\\\":\\\"n00dles\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"n00dles\\\",\\\"ip\\\":\\\"17.4.3.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":4,\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.5859999999999994,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1095250,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000}},{\\\"name\\\":\\\"foodnstuff\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"foodnstuff\\\",\\\"ip\\\":\\\"4.8.7.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":902029.26211107,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5}},{\\\"name\\\":\\\"sigma-cosmetics\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"ip\\\":\\\"0.0.8.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.34,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":2976.239211533883,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10}},{\\\"name\\\":\\\"joesguns\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"joesguns\\\",\\\"ip\\\":\\\"60.9.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":10.839999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":5776518.270680499,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"hong-fang-tea\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"ip\\\":\\\"11.5.9.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.504,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69309.43680218975,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"harakiri-sushi\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"ip\\\":\\\"25.2.1.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":10.839999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":14608930.459730223,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40}},{\\\"name\\\":\\\"iron-gym\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"iron-gym\\\",\\\"ip\\\":\\\"84.0.4.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":15.839999999999996,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":215879.48679550574,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20}},{\\\"name\\\":\\\"CLOUD-000\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-000\\\",\\\"ip\\\":\\\"21.2.7.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-001\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-001\\\",\\\"ip\\\":\\\"20.9.6.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-002\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-002\\\",\\\"ip\\\":\\\"75.6.9.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-003\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-003\\\",\\\"ip\\\":\\\"21.0.3.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-004\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-004\\\",\\\"ip\\\":\\\"17.5.7.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-005\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-005\\\",\\\"ip\\\":\\\"15.8.0.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-006\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-006\\\",\\\"ip\\\":\\\"1.0.7.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-007\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-007\\\",\\\"ip\\\":\\\"15.8.1.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-008\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-008\\\",\\\"ip\\\":\\\"14.9.7.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-009\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-009\\\",\\\"ip\\\":\\\"92.4.8.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-010\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-010\\\",\\\"ip\\\":\\\"26.4.6.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":511,\\\"maxRam\\\":512,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-011\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-011\\\",\\\"ip\\\":\\\"92.6.2.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":511,\\\"maxRam\\\":512,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-012\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-012\\\",\\\"ip\\\":\\\"52.1.3.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":32767,\\\"maxRam\\\":32768,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"darkweb\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"darkweb\\\",\\\"ip\\\":\\\"16.5.7.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"darkweb\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-013\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-013\\\",\\\"ip\\\":\\\"7.0.2.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":8191.75,\\\"maxRam\\\":8192,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-014\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-014\\\",\\\"ip\\\":\\\"86.8.3.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":2047.5,\\\"maxRam\\\":2048,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-015\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-015\\\",\\\"ip\\\":\\\"48.6.7.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":4095,\\\"maxRam\\\":4096,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-016\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-016\\\",\\\"ip\\\":\\\"32.3.2.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":16383.5,\\\"maxRam\\\":16384,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-017\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-017\\\",\\\"ip\\\":\\\"15.5.4.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":8191.75,\\\"maxRam\\\":8192,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-018\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-018\\\",\\\"ip\\\":\\\"92.5.9.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":2047.5,\\\"maxRam\\\":2048,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-019\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-019\\\",\\\"ip\\\":\\\"53.2.3.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":32767,\\\"maxRam\\\":32768,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-020\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-020\\\",\\\"ip\\\":\\\"91.4.8.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":1023.75,\\\"maxRam\\\":1024,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-021\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-021\\\",\\\"ip\\\":\\\"62.4.2.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":8191.75,\\\"maxRam\\\":8192,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-022\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-022\\\",\\\"ip\\\":\\\"47.1.5.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":65535.75,\\\"maxRam\\\":65536,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-023\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-023\\\",\\\"ip\\\":\\\"66.9.7.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":32767,\\\"maxRam\\\":32768,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"CLOUD-024\\\",\\\"lineage\\\":[],\\\"server\\\":{\\\"hostname\\\":\\\"CLOUD-024\\\",\\\"ip\\\":\\\"18.7.0.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":16383.5,\\\"maxRam\\\":16384,\\\"organizationName\\\":\\\"\\\",\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"zer0\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zer0\\\",\\\"ip\\\":\\\"45.4.9.2\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.503999999999998,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":40079.13146805154,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40}},{\\\"name\\\":\\\"neo-net\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"neo-net\\\",\\\"ip\\\":\\\"94.8.6.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":8,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":12729392.053014085,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25}},{\\\"name\\\":\\\"silver-helix\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"silver-helix\\\",\\\"ip\\\":\\\"13.1.2.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":19.36,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":152207508.58893892,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"netlink\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"netlink\\\",\\\"ip\\\":\\\"96.3.3.0\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":71.28800000000001,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":6875000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":390,\\\"serverGrowth\\\":69}},{\\\"name\\\":\\\"crush-fitness\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"crush-fitness\\\",\\\"ip\\\":\\\"91.3.1.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":36,\\\"hackDifficulty\\\":21.36,\\\"minDifficulty\\\":12,\\\"moneyAvailable\\\":622334493.6336447,\\\"moneyMax\\\":1309590575,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":225,\\\"serverGrowth\\\":27}},{\\\"name\\\":\\\"rothman-uni\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"rothman-uni\\\",\\\"ip\\\":\\\"45.3.7.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Rothman University\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":34.724000000000004,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4097783340.218918,\\\"moneyMax\\\":4713801950,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":411,\\\"serverGrowth\\\":44}},{\\\"name\\\":\\\"zb-institute\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-institute\\\",\\\"ip\\\":\\\"61.2.0.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":815787773,\\\"moneyMax\\\":20394694325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":737,\\\"serverGrowth\\\":77}},{\\\"name\\\":\\\"summit-uni\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"summit-uni\\\",\\\"ip\\\":\\\"56.9.4.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Summit University\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":58.22,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":10650481.800444117,\\\"moneyMax\\\":5449988725,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":450,\\\"serverGrowth\\\":42}},{\\\"name\\\":\\\"catalyst\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"catalyst\\\",\\\"ip\\\":\\\"14.5.4.5\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":69,\\\"hackDifficulty\\\":97.896,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":300854668.39904785,\\\"moneyMax\\\":8794374550,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":447,\\\"serverGrowth\\\":32}},{\\\"name\\\":\\\"millenium-fitness\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"summit-uni\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"ip\\\":\\\"45.4.5.7\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":128,\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":51,\\\"hackDifficulty\\\":72.4,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":478,\\\"serverGrowth\\\":43}},{\\\"name\\\":\\\"aevum-police\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"zb-institute\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"aevum-police\\\",\\\"ip\\\":\\\"46.3.7.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":79,\\\"hackDifficulty\\\":66.48400000000001,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1276378.2936697882,\\\"moneyMax\\\":6782380550,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":414,\\\"serverGrowth\\\":41}},{\\\"name\\\":\\\"alpha-ent\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"alpha-ent\\\",\\\"ip\\\":\\\"22.9.9.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":681785045,\\\"moneyMax\\\":17044626125,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":547,\\\"serverGrowth\\\":57}},{\\\"name\\\":\\\"snap-fitness\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"snap-fitness\\\",\\\"ip\\\":\\\"34.0.6.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":45,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":747,\\\"serverGrowth\\\":56}},{\\\"name\\\":\\\"deltaone\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"deltaone\\\",\\\"ip\\\":\\\"93.1.3.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1491989183,\\\"moneyMax\\\":37299729575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":832,\\\"serverGrowth\\\":52}},{\\\"name\\\":\\\"icarus\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"icarus\\\",\\\"ip\\\":\\\"41.2.7.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":93,\\\"hackDifficulty\\\":93,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":964182653,\\\"moneyMax\\\":24104566325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":887,\\\"serverGrowth\\\":88}},{\\\"name\\\":\\\"zeus-med\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zeus-med\\\",\\\"ip\\\":\\\"56.5.0.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1352646025,\\\"moneyMax\\\":33816150625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":72}},{\\\"name\\\":\\\"infocomm\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"infocomm\\\",\\\"ip\\\":\\\"39.8.8.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"InfoComm\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":660564126,\\\"moneyMax\\\":16514103150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":894,\\\"serverGrowth\\\":72}},{\\\"name\\\":\\\"taiyang-digital\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"ip\\\":\\\"54.9.3.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":894326016,\\\"moneyMax\\\":22358150400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":885,\\\"serverGrowth\\\":77}},{\\\"name\\\":\\\"microdyne\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"microdyne\\\",\\\"ip\\\":\\\"58.0.9.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":681264157,\\\"moneyMax\\\":17031603925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":857,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"applied-energetics\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"applied-energetics\\\",\\\"ip\\\":\\\"81.9.7.1\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":746716497,\\\"moneyMax\\\":18667912425,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":778,\\\"serverGrowth\\\":73}},{\\\"name\\\":\\\"fulcrumtech\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"ip\\\":\\\"95.5.3.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1677942062,\\\"moneyMax\\\":41948551550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":984,\\\"serverGrowth\\\":89}},{\\\"name\\\":\\\"helios\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"helios\\\",\\\"ip\\\":\\\"54.1.7.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":734498368,\\\"moneyMax\\\":18362459200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"omnitek\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\",\\\"helios\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omnitek\\\",\\\"ip\\\":\\\"7.2.7.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":512,\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":93,\\\"hackDifficulty\\\":93,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":19265106089,\\\"moneyMax\\\":481627652225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":982,\\\"serverGrowth\\\":97}},{\\\"name\\\":\\\".\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\",\\\"helios\\\"],\\\"server\\\":{\\\"hostname\\\":\\\".\\\",\\\"ip\\\":\\\"94.1.5.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\".\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":519,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"clarkinc\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\",\\\"helios\\\",\\\".\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"clarkinc\\\",\\\"ip\\\":\\\"69.4.9.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":18270314919,\\\"moneyMax\\\":456757872975,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":984,\\\"serverGrowth\\\":69}},{\\\"name\\\":\\\"The-Cave\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\",\\\"helios\\\",\\\".\\\",\\\"clarkinc\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"The-Cave\\\",\\\"ip\\\":\\\"38.7.1.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Helios\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"blade\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\",\\\"helios\\\",\\\"omnitek\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"blade\\\",\\\"ip\\\":\\\"39.2.2.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":512,\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":20051959342,\\\"moneyMax\\\":501298983550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1135,\\\"serverGrowth\\\":75}},{\\\"name\\\":\\\"nwo\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\",\\\"helios\\\",\\\"omnitek\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nwo\\\",\\\"ip\\\":\\\"21.0.1.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"NWO\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34809733253,\\\"moneyMax\\\":870243331325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1093,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"ecorp\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\",\\\"helios\\\",\\\"omnitek\\\",\\\"blade\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"ecorp\\\",\\\"ip\\\":\\\"57.4.5.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"ECorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":61769230798,\\\"moneyMax\\\":1544230769950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1064,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"fulcrumassets\\\",\\\"lineage\\\":[\\\"hong-fang-tea\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"netlink\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"deltaone\\\",\\\"icarus\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\",\\\"helios\\\",\\\"omnitek\\\",\\\"blade\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"ip\\\":\\\"19.8.4.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"nectar-net\\\",\\\"lineage\\\":[\\\"sigma-cosmetics\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nectar-net\\\",\\\"ip\\\":\\\"1.4.2.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":11.671999999999997,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":10585.030541540165,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25}},{\\\"name\\\":\\\"omega-net\\\",\\\"lineage\\\":[\\\"sigma-cosmetics\\\",\\\"nectar-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omega-net\\\",\\\"ip\\\":\\\"91.6.3.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Omega Software\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":26,\\\"hackDifficulty\\\":9,\\\"minDifficulty\\\":9,\\\"moneyAvailable\\\":603806.2590368557,\\\"moneyMax\\\":1552464800,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":184,\\\"serverGrowth\\\":32}},{\\\"name\\\":\\\"the-hub\\\",\\\"lineage\\\":[\\\"sigma-cosmetics\\\",\\\"nectar-net\\\",\\\"omega-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"the-hub\\\",\\\"ip\\\":\\\"89.8.7.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"The Hub\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":35,\\\"hackDifficulty\\\":29.184,\\\"minDifficulty\\\":12,\\\"moneyAvailable\\\":3787377950,\\\"moneyMax\\\":3787377950,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":282,\\\"serverGrowth\\\":51}},{\\\"name\\\":\\\"johnson-ortho\\\",\\\"lineage\\\":[\\\"sigma-cosmetics\\\",\\\"nectar-net\\\",\\\"omega-net\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"ip\\\":\\\"40.5.9.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":18,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":105113061.9646449,\\\"moneyMax\\\":2010741125,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":253,\\\"serverGrowth\\\":35}},{\\\"name\\\":\\\"max-hardware\\\",\\\"lineage\\\":[\\\"foodnstuff\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"max-hardware\\\",\\\"ip\\\":\\\"47.4.5.8\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":10.839999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":20891902.02167699,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30}},{\\\"name\\\":\\\"phantasy\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"phantasy\\\",\\\"ip\\\":\\\"62.8.0.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":14.02,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":28017264.574823968,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35}},{\\\"name\\\":\\\"computek\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"computek\\\",\\\"ip\\\":\\\"58.0.6.1\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"CompuTek\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":60,\\\"hackDifficulty\\\":70.20400000000001,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":5705272850,\\\"moneyMax\\\":5705272850,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":64}},{\\\"name\\\":\\\"avmnite-02h\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"ip\\\":\\\"94.3.6.9\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"NiteSec\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":207,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"syscore\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"syscore\\\",\\\"ip\\\":\\\"22.5.8.0\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":569977353,\\\"moneyMax\\\":14249433825,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":574,\\\"serverGrowth\\\":67}},{\\\"name\\\":\\\"I.I.I.I\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"ip\\\":\\\"24.4.8.3\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":352,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"lexo-corp\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"lexo-corp\\\",\\\"ip\\\":\\\"5.9.3.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":780702055,\\\"moneyMax\\\":19517551375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":653,\\\"serverGrowth\\\":57}},{\\\"name\\\":\\\"rho-construction\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"rho-construction\\\",\\\"ip\\\":\\\"17.6.9.4\\\",\\\"sshPortOpen\\\":true,\\\"ftpPortOpen\\\":true,\\\"smtpPortOpen\\\":true,\\\"httpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":47.152,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":14512260900,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":487,\\\"serverGrowth\\\":55}},{\\\"name\\\":\\\"galactic-cyber\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"ip\\\":\\\"17.1.6.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":812646569,\\\"moneyMax\\\":20316164225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":89}},{\\\"name\\\":\\\"aerocorp\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"aerocorp\\\",\\\"ip\\\":\\\"62.1.2.9\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1014381374,\\\"moneyMax\\\":25359534350,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":881,\\\"serverGrowth\\\":62}},{\\\"name\\\":\\\"global-pharm\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"global-pharm\\\",\\\"ip\\\":\\\"22.0.4.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1619686237,\\\"moneyMax\\\":40492155925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":90}},{\\\"name\\\":\\\"omnia\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"omnia\\\",\\\"ip\\\":\\\"8.8.5.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":968727432,\\\"moneyMax\\\":24218185800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":861,\\\"serverGrowth\\\":66}},{\\\"name\\\":\\\"unitalife\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"unitalife\\\",\\\"ip\\\":\\\"59.9.2.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1071173533,\\\"moneyMax\\\":26779338325,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":73}},{\\\"name\\\":\\\"defcomm\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"defcomm\\\",\\\"ip\\\":\\\"81.4.1.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"DefComm\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":883555429,\\\"moneyMax\\\":22088885725,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1010,\\\"serverGrowth\\\":72}},{\\\"name\\\":\\\"univ-energy\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"univ-energy\\\",\\\"ip\\\":\\\"93.5.7.6\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1160224383,\\\"moneyMax\\\":29005609575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":831,\\\"serverGrowth\\\":89}},{\\\"name\\\":\\\"solaris\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"solaris\\\",\\\"ip\\\":\\\"81.8.3.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":32,\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812805639,\\\"moneyMax\\\":20320140975,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":812,\\\"serverGrowth\\\":76}},{\\\"name\\\":\\\"zb-def\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"zb-def\\\",\\\"ip\\\":\\\"93.8.0.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":65,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":1063103783,\\\"moneyMax\\\":26577594575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":777,\\\"serverGrowth\\\":75}},{\\\"name\\\":\\\"titan-labs\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\",\\\"zb-def\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"titan-labs\\\",\\\"ip\\\":\\\"4.5.8.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":801708534,\\\"moneyMax\\\":20042713350,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":801,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"run4theh111z\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\",\\\"zb-def\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"run4theh111z\\\",\\\"ip\\\":\\\"37.2.1.7\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":256,\\\"organizationName\\\":\\\"The Runners\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":506,\\\"serverGrowth\\\":1}},{\\\"name\\\":\\\"vitalife\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\",\\\"zb-def\\\",\\\"run4theh111z\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"vitalife\\\",\\\"ip\\\":\\\"9.5.9.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":16,\\\"organizationName\\\":\\\"VitaLife\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":712344021,\\\"moneyMax\\\":17808600525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":863,\\\"serverGrowth\\\":64}},{\\\"name\\\":\\\"4sigma\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"vitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"4sigma\\\",\\\"ip\\\":\\\"7.0.3.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":21599514281,\\\"moneyMax\\\":539987857025,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1158,\\\"serverGrowth\\\":82}},{\\\"name\\\":\\\"kuai-gong\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"vitalife\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"kuai-gong\\\",\\\"ip\\\":\\\"0.7.7.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":24173431776,\\\"moneyMax\\\":604335794400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1049,\\\"serverGrowth\\\":96}},{\\\"name\\\":\\\"powerhouse-fitness\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"vitalife\\\",\\\"kuai-gong\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"ip\\\":\\\"79.0.8.2\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":64,\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":972,\\\"serverGrowth\\\":50}},{\\\"name\\\":\\\"b-and-a\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"vitalife\\\",\\\"4sigma\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"b-and-a\\\",\\\"ip\\\":\\\"39.2.5.4\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":23126286967,\\\"moneyMax\\\":578157174175,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1073,\\\"serverGrowth\\\":78}},{\\\"name\\\":\\\"megacorp\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\",\\\"zb-def\\\",\\\"run4theh111z\\\",\\\"vitalife\\\",\\\"4sigma\\\",\\\"b-and-a\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"megacorp\\\",\\\"ip\\\":\\\"25.0.6.5\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":46706710855,\\\"moneyMax\\\":1167667771375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1109,\\\"serverGrowth\\\":99}},{\\\"name\\\":\\\"stormtech\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"univ-energy\\\",\\\"zb-def\\\",\\\"titan-labs\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"stormtech\\\",\\\"ip\\\":\\\"94.3.7.8\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1000355401,\\\"moneyMax\\\":25008885025,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":996,\\\"serverGrowth\\\":71}},{\\\"name\\\":\\\"nova-med\\\",\\\"lineage\\\":[\\\"foodnstuff\\\",\\\"max-hardware\\\",\\\"phantasy\\\",\\\"avmnite-02h\\\",\\\"I.I.I.I\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\",\\\"unitalife\\\",\\\"defcomm\\\"],\\\"server\\\":{\\\"hostname\\\":\\\"nova-med\\\",\\\"ip\\\":\\\"62.3.4.3\\\",\\\"sshPortOpen\\\":false,\\\"ftpPortOpen\\\":false,\\\"smtpPortOpen\\\":false,\\\"httpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"hasAdminRights\\\":false,\\\"cpuCores\\\":1,\\\"isConnectedTo\\\":false,\\\"ramUsed\\\":0,\\\"maxRam\\\":0,\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1135882957,\\\"moneyMax\\\":28397073925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":803,\\\"serverGrowth\\\":83}}]\"}}],[\"data/recordOfWhoIsBeingHacked.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/recordOfWhoIsBeingHacked.txt\",\"text\":\"[[\\\"CLOUD-023\\\",{\\\"name\\\":\\\"rho-construction\\\",\\\"moneyThreshhold\\\":10884195675,\\\"securityThreshholdTarget\\\":23,\\\"hackDifficulty\\\":47.152,\\\"moneyAvailable\\\":0,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-012\\\",{\\\"name\\\":\\\"netlink\\\",\\\"moneyThreshhold\\\":5156250000,\\\"securityThreshholdTarget\\\":26,\\\"hackDifficulty\\\":71.28800000000001,\\\"moneyAvailable\\\":6875000000,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-016\\\",{\\\"name\\\":\\\"millenium-fitness\\\",\\\"moneyThreshhold\\\":4687500000,\\\"securityThreshholdTarget\\\":22,\\\"hackDifficulty\\\":72.4,\\\"moneyAvailable\\\":6250000000,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-021\\\",{\\\"name\\\":\\\"summit-uni\\\",\\\"moneyThreshhold\\\":4087491543.75,\\\"securityThreshholdTarget\\\":21,\\\"hackDifficulty\\\":58.22,\\\"moneyAvailable\\\":10650481.800444117,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-017\\\",{\\\"name\\\":\\\"rothman-uni\\\",\\\"moneyThreshhold\\\":3535351462.5,\\\"securityThreshholdTarget\\\":21,\\\"hackDifficulty\\\":34.724000000000004,\\\"moneyAvailable\\\":4097783340.218918,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-019\\\",{\\\"name\\\":\\\"catalyst\\\",\\\"moneyThreshhold\\\":6595780912.5,\\\"securityThreshholdTarget\\\":28,\\\"hackDifficulty\\\":97.896,\\\"moneyAvailable\\\":300854668.39904785,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-022\\\",{\\\"name\\\":\\\"computek\\\",\\\"moneyThreshhold\\\":4278954637.5,\\\"securityThreshholdTarget\\\":25,\\\"hackDifficulty\\\":70.20400000000001,\\\"moneyAvailable\\\":5705272850,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-015\\\",{\\\"name\\\":\\\"johnson-ortho\\\",\\\"moneyThreshhold\\\":1508055843.75,\\\"securityThreshholdTarget\\\":23,\\\"hackDifficulty\\\":18,\\\"moneyAvailable\\\":105113061.9646449,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false}],[\\\"CLOUD-014\\\",{\\\"name\\\":\\\"silver-helix\\\",\\\"moneyThreshhold\\\":843750000,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":19.36,\\\"moneyAvailable\\\":152207508.58893892,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-024\\\",{\\\"name\\\":\\\"aevum-police\\\",\\\"moneyThreshhold\\\":5086785412.5,\\\"securityThreshholdTarget\\\":31,\\\"hackDifficulty\\\":66.48400000000001,\\\"moneyAvailable\\\":1276378.2936697882,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-011\\\",{\\\"name\\\":\\\"iron-gym\\\",\\\"moneyThreshhold\\\":375000000,\\\"securityThreshholdTarget\\\":15,\\\"hackDifficulty\\\":15.839999999999996,\\\"moneyAvailable\\\":215879.48679550574,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-018\\\",{\\\"name\\\":\\\"crush-fitness\\\",\\\"moneyThreshhold\\\":982192931.25,\\\"securityThreshholdTarget\\\":17,\\\"hackDifficulty\\\":21.36,\\\"moneyAvailable\\\":622334493.6336447,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-020\\\",{\\\"name\\\":\\\"phantasy\\\",\\\"moneyThreshhold\\\":450000000,\\\"securityThreshholdTarget\\\":12,\\\"hackDifficulty\\\":14.02,\\\"moneyAvailable\\\":28017264.574823968,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"CLOUD-010\\\",{\\\"name\\\":\\\"max-hardware\\\",\\\"moneyThreshhold\\\":187500000,\\\"securityThreshholdTarget\\\":10,\\\"hackDifficulty\\\":10.839999999999998,\\\"moneyAvailable\\\":20891902.02167699,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}],[\\\"home\\\",{\\\"name\\\":\\\"omega-net\\\",\\\"moneyThreshhold\\\":1164348600,\\\"securityThreshholdTarget\\\":14,\\\"hackDifficulty\\\":9,\\\"moneyAvailable\\\":603806.2590368557,\\\"isWeakening\\\":false,\\\"isGrowing\\\":true,\\\"isHacking\\\":false}],[\\\"CLOUD-013\\\",{\\\"name\\\":\\\"the-hub\\\",\\\"moneyThreshhold\\\":2840533462.5,\\\"securityThreshholdTarget\\\":17,\\\"hackDifficulty\\\":29.184,\\\"moneyAvailable\\\":3787377950,\\\"isWeakening\\\":true,\\\"isGrowing\\\":false,\\\"isHacking\\\":false}]]\"}}],[\"data/dataOnWhatHappensEachRound.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"data/dataOnWhatHappensEachRound.txt\",\"text\":\"[{\\\"countOfFreeMachines\\\":50,\\\"newThreadsHacking\\\":38550,\\\"newThreadsWeakening\\\":64363,\\\"newThreadsGrowing\\\":32747,\\\"totalThreadsAllocated\\\":135660},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":585,\\\"totalThreadsAllocated\\\":585},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":1170,\\\"totalThreadsAllocated\\\":1170},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":36,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":37741,\\\"totalThreadsAllocated\\\":37741},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":585,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":585},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":2322,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":2322},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":292,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":292,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":1170,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":1170},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":585,\\\"totalThreadsAllocated\\\":585},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":585,\\\"totalThreadsAllocated\\\":585},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":1170,\\\"totalThreadsAllocated\\\":1170},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":585,\\\"totalThreadsAllocated\\\":585},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":36,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":585,\\\"newThreadsGrowing\\\":1170,\\\"totalThreadsAllocated\\\":1755},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":36,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":2614,\\\"totalThreadsAllocated\\\":2614},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":292,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":1170,\\\"totalThreadsAllocated\\\":1170},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":1170,\\\"totalThreadsAllocated\\\":1170},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":36,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":2322,\\\"newThreadsGrowing\\\":585,\\\"totalThreadsAllocated\\\":2907},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":18724,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":18724},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":585,\\\"totalThreadsAllocated\\\":585},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":37449,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":37449},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":4681,\\\"totalThreadsAllocated\\\":4681},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":2340,\\\"totalThreadsAllocated\\\":2340},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":36,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":1170,\\\"newThreadsGrowing\\\":585,\\\"totalThreadsAllocated\\\":1755},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":9362,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":9362},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":292,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":1170,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":1170},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":292,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":585,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":585},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":292,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":292},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":9344,\\\"totalThreadsAllocated\\\":9344},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0},{\\\"countOfFreeMachines\\\":35,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":4681,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":4681},{\\\"countOfFreeMachines\\\":34,\\\"newThreadsHacking\\\":0,\\\"newThreadsWeakening\\\":0,\\\"newThreadsGrowing\\\":0,\\\"totalThreadsAllocated\\\":0}]\"}}]]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":2,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[500,0,2,\"?\"],\"dataMap\":{},\"filename\":\"scripts/coordinator.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":886.6100000000647,\"ramUsage\":5.1,\"server\":\"home\",\"scriptKey\":\"scripts/coordinator.js*[500,0,2,\\\"?\\\"]\",\"title\":\"scripts/coordinator.js 500 0 2 ?\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"omega-net\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js omega-net\",\"threads\":9344,\"temporary\":false}}]}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-835458.cct\",\"type\":\"Array Jumping Game II\",\"data\":[7,5,0,1,4,1,4,3,3,2,5,2,5,4],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"57.4.5.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":61769230798,\"moneyMax\":1544230769950,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1064,\"serverGrowth\":99,\"runningScripts\":[]}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-361575-NiteSec.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"389882\",-25],\"reward\":{\"name\":\"NiteSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"25.0.6.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":46706710855,\"moneyMax\":1167667771375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1109,\"serverGrowth\":99,\"runningScripts\":[]}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"39.2.5.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":23126286967,\"moneyMax\":578157174175,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1073,\"serverGrowth\":78,\"runningScripts\":[]}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"39.2.2.2\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\",\"ecorp\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":20051959342,\"moneyMax\":501298983550,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1135,\"serverGrowth\":75,\"runningScripts\":[]}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"21.0.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":34809733253,\"moneyMax\":870243331325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1093,\"serverGrowth\":71,\"runningScripts\":[]}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"69.4.9.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\".\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":59,\"minDifficulty\":20,\"moneyAvailable\":18270314919,\"moneyMax\":456757872975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":984,\"serverGrowth\":69,\"runningScripts\":[]}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-694271.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[10,19],[13,21],[25,34],[13,18]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"7.2.7.3\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"helios\",\"blade\",\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":93,\"hackDifficulty\":93,\"minDifficulty\":31,\"moneyAvailable\":19265106089,\"moneyMax\":481627652225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":982,\"serverGrowth\":97,\"runningScripts\":[]}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-666129-Sector12.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[3,-5,-8,-5,-1,2,4,7,8,-1,10,3,-2,-2,9,7,-10,4,-7,-8,1,-8,-10,7,-9],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"7.0.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"vitalife\",\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":21599514281,\"moneyMax\":539987857025,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1158,\"serverGrowth\":82,\"runningScripts\":[]}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"0.7.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"vitalife\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":97,\"minDifficulty\":32,\"moneyAvailable\":24173431776,\"moneyMax\":604335794400,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1049,\"serverGrowth\":96,\"runningScripts\":[]}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-831123.cct\",\"type\":\"Total Ways to Sum\",\"data\":10,\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"95.5.3.8\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":1677942062,\"moneyMax\":41948551550,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":984,\"serverGrowth\":89,\"runningScripts\":[]}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-426456.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"400893515\",-42],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"19.8.4.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1125,\"serverGrowth\":1,\"runningScripts\":[]}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"94.3.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1000355401,\"moneyMax\":25008885025,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":996,\"serverGrowth\":71,\"runningScripts\":[]}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-675448.cct\",\"type\":\"Encryption II: Vigenère Cipher\",\"data\":[\"ENTERARRAYSHIFTMODEMCACHE\",\"SPYWARE\"],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"81.4.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":883555429,\"moneyMax\":22088885725,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1010,\"serverGrowth\":72,\"runningScripts\":[]}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-177715.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1000100000000000000011011100000100101011011101001010011111101001\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-326339.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0],[1,0,1],[0,0,1],[0,0,0],[0,1,1],[0,1,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,1,0],[1,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"39.8.8.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":660564126,\"moneyMax\":16514103150,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":894,\"serverGrowth\":72,\"runningScripts\":[]}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-963655-Sector12.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,1],[0,0,0,0,0,1,0,1],[0,0,0,1,0,0,0,0]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"54.1.7.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":734498368,\"moneyMax\":18362459200,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":897,\"serverGrowth\":78,\"runningScripts\":[]}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"9.5.9.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"run4theh111z\",\"4sigma\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":712344021,\"moneyMax\":17808600525,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":863,\"serverGrowth\":64,\"runningScripts\":[]}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-205033.cct\",\"type\":\"Total Ways to Sum\",\"data\":57,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"41.2.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\",\"infocomm\",\"taiyang-digital\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":93,\"hackDifficulty\":93,\"minDifficulty\":31,\"moneyAvailable\":964182653,\"moneyMax\":24104566325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":887,\"serverGrowth\":88,\"runningScripts\":[]}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-710487.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[3,13],[17,25],[4,8],[2,5],[20,28],[1,5],[5,7],[14,23],[18,28]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"univ-energy\",\"httpPortOpen\":false,\"ip\":\"93.5.7.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":1160224383,\"moneyMax\":29005609575,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":831,\"serverGrowth\":89,\"runningScripts\":[]}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-168192.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[11,12],[15,25],[24,27],[12,14],[5,9],[3,11],[10,15],[16,20],[22,25],[17,18],[20,28],[24,26],[6,10],[6,10],[18,19],[6,16],[9,16]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"4.5.8.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zb-def\",\"stormtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":801708534,\"moneyMax\":20042713350,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":801,\"serverGrowth\":71,\"runningScripts\":[]}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"58.0.9.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"taiyang-digital\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":681264157,\"moneyMax\":17031603925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":857,\"serverGrowth\":71,\"runningScripts\":[]}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"54.9.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"icarus\",\"microdyne\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":894326016,\"moneyMax\":22358150400,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":885,\"serverGrowth\":77,\"runningScripts\":[]}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"17.1.6.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":812646569,\"moneyMax\":20316164225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":841,\"serverGrowth\":89,\"runningScripts\":[]}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-717114.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[13,14],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-791231.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"97826\",24],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"62.1.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1014381374,\"moneyMax\":25359534350,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":881,\"serverGrowth\":62,\"runningScripts\":[]}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"8.8.5.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":968727432,\"moneyMax\":24218185800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":861,\"serverGrowth\":66,\"runningScripts\":[]}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-def\",\"httpPortOpen\":false,\"ip\":\"93.8.0.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"univ-energy\",\"titan-labs\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":1063103783,\"moneyMax\":26577594575,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":777,\"serverGrowth\":75,\"runningScripts\":[]}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"81.9.7.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"taiyang-digital\",\"fulcrumtech\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":746716497,\"moneyMax\":18667912425,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":778,\"serverGrowth\":73,\"runningScripts\":[]}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-24056.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,0,3,2,0,2,0,6,10,0,3,7,10,4,2,8,1],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-673761.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[11,[[1,10],[5,6],[2,4],[3,8],[2,9],[0,10],[0,7],[1,2],[9,10],[2,5],[3,10],[4,6],[2,8],[4,7],[7,9],[1,7],[4,10],[1,6]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-92756.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-9,7,-6,7,5,4,-1,-8,-8,3,8,-8,9,5,7,-8,1,4,-8,-5],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"81.8.3.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":812805639,\"moneyMax\":20320140975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":812,\"serverGrowth\":76,\"runningScripts\":[]}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"93.1.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"snap-fitness\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1491989183,\"moneyMax\":37299729575,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":832,\"serverGrowth\":52,\"runningScripts\":[]}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"global-pharm\",\"httpPortOpen\":false,\"ip\":\"22.0.4.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"lexo-corp\",\"omnia\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":1619686237,\"moneyMax\":40492155925,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":796,\"serverGrowth\":90,\"runningScripts\":[]}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-844803.cct\",\"type\":\"Encryption II: Vigenère Cipher\",\"data\":[\"TABLELINUXPRINTMODEMCLOUD\",\"VERSION\"],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nova-med\",\"httpPortOpen\":false,\"ip\":\"62.3.4.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"defcomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":1135882957,\"moneyMax\":28397073925,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":803,\"serverGrowth\":83,\"runningScripts\":[]}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"56.5.0.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":1352646025,\"moneyMax\":33816150625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":841,\"serverGrowth\":72,\"runningScripts\":[]}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-577625.cct\",\"type\":\"Total Ways to Sum\",\"data\":35,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-748928.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[19,21],[8,10],[19,21],[10,16],[20,30],[4,11],[17,20],[5,15],[3,11],[4,11],[23,33],[23,33],[3,7],[6,9],[3,5],[19,24]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"unitalife\",\"httpPortOpen\":false,\"ip\":\"59.9.2.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"univ-energy\",\"solaris\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1071173533,\"moneyMax\":26779338325,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":820,\"serverGrowth\":73,\"runningScripts\":[]}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-422103.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"5L5wWL5wqRR48HRR48WHRR48WA1WNCirg3AQ3AQ3AQ3AhjAhjAd45jAd45jAdb3wIAdb3wV4BEuyHIrkoRCOCOOOO\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-456358.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"jW61nzzzzzz61zzzz661zzzz661vxErZ1vxErZ1vxTlgeE1vxTeE1voooob3oWWoob3oWWooob3oWWoo3oWWoo3oo3oo3\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"lexo-corp\",\"httpPortOpen\":false,\"ip\":\"5.9.3.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\",\"aerocorp\",\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":780702055,\"moneyMax\":19517551375,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":653,\"serverGrowth\":57,\"runningScripts\":[]}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"17.6.9.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":47.152,\"minDifficulty\":18,\"moneyAvailable\":0,\"moneyMax\":14512260900,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":487,\"serverGrowth\":55,\"runningScripts\":[]}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"alpha-ent\",\"httpPortOpen\":false,\"ip\":\"22.9.9.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"rothman-uni\",\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":681785045,\"moneyMax\":17044626125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":547,\"serverGrowth\":57,\"runningScripts\":[]}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-598168.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[16,20],[17,24],[20,25],[3,6],[20,24],[23,31],[18,28],[22,30],[20,21],[4,10],[12,18]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-387304.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,0,0,0,7,1,4,0],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"46.3.7.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":66.48400000000001,\"minDifficulty\":26,\"moneyAvailable\":1276378.2936697882,\"moneyMax\":6782380550,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":414,\"serverGrowth\":41,\"runningScripts\":[]}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-149708.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0],[0,0],[0,1],[0,0],[1,0],[0,0],[0,1],[0,1],[0,0]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"45.3.7.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"netlink\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":49,\"hackDifficulty\":34.724000000000004,\"minDifficulty\":16,\"moneyAvailable\":4097783340.218918,\"moneyMax\":4713801950,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":411,\"serverGrowth\":44,\"runningScripts\":[]}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"61.2.0.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"netlink\",\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":815787773,\"moneyMax\":20394694325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":737,\"serverGrowth\":77,\"runningScripts\":[]}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"56.9.4.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"netlink\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":49,\"hackDifficulty\":58.22,\"minDifficulty\":16,\"moneyAvailable\":10650481.800444117,\"moneyMax\":5449988725,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":450,\"serverGrowth\":42,\"runningScripts\":[]}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-196640.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"2212413080\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-781551.cct\",\"type\":\"Encryption I: Caesar Cipher\",\"data\":[\"CACHE FRAME PRINT LOGIC SHELL\",20],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"syscore\",\"httpPortOpen\":false,\"ip\":\"22.5.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":569977353,\"moneyMax\":14249433825,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":574,\"serverGrowth\":67,\"runningScripts\":[]}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"14.5.4.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":97.896,\"minDifficulty\":23,\"moneyAvailable\":300854668.39904785,\"moneyMax\":8794374550,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":447,\"serverGrowth\":32,\"runningScripts\":[]}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"89.8.7.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":35,\"hackDifficulty\":29.184,\"minDifficulty\":12,\"moneyAvailable\":3787377950,\"moneyMax\":3787377950,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":282,\"serverGrowth\":51,\"runningScripts\":[]}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":true,\"ip\":\"58.0.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":70.20400000000001,\"minDifficulty\":20,\"moneyAvailable\":5705272850,\"moneyMax\":5705272850,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":379,\"serverGrowth\":64,\"runningScripts\":[]}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-988821.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[10,[[0,7],[7,9],[6,7],[3,6],[3,9],[1,5],[2,8],[0,8],[5,9],[5,8],[0,3],[3,8],[2,4],[7,8]]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"96.3.3.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"neo-net\",\"rothman-uni\",\"zb-institute\",\"summit-uni\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":71.28800000000001,\"minDifficulty\":21,\"moneyAvailable\":6875000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":390,\"serverGrowth\":69,\"runningScripts\":[]}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"40.5.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":53,\"hackDifficulty\":18,\"minDifficulty\":18,\"moneyAvailable\":105113061.9646449,\"moneyMax\":2010741125,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":253,\"serverGrowth\":35,\"runningScripts\":[]}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"17.4.3.8\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":3.5859999999999994,\"minDifficulty\":1,\"moneyAvailable\":1095250,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000,\"runningScripts\":[]}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-327336.cct\",\"type\":\"Array Jumping Game II\",\"data\":[1,6,2,6,3,5,3,1,1,2,2,2,2,5,5,4,3,2,5,1,1,1,2],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"4.8.7.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"foodnstuff\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"foodnstuff\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"foodnstuff\"}}]]},\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":902029.26211107,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5,\"runningScripts\":[]}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"0.0.8.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"sigma-cosmetics\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"sigma-cosmetics\"}}]]},\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":5.34,\"minDifficulty\":3,\"moneyAvailable\":2976.239211533883,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10,\"runningScripts\":[]}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":1,\"fn\":\"contract-62935-TheBlackHand.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[98,122,66,134,198,154,165,156,160,46,19,1,26,108,166,57,160,69,185,172,2,155,47,34,108,25,112,9,125,82,4,28],\"reward\":{\"name\":\"The Black Hand\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"60.9.2.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"joesguns\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"joesguns\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"joesguns\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":10.839999999999998,\"minDifficulty\":5,\"moneyAvailable\":5776518.270680499,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20,\"runningScripts\":[]}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"45.4.9.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"zer0\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"zer0\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"zer0\"}}]]},\"serversOnNetwork\":[\"hong-fang-tea\",\"neo-net\",\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":11.503999999999998,\"minDifficulty\":8,\"moneyAvailable\":40079.13146805154,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40,\"runningScripts\":[]}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-206782.cct\",\"type\":\"Array Jumping Game\",\"data\":[7,0,2,8,10,5,0,8,0,6,0,0,0,4,1,3,7,10,1,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-866414-NiteSec.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,1],[0,0,0,0,0,0,0,0,1,0,1],[0,0,0,1,1,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1,0]],\"reward\":{\"name\":\"NiteSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"1.4.2.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"nectar-net\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"nectar-net\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"nectar-net\"}}]]},\"serversOnNetwork\":[\"sigma-cosmetics\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":11.671999999999997,\"minDifficulty\":7,\"moneyAvailable\":10585.030541540165,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25,\"runningScripts\":[]}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"94.8.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"neo-net\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"neo-net\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"neo-net\"}}]]},\"serversOnNetwork\":[\"zer0\",\"netlink\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8,\"minDifficulty\":8,\"moneyAvailable\":12729392.053014085,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25,\"runningScripts\":[]}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-757310.cct\",\"type\":\"Encryption II: Vigenère Cipher\",\"data\":[\"MEDIATRASHPASTEPOPUPFLASH\",\"WIRELESS\"],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-832289-Sector12.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"1781572450\",\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"13.1.2.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"silver-helix\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"silver-helix\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"silver-helix\"}}]]},\"serversOnNetwork\":[\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":19.36,\"minDifficulty\":10,\"moneyAvailable\":152207508.58893892,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":150,\"serverGrowth\":30,\"runningScripts\":[]}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-530756.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()a))))(((()())))\",\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"11.5.9.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"hong-fang-tea\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"hong-fang-tea\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"hong-fang-tea\"}}]]},\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":8.504,\"minDifficulty\":5,\"moneyAvailable\":69309.43680218975,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20,\"runningScripts\":[]}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"25.2.1.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"harakiri-sushi\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"harakiri-sushi\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"harakiri-sushi\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":10.839999999999998,\"minDifficulty\":5,\"moneyAvailable\":14608930.459730223,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40,\"runningScripts\":[]}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-709063-NiteSec.cct\",\"type\":\"Total Ways to Sum\",\"data\":24,\"reward\":{\"name\":\"NiteSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-44298.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0],[0,0],[0,0],[0,0]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"62.8.0.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"phantasy\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"phantasy\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"phantasy\"}}]]},\"serversOnNetwork\":[\"max-hardware\",\"computek\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":14.02,\"minDifficulty\":7,\"moneyAvailable\":28017264.574823968,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":100,\"serverGrowth\":35,\"runningScripts\":[]}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-952022.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"00000000000000zvlggZZ6666666KBooooooooo222222222222233UUUUUUUUUYYRRRRRRRR\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-910894.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"MLLLLLLLLShaRSJB6MJB6MJB6Mo6M3dgIN6gIN60a560a560L3E60iN06dLQQQw\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-229672.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"13412925\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-70491.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"1228135105\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"47.4.5.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"max-hardware\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"max-hardware\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"max-hardware\"}}]]},\"serversOnNetwork\":[\"foodnstuff\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":10.839999999999998,\"minDifficulty\":5,\"moneyAvailable\":20891902.02167699,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30,\"runningScripts\":[]}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"91.6.3.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"omega-net\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"omega-net\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"omega-net\"}}]]},\"serversOnNetwork\":[\"nectar-net\",\"the-hub\",\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":26,\"hackDifficulty\":9,\"minDifficulty\":9,\"moneyAvailable\":603806.2590368557,\"moneyMax\":1552464800,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":184,\"serverGrowth\":32,\"runningScripts\":[]}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"91.3.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":36,\"hackDifficulty\":21.36,\"minDifficulty\":12,\"moneyAvailable\":622334493.6336447,\"moneyMax\":1309590575,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":225,\"serverGrowth\":27,\"runningScripts\":[]}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-56343.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()))aaa(a)aa\",\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"84.0.4.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"iron-gym\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"iron-gym\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"iron-gym\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10,\"minDifficulty\":10,\"moneyAvailable\":215879.48679550574,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20,\"runningScripts\":[]}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"45.4.5.7\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":72.4,\"minDifficulty\":17,\"moneyAvailable\":6250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":478,\"serverGrowth\":43,\"runningScripts\":[]}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-354374.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"8911485184\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"79.0.8.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":972,\"serverGrowth\":50,\"runningScripts\":[]}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-113120-NiteSec.cct\",\"type\":\"Encryption II: Vigenère Cipher\",\"data\":[\"FRAMEQUEUECACHEFLASHMOUSE\",\"PROTOCOL\"],\"reward\":{\"name\":\"NiteSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"snap-fitness\",\"httpPortOpen\":false,\"ip\":\"34.0.6.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"alpha-ent\",\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":45,\"minDifficulty\":15,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":747,\"serverGrowth\":56,\"runningScripts\":[]}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-8920.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[14,[[0,11],[5,7],[1,12],[3,4],[2,4],[4,5],[1,8],[0,8],[4,8],[11,12],[3,10],[9,10],[5,13],[0,9],[3,13],[8,13],[1,2],[7,8],[6,13],[1,3],[0,3],[9,13],[6,7]]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"run4theh111z\",\"httpPortOpen\":false,\"ip\":\"37.2.1.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zb-def\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":506,\"serverGrowth\":1,\"runningScripts\":[]}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"24.4.8.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"avmnite-02h\",\"lexo-corp\",\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":352,\"serverGrowth\":1,\"runningScripts\":[]}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-821960.cct\",\"type\":\"Total Ways to Sum\",\"data\":51,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"94.3.6.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"avmnite-02h\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"avmnite-02h\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"avmnite-02h\"}}]]},\"serversOnNetwork\":[\"phantasy\",\"syscore\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":207,\"serverGrowth\":1,\"runningScripts\":[]}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-440622.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[9],[6,3],[7,9,7],[1,5,2,4],[1,1,2,8,8],[9,7,9,6,7,9],[6,5,7,9,2,4,6],[9,2,5,5,2,1,9,9],[9,1,2,5,2,5,3,7,3]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\".\",\"httpPortOpen\":false,\"ip\":\"94.1.5.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"helios\",\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":519,\"serverGrowth\":1,\"runningScripts\":[]}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-206743-NiteSec.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0]],\"reward\":{\"name\":\"NiteSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-491199.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[14,[[11,13],[0,11],[4,6],[2,12],[3,7],[6,13],[0,2],[2,10],[1,13],[1,7],[8,10],[3,6],[9,12],[5,10],[4,5],[9,13],[7,9],[6,7],[5,13],[10,11],[3,11],[4,11],[2,13],[7,8],[1,10],[8,12],[2,4],[6,10]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-867357.cct\",\"type\":\"Encryption I: Caesar Cipher\",\"data\":[\"EMAIL CLOUD TABLE SHELL CACHE\",19],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-321165.cct\",\"type\":\"Array Jumping Game II\",\"data\":[5,1,4,3,3,2,1,5,2,2,1,3,2,0,2],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"73.2.5.1\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"n00dles\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":56,\"serverGrowth\":1,\"runningScripts\":[]}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-802258.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"ll66VVVVVVVVvwwwwwBBBBBBBBBBBBBBHHHHHHPPPPPPPB66hhRrrrrrrrrrrrrrBBKKmnEgrreG66S11111111111qq\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"38.7.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":1,\"runningScripts\":[]}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"46.1.7.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1,\"runningScripts\":[]}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-259444.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[6,-3,6,10,7,1,-3,-5,8,0,-3,6,2,9,-2,-6,5,3,-10,-2,-7,-2,6,3,2,7,4,-4,-5,-4,7,-9,-6,3],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"16.5.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-000\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-000\",\"httpPortOpen\":false,\"ip\":\"21.2.7.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-000\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-000\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-000\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-001\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-001\",\"httpPortOpen\":false,\"ip\":\"20.9.6.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-001\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-001\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-001\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-002\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-002\",\"httpPortOpen\":false,\"ip\":\"75.6.9.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-002\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-002\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-002\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-003\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-003\",\"httpPortOpen\":false,\"ip\":\"21.0.3.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-003\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-003\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-003\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-004\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-004\",\"httpPortOpen\":false,\"ip\":\"17.5.7.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-004\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-004\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-004\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-005\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-005\",\"httpPortOpen\":false,\"ip\":\"15.8.0.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-005\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-005\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-005\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-006\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-006\",\"httpPortOpen\":false,\"ip\":\"1.0.7.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-006\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-006\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-006\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-007\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-007\",\"httpPortOpen\":false,\"ip\":\"15.8.1.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-007\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-007\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-007\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-008\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-008\",\"httpPortOpen\":false,\"ip\":\"14.9.7.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-008\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-008\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-008\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-009\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-009\",\"httpPortOpen\":false,\"ip\":\"92.4.8.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-009\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-009\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-009\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-010\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-010\",\"httpPortOpen\":false,\"ip\":\"26.4.6.1\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-010\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-010\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-010\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.610000000000184,\"ramUsage\":1.75,\"server\":\"CLOUD-010\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"max-hardware\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js max-hardware\",\"threads\":292,\"temporary\":false}}]}},\"CLOUD-011\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-011\",\"httpPortOpen\":false,\"ip\":\"92.6.2.4\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-011\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-011\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-011\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"CLOUD-012\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-012\",\"httpPortOpen\":false,\"ip\":\"52.1.3.4\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-012\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-012\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-012\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":886.0100000000646,\"ramUsage\":1.75,\"server\":\"CLOUD-012\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"netlink\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js netlink\",\"threads\":18724,\"temporary\":false}}]}},\"CLOUD-013\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-013\",\"httpPortOpen\":false,\"ip\":\"7.0.2.2\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-013\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-013\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-013\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.210000000000003,\"ramUsage\":1.75,\"server\":\"CLOUD-013\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"the-hub\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js the-hub\",\"threads\":4681,\"temporary\":false}}]}},\"CLOUD-014\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-014\",\"httpPortOpen\":false,\"ip\":\"86.8.3.4\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-014\"}}],[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-014\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-014\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":174.20999999999864,\"ramUsage\":1.75,\"server\":\"CLOUD-014\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"silver-helix\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js silver-helix\",\"threads\":1170,\"temporary\":false}}]}},\"CLOUD-015\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-015\",\"httpPortOpen\":false,\"ip\":\"48.6.7.6\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-015\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-015\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-015\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":192.4099999999976,\"ramUsage\":1.75,\"server\":\"CLOUD-015\",\"scriptKey\":\"scripts/advanced-hacks/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"scripts/advanced-hacks/grow.js johnson-ortho\",\"threads\":2340,\"temporary\":false}}]}},\"CLOUD-016\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-016\",\"httpPortOpen\":false,\"ip\":\"32.3.2.5\",\"isConnectedTo\":false,\"maxRam\":16384,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-016\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-016\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-016\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":886.0100000000646,\"ramUsage\":1.75,\"server\":\"CLOUD-016\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"millenium-fitness\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js millenium-fitness\",\"threads\":9362,\"temporary\":false}}]}},\"CLOUD-017\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-017\",\"httpPortOpen\":false,\"ip\":\"15.5.4.0\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-017\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-017\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-017\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":886.0100000000646,\"ramUsage\":1.75,\"server\":\"CLOUD-017\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"rothman-uni\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js rothman-uni\",\"threads\":4681,\"temporary\":false}}]}},\"CLOUD-018\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-018\",\"httpPortOpen\":false,\"ip\":\"92.5.9.6\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-018\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-018\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-018\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"CLOUD-018\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"crush-fitness\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js crush-fitness\",\"threads\":1170,\"temporary\":false}}]}},\"CLOUD-019\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-019\",\"httpPortOpen\":false,\"ip\":\"53.2.3.2\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-019\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-019\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-019\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.6099999999932,\"ramUsage\":1.75,\"server\":\"CLOUD-019\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"catalyst\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js catalyst\",\"threads\":18724,\"temporary\":false}}]}},\"CLOUD-020\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-020\",\"httpPortOpen\":false,\"ip\":\"91.4.8.4\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-020\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-020\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-020\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"ramUsage\":1.75,\"server\":\"CLOUD-020\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"phantasy\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js phantasy\",\"threads\":585,\"temporary\":false}}]}},\"CLOUD-021\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-021\",\"httpPortOpen\":false,\"ip\":\"62.4.2.6\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-021\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-021\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-021\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":886.0100000000646,\"ramUsage\":1.75,\"server\":\"CLOUD-021\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"summit-uni\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js summit-uni\",\"threads\":4681,\"temporary\":false}}]}},\"CLOUD-022\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-022\",\"httpPortOpen\":false,\"ip\":\"47.1.5.2\",\"isConnectedTo\":false,\"maxRam\":65536,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-022\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-022\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-022\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":240.60999999999487,\"ramUsage\":1.75,\"server\":\"CLOUD-022\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"computek\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js computek\",\"threads\":37449,\"temporary\":false}}]}},\"CLOUD-023\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-023\",\"httpPortOpen\":false,\"ip\":\"66.9.7.7\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-023\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-023\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-023\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":886.0100000000646,\"ramUsage\":1.75,\"server\":\"CLOUD-023\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js rho-construction\",\"threads\":18724,\"temporary\":false}}]}},\"CLOUD-024\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CLOUD-024\",\"httpPortOpen\":false,\"ip\":\"18.7.0.7\",\"isConnectedTo\":false,\"maxRam\":16384,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"scripts/advanced-hacks/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/grow.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.grow(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/grow.js\",\"server\":\"CLOUD-024\"}}],[\"scripts/advanced-hacks/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/weaken.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.weaken(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/weaken.js\",\"server\":\"CLOUD-024\"}}],[\"scripts/advanced-hacks/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\r\\n//run scripts/hack.js\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0];\\r\\n\\r\\n    await ns.hack(target);\\r\\n}\",\"filename\":\"scripts/advanced-hacks/hack.js\",\"server\":\"CLOUD-024\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"scripts/advanced-hacks/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"ramUsage\":1.75,\"server\":\"CLOUD-024\",\"scriptKey\":\"scripts/advanced-hacks/weaken.js*[\\\"aevum-police\\\"]\",\"title\":\"scripts/advanced-hacks/weaken.js aevum-police\",\"threads\":9362,\"temporary\":false}}]}}}","CompaniesSave":"{\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":53930.305260459536}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":251658.99240815887}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":6018.907333326555}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":13712.994135181141,\"lastPrice\":13697.404986445648,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.4,\"b\":true,\"otlkMag\":21.819471213789644,\"otlkMagForecast\":72.76217406511378,\"cap\":106646217,\"spreadPerc\":0.3,\"shareTxForMovement\":30142,\"shareTxUntilMovement\":30142,\"totalShares\":90700000,\"maxShares\":18100000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":168733.35831401707,\"lastPrice\":168944.59908292178,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.44,\"b\":false,\"otlkMag\":19.22715140289112,\"otlkMagForecast\":28.575189780143806,\"cap\":468474210,\"spreadPerc\":0.3,\"shareTxForMovement\":38531,\"shareTxUntilMovement\":38531,\"totalShares\":91500000,\"maxShares\":18300000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":62594.1151511873,\"lastPrice\":62469.694767379704,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":10.842030206117753,\"otlkMagForecast\":37.58448073462127,\"cap\":165760766,\"spreadPerc\":0.5,\"shareTxForMovement\":48161,\"shareTxUntilMovement\":48161,\"totalShares\":66100000,\"maxShares\":13200000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":52685.67744076945,\"lastPrice\":52786.113920888674,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":true,\"otlkMag\":11.239086831442194,\"otlkMagForecast\":62.47925767813051,\"cap\":79667647,\"spreadPerc\":0.2,\"shareTxForMovement\":37945,\"shareTxUntilMovement\":37945,\"totalShares\":70900000,\"maxShares\":14200000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":110043.90494044908,\"lastPrice\":109825.16704703358,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":12.092867126517321,\"otlkMagForecast\":62.46931396919793,\"cap\":139329902,\"spreadPerc\":0.2,\"shareTxForMovement\":55901,\"shareTxUntilMovement\":55901,\"totalShares\":48200000,\"maxShares\":9600000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":113980.27136054392,\"lastPrice\":114320.79173194915,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.05,\"b\":true,\"otlkMag\":17.869379288288112,\"otlkMagForecast\":67.98629968113181,\"cap\":350702008,\"spreadPerc\":0.9,\"shareTxForMovement\":39865,\"shareTxUntilMovement\":39865,\"totalShares\":34900000,\"maxShares\":7000000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":32179.177034753666,\"lastPrice\":32253.33948409285,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.81,\"b\":true,\"otlkMag\":9.003051637012653,\"otlkMagForecast\":57.765027362901954,\"cap\":228190532,\"spreadPerc\":0.2,\"shareTxForMovement\":41154,\"shareTxUntilMovement\":41154,\"totalShares\":104400000,\"maxShares\":20900000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":489136.28060584,\"lastPrice\":487402.7874380228,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.25,\"b\":true,\"otlkMag\":18.134098859394392,\"otlkMagForecast\":66.69140119914049,\"cap\":292457220,\"spreadPerc\":0.3,\"shareTxForMovement\":73437,\"shareTxUntilMovement\":73437,\"totalShares\":63100000,\"maxShares\":12600000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":6727.438695287598,\"lastPrice\":6710.255430818722,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.9,\"b\":true,\"otlkMag\":5.83705725373571,\"otlkMagForecast\":55.855673558754866,\"cap\":605408353,\"spreadPerc\":0.7,\"shareTxForMovement\":64674,\"shareTxUntilMovement\":64674,\"totalShares\":48400000,\"maxShares\":9700000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":4757.198862612854,\"lastPrice\":4748.551866321742,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":false,\"otlkMag\":9.052717879510622,\"otlkMagForecast\":40.2227032441727,\"cap\":115405137,\"spreadPerc\":0.3,\"shareTxForMovement\":101993,\"shareTxUntilMovement\":101993,\"totalShares\":129700000,\"maxShares\":25900000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":17271.447799573936,\"lastPrice\":17242.992396422807,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":false,\"otlkMag\":8.675966990856745,\"otlkMagForecast\":42.83924153020572,\"cap\":120955631,\"spreadPerc\":0.5,\"shareTxForMovement\":39135,\"shareTxUntilMovement\":39135,\"totalShares\":49300000,\"maxShares\":9900000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":36026.93808284751,\"lastPrice\":36108.9432943184,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":false,\"otlkMag\":7.8177717602929615,\"otlkMagForecast\":41.458561307907516,\"cap\":134083451,\"spreadPerc\":0.5,\"shareTxForMovement\":87402,\"shareTxUntilMovement\":87402,\"totalShares\":81000000,\"maxShares\":16200000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":14992.453952183063,\"lastPrice\":15018.9016896883,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":true,\"otlkMag\":6.1323267144902145,\"otlkMagForecast\":57.56054129520655,\"cap\":329494603,\"spreadPerc\":0.5,\"shareTxForMovement\":53613,\"shareTxUntilMovement\":53613,\"totalShares\":38600000,\"maxShares\":7700000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":37727.019646839726,\"lastPrice\":37664.86286842721,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":true,\"otlkMag\":8.214332598029028,\"otlkMagForecast\":58.18018628595229,\"cap\":290680632,\"spreadPerc\":0.8,\"shareTxForMovement\":38777,\"shareTxUntilMovement\":38777,\"totalShares\":35000000,\"maxShares\":7000000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":27240.940155577977,\"lastPrice\":27290.545238374336,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":true,\"otlkMag\":7.016308957324514,\"otlkMagForecast\":56.163015909623,\"cap\":204244649,\"spreadPerc\":1,\"shareTxForMovement\":66001,\"shareTxUntilMovement\":66001,\"totalShares\":38500000,\"maxShares\":7700000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":9870.4112555766,\"lastPrice\":9849.672741602171,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":true,\"otlkMag\":5.342058390769876,\"otlkMagForecast\":55.46049289753657,\"cap\":180722090,\"spreadPerc\":1.1,\"shareTxForMovement\":46119,\"shareTxUntilMovement\":46119,\"totalShares\":61100000,\"maxShares\":12200000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":10110.63524327307,\"lastPrice\":10088.532669814711,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":false,\"otlkMag\":8.236757961780764,\"otlkMagForecast\":41.42065453032747,\"cap\":78702476,\"spreadPerc\":0.5,\"shareTxForMovement\":42035,\"shareTxUntilMovement\":42035,\"totalShares\":39600000,\"maxShares\":7900000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":19585.433903142184,\"lastPrice\":19549.278915930034,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":10.301415481042934,\"otlkMagForecast\":59.92566077704417,\"cap\":227619243,\"spreadPerc\":0.9,\"shareTxForMovement\":83164,\"shareTxUntilMovement\":83164,\"totalShares\":35200000,\"maxShares\":7000000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":9762.390399379143,\"lastPrice\":9742.155454386078,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":6.438058176057721,\"otlkMagForecast\":55.5916259631993,\"cap\":230921053,\"spreadPerc\":1,\"shareTxForMovement\":82696,\"shareTxUntilMovement\":82696,\"totalShares\":26100000,\"maxShares\":5200000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":13333.966339301134,\"lastPrice\":13428.813312460976,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.5,\"b\":false,\"otlkMag\":5.614167036309576,\"otlkMagForecast\":45.324220256034785,\"cap\":71330425,\"spreadPerc\":0.6,\"shareTxForMovement\":42874,\"shareTxUntilMovement\":42874,\"totalShares\":70500000,\"maxShares\":14100000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":6661.622759449121,\"lastPrice\":6636.132577524061,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.35,\"b\":false,\"otlkMag\":7.297334278046255,\"otlkMagForecast\":41.25153673980747,\"cap\":36148970,\"spreadPerc\":0.7,\"shareTxForMovement\":57783,\"shareTxUntilMovement\":57783,\"totalShares\":61000000,\"maxShares\":12200000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":4324.503079883828,\"lastPrice\":4331.516585985547,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.57,\"b\":false,\"otlkMag\":5.133789629367026,\"otlkMagForecast\":45.90656854263305,\"cap\":25913441,\"spreadPerc\":0.4,\"shareTxForMovement\":69709,\"shareTxUntilMovement\":69709,\"totalShares\":30900000,\"maxShares\":6200000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":869.116307546997,\"lastPrice\":873.4685660193777,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.76,\"b\":false,\"otlkMag\":11.089250146999541,\"otlkMagForecast\":38.528462848190635,\"cap\":103563531,\"spreadPerc\":1,\"shareTxForMovement\":81954,\"shareTxUntilMovement\":81954,\"totalShares\":33300000,\"maxShares\":6700000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":2536.320459269747,\"lastPrice\":2547.145249691607,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.5,\"b\":true,\"otlkMag\":5.329094806090805,\"otlkMagForecast\":51.73461532909294,\"cap\":138056088,\"spreadPerc\":1,\"shareTxForMovement\":16835,\"shareTxUntilMovement\":16835,\"totalShares\":34400000,\"maxShares\":6900000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":1792.2705904055833,\"lastPrice\":1787.7434983398857,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.89,\"b\":true,\"otlkMag\":5.743013282433386,\"otlkMagForecast\":57.69856311883435,\"cap\":32593554,\"spreadPerc\":1,\"shareTxForMovement\":120096,\"shareTxUntilMovement\":120096,\"totalShares\":127900000,\"maxShares\":25600000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":178.01573099113097,\"lastPrice\":179.38835561514736,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.71,\"b\":false,\"otlkMag\":5.417911801163932,\"otlkMagForecast\":46.15168622909292,\"cap\":18529951,\"spreadPerc\":1.5,\"shareTxForMovement\":25575,\"shareTxUntilMovement\":25575,\"totalShares\":20300000,\"maxShares\":4100000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":740.2005758518854,\"lastPrice\":742.3066493896233,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1,\"b\":true,\"otlkMag\":2.026407280952005,\"otlkMagForecast\":52.4972436612943,\"cap\":8492137,\"spreadPerc\":1.2,\"shareTxForMovement\":65558,\"shareTxUntilMovement\":65558,\"totalShares\":56800000,\"maxShares\":11400000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":1143.905312579209,\"lastPrice\":1146.4114501938827,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":false,\"otlkMag\":3.082838572018574,\"otlkMagForecast\":49.98333071338605,\"cap\":28343301,\"spreadPerc\":1,\"shareTxForMovement\":117838,\"shareTxUntilMovement\":117838,\"totalShares\":35500000,\"maxShares\":7100000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":4447.988638013101,\"lastPrice\":4430.340890061313,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.4,\"b\":false,\"otlkMag\":2.163109015887284,\"otlkMagForecast\":45.009331076761256,\"cap\":45135050,\"spreadPerc\":1.4,\"shareTxForMovement\":24754,\"shareTxUntilMovement\":24754,\"totalShares\":11400000,\"maxShares\":2300000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":647.5795936074642,\"lastPrice\":641.8633460859309,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.13,\"b\":true,\"otlkMag\":6.765919923059588,\"otlkMagForecast\":62.56308861325403,\"cap\":6902300,\"spreadPerc\":1.3,\"shareTxForMovement\":20383,\"shareTxUntilMovement\":20383,\"totalShares\":30800000,\"maxShares\":6200000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":136.8015881278364,\"lastPrice\":136.1623464483822,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.65,\"b\":false,\"otlkMag\":16.796224303006,\"otlkMagForecast\":34.124184223354234,\"cap\":17340475,\"spreadPerc\":0.6,\"shareTxForMovement\":37434,\"shareTxUntilMovement\":37434,\"totalShares\":89800000,\"maxShares\":18000000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":16595.93580934806,\"lastPrice\":16560.126054875112,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":true,\"otlkMag\":7.4367565317972435,\"otlkMagForecast\":57.28425227989911,\"cap\":29825449,\"spreadPerc\":0.8,\"shareTxForMovement\":163856,\"shareTxUntilMovement\":163856,\"totalShares\":17000000,\"maxShares\":3400000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":33860.01030471493,\"lastPrice\":33799.424070096,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":true,\"otlkMag\":12.626156692389065,\"otlkMagForecast\":62.55367102695444,\"cap\":174461532,\"spreadPerc\":0.5,\"shareTxForMovement\":137103,\"shareTxUntilMovement\":137103,\"totalShares\":25800000,\"maxShares\":5200000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":222990,\"lastUpdate\":1687889155857,\"ticksUntilCycle\":15}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":15,\"AutoexecScript\":\"\",\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":true,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-1,\"y\":1,\"opened\":true},\"EditorTheme\":{\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}},\"base\":\"vs-dark\",\"inherit\":true},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoTabSize\":2,\"MonacoDetectIndentation\":false,\"MonacoFontFamily\":\"Lucida Console\",\"MonacoFontSize\":20,\"MonacoFontLigatures\":false,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"32","AllGangsSave":"","LastExportBonus":"1687889155873","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"isBonusCharging\":false,\"storedCycles\":0}}"}}