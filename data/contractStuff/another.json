[
    {
        "server": "sigma-cosmetics",
        "name": "contract-243909-CyberSec.cct",
        "type": "Minimum Path Sum in a Triangle",
        "attemptsLeft": 10,
        "input": [
            [
                5
            ],
            [
                9,
                9
            ],
            [
                3,
                3,
                3
            ]
        ],
        "description": "Given a triangle, find the minimum path sum from top to bottom. In each step of the path, you may only move to adjacent numbers in the row below. The triangle is represented as a 2D array of numbers:\n\n [\n&nbsp;&nbsp;&nbsp;&nbsp;[5],\n&nbsp;&nbsp;&nbsp;[9,9],\n&nbsp;&nbsp;[3,3,3]\n]\n\n Example: If you are given the following triangle:\n\n[\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\n &nbsp;&nbsp;&nbsp;&nbsp;[3,4],\n &nbsp;&nbsp;&nbsp;[6,5,7],\n &nbsp;&nbsp;[4,1,8,3]\n ]\n\n The minimum path sum is 11 (2 -> 3 -> 5 -> 1)."
    },
    {
        "server": "darkweb",
        "name": "contract-743468.cct",
        "type": "HammingCodes: Integer to Encoded Binary",
        "attemptsLeft": 10,
        "input": 2268,
        "description": "You are given the following decimal Value: \n 2268 \n Convert it to a binary representation and encode it as an 'extended Hamming code'. Eg:\n  Value 8 is expressed in binary as '1000', which will be encoded with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The encoding of\n 8 is 11110000. As another example, '10101' (Value 21) will result into (pppdpdddpd) '1001101011'.\n The answer should be given as a string containing only 1s and 0s.\n NOTE: the endianness of the data bits is reversed in relation to the endianness of the parity bits.\n NOTE: The bit at index zero is the overall parity bit, this should be set last.\n NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which explains the 'rule' of encoding, including the first index parity bit mentioned in the previous note.\n\n Extra rule for encoding:\n There should be no leading zeros in the 'data bit' section"
    },
    {
        "server": "phantasy",
        "name": "contract-349593.cct",
        "type": "HammingCodes: Encoded Binary to Integer",
        "attemptsLeft": 10,
        "input": "0010100010000000000011000001011000000000001000110111000111010011",
        "description": "You are given the following encoded binary string: \n '0010100010000000000011000001011000000000001000110111000111010011' \n\n Treat it as an extended Hamming code with 1 'possible' error at a random index.\n Find the 'possible' wrong bit, fix it and extract the decimal value, which is hidden inside the string.\n\n Note: The length of the binary string is dynamic, but its encoding/decoding follows Hamming's 'rule'\n Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from 3Blue1Brown for more information\n Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an altered Bit ðŸ˜‰\n Note: The endianness of the encoded decimal value is reversed in relation to the endianness of the Hamming code. Where the Hamming code is expressed as little-endian (LSB at index 0), the decimal value encoded in it is expressed as big-endian (MSB at index 0).\n Extra note for automation: return the decimal value as a string"
    },
    {
        "server": "the-hub",
        "name": "contract-150413.cct",
        "type": "Total Ways to Sum",
        "attemptsLeft": 10,
        "input": 17,
        "description": "It is possible write four as a sum in exactly four different ways:\n\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\n\n How many different distinct ways can the number 17 be written as a sum of at least two positive integers?"
    },
    {
        "server": "microdyne",
        "name": "contract-470111.cct",
        "type": "Generate IP Addresses",
        "attemptsLeft": 10,
        "input": "1614271225",
        "description": "Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\n\n 1614271225\n\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\n\n Examples:\n\n 25525511135 -> [\"255.255.11.135\", \"255.255.111.35\"]\n 1938718066 -> [\"193.87.180.66\"]"
    },
    {
        "server": "run4theh111z",
        "name": "contract-564243.cct",
        "type": "Algorithmic Stock Trader II",
        "attemptsLeft": 10,
        "input": [
            97,
            163,
            88,
            156,
            46,
            141,
            61,
            173,
            28,
            184,
            24,
            192,
            33,
            104,
            66,
            97,
            88,
            188,
            91,
            155,
            29,
            180,
            37,
            187,
            96,
            131,
            120,
            178
        ],
        "description": "You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\n\n 97,163,153,88,156,46,98,122,141,94,61,173,28,48,79,184,24,192,182,33,104,66,97,88,188,91,115,116,155,125,29,119,180,37,124,163,187,96,131,120,178,171\n\n Determine the maximum possible profit you can earn using as many transactions as you'd like. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\n\n If no profit can be made, then the answer should be 0"
    },
    {
        "server": "lexo-corp",
        "name": "contract-33234.cct",
        "type": "Total Ways to Sum",
        "attemptsLeft": 10,
        "input": 88,
        "description": "It is possible write four as a sum in exactly four different ways:\n\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\n\n How many different distinct ways can the number 88 be written as a sum of at least two positive integers?"
    },
    {
        "server": "global-pharm",
        "name": "contract-69944.cct",
        "type": "Array Jumping Game II",
        "attemptsLeft": 3,
        "input": [
            1,
            3,
            4
        ],
        "description": "You are given the following array of integers:\n\n 1,3,4\n\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \n\nAssuming you are initially positioned at the start of the array, determine the minimum number of jumps to reach the end of the array.\n\n If it's impossible to reach the end, then the answer should be 0."
    },
    {
        "server": "unitalife",
        "name": "contract-649846.cct",
        "type": "Total Ways to Sum",
        "attemptsLeft": 10,
        "input": 60,
        "description": "It is possible write four as a sum in exactly four different ways:\n\n &nbsp;&nbsp;&nbsp;&nbsp;3 + 1\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 2\n &nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\n &nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\n\n How many different distinct ways can the number 60 be written as a sum of at least two positive integers?"
    },
    {
        "server": "defcomm",
        "name": "contract-327027.cct",
        "type": "Algorithmic Stock Trader II",
        "attemptsLeft": 9,
        "input": [
            145,
            157,
            56,
            200,
            176,
            102,
            117,
            182,
            56,
            193,
            119,
            133,
            14,
            189,
            138,
            69,
            103,
            26,
            124,
            32,
            76,
            37,
            146,
            31,
            64,
            135,
            148,
            134,
            3,
            146,
            3,
            86,
            93,
            160,
            136,
            136,
            85,
            28,
            121,
            27,
            65,
            28,
            35,
            165,
            199
        ],
        "description": "You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\n\n 145,157,56,200,176,102,117,182,56,193,119,133,14,189,138,69,103,26,124,32,76,37,146,31,64,135,148,134,3,146,3,86,93,160,136,136,85,28,121,27,65,28,35,165,199\n\n Determine the maximum possible profit you can earn using as many transactions as you'd like. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\n\n If no profit can be made, then the answer should be 0"
    }
]